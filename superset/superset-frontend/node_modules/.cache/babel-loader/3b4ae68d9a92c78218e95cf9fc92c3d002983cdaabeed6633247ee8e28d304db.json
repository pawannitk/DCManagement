{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport querystring from 'query-string';\nconst reservedQueryParams = new Set(['standalone', 'edit']);\n/**\n * Returns the url params that are used to customize queries\n */\nexport default function extractUrlParams(urlParamType) {\n  const queryParams = querystring.parse(window.location.search);\n  return Object.entries(queryParams).reduce((acc, [key, value]) => {\n    if (urlParamType === 'regular' && reservedQueryParams.has(key) ||\n    urlParamType === 'reserved' && !reservedQueryParams.has(key))\n    return acc;\n    // if multiple url params share the same key (?foo=bar&foo=baz), they will appear as an array.\n    // Only one value can be used for a given query param, so we just take the first one.\n    if (Array.isArray(value)) {\n      return {\n        ...acc,\n        [key]: value[0]\n      };\n    }\n    return { ...acc, [key]: value };\n  }, {});\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reservedQueryParams, \"reservedQueryParams\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/extractUrlParams.ts\");reactHotLoader.register(extractUrlParams, \"extractUrlParams\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/extractUrlParams.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["querystring","reservedQueryParams","Set","extractUrlParams","urlParamType","queryParams","parse","window","location","search","Object","entries","reduce","acc","key","value","has","Array","isArray","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/extractUrlParams.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport querystring from 'query-string';\nimport { JsonObject } from '@superset-ui/core';\n\nconst reservedQueryParams = new Set(['standalone', 'edit']);\n\nexport type UrlParamType = 'reserved' | 'regular' | 'all';\n\n/**\n * Returns the url params that are used to customize queries\n */\nexport default function extractUrlParams(\n  urlParamType: UrlParamType,\n): JsonObject {\n  const queryParams = querystring.parse(window.location.search);\n  return Object.entries(queryParams).reduce((acc, [key, value]) => {\n    if (\n      (urlParamType === 'regular' && reservedQueryParams.has(key)) ||\n      (urlParamType === 'reserved' && !reservedQueryParams.has(key))\n    )\n      return acc;\n    // if multiple url params share the same key (?foo=bar&foo=baz), they will appear as an array.\n    // Only one value can be used for a given query param, so we just take the first one.\n    if (Array.isArray(value)) {\n      return {\n        ...acc,\n        [key]: value[0],\n      };\n    }\n    return { ...acc, [key]: value };\n  }, {});\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,WAAW,MAAM,cAAc;AAGtC,MAAMC,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AAI3D;;;AAGA,eAAc,SAAUC,gBAAgBA,CACtCC,YAA0B;EAE1B,MAAMC,WAAW,GAAGL,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC7D,OAAOC,MAAM,CAACC,OAAO,CAACN,WAAW,CAAC,CAACO,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAI;IAC9D,IACGX,YAAY,KAAK,SAAS,IAAIH,mBAAmB,CAACe,GAAG,CAACF,GAAG,CAAC;IAC1DV,YAAY,KAAK,UAAU,IAAI,CAACH,mBAAmB,CAACe,GAAG,CAACF,GAAG,CAAE;IAE9D,OAAOD,GAAG;IACZ;IACA;IACA,IAAII,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACxB,OAAO;QACL,GAAGF,GAAG;QACN,CAACC,GAAG,GAAGC,KAAK,CAAC,CAAC;OACf;;IAEH,OAAO,EAAE,GAAGF,GAAG,EAAE,CAACC,GAAG,GAAGC,KAAK,EAAE;EACjC,CAAC,EAAE,EAAE,CAAC;AACR,CAAC,mBAAAI,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA3BKtB,mBAAmB,0HAAAkB,cAAA,CAAAI,QAAA,CAODpB,gBAAgB,+IAAAqB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}