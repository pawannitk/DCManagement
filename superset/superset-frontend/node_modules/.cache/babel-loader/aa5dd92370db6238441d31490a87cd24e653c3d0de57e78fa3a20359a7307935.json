{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE, DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport { buildTree } from './utils';\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterScopeTree(currentChartId, initiallyExcludedCharts = [], buildTreeLeafTitle = (label) => label, title = t('All panels')) {\n  const layout = useSelector(({ dashboardLayout: { present } }) => present);\n  const charts = useSelector(({ charts }) => charts);\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title\n  };\n  // We need to get only nodes that have charts as children or grandchildren\n  const validNodes = useMemo(() => Object.values(layout).reduce((acc, cur) => {\n    const { id, parents = [], type, meta } = cur;\n    if (type === CHART_TYPE && currentChartId !== (meta == null ? void 0 : meta.chartId)) {\n      return [...new Set([...acc, ...parents, id])];\n    }\n    return acc;\n  }, []), [layout, currentChartId]);\n  useMemo(() => {\n    buildTree(layout[DASHBOARD_ROOT_ID], tree, layout, charts, validNodes, initiallyExcludedCharts, buildTreeLeafTitle);\n  }, [layout, tree, charts, initiallyExcludedCharts, buildTreeLeafTitle]);\n  return { treeData: [tree], layout };\n}__signature__(useFilterScopeTree, \"useSelector{layout}\\nuseSelector{charts}\\nuseMemo{validNodes}\\nuseMemo{}\", () => [useSelector, useSelector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterScopeTree, \"useFilterScopeTree\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useSelector","t","DASHBOARD_ROOT_ID","CHART_TYPE","DASHBOARD_ROOT_TYPE","buildTree","useFilterScopeTree","currentChartId","initiallyExcludedCharts","buildTreeLeafTitle","label","title","layout","dashboardLayout","present","charts","tree","children","key","type","validNodes","Object","values","reduce","acc","cur","id","parents","meta","chartId","Set","treeData","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/state.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { Charts, Layout, RootState } from 'src/dashboard/types';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport {\n  CHART_TYPE,\n  DASHBOARD_ROOT_TYPE,\n} from 'src/dashboard/util/componentTypes';\nimport { BuildTreeLeafTitle, TreeItem } from './types';\nimport { buildTree } from './utils';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterScopeTree(\n  currentChartId: number | undefined,\n  initiallyExcludedCharts: number[] = [],\n  buildTreeLeafTitle: BuildTreeLeafTitle = label => label,\n  title = t('All panels'),\n): {\n  treeData: [TreeItem];\n  layout: Layout;\n} {\n  const layout = useSelector<RootState, Layout>(\n    ({ dashboardLayout: { present } }) => present,\n  );\n\n  const charts = useSelector<RootState, Charts>(({ charts }) => charts);\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title,\n  };\n\n  // We need to get only nodes that have charts as children or grandchildren\n  const validNodes = useMemo(\n    () =>\n      Object.values(layout).reduce<string[]>((acc, cur) => {\n        const { id, parents = [], type, meta } = cur;\n        if (type === CHART_TYPE && currentChartId !== meta?.chartId) {\n          return [...new Set([...acc, ...parents, id])];\n        }\n        return acc;\n      }, []),\n    [layout, currentChartId],\n  );\n\n  useMemo(() => {\n    buildTree(\n      layout[DASHBOARD_ROOT_ID],\n      tree,\n      layout,\n      charts,\n      validNodes,\n      initiallyExcludedCharts,\n      buildTreeLeafTitle,\n    );\n  }, [layout, tree, charts, initiallyExcludedCharts, buildTreeLeafTitle]);\n\n  return { treeData: [tree], layout };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,CAAC,QAAQ,mBAAmB;AAErC,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SACEC,UAAU,EACVC,mBAAmB,QACd,mCAAmC;AAE1C,SAASC,SAAS,QAAQ,SAAS;AAEnC;AACA,OAAM,SAAUC,kBAAkBA,CAChCC,cAAkC,EAClCC,uBAAA,GAAoC,EAAE,EACtCC,kBAAA,GAAyCA,CAAAC,KAAK,KAAIA,KAAK,EACvDC,KAAK,GAAGV,CAAC,CAAC,YAAY,CAAC;EAKvB,MAAMW,MAAM,GAAGZ,WAAW,CACxB,CAAC,EAAEa,eAAe,EAAE,EAAEC,OAAO,EAAE,EAAE,KAAKA,OAAO,CAC9C;EAED,MAAMC,MAAM,GAAGf,WAAW,CAAoB,CAAC,EAAEe,MAAM,EAAE,KAAKA,MAAM,CAAC;EACrE,MAAMC,IAAI,GAAG;IACXC,QAAQ,EAAE,EAAE;IACZC,GAAG,EAAEhB,iBAAiB;IACtBiB,IAAI,EAAEf,mBAAmB;IACzBO;GACD;EAED;EACA,MAAMS,UAAU,GAAGrB,OAAO,CACxB,MACEsB,MAAM,CAACC,MAAM,CAACV,MAAM,CAAC,CAACW,MAAM,CAAW,CAACC,GAAG,EAAEC,GAAG,KAAI;IAClD,MAAM,EAAEC,EAAE,EAAEC,OAAO,GAAG,EAAE,EAAER,IAAI,EAAES,IAAI,EAAE,GAAGH,GAAG;IAC5C,IAAIN,IAAI,KAAKhB,UAAU,IAAII,cAAc,MAAKqB,IAAI,oBAAJA,IAAI,CAAEC,OAAO,GAAE;MAC3D,OAAO,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGN,GAAG,EAAE,GAAGG,OAAO,EAAED,EAAE,CAAC,CAAC,CAAC;;IAE/C,OAAOF,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC,EACR,CAACZ,MAAM,EAAEL,cAAc,CAAC,CACzB;EAEDR,OAAO,CAAC,MAAK;IACXM,SAAS,CACPO,MAAM,CAACV,iBAAiB,CAAC,EACzBc,IAAI,EACJJ,MAAM,EACNG,MAAM,EACNK,UAAU,EACVZ,uBAAuB,EACvBC,kBAAkB,CACnB;EACH,CAAC,EAAE,CAACG,MAAM,EAAEI,IAAI,EAAED,MAAM,EAAEP,uBAAuB,EAAEC,kBAAkB,CAAC,CAAC;EAEvE,OAAO,EAAEsB,QAAQ,EAAE,CAACf,IAAI,CAAC,EAAEJ,MAAM,EAAE;AACrC,CAACoB,aAAA,CA/Ce1B,kBAAkB,qFASjBN,WAAW,EAIXA,WAAW,sBAAAiC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAbZ/B,kBAAkB,2MAAAgC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}