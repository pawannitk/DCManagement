{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { WebMercatorViewport, _GlobeViewport } from '@deck.gl/core';\nimport { CullingVolume, Plane, AxisAlignedBoundingBox, makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { lngLatToWorld } from '@math.gl/web-mercator';\nimport { osmTile2lngLat } from './utils';\nconst TILE_SIZE = 512;\nconst MAX_MAPS = 3;\nconst REF_POINTS_5 = [[0.5, 0.5], [0, 0], [0, 1], [1, 0], [1, 1]];\nconst REF_POINTS_9 = REF_POINTS_5.concat([[0, 0.5], [0.5, 0], [1, 0.5], [0.5, 1]]);\nconst REF_POINTS_11 = REF_POINTS_9.concat([[0.25, 0.5], [0.75, 0.5]]);\n\nclass OSMNode {\n  constructor(x, y, z) {\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"z\", void 0);\n\n    _defineProperty(this, \"childVisible\", void 0);\n\n    _defineProperty(this, \"selected\", void 0);\n\n    _defineProperty(this, \"_children\", void 0);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [new OSMNode(x, y, z), new OSMNode(x, y + 1, z), new OSMNode(x + 1, y, z), new OSMNode(x + 1, y + 1, z)];\n    }\n\n    return this._children;\n  }\n\n  update(params) {\n    const {\n      viewport,\n      cullingVolume,\n      elevationBounds,\n      minZ,\n      maxZ,\n      bounds,\n      offset,\n      project\n    } = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n\n    if (bounds && !this.insideBounds(bounds)) {\n      return false;\n    }\n\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n\n    if (isInside < 0) {\n      return false;\n    }\n\n    if (!this.childVisible) {\n      let {\n        z\n      } = this;\n\n      if (z < maxZ && z >= minZ) {\n        const distance = boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n\n      if (z >= maxZ) {\n        this.selected = true;\n        return true;\n      }\n    }\n\n    this.selected = false;\n    this.childVisible = true;\n\n    for (const child of this.children) {\n      child.update(params);\n    }\n\n    return true;\n  }\n\n  getSelected(result = []) {\n    if (this.selected) {\n      result.push(this);\n    }\n\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n\n    return result;\n  }\n\n  insideBounds([minX, minY, maxX, maxY]) {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    return this.x * extent < maxX && this.y * extent < maxY && (this.x + 1) * extent > minX && (this.y + 1) * extent > minY;\n  }\n\n  getBoundingVolume(zRange, worldOffset, project) {\n    if (project) {\n      const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n      const refPointPositions = [];\n\n      for (const p of refPoints) {\n        const lngLat = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n        lngLat[2] = zRange[0];\n        refPointPositions.push(project(lngLat));\n\n        if (zRange[0] !== zRange[1]) {\n          lngLat[2] = zRange[1];\n          refPointPositions.push(project(lngLat));\n        }\n      }\n\n      return makeOrientedBoundingBoxFromPoints(refPointPositions);\n    }\n\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n    return new AxisAlignedBoundingBox([originX, originY, zRange[0]], [originX + extent, originY + extent, zRange[1]]);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\nexport function getOSMTileIndices(viewport, maxZ, zRange, bounds) {\n  const project = viewport instanceof _GlobeViewport && viewport.resolution ? viewport.projectPosition : null;\n  const planes = Object.values(viewport.getFrustumPlanes()).map(({\n    normal,\n    distance\n  }) => new Plane(normal.clone().negate(), distance));\n  const cullingVolume = new CullingVolume(planes);\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = zRange && zRange[0] * unitsPerMeter || 0;\n  const elevationMax = zRange && zRange[1] * unitsPerMeter || 0;\n  const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n\n  if (bounds) {\n    const [minLng, minLat, maxLng, maxLat] = bounds;\n    const topLeft = lngLatToWorld([minLng, maxLat]);\n    const bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    project,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax],\n    minZ,\n    maxZ,\n    bounds,\n    offset: 0\n  };\n  root.update(traversalParams);\n\n  if (viewport instanceof WebMercatorViewport && viewport.subViewports && viewport.subViewports.length > 1) {\n    traversalParams.offset = -1;\n\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n\n    traversalParams.offset = 1;\n\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TILE_SIZE, \"TILE_SIZE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(MAX_MAPS, \"MAX_MAPS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(REF_POINTS_5, \"REF_POINTS_5\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(REF_POINTS_9, \"REF_POINTS_9\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(REF_POINTS_11, \"REF_POINTS_11\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(OSMNode, \"OSMNode\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");reactHotLoader.register(getOSMTileIndices, \"getOSMTileIndices\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/tile-2d-traversal.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["WebMercatorViewport","_GlobeViewport","CullingVolume","Plane","AxisAlignedBoundingBox","makeOrientedBoundingBoxFromPoints","lngLatToWorld","osmTile2lngLat","TILE_SIZE","MAX_MAPS","REF_POINTS_5","REF_POINTS_9","concat","REF_POINTS_11","OSMNode","constructor","x","y","z","_defineProperty","children","_children","update","params","viewport","cullingVolume","elevationBounds","minZ","maxZ","bounds","offset","project","boundingVolume","getBoundingVolume","insideBounds","isInside","computeVisibility","childVisible","distance","distanceTo","cameraPosition","scale","height","Math","floor","log2","selected","child","getSelected","result","push","node","minX","minY","maxX","maxY","pow","extent","zRange","worldOffset","refPoints","refPointPositions","p","lngLat","originX","originY","__reactstandin__regenerateByEval","key","code","eval","getOSMTileIndices","resolution","projectPosition","planes","Object","values","getFrustumPlanes","map","normal","clone","negate","unitsPerMeter","distanceScales","elevationMin","elevationMax","pitch","minLng","minLat","maxLng","maxLat","topLeft","bottomRight","root","traversalParams","subViewports","length","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/tileset-2d/tile-2d-traversal.ts"],"sourcesContent":["import {Viewport, WebMercatorViewport, _GlobeViewport} from '@deck.gl/core';\n\nimport {\n  CullingVolume,\n  Plane,\n  AxisAlignedBoundingBox,\n  makeOrientedBoundingBoxFromPoints\n} from '@math.gl/culling';\nimport {lngLatToWorld} from '@math.gl/web-mercator';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {osmTile2lngLat} from './utils';\n\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n// for calculating bounding volume of a tile in a non-web-mercator viewport\nconst REF_POINTS_5 = [\n  [0.5, 0.5],\n  [0, 0],\n  [0, 1],\n  [1, 0],\n  [1, 1]\n]; // 4 corners and center\nconst REF_POINTS_9 = REF_POINTS_5.concat([\n  [0, 0.5],\n  [0.5, 0],\n  [1, 0.5],\n  [0.5, 1]\n]); // 4 corners, center and 4 mid points\nconst REF_POINTS_11 = REF_POINTS_9.concat([\n  [0.25, 0.5],\n  [0.75, 0.5]\n]); // 2 additional points on equator for top tile\n\nclass OSMNode {\n  x: number;\n  y: number;\n  z: number;\n\n  private childVisible?: boolean;\n  private selected?: boolean;\n\n  private _children?: OSMNode[];\n\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [\n        new OSMNode(x, y, z),\n        new OSMNode(x, y + 1, z),\n        new OSMNode(x + 1, y, z),\n        new OSMNode(x + 1, y + 1, z)\n      ];\n    }\n    return this._children;\n  }\n\n  // eslint-disable-next-line complexity\n  update(params: {\n    viewport: Viewport;\n    project: ((xyz: number[]) => number[]) | null;\n    cullingVolume: CullingVolume;\n    elevationBounds: ZRange;\n    minZ: number;\n    maxZ: number;\n    bounds?: Bounds;\n    offset: number;\n  }) {\n    const {viewport, cullingVolume, elevationBounds, minZ, maxZ, bounds, offset, project} = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n\n    // First, check if this tile is visible\n    if (bounds && !this.insideBounds(bounds)) {\n      return false;\n    }\n\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n    if (isInside < 0) {\n      return false;\n    }\n\n    // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n    if (!this.childVisible) {\n      let {z} = this;\n      if (z < maxZ && z >= minZ) {\n        // Adjust LOD\n        // If the tile is far enough from the camera, accept a lower zoom level\n        const distance =\n          (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n      if (z >= maxZ) {\n        // LOD is acceptable\n        this.selected = true;\n        return true;\n      }\n    }\n\n    // LOD is not enough, recursively test child tiles\n    this.selected = false;\n    this.childVisible = true;\n    for (const child of this.children) {\n      child.update(params);\n    }\n    return true;\n  }\n\n  getSelected(result: OSMNode[] = []): OSMNode[] {\n    if (this.selected) {\n      result.push(this);\n    }\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n    return result;\n  }\n\n  insideBounds([minX, minY, maxX, maxY]: Bounds): boolean {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n\n    return (\n      this.x * extent < maxX &&\n      this.y * extent < maxY &&\n      (this.x + 1) * extent > minX &&\n      (this.y + 1) * extent > minY\n    );\n  }\n\n  getBoundingVolume(\n    zRange: ZRange,\n    worldOffset: number,\n    project: ((xyz: number[]) => number[]) | null\n  ) {\n    if (project) {\n      // Custom projection\n      // Estimate bounding box from sample points\n      // At low zoom level we need more samples to calculate the bounding volume correctly\n      const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n\n      // Convert from tile-relative coordinates to common space\n      const refPointPositions: number[][] = [];\n      for (const p of refPoints) {\n        const lngLat: number[] = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n        lngLat[2] = zRange[0];\n        refPointPositions.push(project(lngLat));\n\n        if (zRange[0] !== zRange[1]) {\n          // Account for the elevation volume\n          lngLat[2] = zRange[1];\n          refPointPositions.push(project(lngLat));\n        }\n      }\n\n      return makeOrientedBoundingBoxFromPoints(refPointPositions);\n    }\n\n    // Use WebMercator projection\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    // deck's common space is y-flipped\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n\n    return new AxisAlignedBoundingBox(\n      [originX, originY, zRange[0]],\n      [originX + extent, originY + extent, zRange[1]]\n    );\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function getOSMTileIndices(\n  viewport: Viewport,\n  maxZ: number,\n  zRange: ZRange | undefined,\n  bounds?: Bounds\n): TileIndex[] {\n  const project: ((xyz: number[]) => number[]) | null =\n    viewport instanceof _GlobeViewport && viewport.resolution\n      ? // eslint-disable-next-line @typescript-eslint/unbound-method\n        viewport.projectPosition\n      : null;\n\n  // Get the culling volume of the current camera\n  const planes: Plane[] = Object.values(viewport.getFrustumPlanes()).map(\n    ({normal, distance}) => new Plane(normal.clone().negate(), distance)\n  );\n  const cullingVolume = new CullingVolume(planes);\n\n  // Project zRange from meters to common space\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n  const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n\n  // Always load at the current zoom level if pitch is small\n  const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n\n  // Map extent to OSM position\n  if (bounds) {\n    const [minLng, minLat, maxLng, maxLat] = bounds;\n    const topLeft = lngLatToWorld([minLng, maxLat]);\n    const bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    project,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax] as ZRange,\n    minZ,\n    maxZ,\n    bounds,\n    // num. of worlds from the center. For repeated maps\n    offset: 0\n  };\n\n  root.update(traversalParams);\n\n  if (\n    viewport instanceof WebMercatorViewport &&\n    viewport.subViewports &&\n    viewport.subViewports.length > 1\n  ) {\n    // Check worlds in repeated maps\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}