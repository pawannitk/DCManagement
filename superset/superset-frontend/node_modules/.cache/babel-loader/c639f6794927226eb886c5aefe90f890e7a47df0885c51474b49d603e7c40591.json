{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  SupersetClient,\n  getTimeFormatter,\n  TimeFormats,\n  ensureIsArray } from\n'@superset-ui/core';\n\n// ATTENTION: If you change any constants, make sure to also change constants.py\n\nexport const EMPTY_STRING = '<empty string>';\nexport const NULL_STRING = '<NULL>';\nexport const TRUE_STRING = 'TRUE';\nexport const FALSE_STRING = 'FALSE';\n\n// moment time format strings\nexport const SHORT_DATE = 'MMM D, YYYY';\nexport const SHORT_TIME = 'h:m a';\n\nconst DATETIME_FORMATTER = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\n\nexport function storeQuery(query) {\n  return SupersetClient.post({\n    endpoint: '/kv/store/',\n    postPayload: { data: query }\n  }).then((response) => {\n    const baseUrl = window.location.origin + window.location.pathname;\n    const url = `${baseUrl}?id=${response.json.id}`;\n    return url;\n  });\n}\n\nexport function optionLabel(opt) {\n  if (opt === null) {\n    return NULL_STRING;\n  }\n  if (opt === '') {\n    return EMPTY_STRING;\n  }\n  if (opt === true) {\n    return TRUE_STRING;\n  }\n  if (opt === false) {\n    return FALSE_STRING;\n  }\n  if (typeof opt !== 'string' && opt.toString) {\n    return opt.toString();\n  }\n  return opt;\n}\n\nexport function optionValue(opt) {\n  if (opt === null) {\n    return NULL_STRING;\n  }\n  return opt;\n}\n\nexport function optionFromValue(opt) {\n  // From a list of options, handles special values & labels\n  return { value: optionValue(opt), label: optionLabel(opt) };\n}\n\nfunction getColumnName(column) {\n  return column.name || column;\n}\n\nexport function prepareCopyToClipboardTabularData(data, columns) {\n  let result = columns.length ?\n  `${columns.map(getColumnName).join('\\t')}\\n` :\n  '';\n  for (let i = 0; i < data.length; i += 1) {\n    const row = {};\n    for (let j = 0; j < columns.length; j += 1) {\n      // JavaScript does not maintain the order of a mixed set of keys (i.e integers and strings)\n      // the below function orders the keys based on the column names.\n      const key = getColumnName(columns[j]);\n      if (key in data[i]) {\n        row[j] = data[i][key];\n      } else {\n        row[j] = data[i][parseFloat(key)];\n      }\n    }\n    result += `${Object.values(row).join('\\t')}\\n`;\n  }\n  return result;\n}\n\nexport function applyFormattingToTabularData(data, timeFormattedColumns) {\n  if (\n  !data ||\n  data.length === 0 ||\n  ensureIsArray(timeFormattedColumns).length === 0)\n  {\n    return data;\n  }\n\n  return data.map((row) => ({\n    ...row,\n    /* eslint-disable no-underscore-dangle */\n    ...timeFormattedColumns.reduce((acc, colName) => {\n      if (row[colName] !== null && row[colName] !== undefined) {\n        acc[colName] = DATETIME_FORMATTER(row[colName]);\n      }\n      return acc;\n    }, {})\n  }));\n}\n\nexport const noOp = () => undefined;\n\n// Detects the user's OS through the browser\nexport const detectOS = () => {\n  const { appVersion } = navigator;\n\n  // Leveraging this condition because of stackOverflow\n  // https://stackoverflow.com/questions/11219582/how-to-detect-my-browser-version-and-operating-system-using-javascript\n  if (appVersion.includes('Win')) return 'Windows';\n  if (appVersion.includes('Mac')) return 'MacOS';\n  if (appVersion.includes('X11')) return 'UNIX';\n  if (appVersion.includes('Linux')) return 'Linux';\n\n  return 'Unknown OS';\n};\n\nexport const isSafari = () => {\n  const { userAgent } = navigator;\n\n  return userAgent && /^((?!chrome|android).)*safari/i.test(userAgent);\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EMPTY_STRING, \"EMPTY_STRING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(NULL_STRING, \"NULL_STRING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(TRUE_STRING, \"TRUE_STRING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(FALSE_STRING, \"FALSE_STRING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(SHORT_DATE, \"SHORT_DATE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(SHORT_TIME, \"SHORT_TIME\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(DATETIME_FORMATTER, \"DATETIME_FORMATTER\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(storeQuery, \"storeQuery\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(optionLabel, \"optionLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(optionValue, \"optionValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(optionFromValue, \"optionFromValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(getColumnName, \"getColumnName\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(prepareCopyToClipboardTabularData, \"prepareCopyToClipboardTabularData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(applyFormattingToTabularData, \"applyFormattingToTabularData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(noOp, \"noOp\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(detectOS, \"detectOS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");reactHotLoader.register(isSafari, \"isSafari\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["SupersetClient","getTimeFormatter","TimeFormats","ensureIsArray","EMPTY_STRING","NULL_STRING","TRUE_STRING","FALSE_STRING","SHORT_DATE","SHORT_TIME","DATETIME_FORMATTER","DATABASE_DATETIME","storeQuery","query","post","endpoint","postPayload","data","then","response","baseUrl","window","location","origin","pathname","url","json","id","optionLabel","opt","toString","optionValue","optionFromValue","value","label","getColumnName","column","name","prepareCopyToClipboardTabularData","columns","result","length","map","join","i","row","j","key","parseFloat","Object","values","applyFormattingToTabularData","timeFormattedColumns","reduce","acc","colName","undefined","noOp","detectOS","appVersion","navigator","includes","isSafari","userAgent","test","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/common.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  SupersetClient,\n  getTimeFormatter,\n  TimeFormats,\n  ensureIsArray,\n} from '@superset-ui/core';\n\n// ATTENTION: If you change any constants, make sure to also change constants.py\n\nexport const EMPTY_STRING = '<empty string>';\nexport const NULL_STRING = '<NULL>';\nexport const TRUE_STRING = 'TRUE';\nexport const FALSE_STRING = 'FALSE';\n\n// moment time format strings\nexport const SHORT_DATE = 'MMM D, YYYY';\nexport const SHORT_TIME = 'h:m a';\n\nconst DATETIME_FORMATTER = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\n\nexport function storeQuery(query) {\n  return SupersetClient.post({\n    endpoint: '/kv/store/',\n    postPayload: { data: query },\n  }).then(response => {\n    const baseUrl = window.location.origin + window.location.pathname;\n    const url = `${baseUrl}?id=${response.json.id}`;\n    return url;\n  });\n}\n\nexport function optionLabel(opt) {\n  if (opt === null) {\n    return NULL_STRING;\n  }\n  if (opt === '') {\n    return EMPTY_STRING;\n  }\n  if (opt === true) {\n    return TRUE_STRING;\n  }\n  if (opt === false) {\n    return FALSE_STRING;\n  }\n  if (typeof opt !== 'string' && opt.toString) {\n    return opt.toString();\n  }\n  return opt;\n}\n\nexport function optionValue(opt) {\n  if (opt === null) {\n    return NULL_STRING;\n  }\n  return opt;\n}\n\nexport function optionFromValue(opt) {\n  // From a list of options, handles special values & labels\n  return { value: optionValue(opt), label: optionLabel(opt) };\n}\n\nfunction getColumnName(column) {\n  return column.name || column;\n}\n\nexport function prepareCopyToClipboardTabularData(data, columns) {\n  let result = columns.length\n    ? `${columns.map(getColumnName).join('\\t')}\\n`\n    : '';\n  for (let i = 0; i < data.length; i += 1) {\n    const row = {};\n    for (let j = 0; j < columns.length; j += 1) {\n      // JavaScript does not maintain the order of a mixed set of keys (i.e integers and strings)\n      // the below function orders the keys based on the column names.\n      const key = getColumnName(columns[j]);\n      if (key in data[i]) {\n        row[j] = data[i][key];\n      } else {\n        row[j] = data[i][parseFloat(key)];\n      }\n    }\n    result += `${Object.values(row).join('\\t')}\\n`;\n  }\n  return result;\n}\n\nexport function applyFormattingToTabularData(data, timeFormattedColumns) {\n  if (\n    !data ||\n    data.length === 0 ||\n    ensureIsArray(timeFormattedColumns).length === 0\n  ) {\n    return data;\n  }\n\n  return data.map(row => ({\n    ...row,\n    /* eslint-disable no-underscore-dangle */\n    ...timeFormattedColumns.reduce((acc, colName) => {\n      if (row[colName] !== null && row[colName] !== undefined) {\n        acc[colName] = DATETIME_FORMATTER(row[colName]);\n      }\n      return acc;\n    }, {}),\n  }));\n}\n\nexport const noOp = () => undefined;\n\n// Detects the user's OS through the browser\nexport const detectOS = () => {\n  const { appVersion } = navigator;\n\n  // Leveraging this condition because of stackOverflow\n  // https://stackoverflow.com/questions/11219582/how-to-detect-my-browser-version-and-operating-system-using-javascript\n  if (appVersion.includes('Win')) return 'Windows';\n  if (appVersion.includes('Mac')) return 'MacOS';\n  if (appVersion.includes('X11')) return 'UNIX';\n  if (appVersion.includes('Linux')) return 'Linux';\n\n  return 'Unknown OS';\n};\n\nexport const isSafari = () => {\n  const { userAgent } = navigator;\n\n  return userAgent && /^((?!chrome|android).)*safari/i.test(userAgent);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}