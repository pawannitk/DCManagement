{"ast":null,"code":"import _isString from \"lodash/isString\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\nexport const getTimeOffset = (series, timeCompare) => timeCompare.find((timeOffset) =>\n// offset is represented as <offset>, group by list\nseries.name.includes(`${timeOffset},`) ||\n// offset is represented as <metric>__<offset>\nseries.name.includes(`__${timeOffset}`));\nexport const hasTimeOffset = (series, timeCompare) => _isString(series.name) ? !!getTimeOffset(series, timeCompare) : false;\nexport const getOriginalSeries = (seriesName, timeCompare) => {\n  let result = seriesName;\n  timeCompare.forEach((compare) => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTimeOffset, \"getTimeOffset\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts\");reactHotLoader.register(hasTimeOffset, \"hasTimeOffset\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts\");reactHotLoader.register(getOriginalSeries, \"getOriginalSeries\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getTimeOffset","series","timeCompare","find","timeOffset","name","includes","hasTimeOffset","_isString","getOriginalSeries","seriesName","result","forEach","compare","replace","trim","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { isString } from 'lodash';\n\nexport const getTimeOffset = (\n  series: JsonObject,\n  timeCompare: string[],\n): string | undefined =>\n  timeCompare.find(\n    timeOffset =>\n      // offset is represented as <offset>, group by list\n      series.name.includes(`${timeOffset},`) ||\n      // offset is represented as <metric>__<offset>\n      series.name.includes(`__${timeOffset}`),\n  );\n\nexport const hasTimeOffset = (\n  series: JsonObject,\n  timeCompare: string[],\n): boolean =>\n  isString(series.name) ? !!getTimeOffset(series, timeCompare) : false;\n\nexport const getOriginalSeries = (\n  seriesName: string,\n  timeCompare: string[],\n): string => {\n  let result = seriesName;\n  timeCompare.forEach(compare => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};\n"],"mappings":";AAsBA,OAAO,MAAMA,aAAa,GAAGA,CAC3BC,MAAkB,EAClBC,WAAqB,KAErBA,WAAW,CAACC,IAAI,CACd,CAAAC,UAAU;AACR;AACAH,MAAM,CAACI,IAAI,CAACC,QAAQ,CAAC,GAAGF,UAAU,GAAG,CAAC;AACtC;AACAH,MAAM,CAACI,IAAI,CAACC,QAAQ,CAAC,KAAKF,UAAU,EAAE,CAAC,CAC1C;AAEH,OAAO,MAAMG,aAAa,GAAGA,CAC3BN,MAAkB,EAClBC,WAAqB,KAErBM,SAAA,CAASP,MAAM,CAACI,IAAI,CAAC,GAAG,CAAC,CAACL,aAAa,CAACC,MAAM,EAAEC,WAAW,CAAC,GAAG,KAAK;AAEtE,OAAO,MAAMO,iBAAiB,GAAGA,CAC/BC,UAAkB,EAClBR,WAAqB,KACX;EACV,IAAIS,MAAM,GAAGD,UAAU;EACvBR,WAAW,CAACU,OAAO,CAAC,CAAAC,OAAO,KAAG;IAC5B;IACAF,MAAM,GAAGA,MAAM,CAACG,OAAO,CAAC,GAAGD,OAAO,GAAG,EAAE,EAAE,CAAC;IAC1C;IACAF,MAAM,GAAGA,MAAM,CAACG,OAAO,CAAC,KAAKD,OAAO,EAAE,EAAE,EAAE,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOF,MAAM,CAACI,IAAI,EAAE;AACtB,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA9BWpB,aAAa,mJAAAgB,cAAA,CAAAI,QAAA,CAYbb,aAAa,mJAAAS,cAAA,CAAAI,QAAA,CAMbX,iBAAiB,+KAAAY,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}