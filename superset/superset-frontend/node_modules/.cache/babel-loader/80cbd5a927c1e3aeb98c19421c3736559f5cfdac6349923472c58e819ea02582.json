{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export var QueryEditorVersion;\n(function (QueryEditorVersion) {\n  QueryEditorVersion[QueryEditorVersion[\"V1\"] = 1] = \"V1\";\n})(QueryEditorVersion || (QueryEditorVersion = {}));\nexport const LatestQueryEditorVersion = QueryEditorVersion.V1;\nexport var DatasetRadioState;\n(function (DatasetRadioState) {\n  DatasetRadioState[DatasetRadioState[\"SaveNew\"] = 1] = \"SaveNew\";\n  DatasetRadioState[DatasetRadioState[\"OverwriteDataset\"] = 2] = \"OverwriteDataset\";\n})(DatasetRadioState || (DatasetRadioState = {}));\nexport const EXPLORE_CHART_DEFAULT = {\n  metrics: [],\n  groupby: [],\n  time_range: 'No filter',\n  row_limit: 1000\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(QueryEditorVersion, \"QueryEditorVersion\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/types.ts\");reactHotLoader.register(LatestQueryEditorVersion, \"LatestQueryEditorVersion\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/types.ts\");reactHotLoader.register(DatasetRadioState, \"DatasetRadioState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/types.ts\");reactHotLoader.register(EXPLORE_CHART_DEFAULT, \"EXPLORE_CHART_DEFAULT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["QueryEditorVersion","LatestQueryEditorVersion","V1","DatasetRadioState","EXPLORE_CHART_DEFAULT","metrics","groupby","time_range","row_limit","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryResponse } from '@superset-ui/core';\nimport {\n  CommonBootstrapData,\n  UserWithPermissionsAndRoles,\n} from 'src/types/bootstrapTypes';\nimport { ToastType } from 'src/components/MessageToasts/types';\nimport { DropdownButtonProps } from 'src/components/DropdownButton';\nimport { ButtonProps } from 'src/components/Button';\nimport type { TableMetaData } from 'src/hooks/apiResources';\n\nexport type QueryButtonProps = DropdownButtonProps | ButtonProps;\n\n// Object as Dictionary (associative array) with Query id as the key and type Query as the value\nexport type QueryDictionary = {\n  [id: string]: QueryResponse;\n};\n\nexport enum QueryEditorVersion {\n  V1 = 1,\n}\n\nexport const LatestQueryEditorVersion = QueryEditorVersion.V1;\n\nexport interface CursorPosition {\n  row: number;\n  column: number;\n}\n\nexport interface QueryEditor {\n  version: QueryEditorVersion;\n  id: string;\n  dbId?: number;\n  name: string;\n  title?: string; // keep it optional for backward compatibility\n  catalog?: string | null;\n  schema?: string;\n  autorun: boolean;\n  sql: string;\n  remoteId: number | null;\n  hideLeftBar?: boolean;\n  latestQueryId?: string | null;\n  templateParams?: string;\n  selectedText?: string;\n  queryLimit?: number;\n  description?: string;\n  loaded?: boolean;\n  inLocalStorage?: boolean;\n  northPercent?: number;\n  southPercent?: number;\n  updatedAt?: number;\n  cursorPosition?: CursorPosition;\n}\n\nexport type toastState = {\n  id: string;\n  toastType: ToastType;\n  text: string;\n  duration: number;\n  noDuplicate: boolean;\n};\n\nexport type UnsavedQueryEditor = Partial<QueryEditor>;\n\nexport interface Table {\n  id: string;\n  dbId: number;\n  catalog: string | null;\n  schema: string;\n  name: string;\n  queryEditorId: QueryEditor['id'];\n  dataPreviewQueryId: string | null;\n  expanded: boolean;\n  initialized?: boolean;\n  inLocalStorage?: boolean;\n  persistData?: TableMetaData;\n}\n\nexport type SqlLabRootState = {\n  sqlLab: {\n    activeSouthPaneTab: string | number; // default is string; action.newQuery.id is number\n    alerts: any[];\n    databases: Record<string, any>;\n    dbConnect: boolean;\n    offline: boolean;\n    queries: Record<string, QueryResponse & { inLocalStorage?: boolean }>;\n    queryEditors: QueryEditor[];\n    tabHistory: string[]; // default is activeTab ? [activeTab.id.toString()] : []\n    tables: Table[];\n    queriesLastUpdate: number;\n    errorMessage: string | null;\n    unsavedQueryEditor: UnsavedQueryEditor;\n    queryCostEstimates?: Record<string, QueryCostEstimate>;\n    editorTabLastUpdatedAt: number;\n  };\n  localStorageUsageInKilobytes: number;\n  messageToasts: toastState[];\n  user: UserWithPermissionsAndRoles;\n  common: CommonBootstrapData;\n};\n\nexport enum DatasetRadioState {\n  SaveNew = 1,\n  OverwriteDataset = 2,\n}\n\nexport const EXPLORE_CHART_DEFAULT = {\n  metrics: [],\n  groupby: [],\n  time_range: 'No filter',\n  row_limit: 1000,\n};\n\nexport interface DatasetOwner {\n  first_name: string;\n  id: number;\n  last_name: string;\n  username: string;\n}\n\nexport interface DatasetOptionAutocomplete {\n  value: string;\n  datasetId: number;\n  owners: [DatasetOwner];\n}\n\nexport interface SchemaOption {\n  value: string;\n  label: string;\n  title: string;\n}\n\nexport interface QueryCostEstimate {\n  completed: string;\n  cost: Record<string, any>[];\n  error: string;\n}\n"],"mappings":"uSAmCA,WAAYA,kBAEX;AAFD,WAAYA,kBAAkB;EAC5BA,kBAAA,CAAAA,kBAAA,kBAAM;AACR,CAAC,EAFWA,kBAAkB,KAAlBA,kBAAkB;AAI9B,OAAO,MAAMC,wBAAwB,GAAGD,kBAAkB,CAACE,EAAE;AA+E7D,WAAYC,iBAGX;AAHD,WAAYA,iBAAiB;EAC3BA,iBAAA,CAAAA,iBAAA,4BAAW;EACXA,iBAAA,CAAAA,iBAAA,8CAAoB;AACtB,CAAC,EAHWA,iBAAiB,KAAjBA,iBAAiB;AAK7B,OAAO,MAAMC,qBAAqB,GAAG;EACnCC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE;CACZ,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA7FUb,kBAEX,sGAAAS,cAAA,CAAAI,QAAA,CAEYZ,wBAAwB,4GAAAQ,cAAA,CAAAI,QAAA,CA+EzBV,iBAGX,qGAAAM,cAAA,CAAAI,QAAA,CAEYT,qBAAqB,iIAAAU,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}