{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFeatureEnabled, t, FeatureFlag } from '@superset-ui/core';\n\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\n\nimport {\n  slicePropShape,\n  dashboardInfoPropShape,\n  dashboardStatePropShape } from\n'../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger } from\n'../../logger/LogUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\nimport { getAffectedOwnDataCharts } from '../util/charts/getOwnDataCharts';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n    clearDataMaskState: PropTypes.func.isRequired\n  }).isRequired,\n  dashboardInfo: dashboardInfoPropShape.isRequired,\n  dashboardState: dashboardStatePropShape.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  chartConfiguration: PropTypes.object,\n  datasources: PropTypes.object.isRequired,\n  ownDataCharts: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  userId: PropTypes.string\n};\n\nconst defaultProps = {\n  timeout: 60,\n  userId: ''\n};\n\nclass Dashboard extends React.PureComponent {\n\n\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {var _props$activeFilters, _props$ownDataCharts;\n    super(props);\n    this.appliedFilters = (_props$activeFilters = props.activeFilters) != null ? _props$activeFilters : {};\n    this.appliedOwnDataCharts = (_props$ownDataCharts = props.ownDataCharts) != null ? _props$ownDataCharts : {};\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const bootstrapData = getBootstrapData();\n    const { dashboardState, layout } = this.props;\n    const eventData = {\n      is_soft_navigation: Logger.timeOriginOffset > 0,\n      is_edit_mode: dashboardState.editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: dashboardState.isPublished,\n      bootstrap_data_length: bootstrapData.length\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime()\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n    this.applyCharts();\n  }\n\n  componentDidUpdate() {\n    this.applyCharts();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (this.props.dashboardInfo.id !== nextProps.dashboardInfo.id) {\n      // single-page-app navigation check\n      return;\n    }\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        (key) => currentChartIds.indexOf(key) === -1\n      );\n      newChartIds.forEach((newChartId) =>\n      this.props.actions.addSliceToDashboard(\n        newChartId,\n        getLayoutComponentFromChartId(nextProps.layout, newChartId)\n      )\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        (key) => nextChartIds.indexOf(key) === -1\n      );\n      removedChartIds.forEach((removedChartId) =>\n      this.props.actions.removeSliceFromDashboard(removedChartId)\n      );\n    }\n  }\n\n  applyCharts() {\n    const { hasUnsavedChanges, editMode } = this.props.dashboardState;\n\n    const { appliedFilters, appliedOwnDataCharts } = this;\n    const { activeFilters, ownDataCharts, chartConfiguration } = this.props;\n    if (\n    isFeatureEnabled(FeatureFlag.DashboardCrossFilters) &&\n    !chartConfiguration)\n    {\n      // For a first loading we need to wait for cross filters charts data loaded to get all active filters\n      // for correct comparing  of filters to avoid unnecessary requests\n      return;\n    }\n\n    if (\n    !editMode && (\n    !areObjectsEqual(appliedOwnDataCharts, ownDataCharts, {\n      ignoreUndefined: true\n    }) ||\n    !areObjectsEqual(appliedFilters, activeFilters, {\n      ignoreUndefined: true\n    })))\n    {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n    this.props.actions.clearDataMaskState();\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime()\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart\n      });\n    }\n  }\n\n  applyFilters() {\n    const { appliedFilters } = this;\n    const { activeFilters, ownDataCharts } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = getAffectedOwnDataCharts(\n      ownDataCharts,\n      this.appliedOwnDataCharts\n    );\n    [...allKeys].forEach((filterKey) => {\n      if (\n      !currFilterKeys.includes(filterKey) &&\n      appliedFilterKeys.includes(filterKey))\n      {\n        // filterKey is removed?\n        affectedChartIds.push(...appliedFilters[filterKey].scope);\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(...activeFilters[filterKey].scope);\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n        !areObjectsEqual(\n          appliedFilters[filterKey].values,\n          activeFilters[filterKey].values,\n          {\n            ignoreUndefined: true\n          }\n        ))\n        {\n          affectedChartIds.push(...activeFilters[filterKey].scope);\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n        !areObjectsEqual(\n          appliedFilters[filterKey].scope,\n          activeFilters[filterKey].scope\n        ))\n        {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || []\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n    this.appliedOwnDataCharts = ownDataCharts;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach((id) => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    if (this.context.loading) {\n      return ___EmotionJSX(Loading, null);\n    }\n    return this.props.children;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Dashboard.contextType = PluginContext;\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;const _default =\n\nDashboard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(Dashboard, \"Dashboard\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","isFeatureEnabled","t","FeatureFlag","PluginContext","Loading","getBootstrapData","getChartIdsFromLayout","getLayoutComponentFromChartId","slicePropShape","dashboardInfoPropShape","dashboardStatePropShape","LOG_ACTIONS_HIDE_BROWSER_TAB","LOG_ACTIONS_MOUNT_DASHBOARD","Logger","areObjectsEqual","getLocationHash","isDashboardEmpty","getAffectedOwnDataCharts","jsx","___EmotionJSX","propTypes","actions","shape","addSliceToDashboard","func","isRequired","removeSliceFromDashboard","triggerQuery","logEvent","clearDataMaskState","dashboardInfo","dashboardState","slices","objectOf","activeFilters","object","chartConfiguration","datasources","ownDataCharts","layout","impressionId","string","timeout","number","userId","defaultProps","Dashboard","PureComponent","onBeforeUnload","hasChanged","window","addEventListener","unload","removeEventListener","message","event","returnValue","constructor","props","_props$activeFilters","_props$ownDataCharts","appliedFilters","appliedOwnDataCharts","onVisibilityChange","bind","componentDidMount","bootstrapData","eventData","is_soft_navigation","timeOriginOffset","is_edit_mode","editMode","mount_duration","getTimestamp","is_empty","is_published","isPublished","bootstrap_data_length","length","directLinkComponentId","target_id","document","visibilityState","visibilityEventData","start_offset","ts","Date","getTime","applyCharts","componentDidUpdate","UNSAFE_componentWillReceiveProps","nextProps","currentChartIds","nextChartIds","id","newChartIds","filter","key","indexOf","forEach","newChartId","removedChartIds","removedChartId","hasUnsavedChanges","DashboardCrossFilters","ignoreUndefined","applyFilters","componentWillUnmount","logStart","duration","currFilterKeys","Object","keys","appliedFilterKeys","allKeys","Set","concat","affectedChartIds","filterKey","includes","push","scope","values","chartsInScope","refreshCharts","ids","render","context","loading","children","__reactstandin__regenerateByEval","code","eval","contextType","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Dashboard.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFeatureEnabled, t, FeatureFlag } from '@superset-ui/core';\n\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\n\nimport {\n  slicePropShape,\n  dashboardInfoPropShape,\n  dashboardStatePropShape,\n} from '../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger,\n} from '../../logger/LogUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\nimport { getAffectedOwnDataCharts } from '../util/charts/getOwnDataCharts';\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n    clearDataMaskState: PropTypes.func.isRequired,\n  }).isRequired,\n  dashboardInfo: dashboardInfoPropShape.isRequired,\n  dashboardState: dashboardStatePropShape.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  chartConfiguration: PropTypes.object,\n  datasources: PropTypes.object.isRequired,\n  ownDataCharts: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  userId: PropTypes.string,\n};\n\nconst defaultProps = {\n  timeout: 60,\n  userId: '',\n};\n\nclass Dashboard extends React.PureComponent {\n  static contextType = PluginContext;\n\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {\n    super(props);\n    this.appliedFilters = props.activeFilters ?? {};\n    this.appliedOwnDataCharts = props.ownDataCharts ?? {};\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const bootstrapData = getBootstrapData();\n    const { dashboardState, layout } = this.props;\n    const eventData = {\n      is_soft_navigation: Logger.timeOriginOffset > 0,\n      is_edit_mode: dashboardState.editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: dashboardState.isPublished,\n      bootstrap_data_length: bootstrapData.length,\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n    this.applyCharts();\n  }\n\n  componentDidUpdate() {\n    this.applyCharts();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (this.props.dashboardInfo.id !== nextProps.dashboardInfo.id) {\n      // single-page-app navigation check\n      return;\n    }\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        key => currentChartIds.indexOf(key) === -1,\n      );\n      newChartIds.forEach(newChartId =>\n        this.props.actions.addSliceToDashboard(\n          newChartId,\n          getLayoutComponentFromChartId(nextProps.layout, newChartId),\n        ),\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        key => nextChartIds.indexOf(key) === -1,\n      );\n      removedChartIds.forEach(removedChartId =>\n        this.props.actions.removeSliceFromDashboard(removedChartId),\n      );\n    }\n  }\n\n  applyCharts() {\n    const { hasUnsavedChanges, editMode } = this.props.dashboardState;\n\n    const { appliedFilters, appliedOwnDataCharts } = this;\n    const { activeFilters, ownDataCharts, chartConfiguration } = this.props;\n    if (\n      isFeatureEnabled(FeatureFlag.DashboardCrossFilters) &&\n      !chartConfiguration\n    ) {\n      // For a first loading we need to wait for cross filters charts data loaded to get all active filters\n      // for correct comparing  of filters to avoid unnecessary requests\n      return;\n    }\n\n    if (\n      !editMode &&\n      (!areObjectsEqual(appliedOwnDataCharts, ownDataCharts, {\n        ignoreUndefined: true,\n      }) ||\n        !areObjectsEqual(appliedFilters, activeFilters, {\n          ignoreUndefined: true,\n        }))\n    ) {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n    this.props.actions.clearDataMaskState();\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart,\n      });\n    }\n  }\n\n  applyFilters() {\n    const { appliedFilters } = this;\n    const { activeFilters, ownDataCharts } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = getAffectedOwnDataCharts(\n      ownDataCharts,\n      this.appliedOwnDataCharts,\n    );\n    [...allKeys].forEach(filterKey => {\n      if (\n        !currFilterKeys.includes(filterKey) &&\n        appliedFilterKeys.includes(filterKey)\n      ) {\n        // filterKey is removed?\n        affectedChartIds.push(...appliedFilters[filterKey].scope);\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(...activeFilters[filterKey].scope);\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].values,\n            activeFilters[filterKey].values,\n            {\n              ignoreUndefined: true,\n            },\n          )\n        ) {\n          affectedChartIds.push(...activeFilters[filterKey].scope);\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].scope,\n            activeFilters[filterKey].scope,\n          )\n        ) {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || [],\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n    this.appliedOwnDataCharts = ownDataCharts;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach(id => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    if (this.context.loading) {\n      return <Loading />;\n    }\n    return this.props.children;\n  }\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}