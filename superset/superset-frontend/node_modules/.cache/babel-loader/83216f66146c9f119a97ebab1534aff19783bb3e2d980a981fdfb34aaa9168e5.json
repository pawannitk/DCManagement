{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isAdhocColumn } from '@superset-ui/core';\nimport { Clauses, ExpressionTypes } from '../explore/components/controls/FilterControl/types';\nimport { OPERATOR_ENUM_TO_OPERATOR_TYPE } from '../explore/constants';\nimport { translateToSql } from '../explore/components/controls/FilterControl/utils/translateToSQL';\nexport const simpleFilterToAdhoc = (filterClause, clause = Clauses.Where) => {\n  let result;\n  if (isAdhocColumn(filterClause.col)) {\n    result = {\n      expressionType: 'SQL',\n      clause,\n      sqlExpression: translateToSql({\n        expressionType: ExpressionTypes.Simple,\n        subject: `(${filterClause.col.sqlExpression})`,\n        operator: filterClause.op,\n        comparator: 'val' in filterClause ? filterClause.val : undefined\n      })\n    };\n  } else\n  {var _Object$entries$find;\n    result = {\n      expressionType: 'SIMPLE',\n      clause,\n      operator: filterClause.op,\n      operatorId: (_Object$entries$find = Object.entries(OPERATOR_ENUM_TO_OPERATOR_TYPE).find((operatorEntry) => operatorEntry[1].operation === filterClause.op)) == null ? void 0 : _Object$entries$find[0],\n      subject: filterClause.col,\n      comparator: 'val' in filterClause ? filterClause.val : undefined\n    };\n  }\n  if (filterClause.isExtra) {\n    Object.assign(result, {\n      isExtra: true,\n      filterOptionName: `filter_${Math.random().\n      toString(36).\n      substring(2, 15)}_${Math.random().toString(36).substring(2, 15)}`\n    });\n  }\n  return result;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(simpleFilterToAdhoc, \"simpleFilterToAdhoc\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/simpleFilterToAdhoc.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isAdhocColumn","Clauses","ExpressionTypes","OPERATOR_ENUM_TO_OPERATOR_TYPE","translateToSql","simpleFilterToAdhoc","filterClause","clause","Where","result","col","expressionType","sqlExpression","Simple","subject","operator","op","comparator","val","undefined","_Object$entries$find","operatorId","Object","entries","find","operatorEntry","operation","isExtra","assign","filterOptionName","Math","random","toString","substring","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/simpleFilterToAdhoc.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  isAdhocColumn,\n  QueryObjectFilterClause,\n  SimpleAdhocFilter,\n} from '@superset-ui/core';\nimport {\n  Clauses,\n  ExpressionTypes,\n} from '../explore/components/controls/FilterControl/types';\nimport { OPERATOR_ENUM_TO_OPERATOR_TYPE } from '../explore/constants';\nimport { translateToSql } from '../explore/components/controls/FilterControl/utils/translateToSQL';\n\nexport const simpleFilterToAdhoc = (\n  filterClause: QueryObjectFilterClause,\n  clause: Clauses = Clauses.Where,\n) => {\n  let result: AdhocFilter;\n  if (isAdhocColumn(filterClause.col)) {\n    result = {\n      expressionType: 'SQL',\n      clause,\n      sqlExpression: translateToSql({\n        expressionType: ExpressionTypes.Simple,\n        subject: `(${filterClause.col.sqlExpression})`,\n        operator: filterClause.op,\n        comparator: 'val' in filterClause ? filterClause.val : undefined,\n      } as SimpleAdhocFilter),\n    };\n  } else {\n    result = {\n      expressionType: 'SIMPLE',\n      clause,\n      operator: filterClause.op,\n      operatorId: Object.entries(OPERATOR_ENUM_TO_OPERATOR_TYPE).find(\n        operatorEntry => operatorEntry[1].operation === filterClause.op,\n      )?.[0],\n      subject: filterClause.col,\n      comparator: 'val' in filterClause ? filterClause.val : undefined,\n    } as SimpleAdhocFilter;\n  }\n  if (filterClause.isExtra) {\n    Object.assign(result, {\n      isExtra: true,\n      filterOptionName: `filter_${Math.random()\n        .toString(36)\n        .substring(2, 15)}_${Math.random().toString(36).substring(2, 15)}`,\n    });\n  }\n  return result;\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,aAAa,QAGR,mBAAmB;AAC1B,SACEC,OAAO,EACPC,eAAe,QACV,oDAAoD;AAC3D,SAASC,8BAA8B,QAAQ,sBAAsB;AACrE,SAASC,cAAc,QAAQ,mEAAmE;AAElG,OAAO,MAAMC,mBAAmB,GAAGA,CACjCC,YAAqC,EACrCC,MAAA,GAAkBN,OAAO,CAACO,KAAK,KAC7B;EACF,IAAIC,MAAmB;EACvB,IAAIT,aAAa,CAACM,YAAY,CAACI,GAAG,CAAC,EAAE;IACnCD,MAAM,GAAG;MACPE,cAAc,EAAE,KAAK;MACrBJ,MAAM;MACNK,aAAa,EAAER,cAAc,CAAC;QAC5BO,cAAc,EAAET,eAAe,CAACW,MAAM;QACtCC,OAAO,EAAE,IAAIR,YAAY,CAACI,GAAG,CAACE,aAAa,GAAG;QAC9CG,QAAQ,EAAET,YAAY,CAACU,EAAE;QACzBC,UAAU,EAAE,KAAK,IAAIX,YAAY,GAAGA,YAAY,CAACY,GAAG,GAAGC;OACnC;KACvB;GACF;EAAM,KAAAC,oBAAA;IACLX,MAAM,GAAG;MACPE,cAAc,EAAE,QAAQ;MACxBJ,MAAM;MACNQ,QAAQ,EAAET,YAAY,CAACU,EAAE;MACzBK,UAAU,GAAAD,oBAAA,GAAEE,MAAM,CAACC,OAAO,CAACpB,8BAA8B,CAAC,CAACqB,IAAI,CAC7D,CAAAC,aAAa,KAAIA,aAAa,CAAC,CAAC,CAAC,CAACC,SAAS,KAAKpB,YAAY,CAACU,EAAE,CAChE,qBAFWI,oBAAA,CAER,CAAC,CAAC;MACNN,OAAO,EAAER,YAAY,CAACI,GAAG;MACzBO,UAAU,EAAE,KAAK,IAAIX,YAAY,GAAGA,YAAY,CAACY,GAAG,GAAGC;KACnC;;EAExB,IAAIb,YAAY,CAACqB,OAAO,EAAE;IACxBL,MAAM,CAACM,MAAM,CAACnB,MAAM,EAAE;MACpBkB,OAAO,EAAE,IAAI;MACbE,gBAAgB,EAAE,UAAUC,IAAI,CAACC,MAAM,EAAE;MACtCC,QAAQ,CAAC,EAAE,CAAC;MACZC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAIH,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;KACnE,CAAC;;EAEJ,OAAOxB,MAAM;AACf,CAAC,CAAC,mBAAAyB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAjB,SAAA,MAAAe,cAAA,WAAAA,cAAA,CAAAG,QAAA,CArCWhC,mBAAmB,4IAAAiC,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAnB,SAAA,CAAAmB,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}