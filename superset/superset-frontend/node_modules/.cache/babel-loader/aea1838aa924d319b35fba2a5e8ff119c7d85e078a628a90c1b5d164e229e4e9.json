{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFilters, usePagination, useRowSelect, useRowState, useSortBy, useTable } from 'react-table';\nimport { NumberParam, StringParam, useQueryParams } from 'use-query-params';\nimport rison from 'rison';\n\n// Define custom RisonParam for proper encoding/decoding; note that\n// %, &, +, and # must be encoded to avoid breaking the url\nconst RisonParam = {\n  encode: (data) => data === undefined ?\n  undefined :\n  rison.\n  encode(data).\n  replace(/%/g, '%25').\n  replace(/&/g, '%26').\n  replace(/\\+/g, '%2B').\n  replace(/#/g, '%23'),\n  decode: (dataStr) => dataStr === undefined || Array.isArray(dataStr) ?\n  undefined :\n  rison.decode(dataStr)\n};\nexport const SELECT_WIDTH = 200;\nexport class ListViewError extends Error {constructor(...args) {super(...args);this.\n    name = 'ListViewError';} // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}} // removes element from a list, returns new list\nexport function removeFromList(list, index) {\n  return list.filter((_, i) => index !== i);\n}\n// apply update to elements of object list, returns new list\nfunction updateInList(list, index, update) {\n  const element = list.find((_, i) => index === i);\n  return [\n  ...list.slice(0, index),\n  { ...element, ...update },\n  ...list.slice(index + 1)];\n\n}\nfunction mergeCreateFilterValues(list, updateObj) {\n  return list.map(({ id, urlDisplay, operator }) => {\n    const currentFilterId = urlDisplay || id;\n    const update = updateObj[currentFilterId];\n    return { id, urlDisplay, operator, value: update };\n  });\n}\n// convert filters from UI objects to data objects\nexport function convertFilters(fts) {\n  return fts.\n  filter((f) => !(typeof f.value === 'undefined' ||\n  Array.isArray(f.value) && !f.value.length)).\n  map(({ value, operator, id }) => {\n    // handle between filter using 2 api filters\n    if (operator === 'between' && Array.isArray(value)) {\n      return [\n      {\n        value: value[0],\n        operator: 'gt',\n        id\n      },\n      {\n        value: value[1],\n        operator: 'lt',\n        id\n      }];\n\n    }\n    return {\n      value,\n      operator,\n      id\n    };\n  }).\n  flat();\n}\n// convertFilters but to handle new decoded rison format\nexport function convertFiltersRison(filterObj, list) {\n  const filters = [];\n  const refs = {};\n  Object.keys(filterObj).forEach((id) => {\n    const filter = {\n      id,\n      value: filterObj[id]\n      // operator: filterObj[id][1], // TODO: can probably get rid of this\n    };\n    refs[id] = filter;\n    filters.push(filter);\n  });\n  // Add operators from filter list\n  list.forEach((value) => {\n    const currentFilterId = value.urlDisplay || value.id;\n    const filter = refs[currentFilterId];\n    if (filter) {\n      filter.operator = value.operator;\n      filter.id = value.id;\n    }\n  });\n  return filters;\n}\nexport function extractInputValue(inputType, event) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n  return null;\n}\nexport function useListViewState({ fetchData, columns, data, count, initialPageSize, initialFilters = [], initialSort = [], bulkSelectMode = false, bulkSelectColumnConfig, renderCard = false, defaultViewMode = 'card' }) {\n  const [query, setQuery] = useQueryParams({\n    filters: RisonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n    viewMode: StringParam\n  });\n  const initialSortBy = useMemo(() => query.sortColumn && query.sortOrder ?\n  [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }] :\n  initialSort, [initialSort, query.sortColumn, query.sortOrder]);\n  const initialState = {\n    filters: query.filters ?\n    convertFiltersRison(query.filters, initialFilters) :\n    [],\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy\n  };\n  const [viewMode, setViewMode] = useState(query.viewMode || (\n  renderCard ? defaultViewMode : 'table'));\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = columns.map((f) => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode ?\n    [bulkSelectColumnConfig, ...columnsWithFilter] :\n    columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, setSortBy, selectedFlatRows, toggleAllRowsSelected, state: { pageIndex, pageSize, sortBy, filters } } = useTable({\n    columns: columnsWithSelect,\n    count,\n    data,\n    disableFilters: true,\n    disableSortRemove: true,\n    initialState,\n    manualFilters: true,\n    manualPagination: true,\n    manualSortBy: true,\n    autoResetFilters: false,\n    pageCount: Math.ceil(count / initialPageSize)\n  }, useFilters, useSortBy, usePagination, useRowState, useRowSelect);\n  const [internalFilters, setInternalFilters] = useState(query.filters && initialFilters.length ?\n  mergeCreateFilterValues(initialFilters, query.filters) :\n  []);\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(mergeCreateFilterValues(initialFilters, query.filters ? query.filters : {}));\n    }\n  }, [initialFilters]);\n  useEffect(() => {\n    // From internalFilters, produce a simplified obj\n    const filterObj = {};\n    internalFilters.forEach((filter) => {\n      if (filter.value !== undefined && (\n      typeof filter.value !== 'string' || filter.value.length > 0)) {\n        const currentFilterId = filter.urlDisplay || filter.id;\n        filterObj[currentFilterId] = filter.value;\n      }\n    });\n    const queryParams = {\n      filters: Object.keys(filterObj).length ? filterObj : undefined,\n      pageIndex\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n    if (renderCard) {\n      queryParams.viewMode = viewMode;\n    }\n    const method = typeof query.pageIndex !== 'undefined' &&\n    queryParams.pageIndex !== query.pageIndex ?\n    'push' :\n    'replace';\n    setQuery(queryParams, method);\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n  useEffect(() => {\n    if (!_isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n  const applyFilterValue = (index, value) => {\n    setInternalFilters((currentInternalFilters) => {\n      // skip redundant updates\n      if (currentInternalFilters[index].value === value) {\n        return currentInternalFilters;\n      }\n      const update = { ...currentInternalFilters[index], value };\n      const updatedFilters = updateInList(currentInternalFilters, index, update);\n      setAllFilters(convertFilters(updatedFilters));\n      gotoPage(0); // clear pagination on filter\n      return updatedFilters;\n    });\n  };\n  return {\n    canNextPage,\n    canPreviousPage,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setSortBy,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters, viewMode },\n    toggleAllRowsSelected,\n    applyFilterValue,\n    setViewMode,\n    query\n  };\n}__signature__(useListViewState, \"useQueryParams{[query, setQuery]}\\nuseMemo{initialSortBy}\\nuseState{[viewMode, setViewMode](query.viewMode ||\\n        (renderCard ? defaultViewMode : 'table'))}\\nuseMemo{columnsWithSelect}\\nuseTable{{ getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, setSortBy, selectedFlatRows, toggleAllRowsSelected, state: { pageIndex, pageSize, sortBy, filters }, }}\\nuseState{[internalFilters, setInternalFilters](query.filters && initialFilters.length\\n        ? mergeCreateFilterValues(initialFilters, query.filters)\\n        : [])}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useQueryParams, useTable]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RisonParam, \"RisonParam\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(SELECT_WIDTH, \"SELECT_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(ListViewError, \"ListViewError\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(removeFromList, \"removeFromList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(updateInList, \"updateInList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(mergeCreateFilterValues, \"mergeCreateFilterValues\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFilters, \"convertFilters\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFiltersRison, \"convertFiltersRison\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(extractInputValue, \"extractInputValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(useListViewState, \"useListViewState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useMemo","useState","useFilters","usePagination","useRowSelect","useRowState","useSortBy","useTable","NumberParam","StringParam","useQueryParams","rison","RisonParam","encode","data","undefined","replace","decode","dataStr","Array","isArray","SELECT_WIDTH","ListViewError","Error","constructor","args","name","__reactstandin__regenerateByEval","key","code","eval","removeFromList","list","index","filter","_","i","updateInList","update","element","find","slice","mergeCreateFilterValues","updateObj","map","id","urlDisplay","operator","currentFilterId","value","convertFilters","fts","f","length","flat","convertFiltersRison","filterObj","filters","refs","Object","keys","forEach","push","extractInputValue","inputType","event","currentTarget","checked","useListViewState","fetchData","columns","count","initialPageSize","initialFilters","initialSort","bulkSelectMode","bulkSelectColumnConfig","renderCard","defaultViewMode","query","setQuery","pageIndex","sortColumn","sortOrder","viewMode","initialSortBy","desc","initialState","pageSize","sortBy","setViewMode","columnsWithSelect","columnsWithFilter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","gotoPage","setAllFilters","setSortBy","selectedFlatRows","toggleAllRowsSelected","state","disableFilters","disableSortRemove","manualFilters","manualPagination","manualSortBy","autoResetFilters","Math","ceil","internalFilters","setInternalFilters","queryParams","method","_isEqual","applyFilterValue","currentInternalFilters","updatedFilters","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ListView/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFilters,\n  usePagination,\n  useRowSelect,\n  useRowState,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport {\n  NumberParam,\n  StringParam,\n  useQueryParams,\n  QueryParamConfig,\n} from 'use-query-params';\n\nimport rison from 'rison';\nimport { isEqual } from 'lodash';\nimport {\n  FetchDataConfig,\n  Filter,\n  FilterValue,\n  InternalFilter,\n  SortColumn,\n  ViewModeType,\n} from './types';\n\n// Define custom RisonParam for proper encoding/decoding; note that\n// %, &, +, and # must be encoded to avoid breaking the url\nconst RisonParam: QueryParamConfig<string, any> = {\n  encode: (data?: any | null) =>\n    data === undefined\n      ? undefined\n      : rison\n          .encode(data)\n          .replace(/%/g, '%25')\n          .replace(/&/g, '%26')\n          .replace(/\\+/g, '%2B')\n          .replace(/#/g, '%23'),\n  decode: (dataStr?: string | string[]) =>\n    dataStr === undefined || Array.isArray(dataStr)\n      ? undefined\n      : rison.decode(dataStr),\n};\n\nexport const SELECT_WIDTH = 200;\n\nexport class ListViewError extends Error {\n  name = 'ListViewError';\n}\n\n// removes element from a list, returns new list\nexport function removeFromList(list: any[], index: number): any[] {\n  return list.filter((_, i) => index !== i);\n}\n\n// apply update to elements of object list, returns new list\nfunction updateInList(list: any[], index: number, update: any): any[] {\n  const element = list.find((_, i) => index === i);\n\n  return [\n    ...list.slice(0, index),\n    { ...element, ...update },\n    ...list.slice(index + 1),\n  ];\n}\n\ntype QueryFilterState = {\n  [id: string]: FilterValue['value'];\n};\n\nfunction mergeCreateFilterValues(list: Filter[], updateObj: QueryFilterState) {\n  return list.map(({ id, urlDisplay, operator }) => {\n    const currentFilterId = urlDisplay || id;\n    const update = updateObj[currentFilterId];\n\n    return { id, urlDisplay, operator, value: update };\n  });\n}\n\n// convert filters from UI objects to data objects\nexport function convertFilters(fts: InternalFilter[]): FilterValue[] {\n  return fts\n    .filter(\n      f =>\n        !(\n          typeof f.value === 'undefined' ||\n          (Array.isArray(f.value) && !f.value.length)\n        ),\n    )\n    .map(({ value, operator, id }) => {\n      // handle between filter using 2 api filters\n      if (operator === 'between' && Array.isArray(value)) {\n        return [\n          {\n            value: value[0],\n            operator: 'gt',\n            id,\n          },\n          {\n            value: value[1],\n            operator: 'lt',\n            id,\n          },\n        ];\n      }\n      return {\n        value,\n        operator,\n        id,\n      };\n    })\n    .flat();\n}\n\n// convertFilters but to handle new decoded rison format\nexport function convertFiltersRison(\n  filterObj: any,\n  list: Filter[],\n): FilterValue[] {\n  const filters: FilterValue[] = [];\n  const refs = {};\n\n  Object.keys(filterObj).forEach(id => {\n    const filter: FilterValue = {\n      id,\n      value: filterObj[id],\n      // operator: filterObj[id][1], // TODO: can probably get rid of this\n    };\n\n    refs[id] = filter;\n    filters.push(filter);\n  });\n\n  // Add operators from filter list\n  list.forEach(value => {\n    const currentFilterId = value.urlDisplay || value.id;\n    const filter = refs[currentFilterId];\n\n    if (filter) {\n      filter.operator = value.operator;\n      filter.id = value.id;\n    }\n  });\n\n  return filters;\n}\n\nexport function extractInputValue(inputType: Filter['input'], event: any) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n\n  return null;\n}\n\ninterface UseListViewConfig {\n  fetchData: (conf: FetchDataConfig) => any;\n  columns: any[];\n  data: any[];\n  count: number;\n  initialPageSize: number;\n  initialSort?: SortColumn[];\n  bulkSelectMode?: boolean;\n  initialFilters?: Filter[];\n  bulkSelectColumnConfig?: {\n    id: string;\n    Header: (conf: any) => React.ReactNode;\n    Cell: (conf: any) => React.ReactNode;\n  };\n  renderCard?: boolean;\n  defaultViewMode?: ViewModeType;\n}\n\nexport function useListViewState({\n  fetchData,\n  columns,\n  data,\n  count,\n  initialPageSize,\n  initialFilters = [],\n  initialSort = [],\n  bulkSelectMode = false,\n  bulkSelectColumnConfig,\n  renderCard = false,\n  defaultViewMode = 'card',\n}: UseListViewConfig) {\n  const [query, setQuery] = useQueryParams({\n    filters: RisonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n    viewMode: StringParam,\n  });\n\n  const initialSortBy = useMemo(\n    () =>\n      query.sortColumn && query.sortOrder\n        ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n        : initialSort,\n    [initialSort, query.sortColumn, query.sortOrder],\n  );\n\n  const initialState = {\n    filters: query.filters\n      ? convertFiltersRison(query.filters, initialFilters)\n      : [],\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy,\n  };\n\n  const [viewMode, setViewMode] = useState<ViewModeType>(\n    (query.viewMode as ViewModeType) ||\n      (renderCard ? defaultViewMode : 'table'),\n  );\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = columns.map(f => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode\n      ? [bulkSelectColumnConfig, ...columnsWithFilter]\n      : columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setAllFilters,\n    setSortBy,\n    selectedFlatRows,\n    toggleAllRowsSelected,\n    state: { pageIndex, pageSize, sortBy, filters },\n  } = useTable(\n    {\n      columns: columnsWithSelect,\n      count,\n      data,\n      disableFilters: true,\n      disableSortRemove: true,\n      initialState,\n      manualFilters: true,\n      manualPagination: true,\n      manualSortBy: true,\n      autoResetFilters: false,\n      pageCount: Math.ceil(count / initialPageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowState,\n    useRowSelect,\n  );\n\n  const [internalFilters, setInternalFilters] = useState<InternalFilter[]>(\n    query.filters && initialFilters.length\n      ? mergeCreateFilterValues(initialFilters, query.filters)\n      : [],\n  );\n\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(\n        mergeCreateFilterValues(\n          initialFilters,\n          query.filters ? query.filters : {},\n        ),\n      );\n    }\n  }, [initialFilters]);\n\n  useEffect(() => {\n    // From internalFilters, produce a simplified obj\n    const filterObj = {};\n\n    internalFilters.forEach(filter => {\n      if (\n        filter.value !== undefined &&\n        (typeof filter.value !== 'string' || filter.value.length > 0)\n      ) {\n        const currentFilterId = filter.urlDisplay || filter.id;\n        filterObj[currentFilterId] = filter.value;\n      }\n    });\n\n    const queryParams: any = {\n      filters: Object.keys(filterObj).length ? filterObj : undefined,\n      pageIndex,\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n\n    if (renderCard) {\n      queryParams.viewMode = viewMode;\n    }\n\n    const method =\n      typeof query.pageIndex !== 'undefined' &&\n      queryParams.pageIndex !== query.pageIndex\n        ? 'push'\n        : 'replace';\n\n    setQuery(queryParams, method);\n\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n\n  useEffect(() => {\n    if (!isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n\n  const applyFilterValue = (index: number, value: any) => {\n    setInternalFilters(currentInternalFilters => {\n      // skip redundant updates\n      if (currentInternalFilters[index].value === value) {\n        return currentInternalFilters;\n      }\n\n      const update = { ...currentInternalFilters[index], value };\n      const updatedFilters = updateInList(\n        currentInternalFilters,\n        index,\n        update,\n      );\n\n      setAllFilters(convertFilters(updatedFilters));\n      gotoPage(0); // clear pagination on filter\n      return updatedFilters;\n    });\n  };\n\n  return {\n    canNextPage,\n    canPreviousPage,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setSortBy,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters, viewMode },\n    toggleAllRowsSelected,\n    applyFilterValue,\n    setViewMode,\n    query,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}