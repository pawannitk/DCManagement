{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { NO_TIME_RANGE, fetchTimeRange } from '@superset-ui/core';\nimport { Operators } from 'src/explore/constants';\nimport { ExpressionTypes } from '../types';\nexport const useGetTimeRangeLabel = (adhocFilter) => {\n  const [actualTimeRange, setActualTimeRange] = useState({});\n  useEffect(() => {\n    if (adhocFilter.operator !== Operators.TemporalRange ||\n    adhocFilter.expressionType !== ExpressionTypes.Simple) {\n      setActualTimeRange({});\n    }\n    if (adhocFilter.operator === Operators.TemporalRange &&\n    adhocFilter.comparator === NO_TIME_RANGE) {\n      setActualTimeRange({\n        actualTimeRange: `${adhocFilter.subject} (${NO_TIME_RANGE})`,\n        title: NO_TIME_RANGE\n      });\n    }\n    if (adhocFilter.operator === Operators.TemporalRange &&\n    adhocFilter.expressionType === ExpressionTypes.Simple &&\n    adhocFilter.comparator !== NO_TIME_RANGE &&\n    actualTimeRange.title !== adhocFilter.comparator) {\n      fetchTimeRange(adhocFilter.comparator, adhocFilter.subject).then(({ value, error }) => {\n        if (error) {\n          setActualTimeRange({\n            actualTimeRange: `${adhocFilter.subject} (${adhocFilter.comparator})`,\n            title: error\n          });\n        } else\n        {\n          setActualTimeRange({\n            actualTimeRange: value != null ? value : '',\n            title: adhocFilter.comparator\n          });\n        }\n      });\n    }\n  }, [adhocFilter]);\n  return actualTimeRange;\n};__signature__(useGetTimeRangeLabel, \"useState{[actualTimeRange, setActualTimeRange]({})}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useGetTimeRangeLabel, \"useGetTimeRangeLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/utils/useGetTimeRangeLabel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","NO_TIME_RANGE","fetchTimeRange","Operators","ExpressionTypes","useGetTimeRangeLabel","adhocFilter","actualTimeRange","setActualTimeRange","operator","TemporalRange","expressionType","Simple","comparator","subject","title","then","value","error","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/utils/useGetTimeRangeLabel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { NO_TIME_RANGE, fetchTimeRange } from '@superset-ui/core';\nimport { Operators } from 'src/explore/constants';\nimport AdhocFilter from '../AdhocFilter';\nimport { ExpressionTypes } from '../types';\n\ninterface Results {\n  actualTimeRange?: string;\n  title?: string;\n}\n\nexport const useGetTimeRangeLabel = (adhocFilter: AdhocFilter): Results => {\n  const [actualTimeRange, setActualTimeRange] = useState<Results>({});\n\n  useEffect(() => {\n    if (\n      adhocFilter.operator !== Operators.TemporalRange ||\n      adhocFilter.expressionType !== ExpressionTypes.Simple\n    ) {\n      setActualTimeRange({});\n    }\n    if (\n      adhocFilter.operator === Operators.TemporalRange &&\n      adhocFilter.comparator === NO_TIME_RANGE\n    ) {\n      setActualTimeRange({\n        actualTimeRange: `${adhocFilter.subject} (${NO_TIME_RANGE})`,\n        title: NO_TIME_RANGE,\n      });\n    }\n\n    if (\n      adhocFilter.operator === Operators.TemporalRange &&\n      adhocFilter.expressionType === ExpressionTypes.Simple &&\n      adhocFilter.comparator !== NO_TIME_RANGE &&\n      actualTimeRange.title !== adhocFilter.comparator\n    ) {\n      fetchTimeRange(adhocFilter.comparator, adhocFilter.subject).then(\n        ({ value, error }) => {\n          if (error) {\n            setActualTimeRange({\n              actualTimeRange: `${adhocFilter.subject} (${adhocFilter.comparator})`,\n              title: error,\n            });\n          } else {\n            setActualTimeRange({\n              actualTimeRange: value ?? '',\n              title: adhocFilter.comparator,\n            });\n          }\n        },\n      );\n    }\n  }, [adhocFilter]);\n\n  return actualTimeRange;\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,EAAEC,cAAc,QAAQ,mBAAmB;AACjE,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,eAAe,QAAQ,UAAU;AAO1C,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,WAAwB,KAAa;EACxE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAU,EAAE,CAAC;EAEnED,SAAS,CAAC,MAAK;IACb,IACEO,WAAW,CAACG,QAAQ,KAAKN,SAAS,CAACO,aAAa;IAChDJ,WAAW,CAACK,cAAc,KAAKP,eAAe,CAACQ,MAAM,EACrD;MACAJ,kBAAkB,CAAC,EAAE,CAAC;;IAExB,IACEF,WAAW,CAACG,QAAQ,KAAKN,SAAS,CAACO,aAAa;IAChDJ,WAAW,CAACO,UAAU,KAAKZ,aAAa,EACxC;MACAO,kBAAkB,CAAC;QACjBD,eAAe,EAAE,GAAGD,WAAW,CAACQ,OAAO,KAAKb,aAAa,GAAG;QAC5Dc,KAAK,EAAEd;OACR,CAAC;;IAGJ,IACEK,WAAW,CAACG,QAAQ,KAAKN,SAAS,CAACO,aAAa;IAChDJ,WAAW,CAACK,cAAc,KAAKP,eAAe,CAACQ,MAAM;IACrDN,WAAW,CAACO,UAAU,KAAKZ,aAAa;IACxCM,eAAe,CAACQ,KAAK,KAAKT,WAAW,CAACO,UAAU,EAChD;MACAX,cAAc,CAACI,WAAW,CAACO,UAAU,EAAEP,WAAW,CAACQ,OAAO,CAAC,CAACE,IAAI,CAC9D,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAE,KAAI;QACnB,IAAIA,KAAK,EAAE;UACTV,kBAAkB,CAAC;YACjBD,eAAe,EAAE,GAAGD,WAAW,CAACQ,OAAO,KAAKR,WAAW,CAACO,UAAU,GAAG;YACrEE,KAAK,EAAEG;WACR,CAAC;SACH;QAAM;UACLV,kBAAkB,CAAC;YACjBD,eAAe,EAAEU,KAAK,WAALA,KAAK,GAAI,EAAE;YAC5BF,KAAK,EAAET,WAAW,CAACO;WACpB,CAAC;;MAEN,CAAC,CACF;;EAEL,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjB,OAAOC,eAAe;AACxB,CAAC,CAACY,aAAA,CA7CWd,oBAAoB,yFAAAe,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAApBnB,oBAAoB,yLAAAoB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}