{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CategoricalColorNamespace } from '.';\nimport { makeSingleton } from '../utils';\nexport var SharedLabelColorSource;\n(function (SharedLabelColorSource) {\n  SharedLabelColorSource[SharedLabelColorSource[\"Dashboard\"] = 0] = \"Dashboard\";\n  SharedLabelColorSource[SharedLabelColorSource[\"Explore\"] = 1] = \"Explore\";\n})(SharedLabelColorSource || (SharedLabelColorSource = {}));\nexport class SharedLabelColor {\n\n\n\n  constructor() {this.sliceLabelMap = void 0;this.colorMap = void 0;this.source = void 0;\n    // { sliceId1: [label1, label2, ...], sliceId2: [label1, label2, ...] }\n    this.sliceLabelMap = new Map();\n    this.colorMap = new Map();\n    this.source = SharedLabelColorSource.Dashboard;\n  }\n  updateColorMap(colorNamespace, colorScheme) {\n    const categoricalNamespace = CategoricalColorNamespace.getNamespace(colorNamespace);\n    const newColorMap = new Map();\n    this.colorMap.clear();\n    this.sliceLabelMap.forEach((labels) => {\n      const colorScale = categoricalNamespace.getScale(colorScheme);\n      labels.forEach((label) => {\n        const newColor = colorScale(label);\n        newColorMap.set(label, newColor);\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n  getColorMap() {\n    return this.colorMap;\n  }\n  addSlice(label, color, sliceId) {\n    if (this.source !== SharedLabelColorSource.Dashboard ||\n    sliceId === undefined)\n    return;\n    const labels = this.sliceLabelMap.get(sliceId) || [];\n    if (!labels.includes(label)) {\n      labels.push(label);\n      this.sliceLabelMap.set(sliceId, labels);\n    }\n    this.colorMap.set(label, color);\n  }\n  removeSlice(sliceId) {\n    if (this.source !== SharedLabelColorSource.Dashboard)\n    return;\n    this.sliceLabelMap.delete(sliceId);\n    const newColorMap = new Map();\n    this.sliceLabelMap.forEach((labels) => {\n      labels.forEach((label) => {\n        newColorMap.set(label, this.colorMap.get(label));\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n  reset() {\n    const copyColorMap = new Map(this.colorMap);\n    copyColorMap.forEach((_, label) => {\n      this.colorMap.set(label, '');\n    });\n  }\n  clear() {\n    this.sliceLabelMap.clear();\n    this.colorMap.clear();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const getInstance = makeSingleton(SharedLabelColor);const _default =\ngetInstance;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SharedLabelColorSource, \"SharedLabelColorSource\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/SharedLabelColorSingleton.ts\");reactHotLoader.register(SharedLabelColor, \"SharedLabelColor\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/SharedLabelColorSingleton.ts\");reactHotLoader.register(getInstance, \"getInstance\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/SharedLabelColorSingleton.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/SharedLabelColorSingleton.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["CategoricalColorNamespace","makeSingleton","SharedLabelColorSource","SharedLabelColor","constructor","sliceLabelMap","colorMap","source","Map","Dashboard","updateColorMap","colorNamespace","colorScheme","categoricalNamespace","getNamespace","newColorMap","clear","forEach","labels","colorScale","getScale","label","newColor","set","getColorMap","addSlice","color","sliceId","undefined","get","includes","push","removeSlice","delete","reset","copyColorMap","_","__reactstandin__regenerateByEval","key","code","eval","getInstance","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/SharedLabelColorSingleton.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CategoricalColorNamespace } from '.';\nimport { makeSingleton } from '../utils';\n\nexport enum SharedLabelColorSource {\n  Dashboard,\n  Explore,\n}\nexport class SharedLabelColor {\n  sliceLabelMap: Map<number, string[]>;\n\n  colorMap: Map<string, string>;\n\n  source: SharedLabelColorSource;\n\n  constructor() {\n    // { sliceId1: [label1, label2, ...], sliceId2: [label1, label2, ...] }\n    this.sliceLabelMap = new Map();\n    this.colorMap = new Map();\n    this.source = SharedLabelColorSource.Dashboard;\n  }\n\n  updateColorMap(colorNamespace?: string, colorScheme?: string) {\n    const categoricalNamespace =\n      CategoricalColorNamespace.getNamespace(colorNamespace);\n    const newColorMap = new Map();\n    this.colorMap.clear();\n    this.sliceLabelMap.forEach(labels => {\n      const colorScale = categoricalNamespace.getScale(colorScheme);\n      labels.forEach(label => {\n        const newColor = colorScale(label);\n        newColorMap.set(label, newColor);\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n\n  getColorMap() {\n    return this.colorMap;\n  }\n\n  addSlice(label: string, color: string, sliceId?: number) {\n    if (\n      this.source !== SharedLabelColorSource.Dashboard ||\n      sliceId === undefined\n    )\n      return;\n    const labels = this.sliceLabelMap.get(sliceId) || [];\n    if (!labels.includes(label)) {\n      labels.push(label);\n      this.sliceLabelMap.set(sliceId, labels);\n    }\n    this.colorMap.set(label, color);\n  }\n\n  removeSlice(sliceId: number) {\n    if (this.source !== SharedLabelColorSource.Dashboard) return;\n    this.sliceLabelMap.delete(sliceId);\n    const newColorMap = new Map();\n    this.sliceLabelMap.forEach(labels => {\n      labels.forEach(label => {\n        newColorMap.set(label, this.colorMap.get(label));\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n\n  reset() {\n    const copyColorMap = new Map(this.colorMap);\n    copyColorMap.forEach((_, label) => {\n      this.colorMap.set(label, '');\n    });\n  }\n\n  clear() {\n    this.sliceLabelMap.clear();\n    this.colorMap.clear();\n  }\n}\n\nconst getInstance = makeSingleton(SharedLabelColor);\n\nexport default getInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}