{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace } from\n'@superset-ui/core';\nimport Datamap from 'datamaps/dist/datamaps.world.min';\nimport { ColorBy } from './utils';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      name: PropTypes.string,\n      m1: PropTypes.number,\n      m2: PropTypes.number\n    })\n  ),\n  height: PropTypes.number,\n  maxBubbleSize: PropTypes.number,\n  showBubbles: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  color: PropTypes.string,\n  setDataMask: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  emitCrossFilters: PropTypes.bool,\n  formatter: PropTypes.object\n};\n\nfunction WorldMap(element, props) {var _filterState$selected;\n  const {\n    countryFieldtype,\n    entity,\n    data,\n    width,\n    height,\n    maxBubbleSize,\n    showBubbles,\n    linearColorScheme,\n    color,\n    colorBy,\n    colorScheme,\n    sliceId,\n    theme,\n    onContextMenu,\n    setDataMask,\n    inContextMenu,\n    filterState,\n    emitCrossFilters,\n    formatter\n  } = props;\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-world-map', true);\n  div.selectAll('*').remove();\n\n  // Ignore XXX's to get better normalization\n  const filteredData = data.filter((d) => d.country && d.country !== 'XXX');\n\n  const extRadius = d3.extent(filteredData, (d) => Math.sqrt(d.m2));\n  const radiusScale = d3.scale.\n  linear().\n  domain([extRadius[0], extRadius[1]]).\n  range([1, maxBubbleSize]);\n\n  let processedData;\n  let colorScale;\n  if (colorBy === ColorBy.Country) {\n    colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n    processedData = filteredData.map((d) => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.name, sliceId)\n    }));\n  } else {\n    colorScale = getSequentialSchemeRegistry().\n    get(linearColorScheme).\n    createLinearScale(d3Extent(filteredData, (d) => d.m1));\n\n    processedData = filteredData.map((d) => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.m1)\n    }));\n  }\n\n  const mapData = {};\n  processedData.forEach((d) => {\n    mapData[d.country] = d;\n  });\n\n  const getCrossFilterDataMask = (source) => {var _mapData$key, _mapData$key2;\n    const selected = Object.values(filterState.selectedValues || {});\n    const key = source.id || source.country;\n    const country =\n    countryFieldtype === 'name' ? (_mapData$key = mapData[key]) == null ? void 0 : _mapData$key.name : (_mapData$key2 = mapData[key]) == null ? void 0 : _mapData$key2.country;\n\n    if (!country) {\n      return undefined;\n    }\n\n    let values;\n    if (selected.includes(key)) {\n      values = [];\n    } else {\n      values = [country];\n    }\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length ?\n          [\n          {\n            col: entity,\n            op: 'IN',\n            val: values\n          }] :\n\n          []\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? [key] : null\n        }\n      },\n      isCurrentValueSelected: selected.includes(key)\n    };\n  };\n\n  const handleClick = (source) => {var _getCrossFilterDataMa;\n    if (!emitCrossFilters) {\n      return;\n    }\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    getCrossFilterDataMask(source);\n\n    const dataMask = (_getCrossFilterDataMa = getCrossFilterDataMask(source)) == null ? void 0 : _getCrossFilterDataMa.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\n  const handleContextMenu = (source) => {var _mapData$key3, _mapData$key4;\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    const key = source.id || source.country;\n    const val =\n    countryFieldtype === 'name' ? (_mapData$key3 = mapData[key]) == null ? void 0 : _mapData$key3.name : (_mapData$key4 = mapData[key]) == null ? void 0 : _mapData$key4.country;\n    let drillToDetailFilters;\n    let drillByFilters;\n    if (val) {\n      drillToDetailFilters = [\n      {\n        col: entity,\n        op: '==',\n        val,\n        formattedVal: val\n      }];\n\n      drillByFilters = [\n      {\n        col: entity,\n        op: '==',\n        val\n      }];\n\n    }\n    onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: getCrossFilterDataMask(source),\n      drillBy: { filters: drillByFilters, groupbyFieldName: 'entity' }\n    });\n  };\n\n  const map = new Datamap({\n    element,\n    width,\n    height,\n    data: processedData,\n    fills: {\n      defaultFill: theme.colors.grayscale.light2\n    },\n    geographyConfig: {\n      popupOnHover: !inContextMenu,\n      highlightOnHover: !inContextMenu,\n      borderWidth: 1,\n      borderColor: theme.colors.grayscale.light5,\n      highlightBorderColor: theme.colors.grayscale.light5,\n      highlightFillColor: color,\n      highlightBorderWidth: 1,\n      popupTemplate: (geo, d) =>\n      `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n        d.m1\n      )}</div>`\n    },\n    bubblesConfig: {\n      borderWidth: 1,\n      borderOpacity: 1,\n      borderColor: color,\n      popupOnHover: !inContextMenu,\n      radius: null,\n      popupTemplate: (geo, d) =>\n      `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n        d.m2\n      )}</div>`,\n      fillOpacity: 0.5,\n      animate: true,\n      highlightOnHover: !inContextMenu,\n      highlightFillColor: color,\n      highlightBorderColor: theme.colors.grayscale.dark2,\n      highlightBorderWidth: 2,\n      highlightBorderOpacity: 1,\n      highlightFillOpacity: 0.85,\n      exitDelay: 100,\n      key: JSON.stringify\n    },\n    done: (datamap) => {\n      datamap.svg.\n      selectAll('.datamaps-subunit').\n      on('contextmenu', handleContextMenu).\n      on('click', handleClick);\n    }\n  });\n\n  map.updateChoropleth(mapData);\n\n  if (showBubbles) {\n    map.bubbles(processedData);\n    div.\n    selectAll('circle.datamaps-bubble').\n    style('fill', color).\n    style('stroke', color).\n    on('contextmenu', handleContextMenu).\n    on('click', handleClick);\n  }\n\n  if (((_filterState$selected = filterState.selectedValues) == null ? void 0 : _filterState$selected.length) > 0) {\n    d3.selectAll('path.datamaps-subunit').\n    filter(\n      (countryFeature) =>\n      !filterState.selectedValues.includes(countryFeature.id)\n    ).\n    style('fill-opacity', theme.opacity.mediumLight);\n\n    // hack to ensure that the clicked country's color is preserved\n    // sometimes the fill color would get default grey value after applying cross filter\n    filterState.selectedValues.forEach((value) => {var _mapData$value;\n      d3.select(`path.datamaps-subunit.${value}`).style(\n        'fill', (_mapData$value =\n        mapData[value]) == null ? void 0 : _mapData$value.fillColor\n      );\n    });\n  }\n}\n\nWorldMap.displayName = 'WorldMap';\nWorldMap.propTypes = propTypes;const _default =\n\nWorldMap;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js\");reactHotLoader.register(WorldMap, \"WorldMap\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["d3","PropTypes","extent","d3Extent","getSequentialSchemeRegistry","CategoricalColorNamespace","Datamap","ColorBy","propTypes","data","arrayOf","shape","country","string","latitude","number","longitude","name","m1","m2","height","maxBubbleSize","showBubbles","bool","linearColorScheme","color","setDataMask","func","onContextMenu","emitCrossFilters","formatter","object","WorldMap","element","props","_filterState$selected","countryFieldtype","entity","width","colorBy","colorScheme","sliceId","theme","inContextMenu","filterState","div","select","classed","selectAll","remove","filteredData","filter","d","extRadius","Math","sqrt","radiusScale","scale","linear","domain","range","processedData","colorScale","Country","getScale","map","radius","fillColor","get","createLinearScale","mapData","forEach","getCrossFilterDataMask","source","_mapData$key","_mapData$key2","selected","Object","values","selectedValues","key","id","undefined","includes","dataMask","extraFormData","filters","length","col","op","val","value","isCurrentValueSelected","handleClick","_getCrossFilterDataMa","pointerEvent","event","preventDefault","handleContextMenu","_mapData$key3","_mapData$key4","drillToDetailFilters","drillByFilters","formattedVal","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName","fills","defaultFill","colors","grayscale","light2","geographyConfig","popupOnHover","highlightOnHover","borderWidth","borderColor","light5","highlightBorderColor","highlightFillColor","highlightBorderWidth","popupTemplate","geo","bubblesConfig","borderOpacity","fillOpacity","animate","dark2","highlightBorderOpacity","highlightFillOpacity","exitDelay","JSON","stringify","done","datamap","svg","on","updateChoropleth","bubbles","style","countryFeature","opacity","mediumLight","_mapData$value","displayName","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace,\n} from '@superset-ui/core';\nimport Datamap from 'datamaps/dist/datamaps.world.min';\nimport { ColorBy } from './utils';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country: PropTypes.string,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      name: PropTypes.string,\n      m1: PropTypes.number,\n      m2: PropTypes.number,\n    }),\n  ),\n  height: PropTypes.number,\n  maxBubbleSize: PropTypes.number,\n  showBubbles: PropTypes.bool,\n  linearColorScheme: PropTypes.string,\n  color: PropTypes.string,\n  setDataMask: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  emitCrossFilters: PropTypes.bool,\n  formatter: PropTypes.object,\n};\n\nfunction WorldMap(element, props) {\n  const {\n    countryFieldtype,\n    entity,\n    data,\n    width,\n    height,\n    maxBubbleSize,\n    showBubbles,\n    linearColorScheme,\n    color,\n    colorBy,\n    colorScheme,\n    sliceId,\n    theme,\n    onContextMenu,\n    setDataMask,\n    inContextMenu,\n    filterState,\n    emitCrossFilters,\n    formatter,\n  } = props;\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-world-map', true);\n  div.selectAll('*').remove();\n\n  // Ignore XXX's to get better normalization\n  const filteredData = data.filter(d => d.country && d.country !== 'XXX');\n\n  const extRadius = d3.extent(filteredData, d => Math.sqrt(d.m2));\n  const radiusScale = d3.scale\n    .linear()\n    .domain([extRadius[0], extRadius[1]])\n    .range([1, maxBubbleSize]);\n\n  let processedData;\n  let colorScale;\n  if (colorBy === ColorBy.Country) {\n    colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n    processedData = filteredData.map(d => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.name, sliceId),\n    }));\n  } else {\n    colorScale = getSequentialSchemeRegistry()\n      .get(linearColorScheme)\n      .createLinearScale(d3Extent(filteredData, d => d.m1));\n\n    processedData = filteredData.map(d => ({\n      ...d,\n      radius: radiusScale(Math.sqrt(d.m2)),\n      fillColor: colorScale(d.m1),\n    }));\n  }\n\n  const mapData = {};\n  processedData.forEach(d => {\n    mapData[d.country] = d;\n  });\n\n  const getCrossFilterDataMask = source => {\n    const selected = Object.values(filterState.selectedValues || {});\n    const key = source.id || source.country;\n    const country =\n      countryFieldtype === 'name' ? mapData[key]?.name : mapData[key]?.country;\n\n    if (!country) {\n      return undefined;\n    }\n\n    let values;\n    if (selected.includes(key)) {\n      values = [];\n    } else {\n      values = [country];\n    }\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length\n            ? [\n                {\n                  col: entity,\n                  op: 'IN',\n                  val: values,\n                },\n              ]\n            : [],\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? [key] : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(key),\n    };\n  };\n\n  const handleClick = source => {\n    if (!emitCrossFilters) {\n      return;\n    }\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    getCrossFilterDataMask(source);\n\n    const dataMask = getCrossFilterDataMask(source)?.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\n  const handleContextMenu = source => {\n    const pointerEvent = d3.event;\n    pointerEvent.preventDefault();\n    const key = source.id || source.country;\n    const val =\n      countryFieldtype === 'name' ? mapData[key]?.name : mapData[key]?.country;\n    let drillToDetailFilters;\n    let drillByFilters;\n    if (val) {\n      drillToDetailFilters = [\n        {\n          col: entity,\n          op: '==',\n          val,\n          formattedVal: val,\n        },\n      ];\n      drillByFilters = [\n        {\n          col: entity,\n          op: '==',\n          val,\n        },\n      ];\n    }\n    onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: getCrossFilterDataMask(source),\n      drillBy: { filters: drillByFilters, groupbyFieldName: 'entity' },\n    });\n  };\n\n  const map = new Datamap({\n    element,\n    width,\n    height,\n    data: processedData,\n    fills: {\n      defaultFill: theme.colors.grayscale.light2,\n    },\n    geographyConfig: {\n      popupOnHover: !inContextMenu,\n      highlightOnHover: !inContextMenu,\n      borderWidth: 1,\n      borderColor: theme.colors.grayscale.light5,\n      highlightBorderColor: theme.colors.grayscale.light5,\n      highlightFillColor: color,\n      highlightBorderWidth: 1,\n      popupTemplate: (geo, d) =>\n        `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n          d.m1,\n        )}</div>`,\n    },\n    bubblesConfig: {\n      borderWidth: 1,\n      borderOpacity: 1,\n      borderColor: color,\n      popupOnHover: !inContextMenu,\n      radius: null,\n      popupTemplate: (geo, d) =>\n        `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n          d.m2,\n        )}</div>`,\n      fillOpacity: 0.5,\n      animate: true,\n      highlightOnHover: !inContextMenu,\n      highlightFillColor: color,\n      highlightBorderColor: theme.colors.grayscale.dark2,\n      highlightBorderWidth: 2,\n      highlightBorderOpacity: 1,\n      highlightFillOpacity: 0.85,\n      exitDelay: 100,\n      key: JSON.stringify,\n    },\n    done: datamap => {\n      datamap.svg\n        .selectAll('.datamaps-subunit')\n        .on('contextmenu', handleContextMenu)\n        .on('click', handleClick);\n    },\n  });\n\n  map.updateChoropleth(mapData);\n\n  if (showBubbles) {\n    map.bubbles(processedData);\n    div\n      .selectAll('circle.datamaps-bubble')\n      .style('fill', color)\n      .style('stroke', color)\n      .on('contextmenu', handleContextMenu)\n      .on('click', handleClick);\n  }\n\n  if (filterState.selectedValues?.length > 0) {\n    d3.selectAll('path.datamaps-subunit')\n      .filter(\n        countryFeature =>\n          !filterState.selectedValues.includes(countryFeature.id),\n      )\n      .style('fill-opacity', theme.opacity.mediumLight);\n\n    // hack to ensure that the clicked country's color is preserved\n    // sometimes the fill color would get default grey value after applying cross filter\n    filterState.selectedValues.forEach(value => {\n      d3.select(`path.datamaps-subunit.${value}`).style(\n        'fill',\n        mapData[value]?.fillColor,\n      );\n    });\n  }\n}\n\nWorldMap.displayName = 'WorldMap';\nWorldMap.propTypes = propTypes;\n\nexport default WorldMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}