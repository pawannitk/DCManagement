{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useChartOwnerNames } from 'src/hooks/apiResources';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\n/**\n * fetches the chart owners and adds them to the extra data of the error message\n */import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const ChartErrorMessage = ({ chartId, error, ...props }) => {\n  const { result: owners } = useChartOwnerNames(chartId);\n  // don't mutate props\n  const ownedError = error && {\n    ...error,\n    extra: { ...error.extra, owners }\n  };\n  return ___EmotionJSX(ErrorMessageWithStackTrace, _extends({}, props, { error: ownedError }));\n};__signature__(ChartErrorMessage, \"useChartOwnerNames{{ result: owners }}\", () => [useChartOwnerNames]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ChartErrorMessage, \"ChartErrorMessage\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/ChartErrorMessage.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useChartOwnerNames","ErrorMessageWithStackTrace","jsx","___EmotionJSX","ChartErrorMessage","chartId","error","props","result","owners","ownedError","extra","_extends","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/ChartErrorMessage.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { SupersetError } from '@superset-ui/core';\nimport { useChartOwnerNames } from 'src/hooks/apiResources';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\n\ninterface Props {\n  chartId: string;\n  error?: SupersetError;\n}\n\n/**\n * fetches the chart owners and adds them to the extra data of the error message\n */\nexport const ChartErrorMessage: React.FC<Props> = ({\n  chartId,\n  error,\n  ...props\n}) => {\n  const { result: owners } = useChartOwnerNames(chartId);\n\n  // don't mutate props\n  const ownedError = error && {\n    ...error,\n    extra: { ...error.extra, owners },\n  };\n\n  return <ErrorMessageWithStackTrace {...props} error={ownedError} />;\n};\n"],"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,OAAOC,0BAA0B,MAAM,wDAAwD;AAO/F;;GAAA,SAAAC,GAAA,IAAAC,aAAA;AAGA,OAAO,MAAMC,iBAAiB,GAAoBA,CAAC,EACjDC,OAAO,EACPC,KAAK,EACL,GAAGC,KAAK,EACT,KAAI;EACH,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,GAAGT,kBAAkB,CAACK,OAAO,CAAC;EAEtD;EACA,MAAMK,UAAU,GAAGJ,KAAK,IAAI;IAC1B,GAAGA,KAAK;IACRK,KAAK,EAAE,EAAE,GAAGL,KAAK,CAACK,KAAK,EAAEF,MAAM;GAChC;EAED,OAAON,aAAA,CAACF,0BAA0B,EAAAW,QAAA,KAAKL,KAAK,IAAED,KAAK,EAAEI,UAAW,IAAG;AACrE,CAAC,CAACG,aAAA,CAdWT,iBAAiB,mDAKDJ,kBAAkB,sBAAAc,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CALlCd,iBAAiB,oJAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}