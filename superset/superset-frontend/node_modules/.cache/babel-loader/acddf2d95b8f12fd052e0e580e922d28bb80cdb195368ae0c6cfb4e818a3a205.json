{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, isFeatureEnabled, FeatureFlag, makeApi, SupersetClient, logging, getClientErrorObject, parseErrorJson } from '@superset-ui/core';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nconst TRANSPORT_POLLING = 'polling';\nconst TRANSPORT_WS = 'ws';\nconst JOB_STATUS = {\n  PENDING: 'pending',\n  RUNNING: 'running',\n  ERROR: 'error',\n  DONE: 'done'\n};\nconst LOCALSTORAGE_KEY = 'last_async_event_id';\nconst POLLING_URL = '/api/v1/async_event/';\nconst MAX_RETRIES = 6;\nconst RETRY_DELAY = 100;\nlet config;\nlet transport;\nlet pollingDelayMs;\nlet pollingTimeoutId;\nlet listenersByJobId;\nlet retriesByJobId;\nlet lastReceivedEventId;\nconst addListener = (id, fn) => {\n  listenersByJobId[id] = fn;\n};\nconst removeListener = (id) => {\n  if (!listenersByJobId[id])\n  return;\n  delete listenersByJobId[id];\n};\nconst fetchCachedData = async (asyncEvent) => {\n  let status = 'success';\n  let data;\n  try {\n    const { json } = await SupersetClient.get({\n      endpoint: String(asyncEvent.result_url)\n    });\n    data = 'result' in json ? json.result : json;\n  }\n  catch (response) {\n    status = 'error';\n    data = await getClientErrorObject(response);\n  }\n  return { status, data };\n};\nexport const waitForAsyncData = async (asyncResponse) => new Promise((resolve, reject) => {\n  const jobId = asyncResponse.job_id;\n  const listener = async (asyncEvent) => {\n    switch (asyncEvent.status) {\n      case JOB_STATUS.DONE:{\n          let { data, status } = await fetchCachedData(asyncEvent); // eslint-disable-line prefer-const\n          data = ensureIsArray(data);\n          if (status === 'success') {\n            resolve(data);\n          } else\n          {\n            reject(data);\n          }\n          break;\n        }\n      case JOB_STATUS.ERROR:{\n          const err = parseErrorJson(asyncEvent);\n          reject(err);\n          break;\n        }\n      default:{\n          logging.warn('received event with status', asyncEvent.status);\n        }\n    }\n    removeListener(jobId);\n  };\n  addListener(jobId, listener);\n});\nconst fetchEvents = makeApi({\n  method: 'GET',\n  endpoint: POLLING_URL\n});\nconst setLastId = (asyncEvent) => {\n  lastReceivedEventId = asyncEvent.id;\n  try {\n    localStorage.setItem(LOCALSTORAGE_KEY, lastReceivedEventId);\n  }\n  catch (err) {\n    logging.warn('Error saving event Id to localStorage', err);\n  }\n};\nexport const processEvents = async (events) => {\n  events.forEach((asyncEvent) => {\n    const jobId = asyncEvent.job_id;\n    const listener = listenersByJobId[jobId];\n    if (listener) {\n      listener(asyncEvent);\n      delete retriesByJobId[jobId];\n    } else\n    {\n      // handle race condition where event is received\n      // before listener is registered\n      if (!retriesByJobId[jobId])\n      retriesByJobId[jobId] = 0;\n      retriesByJobId[jobId] += 1;\n      if (retriesByJobId[jobId] <= MAX_RETRIES) {\n        setTimeout(() => {\n          processEvents([asyncEvent]);\n        }, RETRY_DELAY * retriesByJobId[jobId]);\n      } else\n      {\n        delete retriesByJobId[jobId];\n        logging.warn('listener not found for job_id', asyncEvent.job_id);\n      }\n    }\n    setLastId(asyncEvent);\n  });\n};\nconst loadEventsFromApi = async () => {\n  const eventArgs = lastReceivedEventId ? { last_id: lastReceivedEventId } : {};\n  if (Object.keys(listenersByJobId).length) {\n    try {\n      const { result: events } = await fetchEvents(eventArgs);\n      if (events != null && events.length)\n      await processEvents(events);\n    }\n    catch (err) {\n      logging.warn(err);\n    }\n  }\n  if (transport === TRANSPORT_POLLING) {\n    pollingTimeoutId = window.setTimeout(loadEventsFromApi, pollingDelayMs);\n  }\n};\nconst wsConnectMaxRetries = 6;\nconst wsConnectErrorDelay = 2500;\nlet wsConnectRetries = 0;\nlet wsConnectTimeout;\nlet ws;\nconst wsConnect = () => {\n  let url = config.GLOBAL_ASYNC_QUERIES_WEBSOCKET_URL;\n  if (lastReceivedEventId)\n  url += `?last_id=${lastReceivedEventId}`;\n  ws = new WebSocket(url);\n  ws.addEventListener('open', () => {\n    logging.log('WebSocket connected');\n    clearTimeout(wsConnectTimeout);\n    wsConnectRetries = 0;\n  });\n  ws.addEventListener('close', () => {\n    wsConnectTimeout = setTimeout(() => {\n      wsConnectRetries += 1;\n      if (wsConnectRetries <= wsConnectMaxRetries) {\n        wsConnect();\n      } else\n      {\n        logging.warn('WebSocket not available, falling back to async polling');\n        loadEventsFromApi();\n      }\n    }, wsConnectErrorDelay);\n  });\n  ws.addEventListener('error', () => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/readyState\n    if (ws.readyState < 2)\n    ws.close();\n  });\n  ws.addEventListener('message', async (event) => {\n    let events = [];\n    try {\n      events = [JSON.parse(event.data)];\n      await processEvents(events);\n    }\n    catch (err) {\n      logging.warn(err);\n    }\n  });\n};\nexport const init = (appConfig) => {\n  if (!isFeatureEnabled(FeatureFlag.GlobalAsyncQueries))\n  return;\n  if (pollingTimeoutId)\n  clearTimeout(pollingTimeoutId);\n  listenersByJobId = {};\n  retriesByJobId = {};\n  lastReceivedEventId = null;\n  config = appConfig || getBootstrapData().common.conf;\n  transport = config.GLOBAL_ASYNC_QUERIES_TRANSPORT || TRANSPORT_POLLING;\n  pollingDelayMs = config.GLOBAL_ASYNC_QUERIES_POLLING_DELAY || 500;\n  try {\n    lastReceivedEventId = localStorage.getItem(LOCALSTORAGE_KEY);\n  }\n  catch (err) {\n    logging.warn('Failed to fetch last event Id from localStorage');\n  }\n  if (transport === TRANSPORT_POLLING) {\n    loadEventsFromApi();\n  }\n  if (transport === TRANSPORT_WS) {\n    wsConnect();\n  }\n};\ninit();;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TRANSPORT_POLLING, \"TRANSPORT_POLLING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(TRANSPORT_WS, \"TRANSPORT_WS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(JOB_STATUS, \"JOB_STATUS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(LOCALSTORAGE_KEY, \"LOCALSTORAGE_KEY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(POLLING_URL, \"POLLING_URL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(MAX_RETRIES, \"MAX_RETRIES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(RETRY_DELAY, \"RETRY_DELAY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(transport, \"transport\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(pollingDelayMs, \"pollingDelayMs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(pollingTimeoutId, \"pollingTimeoutId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(listenersByJobId, \"listenersByJobId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(retriesByJobId, \"retriesByJobId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(lastReceivedEventId, \"lastReceivedEventId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(addListener, \"addListener\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(removeListener, \"removeListener\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(fetchCachedData, \"fetchCachedData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(waitForAsyncData, \"waitForAsyncData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(fetchEvents, \"fetchEvents\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(setLastId, \"setLastId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(processEvents, \"processEvents\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(loadEventsFromApi, \"loadEventsFromApi\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(wsConnectMaxRetries, \"wsConnectMaxRetries\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(wsConnectErrorDelay, \"wsConnectErrorDelay\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(wsConnectRetries, \"wsConnectRetries\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(wsConnectTimeout, \"wsConnectTimeout\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(ws, \"ws\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(wsConnect, \"wsConnect\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");reactHotLoader.register(init, \"init\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","isFeatureEnabled","FeatureFlag","makeApi","SupersetClient","logging","getClientErrorObject","parseErrorJson","getBootstrapData","TRANSPORT_POLLING","TRANSPORT_WS","JOB_STATUS","PENDING","RUNNING","ERROR","DONE","LOCALSTORAGE_KEY","POLLING_URL","MAX_RETRIES","RETRY_DELAY","config","transport","pollingDelayMs","pollingTimeoutId","listenersByJobId","retriesByJobId","lastReceivedEventId","addListener","id","fn","removeListener","fetchCachedData","asyncEvent","status","data","json","get","endpoint","String","result_url","result","response","waitForAsyncData","asyncResponse","Promise","resolve","reject","jobId","job_id","listener","err","warn","fetchEvents","method","setLastId","localStorage","setItem","processEvents","events","forEach","setTimeout","loadEventsFromApi","eventArgs","last_id","Object","keys","length","window","wsConnectMaxRetries","wsConnectErrorDelay","wsConnectRetries","wsConnectTimeout","ws","wsConnect","url","GLOBAL_ASYNC_QUERIES_WEBSOCKET_URL","WebSocket","addEventListener","log","clearTimeout","readyState","close","event","JSON","parse","init","appConfig","GlobalAsyncQueries","common","conf","GLOBAL_ASYNC_QUERIES_TRANSPORT","GLOBAL_ASYNC_QUERIES_POLLING_DELAY","getItem","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/middleware/asyncEvent.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  makeApi,\n  SupersetClient,\n  logging,\n  getClientErrorObject,\n  parseErrorJson,\n  SupersetError,\n} from '@superset-ui/core';\nimport getBootstrapData from 'src/utils/getBootstrapData';\n\ntype AsyncEvent = {\n  id?: string | null;\n  channel_id: string;\n  job_id: string;\n  user_id?: string;\n  status: string;\n  errors?: SupersetError[];\n  result_url: string | null;\n};\n\ntype CachedDataResponse = {\n  status: string;\n  data: any;\n};\ntype AppConfig = Record<string, any>;\ntype ListenerFn = (asyncEvent: AsyncEvent) => Promise<any>;\n\nconst TRANSPORT_POLLING = 'polling';\nconst TRANSPORT_WS = 'ws';\nconst JOB_STATUS = {\n  PENDING: 'pending',\n  RUNNING: 'running',\n  ERROR: 'error',\n  DONE: 'done',\n};\nconst LOCALSTORAGE_KEY = 'last_async_event_id';\nconst POLLING_URL = '/api/v1/async_event/';\nconst MAX_RETRIES = 6;\nconst RETRY_DELAY = 100;\n\nlet config: AppConfig;\nlet transport: string;\nlet pollingDelayMs: number;\nlet pollingTimeoutId: number;\nlet listenersByJobId: Record<string, ListenerFn>;\nlet retriesByJobId: Record<string, number>;\nlet lastReceivedEventId: string | null | undefined;\n\nconst addListener = (id: string, fn: any) => {\n  listenersByJobId[id] = fn;\n};\n\nconst removeListener = (id: string) => {\n  if (!listenersByJobId[id]) return;\n  delete listenersByJobId[id];\n};\n\nconst fetchCachedData = async (\n  asyncEvent: AsyncEvent,\n): Promise<CachedDataResponse> => {\n  let status = 'success';\n  let data;\n  try {\n    const { json } = await SupersetClient.get({\n      endpoint: String(asyncEvent.result_url),\n    });\n    data = 'result' in json ? json.result : json;\n  } catch (response) {\n    status = 'error';\n    data = await getClientErrorObject(response);\n  }\n\n  return { status, data };\n};\n\nexport const waitForAsyncData = async (asyncResponse: AsyncEvent) =>\n  new Promise((resolve, reject) => {\n    const jobId = asyncResponse.job_id;\n    const listener = async (asyncEvent: AsyncEvent) => {\n      switch (asyncEvent.status) {\n        case JOB_STATUS.DONE: {\n          let { data, status } = await fetchCachedData(asyncEvent); // eslint-disable-line prefer-const\n          data = ensureIsArray(data);\n          if (status === 'success') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n          break;\n        }\n        case JOB_STATUS.ERROR: {\n          const err = parseErrorJson(asyncEvent);\n          reject(err);\n          break;\n        }\n        default: {\n          logging.warn('received event with status', asyncEvent.status);\n        }\n      }\n      removeListener(jobId);\n    };\n    addListener(jobId, listener);\n  });\n\nconst fetchEvents = makeApi<\n  { last_id?: string | null },\n  { result: AsyncEvent[] }\n>({\n  method: 'GET',\n  endpoint: POLLING_URL,\n});\n\nconst setLastId = (asyncEvent: AsyncEvent) => {\n  lastReceivedEventId = asyncEvent.id;\n  try {\n    localStorage.setItem(LOCALSTORAGE_KEY, lastReceivedEventId as string);\n  } catch (err) {\n    logging.warn('Error saving event Id to localStorage', err);\n  }\n};\n\nexport const processEvents = async (events: AsyncEvent[]) => {\n  events.forEach((asyncEvent: AsyncEvent) => {\n    const jobId = asyncEvent.job_id;\n    const listener = listenersByJobId[jobId];\n    if (listener) {\n      listener(asyncEvent);\n      delete retriesByJobId[jobId];\n    } else {\n      // handle race condition where event is received\n      // before listener is registered\n      if (!retriesByJobId[jobId]) retriesByJobId[jobId] = 0;\n      retriesByJobId[jobId] += 1;\n\n      if (retriesByJobId[jobId] <= MAX_RETRIES) {\n        setTimeout(() => {\n          processEvents([asyncEvent]);\n        }, RETRY_DELAY * retriesByJobId[jobId]);\n      } else {\n        delete retriesByJobId[jobId];\n        logging.warn('listener not found for job_id', asyncEvent.job_id);\n      }\n    }\n    setLastId(asyncEvent);\n  });\n};\n\nconst loadEventsFromApi = async () => {\n  const eventArgs = lastReceivedEventId ? { last_id: lastReceivedEventId } : {};\n  if (Object.keys(listenersByJobId).length) {\n    try {\n      const { result: events } = await fetchEvents(eventArgs);\n      if (events?.length) await processEvents(events);\n    } catch (err) {\n      logging.warn(err);\n    }\n  }\n\n  if (transport === TRANSPORT_POLLING) {\n    pollingTimeoutId = window.setTimeout(loadEventsFromApi, pollingDelayMs);\n  }\n};\n\nconst wsConnectMaxRetries = 6;\nconst wsConnectErrorDelay = 2500;\nlet wsConnectRetries = 0;\nlet wsConnectTimeout: any;\nlet ws: WebSocket;\n\nconst wsConnect = (): void => {\n  let url = config.GLOBAL_ASYNC_QUERIES_WEBSOCKET_URL;\n  if (lastReceivedEventId) url += `?last_id=${lastReceivedEventId}`;\n  ws = new WebSocket(url);\n\n  ws.addEventListener('open', () => {\n    logging.log('WebSocket connected');\n    clearTimeout(wsConnectTimeout);\n    wsConnectRetries = 0;\n  });\n\n  ws.addEventListener('close', () => {\n    wsConnectTimeout = setTimeout(() => {\n      wsConnectRetries += 1;\n      if (wsConnectRetries <= wsConnectMaxRetries) {\n        wsConnect();\n      } else {\n        logging.warn('WebSocket not available, falling back to async polling');\n        loadEventsFromApi();\n      }\n    }, wsConnectErrorDelay);\n  });\n\n  ws.addEventListener('error', () => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/readyState\n    if (ws.readyState < 2) ws.close();\n  });\n\n  ws.addEventListener('message', async event => {\n    let events: AsyncEvent[] = [];\n    try {\n      events = [JSON.parse(event.data)];\n      await processEvents(events);\n    } catch (err) {\n      logging.warn(err);\n    }\n  });\n};\n\nexport const init = (appConfig?: AppConfig) => {\n  if (!isFeatureEnabled(FeatureFlag.GlobalAsyncQueries)) return;\n  if (pollingTimeoutId) clearTimeout(pollingTimeoutId);\n\n  listenersByJobId = {};\n  retriesByJobId = {};\n  lastReceivedEventId = null;\n\n  config = appConfig || getBootstrapData().common.conf;\n  transport = config.GLOBAL_ASYNC_QUERIES_TRANSPORT || TRANSPORT_POLLING;\n  pollingDelayMs = config.GLOBAL_ASYNC_QUERIES_POLLING_DELAY || 500;\n\n  try {\n    lastReceivedEventId = localStorage.getItem(LOCALSTORAGE_KEY);\n  } catch (err) {\n    logging.warn('Failed to fetch last event Id from localStorage');\n  }\n\n  if (transport === TRANSPORT_POLLING) {\n    loadEventsFromApi();\n  }\n  if (transport === TRANSPORT_WS) {\n    wsConnect();\n  }\n};\n\ninit();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}