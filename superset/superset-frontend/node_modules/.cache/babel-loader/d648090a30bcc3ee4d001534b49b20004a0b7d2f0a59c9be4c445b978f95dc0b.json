{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { legacyValidateInteger, legacyValidateNumber, t } from '@superset-ui/core';\nimport { displayTimeRelatedControls } from '../utils';\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null\n};\nexport const forecastIntervalControls = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  visibility: displayTimeRelatedControls,\n  controlSetRows: [\n  [\n  {\n    name: 'forecastEnabled',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Enable forecast'),\n      renderTrigger: false,\n      default: FORECAST_DEFAULT_DATA.forecastEnabled,\n      description: t('Enable forecasting')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastPeriods',\n    config: {\n      type: 'TextControl',\n      label: t('Forecast periods'),\n      validators: [legacyValidateInteger],\n      default: FORECAST_DEFAULT_DATA.forecastPeriods,\n      description: t('How many periods into the future do we want to predict')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastInterval',\n    config: {\n      type: 'TextControl',\n      label: t('Confidence interval'),\n      validators: [legacyValidateNumber],\n      default: FORECAST_DEFAULT_DATA.forecastInterval,\n      description: t('Width of the confidence interval. Should be between 0 and 1')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityYearly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Yearly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n      description: t('Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityWeekly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Weekly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n      description: t('Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityDaily',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Daily seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n      description: t('Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }]]\n\n\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FORECAST_DEFAULT_DATA, \"FORECAST_DEFAULT_DATA\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx\");reactHotLoader.register(forecastIntervalControls, \"forecastIntervalControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["legacyValidateInteger","legacyValidateNumber","t","displayTimeRelatedControls","FORECAST_DEFAULT_DATA","forecastEnabled","forecastInterval","forecastPeriods","forecastSeasonalityDaily","forecastSeasonalityWeekly","forecastSeasonalityYearly","forecastIntervalControls","label","expanded","visibility","controlSetRows","name","config","type","renderTrigger","default","description","validators","freeForm","choices","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  legacyValidateInteger,\n  legacyValidateNumber,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\nimport { displayTimeRelatedControls } from '../utils';\n\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null,\n};\n\nexport const forecastIntervalControls: ControlPanelSectionConfig = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  visibility: displayTimeRelatedControls,\n  controlSetRows: [\n    [\n      {\n        name: 'forecastEnabled',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable forecast'),\n          renderTrigger: false,\n          default: FORECAST_DEFAULT_DATA.forecastEnabled,\n          description: t('Enable forecasting'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastPeriods',\n        config: {\n          type: 'TextControl',\n          label: t('Forecast periods'),\n          validators: [legacyValidateInteger],\n          default: FORECAST_DEFAULT_DATA.forecastPeriods,\n          description: t(\n            'How many periods into the future do we want to predict',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastInterval',\n        config: {\n          type: 'TextControl',\n          label: t('Confidence interval'),\n          validators: [legacyValidateNumber],\n          default: FORECAST_DEFAULT_DATA.forecastInterval,\n          description: t(\n            'Width of the confidence interval. Should be between 0 and 1',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityYearly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Yearly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n          description: t(\n            'Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityWeekly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Weekly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n          description: t(\n            'Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityDaily',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Daily seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n          description: t(\n            'Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n  ],\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}