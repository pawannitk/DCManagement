{"ast":null,"code":"import _isEqual from \"lodash/isEqual\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport { ensureIsArray, EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS, EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS, isDefined, isFreeFormAdhocFilter, isSimpleAdhocFilter, NO_TIME_RANGE } from '@superset-ui/core';\nimport { simpleFilterToAdhoc } from 'src/utils/simpleFilterToAdhoc';\nconst removeExtraFieldForNewCharts = (filters, isNewChart) => filters.map((filter) => {\n  if (filter.isExtra) {\n    return { ...filter, isExtra: !isNewChart };\n  }\n  return filter;\n});\nconst removeAdhocFilterDuplicates = (filters) => {\n  const isDuplicate = (adhocFilter, existingFilters) => existingFilters.some((existingFilter) => isFreeFormAdhocFilter(existingFilter) &&\n  isFreeFormAdhocFilter(adhocFilter) &&\n  existingFilter.clause === adhocFilter.clause &&\n  existingFilter.sqlExpression === adhocFilter.sqlExpression ||\n  isSimpleAdhocFilter(existingFilter) &&\n  isSimpleAdhocFilter(adhocFilter) &&\n  existingFilter.operator === adhocFilter.operator &&\n  existingFilter.subject === adhocFilter.subject && (\n  !('comparator' in existingFilter) &&\n  !('comparator' in adhocFilter) ||\n  'comparator' in existingFilter &&\n  'comparator' in adhocFilter &&\n  _isEqual(existingFilter.comparator, adhocFilter.comparator)));\n  return filters.reduce((acc, filter) => {\n    if (!isDuplicate(filter, acc)) {\n      acc.push(filter);\n    }\n    return acc;\n  }, []);\n};\nconst mergeFilterBoxToFormData = (exploreFormData, dashboardFormData) => {\n  const dateColumns = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity'\n  };\n  const appliedTimeExtras = {};\n  const filterBoxData = {};\n  ensureIsArray(dashboardFormData.extra_filters).forEach((filter) => {\n    if (dateColumns[filter.col]) {\n      if (filter.val !== NO_TIME_RANGE) {\n        filterBoxData[dateColumns[filter.col]] = filter.val;\n        appliedTimeExtras[filter.col] = filter.val;\n      }\n    } else\n    {\n      const adhocFilter = simpleFilterToAdhoc({\n        ...filter,\n        isExtra: true\n      });\n      filterBoxData.adhoc_filters = [\n      ...ensureIsArray(filterBoxData.adhoc_filters),\n      adhocFilter];\n\n    }\n  });\n  filterBoxData.applied_time_extras = appliedTimeExtras;\n  return filterBoxData;\n};\nconst mergeNativeFiltersToFormData = (exploreFormData, dashboardFormData) => {\n  const nativeFiltersData = {};\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  Object.entries(EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS).forEach(([srcKey, targetKey]) => {\n    const val = extraFormData[srcKey];\n    if (isDefined(val)) {\n      nativeFiltersData[targetKey] = val;\n    }\n  });\n  if ('time_grain_sqla' in extraFormData) {\n    nativeFiltersData.time_grain_sqla = extraFormData.time_grain_sqla;\n  }\n  if ('granularity_sqla' in extraFormData) {\n    nativeFiltersData.granularity_sqla = extraFormData.granularity_sqla;\n  }\n  const extras = dashboardFormData.extras || {};\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS.forEach((key) => {\n    const val = extraFormData[key];\n    if (isDefined(val)) {\n      extras[key] = val;\n    }\n  });\n  if (Object.keys(extras).length) {\n    nativeFiltersData.extras = extras;\n  }\n  nativeFiltersData.adhoc_filters = ensureIsArray(extraFormData.adhoc_filters).map((filter) => ({\n    ...filter,\n    isExtra: true\n  }));\n  const appendFilters = ensureIsArray(extraFormData.filters).map((extraFilter) => simpleFilterToAdhoc({ ...extraFilter, isExtra: true }));\n  Object.keys(exploreFormData).forEach((key) => {\n    if (key.match(/adhoc_filter.*/)) {\n      nativeFiltersData[key] = [\n      ...ensureIsArray(nativeFiltersData[key]),\n      ...appendFilters];\n\n    }\n  });\n  return nativeFiltersData;\n};\nconst applyTimeRangeFilters = (dashboardFormData, adhocFilters) => {\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  if ('time_range' in extraFormData) {\n    return adhocFilters.map((filter) => {\n      if (filter.operator === 'TEMPORAL_RANGE') {\n        return {\n          ...filter,\n          comparator: extraFormData.time_range,\n          isExtra: true\n        };\n      }\n      return filter;\n    });\n  }\n  return adhocFilters;\n};\nexport const getFormDataWithDashboardContext = (exploreFormData, dashboardContextFormData) => {\n  const filterBoxData = mergeFilterBoxToFormData(exploreFormData, dashboardContextFormData);\n  const nativeFiltersData = mergeNativeFiltersToFormData(exploreFormData, dashboardContextFormData);\n  const adhocFilters = [\n  ...Object.keys(exploreFormData),\n  ...Object.keys(filterBoxData),\n  ...Object.keys(nativeFiltersData)].\n\n  filter((key) => key.match(/adhoc_filter.*/)).\n  reduce((acc, key) => ({\n    ...acc,\n    [key]: removeExtraFieldForNewCharts(applyTimeRangeFilters(dashboardContextFormData, removeAdhocFilterDuplicates([\n    ...ensureIsArray(exploreFormData[key]),\n    ...ensureIsArray(filterBoxData[key]),\n    ...ensureIsArray(nativeFiltersData[key])]\n    )), exploreFormData.slice_id === 0)\n  }), {});\n  return {\n    ...exploreFormData,\n    ...dashboardContextFormData,\n    ...filterBoxData,\n    ...nativeFiltersData,\n    ...adhocFilters\n  };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(removeExtraFieldForNewCharts, \"removeExtraFieldForNewCharts\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");reactHotLoader.register(removeAdhocFilterDuplicates, \"removeAdhocFilterDuplicates\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");reactHotLoader.register(mergeFilterBoxToFormData, \"mergeFilterBoxToFormData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");reactHotLoader.register(mergeNativeFiltersToFormData, \"mergeNativeFiltersToFormData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");reactHotLoader.register(applyTimeRangeFilters, \"applyTimeRangeFilters\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");reactHotLoader.register(getFormDataWithDashboardContext, \"getFormDataWithDashboardContext\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","ensureIsArray","EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS","EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS","isDefined","isFreeFormAdhocFilter","isSimpleAdhocFilter","NO_TIME_RANGE","simpleFilterToAdhoc","removeExtraFieldForNewCharts","filters","isNewChart","map","filter","isExtra","removeAdhocFilterDuplicates","isDuplicate","adhocFilter","existingFilters","some","existingFilter","clause","sqlExpression","operator","subject","_isEqual","comparator","reduce","acc","push","mergeFilterBoxToFormData","exploreFormData","dashboardFormData","dateColumns","__time_range","__time_col","__time_grain","__granularity","appliedTimeExtras","filterBoxData","extra_filters","forEach","col","val","adhoc_filters","applied_time_extras","mergeNativeFiltersToFormData","nativeFiltersData","extraFormData","extra_form_data","Object","entries","srcKey","targetKey","time_grain_sqla","granularity_sqla","extras","key","keys","length","appendFilters","extraFilter","match","applyTimeRangeFilters","adhocFilters","time_range","getFormDataWithDashboardContext","dashboardContextFormData","slice_id","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/controlUtils/getFormDataWithDashboardContext.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqual } from 'lodash';\nimport {\n  AdhocFilter,\n  ensureIsArray,\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS,\n  isDefined,\n  isFreeFormAdhocFilter,\n  isSimpleAdhocFilter,\n  JsonObject,\n  NO_TIME_RANGE,\n  QueryFormData,\n  QueryObjectFilterClause,\n  SimpleAdhocFilter,\n} from '@superset-ui/core';\nimport { simpleFilterToAdhoc } from 'src/utils/simpleFilterToAdhoc';\n\nconst removeExtraFieldForNewCharts = (\n  filters: AdhocFilter[],\n  isNewChart: boolean,\n) =>\n  filters.map(filter => {\n    if (filter.isExtra) {\n      return { ...filter, isExtra: !isNewChart };\n    }\n    return filter;\n  });\n\nconst removeAdhocFilterDuplicates = (filters: AdhocFilter[]) => {\n  const isDuplicate = (\n    adhocFilter: AdhocFilter,\n    existingFilters: AdhocFilter[],\n  ) =>\n    existingFilters.some(\n      (existingFilter: AdhocFilter) =>\n        (isFreeFormAdhocFilter(existingFilter) &&\n          isFreeFormAdhocFilter(adhocFilter) &&\n          existingFilter.clause === adhocFilter.clause &&\n          existingFilter.sqlExpression === adhocFilter.sqlExpression) ||\n        (isSimpleAdhocFilter(existingFilter) &&\n          isSimpleAdhocFilter(adhocFilter) &&\n          existingFilter.operator === adhocFilter.operator &&\n          existingFilter.subject === adhocFilter.subject &&\n          ((!('comparator' in existingFilter) &&\n            !('comparator' in adhocFilter)) ||\n            ('comparator' in existingFilter &&\n              'comparator' in adhocFilter &&\n              isEqual(existingFilter.comparator, adhocFilter.comparator)))),\n    );\n\n  return filters.reduce((acc, filter) => {\n    if (!isDuplicate(filter, acc)) {\n      acc.push(filter);\n    }\n    return acc;\n  }, [] as AdhocFilter[]);\n};\n\nconst mergeFilterBoxToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const dateColumns = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n  const appliedTimeExtras = {};\n\n  const filterBoxData: JsonObject = {};\n  ensureIsArray(dashboardFormData.extra_filters).forEach(filter => {\n    if (dateColumns[filter.col]) {\n      if (filter.val !== NO_TIME_RANGE) {\n        filterBoxData[dateColumns[filter.col]] = filter.val;\n        appliedTimeExtras[filter.col] = filter.val;\n      }\n    } else {\n      const adhocFilter = simpleFilterToAdhoc({\n        ...(filter as QueryObjectFilterClause),\n        isExtra: true,\n      });\n      filterBoxData.adhoc_filters = [\n        ...ensureIsArray(filterBoxData.adhoc_filters),\n        adhocFilter,\n      ];\n    }\n  });\n  filterBoxData.applied_time_extras = appliedTimeExtras;\n  return filterBoxData;\n};\n\nconst mergeNativeFiltersToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const nativeFiltersData: JsonObject = {};\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  Object.entries(EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS).forEach(\n    ([srcKey, targetKey]) => {\n      const val = extraFormData[srcKey];\n      if (isDefined(val)) {\n        nativeFiltersData[targetKey] = val;\n      }\n    },\n  );\n\n  if ('time_grain_sqla' in extraFormData) {\n    nativeFiltersData.time_grain_sqla = extraFormData.time_grain_sqla;\n  }\n  if ('granularity_sqla' in extraFormData) {\n    nativeFiltersData.granularity_sqla = extraFormData.granularity_sqla;\n  }\n\n  const extras = dashboardFormData.extras || {};\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS.forEach(key => {\n    const val = extraFormData[key];\n    if (isDefined(val)) {\n      extras[key] = val;\n    }\n  });\n  if (Object.keys(extras).length) {\n    nativeFiltersData.extras = extras;\n  }\n\n  nativeFiltersData.adhoc_filters = ensureIsArray(\n    extraFormData.adhoc_filters,\n  ).map(filter => ({\n    ...filter,\n    isExtra: true,\n  }));\n\n  const appendFilters = ensureIsArray(extraFormData.filters).map(extraFilter =>\n    simpleFilterToAdhoc({ ...extraFilter, isExtra: true }),\n  );\n  Object.keys(exploreFormData).forEach(key => {\n    if (key.match(/adhoc_filter.*/)) {\n      nativeFiltersData[key] = [\n        ...ensureIsArray(nativeFiltersData[key]),\n        ...appendFilters,\n      ];\n    }\n  });\n  return nativeFiltersData;\n};\n\nconst applyTimeRangeFilters = (\n  dashboardFormData: JsonObject,\n  adhocFilters: AdhocFilter[],\n) => {\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  if ('time_range' in extraFormData) {\n    return adhocFilters.map((filter: SimpleAdhocFilter) => {\n      if (filter.operator === 'TEMPORAL_RANGE') {\n        return {\n          ...filter,\n          comparator: extraFormData.time_range,\n          isExtra: true,\n        };\n      }\n      return filter;\n    });\n  }\n  return adhocFilters;\n};\n\nexport const getFormDataWithDashboardContext = (\n  exploreFormData: QueryFormData,\n  dashboardContextFormData: JsonObject,\n) => {\n  const filterBoxData = mergeFilterBoxToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const nativeFiltersData = mergeNativeFiltersToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const adhocFilters = [\n    ...Object.keys(exploreFormData),\n    ...Object.keys(filterBoxData),\n    ...Object.keys(nativeFiltersData),\n  ]\n    .filter(key => key.match(/adhoc_filter.*/))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: removeExtraFieldForNewCharts(\n          applyTimeRangeFilters(\n            dashboardContextFormData,\n            removeAdhocFilterDuplicates([\n              ...ensureIsArray(exploreFormData[key]),\n              ...ensureIsArray(filterBoxData[key]),\n              ...ensureIsArray(nativeFiltersData[key]),\n            ]),\n          ),\n          exploreFormData.slice_id === 0,\n        ),\n      }),\n      {},\n    );\n\n  return {\n    ...exploreFormData,\n    ...dashboardContextFormData,\n    ...filterBoxData,\n    ...nativeFiltersData,\n    ...adhocFilters,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}