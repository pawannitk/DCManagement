{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  CUSTOM_OPERATORS,\n  Operators,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE } from\n'src/explore/constants';\nimport { translateToSql } from '../utils/translateToSQL';\nimport { Clauses, ExpressionTypes } from '../types';\n\nconst CUSTOM_OPERATIONS = [...CUSTOM_OPERATORS].map(\n  (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation\n);\n\nexport default class AdhocFilter {\n  constructor(adhocFilter) {\n    this.expressionType = adhocFilter.expressionType || ExpressionTypes.Simple;\n    if (this.expressionType === ExpressionTypes.Simple) {var _adhocFilter$operator;\n      this.subject = adhocFilter.subject;\n      this.operator = (_adhocFilter$operator = adhocFilter.operator) == null ? void 0 : _adhocFilter$operator.toUpperCase();\n      this.operatorId = adhocFilter.operatorId;\n      this.comparator = adhocFilter.comparator;\n      if (\n      [Operators.IsTrue, Operators.IsFalse].indexOf(adhocFilter.operatorId) >=\n      0)\n      {\n        this.comparator = adhocFilter.operatorId === Operators.IsTrue;\n      }\n      if (\n      [Operators.IsNull, Operators.IsNotNull].indexOf(\n        adhocFilter.operatorId\n      ) >= 0)\n      {\n        this.comparator = null;\n      }\n      this.clause = adhocFilter.clause || Clauses.Where;\n      this.sqlExpression = null;\n    } else if (this.expressionType === ExpressionTypes.Sql) {\n      this.sqlExpression =\n      typeof adhocFilter.sqlExpression === 'string' ?\n      adhocFilter.sqlExpression :\n      translateToSql(adhocFilter, { useSimple: true });\n      this.clause = adhocFilter.clause;\n      if (\n      adhocFilter.operator &&\n      CUSTOM_OPERATIONS.indexOf(adhocFilter.operator) >= 0)\n      {\n        this.subject = adhocFilter.subject;\n        this.operator = adhocFilter.operator;\n        this.operatorId = adhocFilter.operatorId;\n      } else {\n        this.subject = null;\n        this.operator = null;\n      }\n      this.comparator = null;\n    }\n    this.isExtra = !!adhocFilter.isExtra;\n    this.isNew = !!adhocFilter.isNew;\n    this.datasourceWarning = !!adhocFilter.datasourceWarning;\n\n    this.filterOptionName =\n    adhocFilter.filterOptionName ||\n    `filter_${Math.random().toString(36).substring(2, 15)}_${Math.random().\n    toString(36).\n    substring(2, 15)}`;\n  }\n\n  duplicateWith(nextFields) {\n    return new AdhocFilter({\n      ...this,\n      // all duplicated fields are not new (i.e. will not open popup automatically)\n      isNew: false,\n      ...nextFields\n    });\n  }\n\n  equals(adhocFilter) {\n    return (\n      adhocFilter.expressionType === this.expressionType &&\n      adhocFilter.sqlExpression === this.sqlExpression &&\n      adhocFilter.operator === this.operator &&\n      adhocFilter.operatorId === this.operatorId &&\n      adhocFilter.comparator === this.comparator &&\n      adhocFilter.subject === this.subject);\n\n  }\n\n  isValid() {\n    const nullCheckOperators = [Operators.IsNotNull, Operators.IsNull].map(\n      (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation\n    );\n    const truthCheckOperators = [Operators.IsTrue, Operators.IsFalse].map(\n      (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation\n    );\n    if (this.expressionType === ExpressionTypes.Simple) {\n      if (nullCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.operator && this.subject);\n      }\n      if (truthCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.subject && this.comparator !== null);\n      }\n      if (this.operator && this.subject && this.clause) {\n        if (Array.isArray(this.comparator)) {\n          if (this.comparator.length > 0) {\n            // A non-empty array of values ('IN' or 'NOT IN' clauses)\n            return true;\n          }\n        } else if (this.comparator !== null) {\n          // A value has been selected or typed\n          return true;\n        }\n      }\n    } else if (this.expressionType === ExpressionTypes.Sql) {\n      return !!(this.sqlExpression && this.clause);\n    }\n    return false;\n  }\n\n  getDefaultLabel() {\n    const label = this.translateToSql();\n    return label.length < 43 ? label : `${label.substring(0, 40)}...`;\n  }\n\n  getTooltipTitle() {\n    return this.translateToSql();\n  }\n\n  translateToSql() {\n    return translateToSql(this);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CUSTOM_OPERATIONS, \"CUSTOM_OPERATIONS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilter/index.js\");reactHotLoader.register(AdhocFilter, \"AdhocFilter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilter/index.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["CUSTOM_OPERATORS","Operators","OPERATOR_ENUM_TO_OPERATOR_TYPE","translateToSql","Clauses","ExpressionTypes","CUSTOM_OPERATIONS","map","op","operation","AdhocFilter","constructor","adhocFilter","expressionType","Simple","_adhocFilter$operator","subject","operator","toUpperCase","operatorId","comparator","IsTrue","IsFalse","indexOf","IsNull","IsNotNull","clause","Where","sqlExpression","Sql","useSimple","isExtra","isNew","datasourceWarning","filterOptionName","Math","random","toString","substring","duplicateWith","nextFields","equals","isValid","nullCheckOperators","truthCheckOperators","Array","isArray","length","getDefaultLabel","label","getTooltipTitle","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilter/index.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  CUSTOM_OPERATORS,\n  Operators,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n} from 'src/explore/constants';\nimport { translateToSql } from '../utils/translateToSQL';\nimport { Clauses, ExpressionTypes } from '../types';\n\nconst CUSTOM_OPERATIONS = [...CUSTOM_OPERATORS].map(\n  op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n);\n\nexport default class AdhocFilter {\n  constructor(adhocFilter) {\n    this.expressionType = adhocFilter.expressionType || ExpressionTypes.Simple;\n    if (this.expressionType === ExpressionTypes.Simple) {\n      this.subject = adhocFilter.subject;\n      this.operator = adhocFilter.operator?.toUpperCase();\n      this.operatorId = adhocFilter.operatorId;\n      this.comparator = adhocFilter.comparator;\n      if (\n        [Operators.IsTrue, Operators.IsFalse].indexOf(adhocFilter.operatorId) >=\n        0\n      ) {\n        this.comparator = adhocFilter.operatorId === Operators.IsTrue;\n      }\n      if (\n        [Operators.IsNull, Operators.IsNotNull].indexOf(\n          adhocFilter.operatorId,\n        ) >= 0\n      ) {\n        this.comparator = null;\n      }\n      this.clause = adhocFilter.clause || Clauses.Where;\n      this.sqlExpression = null;\n    } else if (this.expressionType === ExpressionTypes.Sql) {\n      this.sqlExpression =\n        typeof adhocFilter.sqlExpression === 'string'\n          ? adhocFilter.sqlExpression\n          : translateToSql(adhocFilter, { useSimple: true });\n      this.clause = adhocFilter.clause;\n      if (\n        adhocFilter.operator &&\n        CUSTOM_OPERATIONS.indexOf(adhocFilter.operator) >= 0\n      ) {\n        this.subject = adhocFilter.subject;\n        this.operator = adhocFilter.operator;\n        this.operatorId = adhocFilter.operatorId;\n      } else {\n        this.subject = null;\n        this.operator = null;\n      }\n      this.comparator = null;\n    }\n    this.isExtra = !!adhocFilter.isExtra;\n    this.isNew = !!adhocFilter.isNew;\n    this.datasourceWarning = !!adhocFilter.datasourceWarning;\n\n    this.filterOptionName =\n      adhocFilter.filterOptionName ||\n      `filter_${Math.random().toString(36).substring(2, 15)}_${Math.random()\n        .toString(36)\n        .substring(2, 15)}`;\n  }\n\n  duplicateWith(nextFields) {\n    return new AdhocFilter({\n      ...this,\n      // all duplicated fields are not new (i.e. will not open popup automatically)\n      isNew: false,\n      ...nextFields,\n    });\n  }\n\n  equals(adhocFilter) {\n    return (\n      adhocFilter.expressionType === this.expressionType &&\n      adhocFilter.sqlExpression === this.sqlExpression &&\n      adhocFilter.operator === this.operator &&\n      adhocFilter.operatorId === this.operatorId &&\n      adhocFilter.comparator === this.comparator &&\n      adhocFilter.subject === this.subject\n    );\n  }\n\n  isValid() {\n    const nullCheckOperators = [Operators.IsNotNull, Operators.IsNull].map(\n      op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n    );\n    const truthCheckOperators = [Operators.IsTrue, Operators.IsFalse].map(\n      op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n    );\n    if (this.expressionType === ExpressionTypes.Simple) {\n      if (nullCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.operator && this.subject);\n      }\n      if (truthCheckOperators.indexOf(this.operator) >= 0) {\n        return !!(this.subject && this.comparator !== null);\n      }\n      if (this.operator && this.subject && this.clause) {\n        if (Array.isArray(this.comparator)) {\n          if (this.comparator.length > 0) {\n            // A non-empty array of values ('IN' or 'NOT IN' clauses)\n            return true;\n          }\n        } else if (this.comparator !== null) {\n          // A value has been selected or typed\n          return true;\n        }\n      }\n    } else if (this.expressionType === ExpressionTypes.Sql) {\n      return !!(this.sqlExpression && this.clause);\n    }\n    return false;\n  }\n\n  getDefaultLabel() {\n    const label = this.translateToSql();\n    return label.length < 43 ? label : `${label.substring(0, 40)}...`;\n  }\n\n  getTooltipTitle() {\n    return this.translateToSql();\n  }\n\n  translateToSql() {\n    return translateToSql(this);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}