{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { withParameters } from '@luma.gl/core';\nimport { _LayersPass as LayersPass } from '@deck.gl/core';\nexport class TerrainPass extends LayersPass {\n  getRenderableLayers(viewport, opts) {\n    const {\n      layers\n    } = opts;\n    const result = [];\n\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts, true);\n\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n      }\n    }\n\n    return result;\n  }\n\n  renderHeightMap(heightMap, opts) {\n    const target = heightMap.getRenderFramebuffer();\n    const viewport = heightMap.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    target.resize(viewport);\n    withParameters(this.gl, {\n      clearColor: [0, 0, 0, 0],\n      blend: true,\n      blendFunc: [1, 1],\n      blendEquation: 32776,\n      depthTest: false\n    }, () => this.render({ ...opts,\n      target,\n      pass: 'terrain-height-map',\n      layers: opts.layers,\n      viewports: [viewport],\n      effects: []\n    }));\n  }\n\n  renderTerrainCover(terrainCover, opts) {\n    const target = terrainCover.getRenderFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers);\n    target.resize(viewport);\n    withParameters(this.gl, {\n      clearColor: [0, 0, 0, 0],\n      depthTest: false\n    }, () => this.render({ ...opts,\n      target,\n      pass: \"terrain-cover-\".concat(terrainCover.id),\n      layers,\n      effects: [],\n      viewports: [viewport]\n    }));\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TerrainPass, \"TerrainPass\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/terrain/terrain-pass.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["withParameters","_LayersPass","LayersPass","TerrainPass","getRenderableLayers","viewport","opts","layers","result","drawParamsByIndex","_getDrawLayerParams","i","length","layer","isComposite","shouldDrawLayer","push","renderHeightMap","heightMap","target","getRenderFramebuffer","renderViewport","resize","gl","clearColor","blend","blendFunc","blendEquation","depthTest","render","pass","viewports","effects","renderTerrainCover","terrainCover","filterLayers","concat","id","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/terrain/terrain-pass.ts"],"sourcesContent":["import {withParameters} from '@luma.gl/core';\nimport {Layer, Viewport, _LayersPass as LayersPass, LayersPassRenderOptions} from '@deck.gl/core';\nimport type {HeightMapBuilder} from './height-map-builder';\nimport type {TerrainCover} from './terrain-cover';\n\nimport GL from '@luma.gl/constants';\n\nexport type TerrainPassRenderOptions = LayersPassRenderOptions;\n\n/** Renders textures used by the TerrainEffect render pass */\nexport class TerrainPass extends LayersPass {\n  getRenderableLayers(viewport: Viewport, opts: TerrainPassRenderOptions): Layer[] {\n    const {layers} = opts;\n    const result: Layer[] = [];\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts, true);\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n      }\n    }\n\n    return result;\n  }\n\n  renderHeightMap(heightMap: HeightMapBuilder, opts: Partial<TerrainPassRenderOptions>) {\n    // console.log('Updating height map')\n    const target = heightMap.getRenderFramebuffer();\n    const viewport = heightMap.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        clearColor: [0, 0, 0, 0],\n        blend: true,\n        blendFunc: [GL.ONE, GL.ONE],\n        blendEquation: GL.MAX,\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          target,\n          pass: 'terrain-height-map',\n          layers: opts.layers!,\n          viewports: [viewport],\n          effects: []\n        })\n    );\n  }\n\n  renderTerrainCover(terrainCover: TerrainCover, opts: Partial<TerrainPassRenderOptions>) {\n    // console.log('Updating terrain cover ' + terrainCover.id)\n    const target = terrainCover.getRenderFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers!);\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        clearColor: [0, 0, 0, 0],\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          target,\n          pass: `terrain-cover-${terrainCover.id}`,\n          layers,\n          effects: [],\n          viewports: [viewport]\n        })\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}