{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { css, ensureIsArray, fetchTimeRange, getTimeOffset, styled, t, useTheme } from '@superset-ui/core';\nimport { Tooltip } from '@superset-ui/chart-controls';\n\nimport { ColorSchemeEnum } from './types';\nimport { useOverflowDetection } from './useOverflowDetection';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst NumbersContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n`;\nconst ComparisonValue = styled.div`\n  ${({ theme, subheaderFontSize }) => `\n    font-weight: ${theme.typography.weights.light};\n    display: flex;\n    justify-content: center;\n    font-size: ${subheaderFontSize || 20}px;\n    flex: 1 1 0px;\n  `}\n`;\nconst SymbolWrapper = styled.span`\n  ${({ theme, backgroundColor, textColor }) => `\n    background-color: ${backgroundColor};\n    color: ${textColor};\n    padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n    border-radius: ${theme.gridUnit * 2}px;\n    margin-right: ${theme.gridUnit}px;\n  `}\n`;\nexport default function PopKPI(props) {\n  const { height, width, bigNumber, prevNumber, valueDifference, percentDifferenceFormattedString, headerFontSize, subheaderFontSize, comparisonColorEnabled, comparisonColorScheme, percentDifferenceNumber, currentTimeRangeFilter, startDateOffset, shift } = props;\n  const [comparisonRange, setComparisonRange] = useState('');\n  useEffect(() => {\n    if (!currentTimeRangeFilter || !shift && !startDateOffset) {\n      setComparisonRange('');\n    } else\n    if (!_isEmpty(shift) || startDateOffset) {\n      const newShift = getTimeOffset(currentTimeRangeFilter, ensureIsArray(shift), startDateOffset || '');\n      const promise = fetchTimeRange(currentTimeRangeFilter.comparator, currentTimeRangeFilter.subject, newShift || []);\n      Promise.resolve(promise).then((res) => {\n        const response = ensureIsArray(res.value);\n        const firstRange = response.flat()[0];\n        const rangeText = firstRange.split('vs\\n');\n        setComparisonRange(rangeText.length > 1 ? rangeText[1].trim() : rangeText[0]);\n      });\n    }\n  }, [currentTimeRangeFilter, shift, startDateOffset]);\n  const theme = useTheme();\n  const flexGap = theme.gridUnit * 5;\n  const wrapperDivStyles = css`\n    font-family: ${theme.typography.families.sansSerif};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${height}px;\n    width: ${width}px;\n    overflow: auto;\n  `;\n  const bigValueContainerStyles = css`\n    font-size: ${headerFontSize || 60}px;\n    font-weight: ${theme.typography.weights.normal};\n    text-align: center;\n    margin-bottom: ${theme.gridUnit * 4}px;\n  `;\n  const getArrowIndicatorColor = () => {\n    if (!comparisonColorEnabled || percentDifferenceNumber === 0) {\n      return theme.colors.grayscale.base;\n    }\n    if (percentDifferenceNumber > 0) {\n      // Positive difference\n      return comparisonColorScheme === ColorSchemeEnum.Green ?\n      theme.colors.success.base :\n      theme.colors.error.base;\n    }\n    // Negative difference\n    return comparisonColorScheme === ColorSchemeEnum.Red ?\n    theme.colors.success.base :\n    theme.colors.error.base;\n  };\n  const arrowIndicatorStyle = css`\n    color: ${getArrowIndicatorColor()};\n    margin-left: ${theme.gridUnit}px;\n  `;\n  const defaultBackgroundColor = theme.colors.grayscale.light4;\n  const defaultTextColor = theme.colors.grayscale.base;\n  const { backgroundColor, textColor } = useMemo(() => {\n    let bgColor = defaultBackgroundColor;\n    let txtColor = defaultTextColor;\n    if (comparisonColorEnabled && percentDifferenceNumber !== 0) {\n      const useSuccess = percentDifferenceNumber > 0 &&\n      comparisonColorScheme === ColorSchemeEnum.Green ||\n      percentDifferenceNumber < 0 &&\n      comparisonColorScheme === ColorSchemeEnum.Red;\n      // Set background and text colors based on the conditions\n      bgColor = useSuccess ?\n      theme.colors.success.light2 :\n      theme.colors.error.light2;\n      txtColor = useSuccess ?\n      theme.colors.success.base :\n      theme.colors.error.base;\n    }\n    return {\n      backgroundColor: bgColor,\n      textColor: txtColor\n    };\n  }, [\n  theme,\n  comparisonColorScheme,\n  comparisonColorEnabled,\n  percentDifferenceNumber]\n  );\n  const SYMBOLS_WITH_VALUES = useMemo(() => [\n  {\n    symbol: '#',\n    value: prevNumber,\n    tooltipText: t('Data for %s', comparisonRange || 'previous range')\n  },\n  {\n    symbol: '△',\n    value: valueDifference,\n    tooltipText: t('Value difference between the time periods')\n  },\n  {\n    symbol: '%',\n    value: percentDifferenceFormattedString,\n    tooltipText: t('Percentage difference between the time periods')\n  }],\n  [\n  comparisonRange,\n  prevNumber,\n  valueDifference,\n  percentDifferenceFormattedString]\n  );\n  const { isOverflowing, symbolContainerRef, wrapperRef } = useOverflowDetection(flexGap);\n  return ___EmotionJSX(\"div\", { css: wrapperDivStyles, ref: wrapperRef },\n  ___EmotionJSX(NumbersContainer, { css: isOverflowing &&\n    css`\n            width: fit-content;\n            margin: auto;\n            align-items: flex-start;\n          ` },\n  ___EmotionJSX(\"div\", { css: bigValueContainerStyles },\n  bigNumber,\n  percentDifferenceNumber !== 0 && ___EmotionJSX(\"span\", { css: arrowIndicatorStyle },\n  percentDifferenceNumber > 0 ? '↑' : '↓'\n  )\n  ),\n\n  ___EmotionJSX(\"div\", { css: [\n    css`\n              display: flex;\n              justify-content: space-around;\n              gap: ${flexGap}px;\n              min-width: 0;\n              flex-shrink: 1;\n            `,\n    isOverflowing ?\n    css`\n                  flex-direction: column;\n                  align-items: flex-start;\n                  width: fit-content;\n                ` :\n    css`\n                  align-items: center;\n                  width: 100%;\n                `, process.env.NODE_ENV === \"production\" ? \"\" : \";label:PopKPI;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n    ref: symbolContainerRef },\n  SYMBOLS_WITH_VALUES.map((symbol_with_value, index) => ___EmotionJSX(ComparisonValue, { key: `comparison-symbol-${symbol_with_value.symbol}`, subheaderFontSize: subheaderFontSize },\n  ___EmotionJSX(Tooltip, { id: \"tooltip\", placement: \"top\", title: symbol_with_value.tooltipText },\n  ___EmotionJSX(SymbolWrapper, { backgroundColor: index > 0 ? backgroundColor : defaultBackgroundColor, textColor: index > 0 ? textColor : defaultTextColor },\n  symbol_with_value.symbol\n  ),\n  symbol_with_value.value\n  )\n  ))\n  )\n  )\n  );\n}__signature__(PopKPI, \"useState{[comparisonRange, setComparisonRange]('')}\\nuseEffect{}\\nuseTheme{theme}\\nuseMemo{{ backgroundColor, textColor }}\\nuseMemo{SYMBOLS_WITH_VALUES}\\nuseOverflowDetection{{ isOverflowing, symbolContainerRef, wrapperRef }}\", () => [useTheme, useOverflowDetection]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NumbersContainer, \"NumbersContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx\");reactHotLoader.register(ComparisonValue, \"ComparisonValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx\");reactHotLoader.register(SymbolWrapper, \"SymbolWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx\");reactHotLoader.register(PopKPI, \"PopKPI\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useMemo","useState","css","ensureIsArray","fetchTimeRange","getTimeOffset","styled","t","useTheme","Tooltip","ColorSchemeEnum","useOverflowDetection","jsx","___EmotionJSX","NumbersContainer","div","ComparisonValue","theme","subheaderFontSize","typography","weights","light","SymbolWrapper","span","backgroundColor","textColor","gridUnit","PopKPI","props","height","width","bigNumber","prevNumber","valueDifference","percentDifferenceFormattedString","headerFontSize","comparisonColorEnabled","comparisonColorScheme","percentDifferenceNumber","currentTimeRangeFilter","startDateOffset","shift","comparisonRange","setComparisonRange","_isEmpty","newShift","promise","comparator","subject","Promise","resolve","then","res","response","value","firstRange","flat","rangeText","split","length","trim","flexGap","wrapperDivStyles","families","sansSerif","bigValueContainerStyles","normal","getArrowIndicatorColor","colors","grayscale","base","Green","success","error","Red","arrowIndicatorStyle","defaultBackgroundColor","light4","defaultTextColor","bgColor","txtColor","useSuccess","light2","SYMBOLS_WITH_VALUES","symbol","tooltipText","isOverflowing","symbolContainerRef","wrapperRef","ref","process","env","NODE_ENV","map","symbol_with_value","index","key","id","placement","title","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport {\n  css,\n  ensureIsArray,\n  fetchTimeRange,\n  getTimeOffset,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { Tooltip } from '@superset-ui/chart-controls';\nimport { isEmpty } from 'lodash';\nimport {\n  ColorSchemeEnum,\n  PopKPIComparisonSymbolStyleProps,\n  PopKPIComparisonValueStyleProps,\n  PopKPIProps,\n} from './types';\nimport { useOverflowDetection } from './useOverflowDetection';\n\nconst NumbersContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n`;\n\nconst ComparisonValue = styled.div<PopKPIComparisonValueStyleProps>`\n  ${({ theme, subheaderFontSize }) => `\n    font-weight: ${theme.typography.weights.light};\n    display: flex;\n    justify-content: center;\n    font-size: ${subheaderFontSize || 20}px;\n    flex: 1 1 0px;\n  `}\n`;\n\nconst SymbolWrapper = styled.span<PopKPIComparisonSymbolStyleProps>`\n  ${({ theme, backgroundColor, textColor }) => `\n    background-color: ${backgroundColor};\n    color: ${textColor};\n    padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n    border-radius: ${theme.gridUnit * 2}px;\n    margin-right: ${theme.gridUnit}px;\n  `}\n`;\n\nexport default function PopKPI(props: PopKPIProps) {\n  const {\n    height,\n    width,\n    bigNumber,\n    prevNumber,\n    valueDifference,\n    percentDifferenceFormattedString,\n    headerFontSize,\n    subheaderFontSize,\n    comparisonColorEnabled,\n    comparisonColorScheme,\n    percentDifferenceNumber,\n    currentTimeRangeFilter,\n    startDateOffset,\n    shift,\n  } = props;\n\n  const [comparisonRange, setComparisonRange] = useState<string>('');\n\n  useEffect(() => {\n    if (!currentTimeRangeFilter || (!shift && !startDateOffset)) {\n      setComparisonRange('');\n    } else if (!isEmpty(shift) || startDateOffset) {\n      const newShift = getTimeOffset(\n        currentTimeRangeFilter,\n        ensureIsArray(shift),\n        startDateOffset || '',\n      );\n      const promise: any = fetchTimeRange(\n        (currentTimeRangeFilter as any).comparator,\n        currentTimeRangeFilter.subject,\n        newShift || [],\n      );\n      Promise.resolve(promise).then((res: any) => {\n        const response: string[] = ensureIsArray(res.value);\n        const firstRange: string = response.flat()[0];\n        const rangeText = firstRange.split('vs\\n');\n        setComparisonRange(\n          rangeText.length > 1 ? rangeText[1].trim() : rangeText[0],\n        );\n      });\n    }\n  }, [currentTimeRangeFilter, shift, startDateOffset]);\n\n  const theme = useTheme();\n  const flexGap = theme.gridUnit * 5;\n  const wrapperDivStyles = css`\n    font-family: ${theme.typography.families.sansSerif};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${height}px;\n    width: ${width}px;\n    overflow: auto;\n  `;\n\n  const bigValueContainerStyles = css`\n    font-size: ${headerFontSize || 60}px;\n    font-weight: ${theme.typography.weights.normal};\n    text-align: center;\n    margin-bottom: ${theme.gridUnit * 4}px;\n  `;\n\n  const getArrowIndicatorColor = () => {\n    if (!comparisonColorEnabled || percentDifferenceNumber === 0) {\n      return theme.colors.grayscale.base;\n    }\n\n    if (percentDifferenceNumber > 0) {\n      // Positive difference\n      return comparisonColorScheme === ColorSchemeEnum.Green\n        ? theme.colors.success.base\n        : theme.colors.error.base;\n    }\n    // Negative difference\n    return comparisonColorScheme === ColorSchemeEnum.Red\n      ? theme.colors.success.base\n      : theme.colors.error.base;\n  };\n\n  const arrowIndicatorStyle = css`\n    color: ${getArrowIndicatorColor()};\n    margin-left: ${theme.gridUnit}px;\n  `;\n\n  const defaultBackgroundColor = theme.colors.grayscale.light4;\n  const defaultTextColor = theme.colors.grayscale.base;\n  const { backgroundColor, textColor } = useMemo(() => {\n    let bgColor = defaultBackgroundColor;\n    let txtColor = defaultTextColor;\n    if (comparisonColorEnabled && percentDifferenceNumber !== 0) {\n      const useSuccess =\n        (percentDifferenceNumber > 0 &&\n          comparisonColorScheme === ColorSchemeEnum.Green) ||\n        (percentDifferenceNumber < 0 &&\n          comparisonColorScheme === ColorSchemeEnum.Red);\n\n      // Set background and text colors based on the conditions\n      bgColor = useSuccess\n        ? theme.colors.success.light2\n        : theme.colors.error.light2;\n      txtColor = useSuccess\n        ? theme.colors.success.base\n        : theme.colors.error.base;\n    }\n\n    return {\n      backgroundColor: bgColor,\n      textColor: txtColor,\n    };\n  }, [\n    theme,\n    comparisonColorScheme,\n    comparisonColorEnabled,\n    percentDifferenceNumber,\n  ]);\n\n  const SYMBOLS_WITH_VALUES = useMemo(\n    () => [\n      {\n        symbol: '#',\n        value: prevNumber,\n        tooltipText: t('Data for %s', comparisonRange || 'previous range'),\n      },\n      {\n        symbol: '△',\n        value: valueDifference,\n        tooltipText: t('Value difference between the time periods'),\n      },\n      {\n        symbol: '%',\n        value: percentDifferenceFormattedString,\n        tooltipText: t('Percentage difference between the time periods'),\n      },\n    ],\n    [\n      comparisonRange,\n      prevNumber,\n      valueDifference,\n      percentDifferenceFormattedString,\n    ],\n  );\n\n  const { isOverflowing, symbolContainerRef, wrapperRef } =\n    useOverflowDetection(flexGap);\n\n  return (\n    <div css={wrapperDivStyles} ref={wrapperRef}>\n      <NumbersContainer\n        css={\n          isOverflowing &&\n          css`\n            width: fit-content;\n            margin: auto;\n            align-items: flex-start;\n          `\n        }\n      >\n        <div css={bigValueContainerStyles}>\n          {bigNumber}\n          {percentDifferenceNumber !== 0 && (\n            <span css={arrowIndicatorStyle}>\n              {percentDifferenceNumber > 0 ? '↑' : '↓'}\n            </span>\n          )}\n        </div>\n\n        <div\n          css={[\n            css`\n              display: flex;\n              justify-content: space-around;\n              gap: ${flexGap}px;\n              min-width: 0;\n              flex-shrink: 1;\n            `,\n            isOverflowing\n              ? css`\n                  flex-direction: column;\n                  align-items: flex-start;\n                  width: fit-content;\n                `\n              : css`\n                  align-items: center;\n                  width: 100%;\n                `,\n          ]}\n          ref={symbolContainerRef}\n        >\n          {SYMBOLS_WITH_VALUES.map((symbol_with_value, index) => (\n            <ComparisonValue\n              key={`comparison-symbol-${symbol_with_value.symbol}`}\n              subheaderFontSize={subheaderFontSize}\n            >\n              <Tooltip\n                id=\"tooltip\"\n                placement=\"top\"\n                title={symbol_with_value.tooltipText}\n              >\n                <SymbolWrapper\n                  backgroundColor={\n                    index > 0 ? backgroundColor : defaultBackgroundColor\n                  }\n                  textColor={index > 0 ? textColor : defaultTextColor}\n                >\n                  {symbol_with_value.symbol}\n                </SymbolWrapper>\n                {symbol_with_value.value}\n              </Tooltip>\n            </ComparisonValue>\n          ))}\n        </div>\n      </NumbersContainer>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}