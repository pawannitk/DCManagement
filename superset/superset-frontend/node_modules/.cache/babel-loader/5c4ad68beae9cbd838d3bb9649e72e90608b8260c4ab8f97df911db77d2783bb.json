{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { ColorBy } from './utils';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['entity'],\n    [\n    {\n      name: 'country_fieldtype',\n      config: {\n        type: 'SelectControl',\n        label: t('Country Field Type'),\n        default: 'cca2',\n        choices: [\n        ['name', t('Full name')],\n        ['cioc', t('code International Olympic Committee (cioc)')],\n        ['cca2', t('code ISO 3166-1 alpha-2 (cca2)')],\n        ['cca3', t('code ISO 3166-1 alpha-3 (cca3)')]],\n\n        description: t('The country code standard that Superset should expect ' +\n        'to find in the [country] column')\n      }\n    }],\n\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'show_bubbles',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Bubbles'),\n        default: false,\n        renderTrigger: true,\n        description: t('Whether to display bubbles on top of countries')\n      }\n    }],\n\n    ['secondary_metric'],\n    [\n    {\n      name: 'max_bubble_size',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Max Bubble Size'),\n        default: '25',\n        choices: formatSelectOptions([\n        '5',\n        '10',\n        '15',\n        '25',\n        '50',\n        '75',\n        '100']\n        )\n      }\n    }],\n\n    ['color_picker'],\n    [\n    {\n      name: 'color_by',\n      config: {\n        type: 'RadioButtonControl',\n        label: t('Color by'),\n        default: ColorBy.Metric,\n        options: [\n        [ColorBy.Metric, t('Metric')],\n        [ColorBy.Country, t('Country')]],\n\n        description: t('Choose whether a country should be shaded by the metric, or assigned a color based on a categorical color palette')\n      }\n    }],\n\n    ['linear_color_scheme'],\n    ['color_scheme']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['y_axis_format'], ['currency_format']]\n  }],\n\n  controlOverrides: {\n    entity: {\n      label: t('Country Column'),\n      description: t('3 letter code of the country')\n    },\n    secondary_metric: {\n      label: t('Bubble Size'),\n      description: t('Metric that defines the size of the bubble')\n    },\n    color_picker: {\n      label: t('Bubble Color')\n    },\n    linear_color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) => Boolean((controls == null ? void 0 : controls.color_by.value) === ColorBy.Metric)\n    },\n    color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) => Boolean((controls == null ? void 0 : controls.color_by.value) === ColorBy.Country)\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    entity: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","formatSelectOptions","getStandardizedControls","ColorBy","config","controlPanelSections","label","expanded","controlSetRows","name","type","default","choices","description","renderTrigger","freeForm","Metric","options","Country","controlOverrides","entity","secondary_metric","color_picker","linear_color_scheme","visibility","controls","Boolean","color_by","value","color_scheme","formDataOverrides","formData","shiftColumn","metric","shiftMetric","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-world-map/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  formatSelectOptions,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { ColorBy } from './utils';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['entity'],\n        [\n          {\n            name: 'country_fieldtype',\n            config: {\n              type: 'SelectControl',\n              label: t('Country Field Type'),\n              default: 'cca2',\n              choices: [\n                ['name', t('Full name')],\n                ['cioc', t('code International Olympic Committee (cioc)')],\n                ['cca2', t('code ISO 3166-1 alpha-2 (cca2)')],\n                ['cca3', t('code ISO 3166-1 alpha-3 (cca3)')],\n              ],\n              description: t(\n                'The country code standard that Superset should expect ' +\n                  'to find in the [country] column',\n              ),\n            },\n          },\n        ],\n        ['metric'],\n        ['adhoc_filters'],\n        ['row_limit'],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'show_bubbles',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Bubbles'),\n              default: false,\n              renderTrigger: true,\n              description: t('Whether to display bubbles on top of countries'),\n            },\n          },\n        ],\n        ['secondary_metric'],\n        [\n          {\n            name: 'max_bubble_size',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Max Bubble Size'),\n              default: '25',\n              choices: formatSelectOptions([\n                '5',\n                '10',\n                '15',\n                '25',\n                '50',\n                '75',\n                '100',\n              ]),\n            },\n          },\n        ],\n        ['color_picker'],\n        [\n          {\n            name: 'color_by',\n            config: {\n              type: 'RadioButtonControl',\n              label: t('Color by'),\n              default: ColorBy.Metric,\n              options: [\n                [ColorBy.Metric, t('Metric')],\n                [ColorBy.Country, t('Country')],\n              ],\n              description: t(\n                'Choose whether a country should be shaded by the metric, or assigned a color based on a categorical color palette',\n              ),\n            },\n          },\n        ],\n        ['linear_color_scheme'],\n        ['color_scheme'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['y_axis_format'], ['currency_format']],\n    },\n  ],\n  controlOverrides: {\n    entity: {\n      label: t('Country Column'),\n      description: t('3 letter code of the country'),\n    },\n    secondary_metric: {\n      label: t('Bubble Size'),\n      description: t('Metric that defines the size of the bubble'),\n    },\n    color_picker: {\n      label: t('Bubble Color'),\n    },\n    linear_color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) =>\n        Boolean(controls?.color_by.value === ColorBy.Metric),\n    },\n    color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) =>\n        Boolean(controls?.color_by.value === ColorBy.Country),\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    entity: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}