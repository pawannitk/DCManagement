{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DASHBOARD_GRID_ID, DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nexport const getRootLevelTabsComponent = (dashboardLayout) => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot == null ? void 0 : dashboardRoot.children[0];\n  return rootChildId === DASHBOARD_GRID_ID ?\n  dashboardLayout[DASHBOARD_ROOT_ID] :\n  dashboardLayout[rootChildId];\n};\nexport const shouldFocusTabs = (event, container) =>\n// don't focus the tabs when we click on a tab\nevent.target.className === 'ant-tabs-nav-wrap' ||\ncontainer.contains(event.target);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getRootLevelTabsComponent, \"getRootLevelTabsComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts\");reactHotLoader.register(shouldFocusTabs, \"shouldFocusTabs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["DASHBOARD_GRID_ID","DASHBOARD_ROOT_ID","getRootLevelTabsComponent","dashboardLayout","dashboardRoot","rootChildId","children","shouldFocusTabs","event","container","target","className","contains","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/DashboardBuilder/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_GRID_ID,\n  DASHBOARD_ROOT_ID,\n} from 'src/dashboard/util/constants';\nimport { DashboardLayout } from 'src/dashboard/types';\n\nexport const getRootLevelTabsComponent = (dashboardLayout: DashboardLayout) => {\n  const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n  const rootChildId = dashboardRoot?.children[0];\n  return rootChildId === DASHBOARD_GRID_ID\n    ? dashboardLayout[DASHBOARD_ROOT_ID]\n    : dashboardLayout[rootChildId];\n};\n\nexport const shouldFocusTabs = (\n  event: { target: { className: string } },\n  container: { contains: (arg0: any) => any },\n) =>\n  // don't focus the tabs when we click on a tab\n  event.target.className === 'ant-tabs-nav-wrap' ||\n  container.contains(event.target);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,iBAAiB,EACjBC,iBAAiB,QACZ,8BAA8B;AAGrC,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,eAAgC,KAAI;EAC5E,MAAMC,aAAa,GAAGD,eAAe,CAACF,iBAAiB,CAAC;EACxD,MAAMI,WAAW,GAAGD,aAAa,oBAAbA,aAAa,CAAEE,QAAQ,CAAC,CAAC,CAAC;EAC9C,OAAOD,WAAW,KAAKL,iBAAiB;EACpCG,eAAe,CAACF,iBAAiB,CAAC;EAClCE,eAAe,CAACE,WAAW,CAAC;AAClC,CAAC;AAED,OAAO,MAAME,eAAe,GAAGA,CAC7BC,KAAwC,EACxCC,SAA2C;AAE3C;AACAD,KAAK,CAACE,MAAM,CAACC,SAAS,KAAK,mBAAmB;AAC9CF,SAAS,CAACG,QAAQ,CAACJ,KAAK,CAACE,MAAM,CAAC,CAAC,mBAAAG,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAdtBf,yBAAyB,4IAAAW,cAAA,CAAAI,QAAA,CAQzBV,eAAe,0JAAAW,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}