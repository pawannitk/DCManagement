{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport { mod } from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport { Vector3, _SphericalCoordinates as SphericalCoordinates, clamp } from '@math.gl/core';\nconst MOVEMENT_SPEED = 20;\n\nclass FirstPersonState extends ViewState {\n  constructor(options) {\n    const {\n      width,\n      height,\n      position = [0, 0, 0],\n      bearing = 0,\n      pitch = 0,\n      longitude = null,\n      latitude = null,\n      maxPitch = 90,\n      minPitch = -90,\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition\n    } = options;\n    super({\n      width,\n      height,\n      position,\n      bearing,\n      pitch,\n      longitude,\n      latitude,\n      maxPitch,\n      minPitch\n    }, {\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition\n    });\n  }\n\n  panStart() {\n    return this;\n  }\n\n  pan() {\n    return this;\n  }\n\n  panEnd() {\n    return this;\n  }\n\n  rotateStart({\n    pos\n  }) {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }) {\n    const {\n      startRotatePos,\n      startBearing,\n      startPitch\n    } = this.getState();\n    const {\n      width,\n      height\n    } = this.getViewportProps();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n\n    let newRotation;\n\n    if (pos) {\n      const deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n      newRotation = {\n        bearing: startBearing - deltaScaleX * 180,\n        pitch: startPitch - deltaScaleY * 90\n      };\n    } else {\n      newRotation = {\n        bearing: startBearing - deltaAngleX,\n        pitch: startPitch - deltaAngleY\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  rotateEnd() {\n    return this._getUpdatedState({\n      startRotatePos: null,\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  zoomStart() {\n    return this._getUpdatedState({\n      startZoomPosition: this.getViewportProps().position\n    });\n  }\n\n  zoom({\n    scale\n  }) {\n    let {\n      startZoomPosition\n    } = this.getState();\n\n    if (!startZoomPosition) {\n      startZoomPosition = this.getViewportProps().position;\n    }\n\n    const direction = this.getDirection();\n    return this._move(direction, Math.log2(scale) * MOVEMENT_SPEED, startZoomPosition);\n  }\n\n  zoomEnd() {\n    return this._getUpdatedState({\n      startZoomPosition: null\n    });\n  }\n\n  moveLeft(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({\n      radians: Math.PI / 2\n    }), speed);\n  }\n\n  moveRight(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({\n      radians: -Math.PI / 2\n    }), speed);\n  }\n\n  moveUp(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction, speed);\n  }\n\n  moveDown(speed = MOVEMENT_SPEED) {\n    const direction = this.getDirection(true);\n    return this._move(direction.negate(), speed);\n  }\n\n  rotateLeft(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed = 15) {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed = 10) {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  zoomIn(speed = 2) {\n    return this.zoom({\n      scale: speed\n    });\n  }\n\n  zoomOut(speed = 2) {\n    return this.zoom({\n      scale: 1 / speed\n    });\n  }\n\n  shortestPathFrom(viewState) {\n    const fromProps = viewState.getViewportProps();\n    const props = { ...this.getViewportProps()\n    };\n    const {\n      bearing,\n      longitude\n    } = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n\n    if (longitude !== null && fromProps.longitude !== null && Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n\n    return props;\n  }\n\n  _move(direction, speed, fromPosition = this.getViewportProps().position) {\n    const delta = direction.scale(speed);\n    return this._getUpdatedState({\n      position: new Vector3(fromPosition).add(delta)\n    });\n  }\n\n  getDirection(use2D = false) {\n    const spherical = new SphericalCoordinates({\n      bearing: this.getViewportProps().bearing,\n      pitch: use2D ? 90 : 90 + this.getViewportProps().pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  _getUpdatedState(newProps) {\n    return new FirstPersonState({ ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  applyConstraints(props) {\n    const {\n      pitch,\n      maxPitch,\n      minPitch,\n      longitude,\n      bearing\n    } = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    if (longitude !== null && (longitude < -180 || longitude > 180)) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n\n    if (bearing < -180 || bearing > 180) {\n      props.bearing = mod(bearing + 180, 360) - 180;\n    }\n\n    return props;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\nexport default class FirstPersonController extends Controller {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"ControllerState\", FirstPersonState);\n\n    _defineProperty(this, \"transition\", {\n      transitionDuration: 300,\n      transitionInterpolator: new LinearInterpolator(['position', 'pitch', 'bearing'])\n    });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(MOVEMENT_SPEED, \"MOVEMENT_SPEED\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/core/dist/esm/controllers/first-person-controller.js\");reactHotLoader.register(FirstPersonState, \"FirstPersonState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/core/dist/esm/controllers/first-person-controller.js\");reactHotLoader.register(FirstPersonController, \"FirstPersonController\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/core/dist/esm/controllers/first-person-controller.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Controller","ViewState","mod","LinearInterpolator","Vector3","_SphericalCoordinates","SphericalCoordinates","clamp","MOVEMENT_SPEED","FirstPersonState","constructor","options","width","height","position","bearing","pitch","longitude","latitude","maxPitch","minPitch","startRotatePos","startBearing","startPitch","startZoomPosition","panStart","pan","panEnd","rotateStart","pos","_getUpdatedState","getViewportProps","rotate","deltaAngleX","deltaAngleY","getState","undefined","newRotation","deltaScaleX","deltaScaleY","rotateEnd","zoomStart","zoom","scale","direction","getDirection","_move","Math","log2","zoomEnd","moveLeft","speed","rotateZ","radians","PI","moveRight","moveUp","moveDown","negate","rotateLeft","rotateRight","rotateUp","rotateDown","zoomIn","zoomOut","shortestPathFrom","viewState","fromProps","props","abs","fromPosition","delta","add","use2D","spherical","toVector3","normalize","newProps","applyConstraints","__reactstandin__regenerateByEval","key","code","eval","FirstPersonController","args","_defineProperty","transitionDuration","transitionInterpolator","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["../../../src/controllers/first-person-controller.ts"],"sourcesContent":["import Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nimport {Vector3, _SphericalCoordinates as SphericalCoordinates, clamp} from '@math.gl/core';\n\nconst MOVEMENT_SPEED = 20;\n\ntype FirstPersonStateProps = {\n  width: number;\n  height: number;\n\n  position?: number[];\n  bearing?: number;\n  pitch?: number;\n\n  // Geospatial anchor\n  longitude?: number | null;\n  latitude?: number | null;\n\n  maxPitch?: number;\n  minPitch?: number;\n};\n\ntype FirstPersonStateInternal = {\n  startRotatePos?: [number, number];\n  startBearing?: number;\n  startPitch?: number;\n  startZoomPosition?: number[];\n};\n\nclass FirstPersonState extends ViewState<\n  FirstPersonState,\n  FirstPersonStateProps,\n  FirstPersonStateInternal\n> {\n  constructor(options: FirstPersonStateProps & FirstPersonStateInternal) {\n    const {\n      /* Viewport arguments */\n      width, // Width of viewport\n      height, // Height of viewport\n\n      // Position and orientation\n      position = [0, 0, 0], // typically in meters from anchor point\n\n      bearing = 0, // Rotation around y axis\n      pitch = 0, // Rotation around x axis\n\n      // Geospatial anchor\n      longitude = null,\n      latitude = null,\n\n      maxPitch = 90,\n      minPitch = -90,\n\n      // Model state when the rotate operation first started\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition\n    } = options;\n\n    super(\n      {\n        width,\n        height,\n        position,\n        bearing,\n        pitch,\n        longitude,\n        latitude,\n        maxPitch,\n        minPitch\n      },\n      {\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoomPosition\n      }\n    );\n  }\n\n  /* Public API */\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}: {pos: [number, number]}): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY: number;\n  }): FirstPersonState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n    const {width, height} = this.getViewportProps();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      const deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n      newRotation = {\n        bearing: startBearing - deltaScaleX * 180,\n        pitch: startPitch - deltaScaleY * 90\n      };\n    } else {\n      newRotation = {\n        bearing: startBearing - deltaAngleX,\n        pitch: startPitch - deltaAngleY\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: null,\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: this.getViewportProps().position\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({scale}: {scale: number}): FirstPersonState {\n    let {startZoomPosition} = this.getState();\n    if (!startZoomPosition) {\n      startZoomPosition = this.getViewportProps().position;\n    }\n\n    const direction = this.getDirection();\n    return this._move(direction, Math.log2(scale) * MOVEMENT_SPEED, startZoomPosition);\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: null\n    });\n  }\n\n  moveLeft(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: Math.PI / 2}), speed);\n  }\n\n  moveRight(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: -Math.PI / 2}), speed);\n  }\n\n  // forward\n  moveUp(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction, speed);\n  }\n\n  // backward\n  moveDown(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.negate(), speed);\n  }\n\n  rotateLeft(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  zoomIn(speed: number = 2): FirstPersonState {\n    return this.zoom({scale: speed});\n  }\n\n  zoomOut(speed: number = 2): FirstPersonState {\n    return this.zoom({scale: 1 / speed});\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState: FirstPersonState) {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (\n      longitude !== null &&\n      fromProps.longitude !== null &&\n      Math.abs(longitude - fromProps.longitude) > 180\n    ) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n  _move(\n    direction: Vector3,\n    speed: number,\n    fromPosition: number[] = this.getViewportProps().position\n  ) {\n    const delta = direction.scale(speed);\n    return this._getUpdatedState({\n      position: new Vector3(fromPosition).add(delta)\n    });\n  }\n\n  getDirection(use2D: boolean = false): Vector3 {\n    const spherical = new SphericalCoordinates({\n      bearing: this.getViewportProps().bearing,\n      pitch: use2D ? 90 : 90 + this.getViewportProps().pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  _getUpdatedState(newProps: Record<string, any>): FirstPersonState {\n    // Update _viewportProps\n    return new FirstPersonState({...this.getViewportProps(), ...this.getState(), ...newProps});\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<FirstPersonStateProps>): Required<FirstPersonStateProps> {\n    // Ensure pitch and zoom are within specified range\n    const {pitch, maxPitch, minPitch, longitude, bearing} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize degrees\n    if (longitude !== null && (longitude < -180 || longitude > 180)) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    if (bearing < -180 || bearing > 180) {\n      props.bearing = mod(bearing + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class FirstPersonController extends Controller<FirstPersonState> {\n  ControllerState = FirstPersonState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['position', 'pitch', 'bearing'])\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}