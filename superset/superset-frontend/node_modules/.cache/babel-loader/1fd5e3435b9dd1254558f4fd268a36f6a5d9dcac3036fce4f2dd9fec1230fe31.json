{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useRef, useState } from 'react';\nimport { styled, t, useComponentDidUpdate } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { AntdForm, Typography } from 'src/components';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\nconst CleanFormItem = styled(AntdForm.Item)`\n  margin-bottom: 0;\n`;\nconst FilterScope = ({ pathToFormValue = [], formScopingType, formFilterScope, forceUpdate, filterScope, updateFormValues, chartId, initiallyExcludedCharts }) => {\n  const [initialFilterScope] = useState(filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts));\n  const lastSpecificScope = useRef(initialFilterScope);\n  const [initialScopingType] = useState(isScopingAll(initialFilterScope, chartId) ?\n  ScopingType.All :\n  ScopingType.Specific);\n  const [hasScopeBeenModified, setHasScopeBeenModified] = useState(!!filterScope);\n  const onUpdateFormValues = useCallback((formValues) => {\n    if (formScopingType === ScopingType.Specific) {\n      lastSpecificScope.current = formValues.scope;\n    }\n    updateFormValues(formValues);\n    setHasScopeBeenModified(true);\n  }, [formScopingType, updateFormValues]);\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId) ?\n      ScopingType.All :\n      ScopingType.Specific\n    });\n  }, [\n  chartId,\n  filterScope,\n  hasScopeBeenModified,\n  initiallyExcludedCharts,\n  updateFormValues]\n  );\n  useComponentDidUpdate(updateScopes);\n  return ___EmotionJSX(Wrapper, null,\n  ___EmotionJSX(CleanFormItem, { name: [...pathToFormValue, 'scoping'], initialValue: initialScopingType },\n  ___EmotionJSX(Radio.Group, { onChange: ({ target: { value } }) => {\n      const scope = value === ScopingType.All ?\n      getDefaultScopeValue(chartId) :\n      lastSpecificScope.current;\n      updateFormValues({ scope });\n      setHasScopeBeenModified(true);\n      forceUpdate();\n    } },\n  ___EmotionJSX(Radio, { value: ScopingType.All }, t('Apply to all panels')),\n  ___EmotionJSX(Radio, { value: ScopingType.Specific },\n  t('Apply to specific panels')\n  )\n  )\n  ),\n  ___EmotionJSX(Typography.Text, { type: \"secondary\" },\n  (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.Specific ?\n  t('Only selected panels will be affected by this filter') :\n  t('All panels with this column will be affected by this filter')\n  ),\n  (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.Specific && ___EmotionJSX(ScopingTree, { updateFormValues: onUpdateFormValues, initialScope: initialFilterScope, formScope: formFilterScope, forceUpdate: forceUpdate, chartId: chartId, initiallyExcludedCharts: initiallyExcludedCharts }),\n  ___EmotionJSX(CleanFormItem, { name: [...pathToFormValue, 'scope'], hidden: true, initialValue: initialFilterScope })\n  );\n};__signature__(FilterScope, \"useState{[initialFilterScope](filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts))}\\nuseRef{lastSpecificScope}\\nuseState{[initialScopingType](isScopingAll(initialFilterScope, chartId)\\n        ? ScopingType.All\\n        : ScopingType.Specific)}\\nuseState{[hasScopeBeenModified, setHasScopeBeenModified](!!filterScope)}\\nuseCallback{onUpdateFormValues}\\nuseCallback{updateScopes}\\nuseComponentDidUpdate{}\", () => [useComponentDidUpdate]);const _default =\nFilterScope;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(FilterScope, \"FilterScope\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useRef","useState","styled","t","useComponentDidUpdate","Radio","AntdForm","Typography","ScopingType","ScopingTree","getDefaultScopeValue","isScopingAll","jsx","___EmotionJSX","Wrapper","div","theme","gridUnit","CleanFormItem","Item","FilterScope","pathToFormValue","formScopingType","formFilterScope","forceUpdate","filterScope","updateFormValues","chartId","initiallyExcludedCharts","initialFilterScope","lastSpecificScope","initialScopingType","All","Specific","hasScopeBeenModified","setHasScopeBeenModified","onUpdateFormValues","formValues","current","scope","updateScopes","newScope","scoping","name","initialValue","Group","onChange","target","value","Text","type","initialScope","formScope","hidden","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useCallback, useRef, useState } from 'react';\nimport {\n  NativeFilterScope,\n  styled,\n  t,\n  useComponentDidUpdate,\n} from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { AntdForm, Typography } from 'src/components';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';\n\ntype FilterScopeProps = {\n  pathToFormValue?: string[];\n  updateFormValues: (values: any) => void;\n  formFilterScope?: NativeFilterScope;\n  forceUpdate: Function;\n  filterScope?: NativeFilterScope;\n  formScopingType?: ScopingType;\n  chartId?: number;\n  initiallyExcludedCharts?: number[];\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nconst CleanFormItem = styled(AntdForm.Item)`\n  margin-bottom: 0;\n`;\n\nconst FilterScope: FC<FilterScopeProps> = ({\n  pathToFormValue = [],\n  formScopingType,\n  formFilterScope,\n  forceUpdate,\n  filterScope,\n  updateFormValues,\n  chartId,\n  initiallyExcludedCharts,\n}) => {\n  const [initialFilterScope] = useState(\n    filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts),\n  );\n  const lastSpecificScope = useRef(initialFilterScope);\n  const [initialScopingType] = useState(\n    isScopingAll(initialFilterScope, chartId)\n      ? ScopingType.All\n      : ScopingType.Specific,\n  );\n  const [hasScopeBeenModified, setHasScopeBeenModified] =\n    useState(!!filterScope);\n\n  const onUpdateFormValues = useCallback(\n    (formValues: any) => {\n      if (formScopingType === ScopingType.Specific) {\n        lastSpecificScope.current = formValues.scope;\n      }\n      updateFormValues(formValues);\n      setHasScopeBeenModified(true);\n    },\n    [formScopingType, updateFormValues],\n  );\n\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId)\n        ? ScopingType.All\n        : ScopingType.Specific,\n    });\n  }, [\n    chartId,\n    filterScope,\n    hasScopeBeenModified,\n    initiallyExcludedCharts,\n    updateFormValues,\n  ]);\n  useComponentDidUpdate(updateScopes);\n\n  return (\n    <Wrapper>\n      <CleanFormItem\n        name={[...pathToFormValue, 'scoping']}\n        initialValue={initialScopingType}\n      >\n        <Radio.Group\n          onChange={({ target: { value } }) => {\n            const scope =\n              value === ScopingType.All\n                ? getDefaultScopeValue(chartId)\n                : lastSpecificScope.current;\n            updateFormValues({ scope });\n            setHasScopeBeenModified(true);\n            forceUpdate();\n          }}\n        >\n          <Radio value={ScopingType.All}>{t('Apply to all panels')}</Radio>\n          <Radio value={ScopingType.Specific}>\n            {t('Apply to specific panels')}\n          </Radio>\n        </Radio.Group>\n      </CleanFormItem>\n      <Typography.Text type=\"secondary\">\n        {(formScopingType ?? initialScopingType) === ScopingType.Specific\n          ? t('Only selected panels will be affected by this filter')\n          : t('All panels with this column will be affected by this filter')}\n      </Typography.Text>\n      {(formScopingType ?? initialScopingType) === ScopingType.Specific && (\n        <ScopingTree\n          updateFormValues={onUpdateFormValues}\n          initialScope={initialFilterScope}\n          formScope={formFilterScope}\n          forceUpdate={forceUpdate}\n          chartId={chartId}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      )}\n      <CleanFormItem\n        name={[...pathToFormValue, 'scope']}\n        hidden\n        initialValue={initialFilterScope}\n      />\n    </Wrapper>\n  );\n};\n\nexport default FilterScope;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAK,IAAQC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,SAEEC,MAAM,EACNC,CAAC,EACDC,qBAAqB,QAChB,mBAAmB;AAC1B,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,QAAQ,EAAEC,UAAU,QAAQ,gBAAgB;AACrD,SAASC,WAAW,QAAQ,SAAS;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,oBAAoB,EAAEC,YAAY,QAAQ,SAAS,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAa7D,MAAMC,OAAO,GAAGZ,MAAM,CAACa,GAAG;;;;qBAIL,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ;;iBAEjC,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;CACjD;AAED,MAAMC,aAAa,GAAGhB,MAAM,CAACI,QAAQ,CAACa,IAAI,CAAC;;CAE1C;AAED,MAAMC,WAAW,GAAyBA,CAAC,EACzCC,eAAe,GAAG,EAAE,EACpBC,eAAe,EACfC,eAAe,EACfC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,OAAO,EACPC,uBAAuB,EACxB,KAAI;EACH,MAAM,CAACC,kBAAkB,CAAC,GAAG5B,QAAQ,CACnCwB,WAAW,IAAIf,oBAAoB,CAACiB,OAAO,EAAEC,uBAAuB,CAAC,CACtE;EACD,MAAME,iBAAiB,GAAG9B,MAAM,CAAC6B,kBAAkB,CAAC;EACpD,MAAM,CAACE,kBAAkB,CAAC,GAAG9B,QAAQ,CACnCU,YAAY,CAACkB,kBAAkB,EAAEF,OAAO,CAAC;EACrCnB,WAAW,CAACwB,GAAG;EACfxB,WAAW,CAACyB,QAAQ,CACzB;EACD,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GACnDlC,QAAQ,CAAC,CAAC,CAACwB,WAAW,CAAC;EAEzB,MAAMW,kBAAkB,GAAGrC,WAAW,CACpC,CAACsC,UAAe,KAAI;IAClB,IAAIf,eAAe,KAAKd,WAAW,CAACyB,QAAQ,EAAE;MAC5CH,iBAAiB,CAACQ,OAAO,GAAGD,UAAU,CAACE,KAAK;;IAE9Cb,gBAAgB,CAACW,UAAU,CAAC;IAC5BF,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC,EACD,CAACb,eAAe,EAAEI,gBAAgB,CAAC,CACpC;EAED,MAAMc,YAAY,GAAGzC,WAAW,CAAC,MAAK;IACpC,IAAI0B,WAAW,IAAIS,oBAAoB,EAAE;MACvC;;IAGF,MAAMO,QAAQ,GAAG/B,oBAAoB,CAACiB,OAAO,EAAEC,uBAAuB,CAAC;IACvEF,gBAAgB,CAAC;MACfa,KAAK,EAAEE,QAAQ;MACfC,OAAO,EAAE/B,YAAY,CAAC8B,QAAQ,EAAEd,OAAO,CAAC;MACpCnB,WAAW,CAACwB,GAAG;MACfxB,WAAW,CAACyB;KACjB,CAAC;EACJ,CAAC,EAAE;EACDN,OAAO;EACPF,WAAW;EACXS,oBAAoB;EACpBN,uBAAuB;EACvBF,gBAAgB;EACjB,CAAC;EACFtB,qBAAqB,CAACoC,YAAY,CAAC;EAEnC,OACE3B,aAAA,CAACC,OAAO;EACND,aAAA,CAACK,aAAa,IACZyB,IAAI,EAAE,CAAC,GAAGtB,eAAe,EAAE,SAAS,CAAE,EACtCuB,YAAY,EAAEb,kBAAmB;EAEjClB,aAAA,CAACR,KAAK,CAACwC,KAAK,IACVC,QAAQ,EAAEA,CAAC,EAAEC,MAAM,EAAE,EAAEC,KAAK,EAAE,EAAE,KAAI;MAClC,MAAMT,KAAK,GACTS,KAAK,KAAKxC,WAAW,CAACwB,GAAG;MACrBtB,oBAAoB,CAACiB,OAAO,CAAC;MAC7BG,iBAAiB,CAACQ,OAAO;MAC/BZ,gBAAgB,CAAC,EAAEa,KAAK,EAAE,CAAC;MAC3BJ,uBAAuB,CAAC,IAAI,CAAC;MAC7BX,WAAW,EAAE;IACf,CAAE;EAEFX,aAAA,CAACR,KAAK,IAAC2C,KAAK,EAAExC,WAAW,CAACwB,GAAI,IAAE7B,CAAC,CAAC,qBAAqB,CAAS,CAChE;EAAAU,aAAA,CAACR,KAAK,IAAC2C,KAAK,EAAExC,WAAW,CAACyB,QAAS;EAChC9B,CAAC,CAAC,0BAA0B;EACxB;EACI;EACA,CACf;EAAAU,aAAA,CAACN,UAAU,CAAC0C,IAAI,IAACC,IAAI,EAAC,WAAW;EAC9B,CAAC5B,eAAe,WAAfA,eAAe,GAAIS,kBAAkB,MAAMvB,WAAW,CAACyB,QAAQ;EAC7D9B,CAAC,CAAC,sDAAsD,CAAC;EACzDA,CAAC,CAAC,6DAA6D;EACpD,CACjB;EAAC,CAACmB,eAAe,WAAfA,eAAe,GAAIS,kBAAkB,MAAMvB,WAAW,CAACyB,QAAQ,IAC/DpB,aAAA,CAACJ,WAAW,IACViB,gBAAgB,EAAEU,kBAAmB,EACrCe,YAAY,EAAEtB,kBAAmB,EACjCuB,SAAS,EAAE7B,eAAgB,EAC3BC,WAAW,EAAEA,WAAY,EACzBG,OAAO,EAAEA,OAAQ,EACjBC,uBAAuB,EAAEA,uBAAwB,GAEpD;EACDf,aAAA,CAACK,aAAa,IACZyB,IAAI,EAAE,CAAC,GAAGtB,eAAe,EAAE,OAAO,CAAE,EACpCgC,MAAM,QACNT,YAAY,EAAEf,kBAAmB;EAE5B,CAAC;AAEd,CAAC,CAACyB,aAAA,CAnGIlC,WAAW,kbAoDfhB,qBAAqB,SAAAmD,QAAA;AAiDRnC,WAAW,CAA1B,eAAAmC,QAAA,CAA2B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlHrB9C,OAAO,+KAAA0C,cAAA,CAAAI,QAAA,CASP1C,aAAa,qLAAAsC,cAAA,CAAAI,QAAA,CAIbxC,WAAW,mLAAAoC,cAAA,CAAAI,QAAA,CAAAL,QAAA,uMAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}