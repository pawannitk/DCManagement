{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { LabelPositionEnum } from '../types';\nexport var EchartsTreemapLabelType;\n(function (EchartsTreemapLabelType) {\n  EchartsTreemapLabelType[\"Key\"] = \"key\";\n  EchartsTreemapLabelType[\"Value\"] = \"value\";\n  EchartsTreemapLabelType[\"KeyValue\"] = \"key_value\";\n})(EchartsTreemapLabelType || (EchartsTreemapLabelType = {}));\nexport const DEFAULT_FORM_DATA = {\n  groupby: [],\n  labelType: EchartsTreemapLabelType.KeyValue,\n  labelPosition: LabelPositionEnum.InsideTopLeft,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  showUpperLabels: true,\n  dateFormat: 'smart_date'\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EchartsTreemapLabelType, \"EchartsTreemapLabelType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/types.ts\");reactHotLoader.register(DEFAULT_FORM_DATA, \"DEFAULT_FORM_DATA\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["LabelPositionEnum","EchartsTreemapLabelType","DEFAULT_FORM_DATA","groupby","labelType","KeyValue","labelPosition","InsideTopLeft","numberFormat","showLabels","showUpperLabels","dateFormat","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ChartDataResponseResult,\n  ChartProps,\n  QueryFormColumn,\n  QueryFormData,\n  QueryFormMetric,\n} from '@superset-ui/core';\nimport { CallbackDataParams } from 'echarts/types/src/util/types';\nimport {\n  BaseTransformedProps,\n  ContextMenuTransformedProps,\n  CrossFilterTransformedProps,\n  LabelPositionEnum,\n  TreePathInfo,\n} from '../types';\n\nexport type EchartsTreemapFormData = QueryFormData & {\n  colorScheme?: string;\n  groupby: QueryFormColumn[];\n  metric?: QueryFormMetric;\n  labelType: EchartsTreemapLabelType;\n  labelPosition: LabelPositionEnum;\n  showLabels: boolean;\n  showUpperLabels: boolean;\n  numberFormat: string;\n  dateFormat: string;\n  dashboardId?: number;\n};\n\nexport enum EchartsTreemapLabelType {\n  Key = 'key',\n  Value = 'value',\n  KeyValue = 'key_value',\n}\n\nexport interface EchartsTreemapChartProps\n  extends ChartProps<EchartsTreemapFormData> {\n  formData: EchartsTreemapFormData;\n  queriesData: ChartDataResponseResult[];\n}\n\nexport const DEFAULT_FORM_DATA: Partial<EchartsTreemapFormData> = {\n  groupby: [],\n  labelType: EchartsTreemapLabelType.KeyValue,\n  labelPosition: LabelPositionEnum.InsideTopLeft,\n  numberFormat: 'SMART_NUMBER',\n  showLabels: true,\n  showUpperLabels: true,\n  dateFormat: 'smart_date',\n};\nexport interface TreemapSeriesCallbackDataParams extends CallbackDataParams {\n  treePathInfo?: TreePathInfo[];\n}\n\nexport type TreemapTransformedProps =\n  BaseTransformedProps<EchartsTreemapFormData> &\n    ContextMenuTransformedProps &\n    CrossFilterTransformedProps;\n"],"mappings":"uSA0BA,SAIEA,iBAAiB,QAEZ,UAAU;AAejB,WAAYC,uBAIX;AAJD,WAAYA,uBAAuB;EACjCA,uBAAA,eAAW;EACXA,uBAAA,mBAAe;EACfA,uBAAA,0BAAsB;AACxB,CAAC,EAJWA,uBAAuB,KAAvBA,uBAAuB;AAYnC,OAAO,MAAMC,iBAAiB,GAAoC;EAChEC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAEH,uBAAuB,CAACI,QAAQ;EAC3CC,aAAa,EAAEN,iBAAiB,CAACO,aAAa;EAC9CC,YAAY,EAAE,cAAc;EAC5BC,UAAU,EAAE,IAAI;EAChBC,eAAe,EAAE,IAAI;EACrBC,UAAU,EAAE;CACb,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CApBUf,uBAIX,yIAAAW,cAAA,CAAAI,QAAA,CAQYd,iBAAiB,2JAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}