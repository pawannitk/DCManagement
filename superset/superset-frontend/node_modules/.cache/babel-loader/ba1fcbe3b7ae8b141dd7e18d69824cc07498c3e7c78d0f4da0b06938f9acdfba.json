{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { ChartPlugin, ChartMetadata } from '@superset-ui/core';\nexport var ForecastSeriesEnum;\n(function (ForecastSeriesEnum) {\n  ForecastSeriesEnum[\"Observation\"] = \"\";\n  ForecastSeriesEnum[\"ForecastTrend\"] = \"__yhat\";\n  ForecastSeriesEnum[\"ForecastUpper\"] = \"__yhat_upper\";\n  ForecastSeriesEnum[\"ForecastLower\"] = \"__yhat_lower\";\n})(ForecastSeriesEnum || (ForecastSeriesEnum = {}));\nexport var LegendOrientation;\n(function (LegendOrientation) {\n  LegendOrientation[\"Top\"] = \"top\";\n  LegendOrientation[\"Bottom\"] = \"bottom\";\n  LegendOrientation[\"Left\"] = \"left\";\n  LegendOrientation[\"Right\"] = \"right\";\n})(LegendOrientation || (LegendOrientation = {}));\nexport var LegendType;\n(function (LegendType) {\n  LegendType[\"Scroll\"] = \"scroll\";\n  LegendType[\"Plain\"] = \"plain\";\n})(LegendType || (LegendType = {}));\nexport var LabelPositionEnum;\n(function (LabelPositionEnum) {\n  LabelPositionEnum[\"Top\"] = \"top\";\n  LabelPositionEnum[\"Left\"] = \"left\";\n  LabelPositionEnum[\"Right\"] = \"right\";\n  LabelPositionEnum[\"Bottom\"] = \"bottom\";\n  LabelPositionEnum[\"Inside\"] = \"inside\";\n  LabelPositionEnum[\"InsideLeft\"] = \"insideLeft\";\n  LabelPositionEnum[\"InsideRight\"] = \"insideRight\";\n  LabelPositionEnum[\"InsideTop\"] = \"insideTop\";\n  LabelPositionEnum[\"InsideBottom\"] = \"insideBottom\";\n  LabelPositionEnum[\"InsideTopLeft\"] = \"insideTopLeft\";\n  LabelPositionEnum[\"InsideBottomLeft\"] = \"insideBottomLeft\";\n  LabelPositionEnum[\"InsideTopRight\"] = \"insideTopRight\";\n  LabelPositionEnum[\"InsideBottomRight\"] = \"insideBottomRight\";\n})(LabelPositionEnum || (LabelPositionEnum = {}));\nexport class EchartsChartPlugin extends ChartPlugin {\n  constructor(props) {\n    const { metadata, ...restProps } = props;\n    super({\n      ...restProps,\n      metadata: new ChartMetadata({\n        parseMethod: 'json',\n        ...metadata\n      })\n    });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}export * from './Timeseries/types';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ForecastSeriesEnum, \"ForecastSeriesEnum\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts\");reactHotLoader.register(LegendOrientation, \"LegendOrientation\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts\");reactHotLoader.register(LegendType, \"LegendType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts\");reactHotLoader.register(LabelPositionEnum, \"LabelPositionEnum\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts\");reactHotLoader.register(EchartsChartPlugin, \"EchartsChartPlugin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ChartPlugin","ChartMetadata","ForecastSeriesEnum","LegendOrientation","LegendType","LabelPositionEnum","EchartsChartPlugin","constructor","props","metadata","restProps","parseMethod","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { RefObject } from 'react';\nimport {\n  ChartDataResponseResult,\n  ChartProps,\n  ContextMenuFilters,\n  FilterState,\n  HandlerFunction,\n  LegendState,\n  PlainObject,\n  QueryFormColumn,\n  SetDataMaskHook,\n  ChartPlugin,\n  SqlaFormData,\n  ChartMetadata,\n} from '@superset-ui/core';\nimport { EChartsCoreOption, ECharts } from 'echarts';\nimport { TooltipMarker } from 'echarts/types/src/util/format';\nimport { StackControlsValue } from './constants';\n\nexport type EchartsStylesProps = {\n  height: number;\n  width: number;\n};\n\nexport type Refs = {\n  echartRef?: React.Ref<EchartsHandler>;\n  divRef?: RefObject<HTMLDivElement>;\n};\n\nexport interface EchartsProps {\n  height: number;\n  width: number;\n  echartOptions: EChartsCoreOption;\n  eventHandlers?: EventHandlers;\n  zrEventHandlers?: EventHandlers;\n  selectedValues?: Record<number, string>;\n  forceClear?: boolean;\n  refs: Refs;\n}\n\nexport interface EchartsHandler {\n  getEchartInstance: () => ECharts | undefined;\n}\n\nexport enum ForecastSeriesEnum {\n  Observation = '',\n  ForecastTrend = '__yhat',\n  ForecastUpper = '__yhat_upper',\n  ForecastLower = '__yhat_lower',\n}\n\nexport type ForecastSeriesContext = {\n  name: string;\n  type: ForecastSeriesEnum;\n};\n\nexport enum LegendOrientation {\n  Top = 'top',\n  Bottom = 'bottom',\n  Left = 'left',\n  Right = 'right',\n}\n\nexport enum LegendType {\n  Scroll = 'scroll',\n  Plain = 'plain',\n}\n\nexport type ForecastValue = {\n  marker: TooltipMarker;\n  observation?: number;\n  forecastTrend?: number;\n  forecastLower?: number;\n  forecastUpper?: number;\n};\n\nexport type LegendFormData = {\n  legendMargin: number | null | string;\n  legendOrientation: LegendOrientation;\n  legendType: LegendType;\n  showLegend: boolean;\n};\n\nexport type EventHandlers = Record<string, { (props: any): void }>;\n\nexport enum LabelPositionEnum {\n  Top = 'top',\n  Left = 'left',\n  Right = 'right',\n  Bottom = 'bottom',\n  Inside = 'inside',\n  InsideLeft = 'insideLeft',\n  InsideRight = 'insideRight',\n  InsideTop = 'insideTop',\n  InsideBottom = 'insideBottom',\n  InsideTopLeft = 'insideTopLeft',\n  InsideBottomLeft = 'insideBottomLeft',\n  InsideTopRight = 'insideTopRight',\n  InsideBottomRight = 'insideBottomRight',\n}\n\nexport interface BaseChartProps<T extends PlainObject> extends ChartProps<T> {\n  queriesData: ChartDataResponseResult[];\n}\n\nexport interface BaseTransformedProps<F> {\n  echartOptions: EChartsCoreOption;\n  formData: F;\n  height: number;\n  onContextMenu?: (\n    clientX: number,\n    clientY: number,\n    filters?: ContextMenuFilters,\n  ) => void;\n  setDataMask?: SetDataMaskHook;\n  onLegendStateChanged?: (state: LegendState) => void;\n  filterState?: FilterState;\n  refs: Refs;\n  width: number;\n  emitCrossFilters?: boolean;\n  coltypeMapping?: Record<string, number>;\n}\n\nexport type CrossFilterTransformedProps = {\n  groupby: QueryFormColumn[];\n  labelMap: Record<string, string[]>;\n  setControlValue?: HandlerFunction;\n  setDataMask: SetDataMaskHook;\n  selectedValues: Record<number, string>;\n  emitCrossFilters?: boolean;\n};\n\nexport type ContextMenuTransformedProps = {\n  onContextMenu?: (\n    clientX: number,\n    clientY: number,\n    filters?: ContextMenuFilters,\n  ) => void;\n  setDataMask?: SetDataMaskHook;\n};\n\nexport interface TitleFormData {\n  xAxisTitle: string;\n  xAxisTitleMargin: number;\n  yAxisTitle: string;\n  yAxisTitleMargin: number;\n  yAxisTitlePosition: string;\n}\n\nexport type StackType = boolean | null | Partial<StackControlsValue>;\n\nexport interface TreePathInfo {\n  name: string;\n  dataIndex: number;\n  value: number | number[];\n}\n\nexport class EchartsChartPlugin<\n  T extends SqlaFormData = SqlaFormData,\n  P extends ChartProps = ChartProps,\n> extends ChartPlugin<T, P> {\n  constructor(props: any) {\n    const { metadata, ...restProps } = props;\n    super({\n      ...restProps,\n      metadata: new ChartMetadata({\n        parseMethod: 'json',\n        ...metadata,\n      }),\n    });\n  }\n}\n\nexport * from './Timeseries/types';\n"],"mappings":"uSAmBA,SAUEA,WAAW,EAEXC,aAAa,QACR,mBAAmB;AA8B1B,WAAYC,kBAKX;AALD,WAAYA,kBAAkB;EAC5BA,kBAAA,oBAAgB;EAChBA,kBAAA,4BAAwB;EACxBA,kBAAA,kCAA8B;EAC9BA,kBAAA,kCAA8B;AAChC,CAAC,EALWA,kBAAkB,KAAlBA,kBAAkB;AAY9B,WAAYC,iBAKX;AALD,WAAYA,iBAAiB;EAC3BA,iBAAA,eAAW;EACXA,iBAAA,qBAAiB;EACjBA,iBAAA,iBAAa;EACbA,iBAAA,mBAAe;AACjB,CAAC,EALWA,iBAAiB,KAAjBA,iBAAiB;AAO7B,WAAYC,UAGX;AAHD,WAAYA,UAAU;EACpBA,UAAA,qBAAiB;EACjBA,UAAA,mBAAe;AACjB,CAAC,EAHWA,UAAU,KAAVA,UAAU;AAsBtB,WAAYC,iBAcX;AAdD,WAAYA,iBAAiB;EAC3BA,iBAAA,eAAW;EACXA,iBAAA,iBAAa;EACbA,iBAAA,mBAAe;EACfA,iBAAA,qBAAiB;EACjBA,iBAAA,qBAAiB;EACjBA,iBAAA,6BAAyB;EACzBA,iBAAA,+BAA2B;EAC3BA,iBAAA,2BAAuB;EACvBA,iBAAA,iCAA6B;EAC7BA,iBAAA,mCAA+B;EAC/BA,iBAAA,yCAAqC;EACrCA,iBAAA,qCAAiC;EACjCA,iBAAA,2CAAuC;AACzC,CAAC,EAdWA,iBAAiB,KAAjBA,iBAAiB;AAwE7B,OAAM,MAAOC,kBAGX,SAAQN,WAAiB;EACzBO,YAAYC,KAAU;IACpB,MAAM,EAAEC,QAAQ,EAAE,GAAGC,SAAS,EAAE,GAAGF,KAAK;IACxC,KAAK,CAAC;MACJ,GAAGE,SAAS;MACZD,QAAQ,EAAE,IAAIR,aAAa,CAAC;QAC1BU,WAAW,EAAE,MAAM;QACnB,GAAGF;OACJ;KACF,CAAC;EACJ,CAAC;EAAAG,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CAGH,cAAc,oBAAoB,CAAC,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjIvBlB,kBAKX,4HAAAc,cAAA,CAAAI,QAAA,CAOWjB,iBAKX,2HAAAa,cAAA,CAAAI,QAAA,CAEWhB,UAGX,oHAAAY,cAAA,CAAAI,QAAA,CAmBWf,iBAcX,2HAAAW,cAAA,CAAAI,QAAA,CA0DYd,kBAGX,oJAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}