{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst STYLE_FIELDS = [\n'font',\n'fontWeight',\n'fontStyle',\n'fontSize',\n'fontFamily',\n'letterSpacing'];\n\nexport default function updateTextNode(node, { className, style = {}, text } = {}) {\n  const textNode = node;\n  if (textNode.textContent !== text) {\n    textNode.textContent = typeof text === 'undefined' ? null : text;\n  }\n  if (textNode.getAttribute('class') !== className) {\n    textNode.setAttribute('class', className != null ? className : '');\n  }\n  // Clear style\n  // Note: multi-word property names are hyphenated and not camel-cased.\n  textNode.style.removeProperty('font');\n  textNode.style.removeProperty('font-weight');\n  textNode.style.removeProperty('font-style');\n  textNode.style.removeProperty('font-size');\n  textNode.style.removeProperty('font-family');\n  textNode.style.removeProperty('letter-spacing');\n  // Apply new style\n  // Note: the font field will auto-populate other font fields when applicable.\n  STYLE_FIELDS.filter((field) => typeof style[field] !== 'undefined' && style[field] !== null).forEach((field) => {\n    textNode.style[field] = `${style[field]}`;\n  });\n  return textNode;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(STYLE_FIELDS, \"STYLE_FIELDS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/svg/updateTextNode.ts\");reactHotLoader.register(updateTextNode, \"updateTextNode\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/svg/updateTextNode.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["STYLE_FIELDS","updateTextNode","node","className","style","text","textNode","textContent","getAttribute","setAttribute","removeProperty","filter","field","forEach","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/svg/updateTextNode.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TextStyle } from '../types';\n\nconst STYLE_FIELDS: (keyof TextStyle)[] = [\n  'font',\n  'fontWeight',\n  'fontStyle',\n  'fontSize',\n  'fontFamily',\n  'letterSpacing',\n];\n\nexport default function updateTextNode(\n  node: SVGTextElement,\n  {\n    className,\n    style = {},\n    text,\n  }: {\n    className?: string;\n    style?: TextStyle;\n    text?: string;\n  } = {},\n) {\n  const textNode = node;\n\n  if (textNode.textContent !== text) {\n    textNode.textContent = typeof text === 'undefined' ? null : text;\n  }\n  if (textNode.getAttribute('class') !== className) {\n    textNode.setAttribute('class', className ?? '');\n  }\n\n  // Clear style\n  // Note: multi-word property names are hyphenated and not camel-cased.\n  textNode.style.removeProperty('font');\n  textNode.style.removeProperty('font-weight');\n  textNode.style.removeProperty('font-style');\n  textNode.style.removeProperty('font-size');\n  textNode.style.removeProperty('font-family');\n  textNode.style.removeProperty('letter-spacing');\n\n  // Apply new style\n  // Note: the font field will auto-populate other font fields when applicable.\n  STYLE_FIELDS.filter(\n    (field: keyof TextStyle) =>\n      typeof style[field] !== 'undefined' && style[field] !== null,\n  ).forEach((field: keyof TextStyle) => {\n    textNode.style[field] = `${style[field]}`;\n  });\n\n  return textNode;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,MAAMA,YAAY,GAAwB;AACxC,MAAM;AACN,YAAY;AACZ,WAAW;AACX,UAAU;AACV,YAAY;AACZ,eAAe,CAChB;;AAED,eAAc,SAAUC,cAAcA,CACpCC,IAAoB,EACpB,EACEC,SAAS,EACTC,KAAK,GAAG,EAAE,EACVC,IAAI,KAKF,EAAE;EAEN,MAAMC,QAAQ,GAAGJ,IAAI;EAErB,IAAII,QAAQ,CAACC,WAAW,KAAKF,IAAI,EAAE;IACjCC,QAAQ,CAACC,WAAW,GAAG,OAAOF,IAAI,KAAK,WAAW,GAAG,IAAI,GAAGA,IAAI;;EAElE,IAAIC,QAAQ,CAACE,YAAY,CAAC,OAAO,CAAC,KAAKL,SAAS,EAAE;IAChDG,QAAQ,CAACG,YAAY,CAAC,OAAO,EAAEN,SAAS,WAATA,SAAS,GAAI,EAAE,CAAC;;EAGjD;EACA;EACAG,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,MAAM,CAAC;EACrCJ,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,aAAa,CAAC;EAC5CJ,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,YAAY,CAAC;EAC3CJ,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,WAAW,CAAC;EAC1CJ,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,aAAa,CAAC;EAC5CJ,QAAQ,CAACF,KAAK,CAACM,cAAc,CAAC,gBAAgB,CAAC;EAE/C;EACA;EACAV,YAAY,CAACW,MAAM,CACjB,CAACC,KAAsB,KACrB,OAAOR,KAAK,CAACQ,KAAK,CAAC,KAAK,WAAW,IAAIR,KAAK,CAACQ,KAAK,CAAC,KAAK,IAAI,CAC/D,CAACC,OAAO,CAAC,CAACD,KAAsB,KAAI;IACnCN,QAAQ,CAACF,KAAK,CAACQ,KAAK,CAAC,GAAG,GAAGR,KAAK,CAACQ,KAAK,CAAC,EAAE;EAC3C,CAAC,CAAC;EAEF,OAAON,QAAQ;AACjB,CAAC,mBAAAQ,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjDKlB,YAAY,0IAAAc,cAAA,CAAAI,QAAA,CASMjB,cAAc,oKAAAkB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}