{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { _PickLayersPass as PickLayersPass } from '@deck.gl/core';\nimport { withParameters } from '@luma.gl/core';\nexport class TerrainPickingPass extends PickLayersPass {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"drawParameters\", {});\n  }\n\n  getRenderableLayers(viewport, opts) {\n    const {\n      layers\n    } = opts;\n    const result = [];\n    this.drawParameters = {};\n\n    this._resetColorEncoder(opts.pickZ);\n\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts);\n\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n        this.drawParameters[layer.id] = drawParamsByIndex[i].layerParameters;\n      }\n    }\n\n    return result;\n  }\n\n  renderTerrainCover(terrainCover, opts) {\n    const target = terrainCover.getPickingFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers);\n    const terrainLayer = terrainCover.targetLayer;\n\n    if (terrainLayer.props.pickable) {\n      layers.unshift(terrainLayer);\n    }\n\n    target.resize(viewport);\n    withParameters(this.gl, {\n      depthTest: false\n    }, () => this.render({ ...opts,\n      pickingFBO: target,\n      pass: \"terrain-cover-picking-\".concat(terrainCover.id),\n      layers,\n      effects: [],\n      viewports: [viewport],\n      cullRect: undefined,\n      deviceRect: viewport,\n      pickZ: false\n    }));\n  }\n\n  getLayerParameters(layer, layerIndex, viewport) {\n    if (this.drawParameters[layer.id]) {\n      return this.drawParameters[layer.id];\n    }\n\n    const parameters = super.getLayerParameters(layer, layerIndex, viewport);\n    parameters.blend = true;\n    return parameters;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TerrainPickingPass, \"TerrainPickingPass\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/terrain/terrain-picking-pass.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["_PickLayersPass","PickLayersPass","withParameters","TerrainPickingPass","constructor","args","_defineProperty","getRenderableLayers","viewport","opts","layers","result","drawParameters","_resetColorEncoder","pickZ","drawParamsByIndex","_getDrawLayerParams","i","length","layer","isComposite","shouldDrawLayer","push","id","layerParameters","renderTerrainCover","terrainCover","target","getPickingFramebuffer","renderViewport","filterLayers","terrainLayer","targetLayer","props","pickable","unshift","resize","gl","depthTest","render","pickingFBO","pass","concat","effects","viewports","cullRect","undefined","deviceRect","getLayerParameters","layerIndex","parameters","blend","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["../../../src/terrain/terrain-picking-pass.ts"],"sourcesContent":["import {\n  Layer,\n  Viewport,\n  LayersPassRenderOptions,\n  _PickLayersPass as PickLayersPass\n} from '@deck.gl/core';\nimport {withParameters} from '@luma.gl/core';\nimport type {TerrainCover} from './terrain-cover';\n\nexport type TerrainPickingPassRenderOptions = LayersPassRenderOptions & {\n  pickZ: boolean;\n};\n\n/** Renders textures used by the TerrainEffect picking pass */\nexport class TerrainPickingPass extends PickLayersPass {\n  /** Save layer index for use when drawing to terrain cover.\n   * When a terrain cover's picking buffer is rendered,\n   * we need to make sure each layer receives a consistent index (encoded in the alpha channel)\n   * so that a picked color can be decoded back to the correct layer.\n   * Updated in getRenderableLayers which is called in TerrainEffect.preRender\n   */\n  drawParameters: Record<string, any> = {};\n\n  getRenderableLayers(viewport: Viewport, opts: TerrainPickingPassRenderOptions): Layer[] {\n    const {layers} = opts;\n    const result: Layer[] = [];\n    this.drawParameters = {};\n    this._resetColorEncoder(opts.pickZ);\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts);\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n        this.drawParameters[layer.id] = drawParamsByIndex[i].layerParameters;\n      }\n    }\n\n    return result;\n  }\n\n  renderTerrainCover(terrainCover: TerrainCover, opts: Partial<TerrainPickingPassRenderOptions>) {\n    // console.log('Updating terrain cover for picking ' + terrainCover.id)\n    const target = terrainCover.getPickingFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers!);\n    const terrainLayer = terrainCover.targetLayer;\n    if (terrainLayer.props.pickable) {\n      layers.unshift(terrainLayer);\n    }\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          pickingFBO: target,\n          pass: `terrain-cover-picking-${terrainCover.id}`,\n          layers,\n          effects: [],\n          viewports: [viewport],\n          // Disable the default culling because TileLayer would cull sublayers based on the screen viewport,\n          // not the viewport of the terrain cover. Culling is already done by `terrainCover.filterLayers`\n          cullRect: undefined,\n          deviceRect: viewport,\n          pickZ: false\n        })\n    );\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): any {\n    if (this.drawParameters[layer.id]) {\n      return this.drawParameters[layer.id];\n    }\n    const parameters = super.getLayerParameters(layer, layerIndex, viewport);\n    parameters.blend = true;\n    return parameters;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}