{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Modal = AsyncEsmComponent(() => import('./OverwriteConfirmModal'));\nconst OverrideConfirm = () => {\n  const overwriteConfirmMetadata = useSelector(({ dashboardState }) => dashboardState.overwriteConfirmMetadata);\n  return ___EmotionJSX(React.Fragment, null,\n  overwriteConfirmMetadata && ___EmotionJSX(Modal, { overwriteConfirmMetadata: overwriteConfirmMetadata })\n  );\n};__signature__(OverrideConfirm, \"useSelector{overwriteConfirmMetadata}\", () => [useSelector]);const _default =\nOverrideConfirm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Modal, \"Modal\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/OverwriteConfirm/index.tsx\");reactHotLoader.register(OverrideConfirm, \"OverrideConfirm\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/OverwriteConfirm/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/OverwriteConfirm/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useSelector","AsyncEsmComponent","jsx","___EmotionJSX","Modal","OverrideConfirm","overwriteConfirmMetadata","dashboardState","Fragment","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/OverwriteConfirm/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport { DashboardState, RootState } from 'src/dashboard/types';\n\nconst Modal = AsyncEsmComponent(() => import('./OverwriteConfirmModal'));\n\nconst OverrideConfirm = () => {\n  const overwriteConfirmMetadata = useSelector<\n    RootState,\n    DashboardState['overwriteConfirmMetadata']\n  >(({ dashboardState }) => dashboardState.overwriteConfirmMetadata);\n\n  return (\n    <>\n      {overwriteConfirmMetadata && (\n        <Modal overwriteConfirmMetadata={overwriteConfirmMetadata} />\n      )}\n    </>\n  );\n};\n\nexport default OverrideConfirm;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,iBAAiB,MAAM,kCAAkC,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAGjE,MAAMC,KAAK,GAAGH,iBAAiB,CAAC,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAExE,MAAMI,eAAe,GAAGA,CAAA,KAAK;EAC3B,MAAMC,wBAAwB,GAAGN,WAAW,CAG1C,CAAC,EAAEO,cAAc,EAAE,KAAKA,cAAc,CAACD,wBAAwB,CAAC;EAElE,OACEH,aAAA,CAAAJ,KAAA,CAAAS,QAAA;EACGF,wBAAwB,IACvBH,aAAA,CAACC,KAAK,IAACE,wBAAwB,EAAEA,wBAAyB;EAE9D,CAAG;AAEP,CAAC,CAACG,aAAA,CAbIJ,eAAe,kDACcL,WAAW,SAAAU,QAAA;AAc/BL,eAAe,CAA9B,eAAAK,QAAA,CAA+B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjBzBX,KAAK,yHAAAO,cAAA,CAAAI,QAAA,CAELV,eAAe,mIAAAM,cAAA,CAAAI,QAAA,CAAAL,QAAA,mJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}