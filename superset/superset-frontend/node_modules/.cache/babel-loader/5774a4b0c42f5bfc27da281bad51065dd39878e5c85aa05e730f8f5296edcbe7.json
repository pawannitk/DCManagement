{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateDataMask } from 'src/dataMask/actions';\nimport DashboardHeader from 'src/dashboard/components/Header';\nimport isDashboardLoading from 'src/dashboard/util/isDashboardLoading';\n\nimport { dashboardInfoChanged } from 'src/dashboard/actions/dashboardInfo';\n\nimport {\n  setEditMode,\n  showBuilderPane,\n  fetchFaveStar,\n  saveFaveStar,\n  savePublished,\n  setColorScheme,\n  setUnsavedChanges,\n  fetchCharts,\n  updateCss,\n  onChange,\n  saveDashboardRequest,\n  setMaxUndoHistoryExceeded,\n  maxUndoHistoryToast,\n  setRefreshFrequency,\n  onRefresh } from\n'src/dashboard/actions/dashboardState';\n\nimport {\n  undoLayoutAction,\n  redoLayoutAction,\n  updateDashboardTitle,\n  dashboardTitleChanged } from\n'src/dashboard/actions/dashboardLayout';\nimport {\n  addSuccessToast,\n  addDangerToast,\n  addWarningToast } from\n'src/components/MessageToasts/actions';\n\nimport { logEvent } from 'src/logger/actions';\nimport { DASHBOARD_HEADER_ID } from 'src/dashboard/util/constants';\n\nfunction mapStateToProps({\n  dashboardLayout: undoableLayout,\n  dashboardState,\n  reports,\n  dashboardInfo,\n  charts,\n  dataMask,\n  user\n}) {\n  return {\n    dashboardInfo,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    layout: undoableLayout.present,\n    dashboardTitle: (\n    (undoableLayout.present[DASHBOARD_HEADER_ID] || {}).meta || {}).\n    text,\n    expandedSlices: dashboardState.expandedSlices,\n    refreshFrequency: dashboardState.refreshFrequency,\n    shouldPersistRefreshFrequency:\n    !!dashboardState.shouldPersistRefreshFrequency,\n    customCss: dashboardState.css,\n    colorNamespace: dashboardState.colorNamespace,\n    colorScheme: dashboardState.colorScheme,\n    charts,\n    dataMask,\n    user,\n    isStarred: !!dashboardState.isStarred,\n    isPublished: !!dashboardState.isPublished,\n    isLoading: isDashboardLoading(charts),\n    hasUnsavedChanges: !!dashboardState.hasUnsavedChanges,\n    maxUndoHistoryExceeded: !!dashboardState.maxUndoHistoryExceeded,\n    lastModifiedTime: Math.max(\n      dashboardState.lastModifiedTime,\n      dashboardInfo.last_modified_time\n    ),\n    editMode: !!dashboardState.editMode,\n    slug: dashboardInfo.slug,\n    metadata: dashboardInfo.metadata,\n    reports\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addSuccessToast,\n      addDangerToast,\n      addWarningToast,\n      onUndo: undoLayoutAction,\n      onRedo: redoLayoutAction,\n      setEditMode,\n      showBuilderPane,\n      setColorScheme,\n      setUnsavedChanges,\n      fetchFaveStar,\n      saveFaveStar,\n      savePublished,\n      fetchCharts,\n      updateDashboardTitle,\n      updateCss,\n      onChange,\n      onSave: saveDashboardRequest,\n      setMaxUndoHistoryExceeded,\n      maxUndoHistoryToast,\n      logEvent,\n      setRefreshFrequency,\n      onRefresh,\n      dashboardInfoChanged,\n      dashboardTitleChanged,\n      updateDataMask\n    },\n    dispatch\n  );\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(DashboardHeader);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["bindActionCreators","connect","updateDataMask","DashboardHeader","isDashboardLoading","dashboardInfoChanged","setEditMode","showBuilderPane","fetchFaveStar","saveFaveStar","savePublished","setColorScheme","setUnsavedChanges","fetchCharts","updateCss","onChange","saveDashboardRequest","setMaxUndoHistoryExceeded","maxUndoHistoryToast","setRefreshFrequency","onRefresh","undoLayoutAction","redoLayoutAction","updateDashboardTitle","dashboardTitleChanged","addSuccessToast","addDangerToast","addWarningToast","logEvent","DASHBOARD_HEADER_ID","mapStateToProps","dashboardLayout","undoableLayout","dashboardState","reports","dashboardInfo","charts","dataMask","user","undoLength","past","length","redoLength","future","layout","present","dashboardTitle","meta","text","expandedSlices","refreshFrequency","shouldPersistRefreshFrequency","customCss","css","colorNamespace","colorScheme","isStarred","isPublished","isLoading","hasUnsavedChanges","maxUndoHistoryExceeded","lastModifiedTime","Math","max","last_modified_time","editMode","slug","metadata","mapDispatchToProps","dispatch","onUndo","onRedo","onSave","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/DashboardHeader.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateDataMask } from 'src/dataMask/actions';\nimport DashboardHeader from 'src/dashboard/components/Header';\nimport isDashboardLoading from 'src/dashboard/util/isDashboardLoading';\n\nimport { dashboardInfoChanged } from 'src/dashboard/actions/dashboardInfo';\n\nimport {\n  setEditMode,\n  showBuilderPane,\n  fetchFaveStar,\n  saveFaveStar,\n  savePublished,\n  setColorScheme,\n  setUnsavedChanges,\n  fetchCharts,\n  updateCss,\n  onChange,\n  saveDashboardRequest,\n  setMaxUndoHistoryExceeded,\n  maxUndoHistoryToast,\n  setRefreshFrequency,\n  onRefresh,\n} from 'src/dashboard/actions/dashboardState';\n\nimport {\n  undoLayoutAction,\n  redoLayoutAction,\n  updateDashboardTitle,\n  dashboardTitleChanged,\n} from 'src/dashboard/actions/dashboardLayout';\nimport {\n  addSuccessToast,\n  addDangerToast,\n  addWarningToast,\n} from 'src/components/MessageToasts/actions';\n\nimport { logEvent } from 'src/logger/actions';\nimport { DASHBOARD_HEADER_ID } from 'src/dashboard/util/constants';\n\nfunction mapStateToProps({\n  dashboardLayout: undoableLayout,\n  dashboardState,\n  reports,\n  dashboardInfo,\n  charts,\n  dataMask,\n  user,\n}) {\n  return {\n    dashboardInfo,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    layout: undoableLayout.present,\n    dashboardTitle: (\n      (undoableLayout.present[DASHBOARD_HEADER_ID] || {}).meta || {}\n    ).text,\n    expandedSlices: dashboardState.expandedSlices,\n    refreshFrequency: dashboardState.refreshFrequency,\n    shouldPersistRefreshFrequency:\n      !!dashboardState.shouldPersistRefreshFrequency,\n    customCss: dashboardState.css,\n    colorNamespace: dashboardState.colorNamespace,\n    colorScheme: dashboardState.colorScheme,\n    charts,\n    dataMask,\n    user,\n    isStarred: !!dashboardState.isStarred,\n    isPublished: !!dashboardState.isPublished,\n    isLoading: isDashboardLoading(charts),\n    hasUnsavedChanges: !!dashboardState.hasUnsavedChanges,\n    maxUndoHistoryExceeded: !!dashboardState.maxUndoHistoryExceeded,\n    lastModifiedTime: Math.max(\n      dashboardState.lastModifiedTime,\n      dashboardInfo.last_modified_time,\n    ),\n    editMode: !!dashboardState.editMode,\n    slug: dashboardInfo.slug,\n    metadata: dashboardInfo.metadata,\n    reports,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addSuccessToast,\n      addDangerToast,\n      addWarningToast,\n      onUndo: undoLayoutAction,\n      onRedo: redoLayoutAction,\n      setEditMode,\n      showBuilderPane,\n      setColorScheme,\n      setUnsavedChanges,\n      fetchFaveStar,\n      saveFaveStar,\n      savePublished,\n      fetchCharts,\n      updateDashboardTitle,\n      updateCss,\n      onChange,\n      onSave: saveDashboardRequest,\n      setMaxUndoHistoryExceeded,\n      maxUndoHistoryToast,\n      logEvent,\n      setRefreshFrequency,\n      onRefresh,\n      dashboardInfoChanged,\n      dashboardTitleChanged,\n      updateDataMask,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardHeader);\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,OAAO,QAAQ,aAAa;;AAErC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,kBAAkB,MAAM,uCAAuC;;AAEtE,SAASC,oBAAoB,QAAQ,qCAAqC;;AAE1E;EACEC,WAAW;EACXC,eAAe;EACfC,aAAa;EACbC,YAAY;EACZC,aAAa;EACbC,cAAc;EACdC,iBAAiB;EACjBC,WAAW;EACXC,SAAS;EACTC,QAAQ;EACRC,oBAAoB;EACpBC,yBAAyB;EACzBC,mBAAmB;EACnBC,mBAAmB;EACnBC,SAAS;AACJ,sCAAsC;;AAE7C;EACEC,gBAAgB;EAChBC,gBAAgB;EAChBC,oBAAoB;EACpBC,qBAAqB;AAChB,uCAAuC;AAC9C;EACEC,eAAe;EACfC,cAAc;EACdC,eAAe;AACV,sCAAsC;;AAE7C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,mBAAmB,QAAQ,8BAA8B;;AAElE,SAASC,eAAeA,CAAC;EACvBC,eAAe,EAAEC,cAAc;EAC/BC,cAAc;EACdC,OAAO;EACPC,aAAa;EACbC,MAAM;EACNC,QAAQ;EACRC;AACF,CAAC,EAAE;EACD,OAAO;IACLH,aAAa;IACbI,UAAU,EAAEP,cAAc,CAACQ,IAAI,CAACC,MAAM;IACtCC,UAAU,EAAEV,cAAc,CAACW,MAAM,CAACF,MAAM;IACxCG,MAAM,EAAEZ,cAAc,CAACa,OAAO;IAC9BC,cAAc,EAAE;IACd,CAACd,cAAc,CAACa,OAAO,CAAChB,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAEkB,IAAI,IAAI,CAAC,CAAC;IAC9DC,IAAI;IACNC,cAAc,EAAEhB,cAAc,CAACgB,cAAc;IAC7CC,gBAAgB,EAAEjB,cAAc,CAACiB,gBAAgB;IACjDC,6BAA6B;IAC3B,CAAC,CAAClB,cAAc,CAACkB,6BAA6B;IAChDC,SAAS,EAAEnB,cAAc,CAACoB,GAAG;IAC7BC,cAAc,EAAErB,cAAc,CAACqB,cAAc;IAC7CC,WAAW,EAAEtB,cAAc,CAACsB,WAAW;IACvCnB,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJkB,SAAS,EAAE,CAAC,CAACvB,cAAc,CAACuB,SAAS;IACrCC,WAAW,EAAE,CAAC,CAACxB,cAAc,CAACwB,WAAW;IACzCC,SAAS,EAAEtD,kBAAkB,CAACgC,MAAM,CAAC;IACrCuB,iBAAiB,EAAE,CAAC,CAAC1B,cAAc,CAAC0B,iBAAiB;IACrDC,sBAAsB,EAAE,CAAC,CAAC3B,cAAc,CAAC2B,sBAAsB;IAC/DC,gBAAgB,EAAEC,IAAI,CAACC,GAAG;MACxB9B,cAAc,CAAC4B,gBAAgB;MAC/B1B,aAAa,CAAC6B;IAChB,CAAC;IACDC,QAAQ,EAAE,CAAC,CAAChC,cAAc,CAACgC,QAAQ;IACnCC,IAAI,EAAE/B,aAAa,CAAC+B,IAAI;IACxBC,QAAQ,EAAEhC,aAAa,CAACgC,QAAQ;IAChCjC;EACF,CAAC;AACH;;AAEA,SAASkC,kBAAkBA,CAACC,QAAQ,EAAE;EACpC,OAAOrE,kBAAkB;IACvB;MACEyB,eAAe;MACfC,cAAc;MACdC,eAAe;MACf2C,MAAM,EAAEjD,gBAAgB;MACxBkD,MAAM,EAAEjD,gBAAgB;MACxBhB,WAAW;MACXC,eAAe;MACfI,cAAc;MACdC,iBAAiB;MACjBJ,aAAa;MACbC,YAAY;MACZC,aAAa;MACbG,WAAW;MACXU,oBAAoB;MACpBT,SAAS;MACTC,QAAQ;MACRyD,MAAM,EAAExD,oBAAoB;MAC5BC,yBAAyB;MACzBC,mBAAmB;MACnBU,QAAQ;MACRT,mBAAmB;MACnBC,SAAS;MACTf,oBAAoB;MACpBmB,qBAAqB;MACrBtB;IACF,CAAC;IACDmE;EACF,CAAC;AACH,CAAC,MAAAI,QAAA;;AAEcxE,OAAO,CAAC6B,eAAe,EAAEsC,kBAAkB,CAAC,CAACjE,eAAe,CAAC,CAA5E,eAAAsE,QAAA,CAA6E,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA5EpEhD,eAAe,4HAAA4C,cAAA,CAAAI,QAAA,CA2CfV,kBAAkB,+HAAAM,cAAA,CAAAI,QAAA,CAAAL,QAAA,4IAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}