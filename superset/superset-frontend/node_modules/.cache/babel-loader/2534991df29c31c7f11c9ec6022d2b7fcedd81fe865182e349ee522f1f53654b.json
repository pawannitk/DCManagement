{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getXAxisLabel } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nexport const timeComparePivotOperator = (formData, queryObject) => {\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n  if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n    const aggregates = Object.fromEntries([...metricOffsetMap.values(), ...metricOffsetMap.keys()].map((metric) => [\n    metric,\n    // use the 'mean' aggregates to avoid drop NaN\n    { operator: 'mean' }]\n    ));\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        drop_missing_columns: !(formData != null && formData.show_empty_columns),\n        aggregates\n      }\n    };\n  }\n  return undefined;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(timeComparePivotOperator, \"timeComparePivotOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","getColumnLabel","getXAxisLabel","getMetricOffsetsMap","isTimeComparison","timeComparePivotOperator","formData","queryObject","metricOffsetMap","xAxisLabel","columns","series_columns","aggregates","Object","fromEntries","values","keys","map","metric","operator","operation","options","index","drop_missing_columns","show_empty_columns","undefined","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  NumpyFunction,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeComparePivotOperator: PostProcessingFactory<\n  PostProcessingPivot\n> = (formData, queryObject) => {\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n\n  if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n    const aggregates = Object.fromEntries(\n      [...metricOffsetMap.values(), ...metricOffsetMap.keys()].map(metric => [\n        metric,\n        // use the 'mean' aggregates to avoid drop NaN\n        { operator: 'mean' as NumpyFunction },\n      ]),\n    );\n\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        drop_missing_columns: !formData?.show_empty_columns,\n        aggregates,\n      },\n    };\n  }\n\n  return undefined;\n};\n"],"mappings":"wSAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aAAa,EACbC,cAAc,EAGdC,aAAa,QACR,mBAAmB;AAC1B,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,SAAS;AAG/D,OAAO,MAAMC,wBAAwB,GAEjCA,CAACC,QAAQ,EAAEC,WAAW,KAAI;EAC5B,MAAMC,eAAe,GAAGL,mBAAmB,CAACG,QAAQ,EAAEC,WAAW,CAAC;EAClE,MAAME,UAAU,GAAGP,aAAa,CAACI,QAAQ,CAAC;EAC1C,MAAMI,OAAO,GAAGH,WAAW,CAACI,cAAc,IAAIJ,WAAW,CAACG,OAAO;EAEjE,IAAIN,gBAAgB,CAACE,QAAQ,EAAEC,WAAW,CAAC,IAAIE,UAAU,EAAE;IACzD,MAAMG,UAAU,GAAGC,MAAM,CAACC,WAAW,CACnC,CAAC,GAAGN,eAAe,CAACO,MAAM,EAAE,EAAE,GAAGP,eAAe,CAACQ,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAAAC,MAAM,KAAI;IACrEA,MAAM;IACN;IACA,EAAEC,QAAQ,EAAE,MAAuB,EAAE;IACtC,CAAC,CACH;IAED,OAAO;MACLC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE;QACPC,KAAK,EAAE,CAACb,UAAU,CAAC;QACnBC,OAAO,EAAEV,aAAa,CAACU,OAAO,CAAC,CAACO,GAAG,CAAChB,cAAc,CAAC;QACnDsB,oBAAoB,EAAE,EAACjB,QAAQ,YAARA,QAAQ,CAAEkB,kBAAkB;QACnDZ;;KAEH;;EAGH,OAAOa,SAAS;AAClB,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAH,SAAA,MAAAC,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5BWxB,wBAAwB,8LAAAyB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAL,SAAA,CAAAK,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}