{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function extractExtras(formData) {\n  const applied_time_extras = {};\n  const filters = [];\n  const extras = {};\n  const extract = {\n    filters,\n    extras,\n    applied_time_extras\n  };\n  const reservedColumnsToQueryField = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity'\n  };\n  (formData.extra_filters || []).forEach((filter) => {\n    if (filter.col in reservedColumnsToQueryField) {\n      const key = filter.col;\n      const queryField = reservedColumnsToQueryField[key];\n      extract[queryField] = filter.val;\n      applied_time_extras[key] = filter.val;\n    } else\n    {\n      filters.push(filter);\n    }\n  });\n  // SQL\n  extras.time_grain_sqla = extract.time_grain_sqla || formData.time_grain_sqla;\n  extract.granularity =\n  extract.granularity_sqla ||\n  formData.granularity ||\n  formData.granularity_sqla;\n  delete extract.granularity_sqla;\n  delete extract.time_grain_sqla;\n  return extract;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractExtras, \"extractExtras\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/extractExtras.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["extractExtras","formData","applied_time_extras","filters","extras","extract","reservedColumnsToQueryField","__time_range","__time_col","__time_grain","__granularity","extra_filters","forEach","filter","col","key","queryField","val","push","time_grain_sqla","granularity","granularity_sqla","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/extractExtras.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable camelcase */\nimport { TimeGranularity, QueryFormData } from '@superset-ui/core';\nimport {\n  AppliedTimeExtras,\n  QueryObjectExtras,\n  QueryObjectFilterClause,\n  TimeColumnConfigKey,\n} from './types';\n\ntype ExtraFilterQueryField = {\n  time_range?: string;\n  granularity_sqla?: string;\n  time_grain_sqla?: TimeGranularity;\n  granularity?: string;\n};\n\ntype ExtractedExtra = ExtraFilterQueryField & {\n  filters: QueryObjectFilterClause[];\n  extras: QueryObjectExtras;\n  applied_time_extras: AppliedTimeExtras;\n};\n\nexport default function extractExtras(formData: QueryFormData): ExtractedExtra {\n  const applied_time_extras: AppliedTimeExtras = {};\n  const filters: QueryObjectFilterClause[] = [];\n  const extras: QueryObjectExtras = {};\n  const extract: ExtractedExtra = {\n    filters,\n    extras,\n    applied_time_extras,\n  };\n\n  const reservedColumnsToQueryField: Record<\n    TimeColumnConfigKey,\n    keyof ExtraFilterQueryField\n  > = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n\n  (formData.extra_filters || []).forEach(filter => {\n    if (filter.col in reservedColumnsToQueryField) {\n      const key = filter.col as TimeColumnConfigKey;\n      const queryField = reservedColumnsToQueryField[key];\n      extract[queryField] = filter.val as TimeGranularity;\n      applied_time_extras[key] = filter.val as string;\n    } else {\n      filters.push(filter);\n    }\n  });\n\n  // SQL\n  extras.time_grain_sqla = extract.time_grain_sqla || formData.time_grain_sqla;\n  extract.granularity =\n    extract.granularity_sqla ||\n    formData.granularity ||\n    formData.granularity_sqla;\n  delete extract.granularity_sqla;\n  delete extract.time_grain_sqla;\n\n  return extract;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAyCA,eAAc,SAAUA,aAAaA,CAACC,QAAuB;EAC3D,MAAMC,mBAAmB,GAAsB,EAAE;EACjD,MAAMC,OAAO,GAA8B,EAAE;EAC7C,MAAMC,MAAM,GAAsB,EAAE;EACpC,MAAMC,OAAO,GAAmB;IAC9BF,OAAO;IACPC,MAAM;IACNF;GACD;EAED,MAAMI,2BAA2B,GAG7B;IACFC,YAAY,EAAE,YAAY;IAC1BC,UAAU,EAAE,kBAAkB;IAC9BC,YAAY,EAAE,iBAAiB;IAC/BC,aAAa,EAAE;GAChB;EAED,CAACT,QAAQ,CAACU,aAAa,IAAI,EAAE,EAAEC,OAAO,CAAC,CAAAC,MAAM,KAAG;IAC9C,IAAIA,MAAM,CAACC,GAAG,IAAIR,2BAA2B,EAAE;MAC7C,MAAMS,GAAG,GAAGF,MAAM,CAACC,GAA0B;MAC7C,MAAME,UAAU,GAAGV,2BAA2B,CAACS,GAAG,CAAC;MACnDV,OAAO,CAACW,UAAU,CAAC,GAAGH,MAAM,CAACI,GAAsB;MACnDf,mBAAmB,CAACa,GAAG,CAAC,GAAGF,MAAM,CAACI,GAAa;KAChD;IAAM;MACLd,OAAO,CAACe,IAAI,CAACL,MAAM,CAAC;;EAExB,CAAC,CAAC;EAEF;EACAT,MAAM,CAACe,eAAe,GAAGd,OAAO,CAACc,eAAe,IAAIlB,QAAQ,CAACkB,eAAe;EAC5Ed,OAAO,CAACe,WAAW;EACjBf,OAAO,CAACgB,gBAAgB;EACxBpB,QAAQ,CAACmB,WAAW;EACpBnB,QAAQ,CAACoB,gBAAgB;EAC3B,OAAOhB,OAAO,CAACgB,gBAAgB;EAC/B,OAAOhB,OAAO,CAACc,eAAe;EAE9B,OAAOd,OAAO;AAChB,CAAC,mBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzCuB1B,aAAa,0JAAA2B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}