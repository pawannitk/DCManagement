{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { css, t, useTheme, useTruncation } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { setDirectPathToChild } from 'src/dashboard/actions/dashboardState';\nimport { DependencyItem, Row, RowLabel, RowTruncationCount, RowValue, TooltipList } from './Styles';\nimport { useFilterDependencies } from './useFilterDependencies';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DependencyValue = ({ dependency, hasSeparator }) => {\n  const dispatch = useDispatch();\n  const handleClick = useCallback(() => {\n    dispatch(setDirectPathToChild([dependency.id]));\n  }, [dependency.id, dispatch]);\n  return ___EmotionJSX(\"span\", null,\n  hasSeparator && ___EmotionJSX(\"span\", null, \", \"),\n  ___EmotionJSX(DependencyItem, { role: \"button\", onClick: handleClick, tabIndex: 0 },\n  dependency.name\n  )\n  );\n};__signature__(DependencyValue, \"useDispatch{dispatch}\\nuseCallback{handleClick}\", () => [useDispatch]);\nexport const DependenciesRow = /*#__PURE__*/React.memo(__signature__(({ filter }) => {\n  const dependencies = useFilterDependencies(filter);\n  const [dependenciesRef, plusRef, elementsTruncated, hasHiddenElements] = useTruncation();\n  const theme = useTheme();\n  const tooltipText = useMemo(() => elementsTruncated > 0 && dependencies ? ___EmotionJSX(TooltipList, null,\n  dependencies.map((dependency) => ___EmotionJSX(\"li\", null,\n  ___EmotionJSX(DependencyValue, { dependency: dependency })\n  ))\n  ) : null, [elementsTruncated, dependencies]);\n  if (!Array.isArray(dependencies) || dependencies.length === 0) {\n    return null;\n  }\n  return ___EmotionJSX(Row, null,\n  ___EmotionJSX(RowLabel, { css: css`\n          display: inline-flex;\n          align-items: center;\n        ` },\n  t('Dependent on'), ' ',\n  ___EmotionJSX(TooltipWithTruncation, { title: t('Filter only displays values relevant to selections made in other filters.') },\n  ___EmotionJSX(Icons.Info, { iconSize: \"m\", iconColor: theme.colors.grayscale.light1, css: css`\n              margin-left: ${theme.gridUnit}px;\n            ` })\n  )\n  ),\n  ___EmotionJSX(TooltipWithTruncation, { title: tooltipText },\n  ___EmotionJSX(RowValue, { ref: dependenciesRef },\n  dependencies.map((dependency, index) => ___EmotionJSX(DependencyValue, { key: dependency.id, dependency: dependency, hasSeparator: index !== 0 }))\n  ),\n  hasHiddenElements && ___EmotionJSX(RowTruncationCount, { ref: plusRef }, \"+\",\n  elementsTruncated\n  )\n  )\n  );\n}, \"useFilterDependencies{dependencies}\\nuseTruncation{[dependenciesRef, plusRef, elementsTruncated, hasHiddenElements]}\\nuseTheme{theme}\\nuseMemo{tooltipText}\", () => [useFilterDependencies, useTruncation, useTheme]));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DependencyValue, \"DependencyValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/DependenciesRow.tsx\");reactHotLoader.register(DependenciesRow, \"DependenciesRow\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/DependenciesRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useMemo","useDispatch","css","t","useTheme","useTruncation","Icons","setDirectPathToChild","DependencyItem","Row","RowLabel","RowTruncationCount","RowValue","TooltipList","useFilterDependencies","TooltipWithTruncation","jsx","___EmotionJSX","DependencyValue","dependency","hasSeparator","dispatch","handleClick","id","role","onClick","tabIndex","name","__signature__","DependenciesRow","memo","filter","dependencies","dependenciesRef","plusRef","elementsTruncated","hasHiddenElements","theme","tooltipText","map","Array","isArray","length","title","Info","iconSize","iconColor","colors","grayscale","light1","gridUnit","ref","index","key","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/DependenciesRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { css, t, useTheme, useTruncation } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { setDirectPathToChild } from 'src/dashboard/actions/dashboardState';\nimport {\n  DependencyItem,\n  Row,\n  RowLabel,\n  RowTruncationCount,\n  RowValue,\n  TooltipList,\n} from './Styles';\nimport { useFilterDependencies } from './useFilterDependencies';\nimport { DependencyValueProps, FilterCardRowProps } from './types';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';\n\nconst DependencyValue = ({\n  dependency,\n  hasSeparator,\n}: DependencyValueProps) => {\n  const dispatch = useDispatch();\n  const handleClick = useCallback(() => {\n    dispatch(setDirectPathToChild([dependency.id]));\n  }, [dependency.id, dispatch]);\n  return (\n    <span>\n      {hasSeparator && <span>, </span>}\n      <DependencyItem role=\"button\" onClick={handleClick} tabIndex={0}>\n        {dependency.name}\n      </DependencyItem>\n    </span>\n  );\n};\n\nexport const DependenciesRow = React.memo(({ filter }: FilterCardRowProps) => {\n  const dependencies = useFilterDependencies(filter);\n  const [dependenciesRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n  const theme = useTheme();\n\n  const tooltipText = useMemo(\n    () =>\n      elementsTruncated > 0 && dependencies ? (\n        <TooltipList>\n          {dependencies.map(dependency => (\n            <li>\n              <DependencyValue dependency={dependency} />\n            </li>\n          ))}\n        </TooltipList>\n      ) : null,\n    [elementsTruncated, dependencies],\n  );\n\n  if (!Array.isArray(dependencies) || dependencies.length === 0) {\n    return null;\n  }\n  return (\n    <Row>\n      <RowLabel\n        css={css`\n          display: inline-flex;\n          align-items: center;\n        `}\n      >\n        {t('Dependent on')}{' '}\n        <TooltipWithTruncation\n          title={t(\n            'Filter only displays values relevant to selections made in other filters.',\n          )}\n        >\n          <Icons.Info\n            iconSize=\"m\"\n            iconColor={theme.colors.grayscale.light1}\n            css={css`\n              margin-left: ${theme.gridUnit}px;\n            `}\n          />\n        </TooltipWithTruncation>\n      </RowLabel>\n      <TooltipWithTruncation title={tooltipText}>\n        <RowValue ref={dependenciesRef}>\n          {dependencies.map((dependency, index) => (\n            <DependencyValue\n              key={dependency.id}\n              dependency={dependency}\n              hasSeparator={index !== 0}\n            />\n          ))}\n        </RowValue>\n        {hasHiddenElements && (\n          <RowTruncationCount ref={plusRef}>\n            +{elementsTruncated}\n          </RowTruncationCount>\n        )}\n      </TooltipWithTruncation>\n    </Row>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}