{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RegistryWithDefaultKey, OverwritePolicy } from '../models';\nexport default class ColorSchemeRegistry extends RegistryWithDefaultKey {\n  constructor() {\n    super({\n      name: 'ColorScheme',\n      overwritePolicy: OverwritePolicy.Warn,\n      setFirstItemAsDefault: true\n    });\n  }\n  get(key, strict = false) {\n    const target = super.get(key);\n    // fallsback to default scheme if any\n    if (!strict && !target) {\n      const defaultKey = super.getDefaultKey();\n      if (defaultKey) {\n        return super.get(defaultKey);\n      }\n    }\n    return target;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ColorSchemeRegistry, \"ColorSchemeRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/ColorSchemeRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["RegistryWithDefaultKey","OverwritePolicy","ColorSchemeRegistry","constructor","name","overwritePolicy","Warn","setFirstItemAsDefault","get","key","strict","target","defaultKey","getDefaultKey","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/ColorSchemeRegistry.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { RegistryWithDefaultKey, OverwritePolicy } from '../models';\n\nexport default class ColorSchemeRegistry<T> extends RegistryWithDefaultKey<T> {\n  constructor() {\n    super({\n      name: 'ColorScheme',\n      overwritePolicy: OverwritePolicy.Warn,\n      setFirstItemAsDefault: true,\n    });\n  }\n\n  get(key?: string, strict = false) {\n    const target = super.get(key) as T | undefined;\n\n    // fallsback to default scheme if any\n    if (!strict && !target) {\n      const defaultKey = super.getDefaultKey();\n      if (defaultKey) {\n        return super.get(defaultKey) as T | undefined;\n      }\n    }\n    return target;\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,sBAAsB,EAAEC,eAAe,QAAQ,WAAW;AAEnE,eAAc,MAAOC,mBAAuB,SAAQF,sBAAyB;EAC3EG,YAAA;IACE,KAAK,CAAC;MACJC,IAAI,EAAE,aAAa;MACnBC,eAAe,EAAEJ,eAAe,CAACK,IAAI;MACrCC,qBAAqB,EAAE;KACxB,CAAC;EACJ;EAEAC,GAAGA,CAACC,GAAY,EAAEC,MAAM,GAAG,KAAK;IAC9B,MAAMC,MAAM,GAAG,KAAK,CAACH,GAAG,CAACC,GAAG,CAAkB;IAE9C;IACA,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,EAAE;MACtB,MAAMC,UAAU,GAAG,KAAK,CAACC,aAAa,EAAE;MACxC,IAAID,UAAU,EAAE;QACd,OAAO,KAAK,CAACJ,GAAG,CAACI,UAAU,CAAkB;;;IAGjD,OAAOD,MAAM;EACf,CAAC;EAAAG,iCAAAL,GAAA,EAAAM,IAAA;IAAA,KAAAN,GAAA,IAAAO,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArBoBnB,mBAAuB,sKAAAoB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}