{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { ensureIsArray, t } from '@superset-ui/core';\nimport { getQueryMode, isRawMode } from './shared';\nconst dndAllColumns = {\n  type: 'DndColumnSelect',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  default: [],\n  mapStateToProps({ datasource, controls }, controlState) {\n    const newState = {};\n    if (datasource) {var _datasource$columns$;\n      if (datasource != null && (_datasource$columns$ = datasource.columns[0]) != null && _datasource$columns$.hasOwnProperty('filterable')) {var _datasource$columns;\n        newState.options = datasource == null ? void 0 : (_datasource$columns = datasource.columns) == null ? void 0 : _datasource$columns.filter((c) => c.filterable);\n      } else\n\n      newState.options = datasource.columns;\n    }\n    newState.queryMode = getQueryMode(controls);\n    newState.externalValidationErrors =\n    isRawMode({ controls }) && ensureIsArray(controlState == null ? void 0 : controlState.value).length === 0 ?\n    [t('must have a value')] :\n    [];\n    return newState;\n  },\n  visibility: isRawMode,\n  resetOnHide: false\n};\nexport const allColumnsControlSetItem = {\n  name: 'all_columns',\n  config: dndAllColumns\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(dndAllColumns, \"dndAllColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx\");reactHotLoader.register(allColumnsControlSetItem, \"allColumnsControlSetItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","t","getQueryMode","isRawMode","dndAllColumns","type","label","description","default","mapStateToProps","datasource","controls","controlState","newState","_datasource$columns$","columns","hasOwnProperty","_datasource$columns","options","filter","c","filterable","queryMode","externalValidationErrors","value","length","visibility","resetOnHide","allColumnsControlSetItem","name","config","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/columns.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlSetItem,\n  ExtraControlProps,\n  sharedControls,\n  Dataset,\n  ColumnMeta,\n} from '@superset-ui/chart-controls';\nimport { ensureIsArray, t } from '@superset-ui/core';\nimport { getQueryMode, isRawMode } from './shared';\n\nconst dndAllColumns: typeof sharedControls.groupby = {\n  type: 'DndColumnSelect',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  default: [],\n  mapStateToProps({ datasource, controls }, controlState) {\n    const newState: ExtraControlProps = {};\n    if (datasource) {\n      if (datasource?.columns[0]?.hasOwnProperty('filterable')) {\n        newState.options = (datasource as Dataset)?.columns?.filter(\n          (c: ColumnMeta) => c.filterable,\n        );\n      } else newState.options = datasource.columns;\n    }\n    newState.queryMode = getQueryMode(controls);\n    newState.externalValidationErrors =\n      isRawMode({ controls }) && ensureIsArray(controlState?.value).length === 0\n        ? [t('must have a value')]\n        : [];\n    return newState;\n  },\n  visibility: isRawMode,\n  resetOnHide: false,\n};\n\nexport const allColumnsControlSetItem: ControlSetItem = {\n  name: 'all_columns',\n  config: dndAllColumns,\n};\n"],"mappings":"uSAyBA,SAASA,aAAa,EAAEC,CAAC,QAAQ,mBAAmB;AACpD,SAASC,YAAY,EAAEC,SAAS,QAAQ,UAAU;AAElD,MAAMC,aAAa,GAAkC;EACnDC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAEL,CAAC,CAAC,SAAS,CAAC;EACnBM,WAAW,EAAEN,CAAC,CAAC,oBAAoB,CAAC;EACpCO,OAAO,EAAE,EAAE;EACXC,eAAeA,CAAC,EAAEC,UAAU,EAAEC,QAAQ,EAAE,EAAEC,YAAY;IACpD,MAAMC,QAAQ,GAAsB,EAAE;IACtC,IAAIH,UAAU,EAAE,KAAAI,oBAAA;MACd,IAAIJ,UAAU,aAAAI,oBAAA,GAAVJ,UAAU,CAAEK,OAAO,CAAC,CAAC,CAAC,aAAtBD,oBAAA,CAAwBE,cAAc,CAAC,YAAY,CAAC,EAAE,KAAAC,mBAAA;QACxDJ,QAAQ,CAACK,OAAO,GAAIR,UAAsB,qBAAAO,mBAAA,GAAtBP,UAAsB,CAAEK,OAAO,qBAA/BE,mBAAA,CAAiCE,MAAM,CACzD,CAACC,CAAa,KAAKA,CAAC,CAACC,UAAU,CAChC;OACF;;MAAMR,QAAQ,CAACK,OAAO,GAAGR,UAAU,CAACK,OAAO;;IAE9CF,QAAQ,CAACS,SAAS,GAAGpB,YAAY,CAACS,QAAQ,CAAC;IAC3CE,QAAQ,CAACU,wBAAwB;IAC/BpB,SAAS,CAAC,EAAEQ,QAAQ,EAAE,CAAC,IAAIX,aAAa,CAACY,YAAY,oBAAZA,YAAY,CAAEY,KAAK,CAAC,CAACC,MAAM,KAAK,CAAC;IACtE,CAACxB,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACxB,EAAE;IACR,OAAOY,QAAQ;EACjB,CAAC;EACDa,UAAU,EAAEvB,SAAS;EACrBwB,WAAW,EAAE;CACd;AAED,OAAO,MAAMC,wBAAwB,GAAmB;EACtDC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE1B;CACT,CAAC,mBAAA2B,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAxB,OAAA,GAAAyB,SAAA,MAAAF,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5BI9B,aAAa,6IAAA2B,cAAA,CAAAG,QAAA,CAyBNN,wBAAwB,gLAAAO,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}