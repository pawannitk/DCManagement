{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ComparisonTimeRangeType } from '../time-comparison';\nimport { t } from '../translation';\nimport { ensureIsArray } from '../utils';\nexport const validateTimeComparisonRangeValues = (timeRangeValue, controlValue) => {\n  const isCustomTimeRange = timeRangeValue === ComparisonTimeRangeType.Custom;\n  const isCustomControlEmpty = controlValue == null ? void 0 : controlValue.every((val) => ensureIsArray(val).length === 0);\n  return isCustomTimeRange && isCustomControlEmpty ?\n  [t('Filters for comparison must have a value')] :\n  [];\n};const _default =\nvalidateTimeComparisonRangeValues;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(validateTimeComparisonRangeValues, \"validateTimeComparisonRangeValues\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/validator/validateTimeComparisonRangeValues.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/validator/validateTimeComparisonRangeValues.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ComparisonTimeRangeType","t","ensureIsArray","validateTimeComparisonRangeValues","timeRangeValue","controlValue","isCustomTimeRange","Custom","isCustomControlEmpty","every","val","length","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/validator/validateTimeComparisonRangeValues.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ComparisonTimeRangeType } from '../time-comparison';\nimport { t } from '../translation';\nimport { ensureIsArray } from '../utils';\n\nexport const validateTimeComparisonRangeValues = (\n  timeRangeValue?: any,\n  controlValue?: any,\n) => {\n  const isCustomTimeRange = timeRangeValue === ComparisonTimeRangeType.Custom;\n  const isCustomControlEmpty = controlValue?.every(\n    (val: any) => ensureIsArray(val).length === 0,\n  );\n  return isCustomTimeRange && isCustomControlEmpty\n    ? [t('Filters for comparison must have a value')]\n    : [];\n};\n\nexport default validateTimeComparisonRangeValues;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,uBAAuB,QAAQ,oBAAoB;AAC5D,SAASC,CAAC,QAAQ,gBAAgB;AAClC,SAASC,aAAa,QAAQ,UAAU;AAExC,OAAO,MAAMC,iCAAiC,GAAGA,CAC/CC,cAAoB,EACpBC,YAAkB,KAChB;EACF,MAAMC,iBAAiB,GAAGF,cAAc,KAAKJ,uBAAuB,CAACO,MAAM;EAC3E,MAAMC,oBAAoB,GAAGH,YAAY,oBAAZA,YAAY,CAAEI,KAAK,CAC9C,CAACC,GAAQ,KAAKR,aAAa,CAACQ,GAAG,CAAC,CAACC,MAAM,KAAK,CAAC,CAC9C;EACD,OAAOL,iBAAiB,IAAIE,oBAAoB;EAC5C,CAACP,CAAC,CAAC,0CAA0C,CAAC,CAAC;EAC/C,EAAE;AACR,CAAC,CAAC,MAAAW,QAAA;AAEaT,iCAAiC,CAAhD,eAAAS,QAAA,CAAiD,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAbpCd,iCAAiC,8KAAAU,cAAA,CAAAI,QAAA,CAAAL,QAAA,4KAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}