{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport { isQueryFormMetric } from './types';\nimport processFilters from './processFilters';\nimport extractExtras from './extractExtras';\nimport extractQueryFields from './extractQueryFields';\nimport { overrideExtraFormData } from './processExtraFormData';\nimport { isDefined } from '../utils';\n/**\n * Build the common segments of all query objects (e.g. the granularity field derived from\n * SQLAlchemy). The segments specific to each viz type is constructed in the\n * buildQuery method for each viz type (see `wordcloud/buildQuery.ts` for an example).\n * Note the type of the formData argument passed in here is the type of the formData for a\n * specific viz, which is a subtype of the generic formData shared among all viz types.\n */\nexport default function buildQueryObject(formData, queryFields) {var _ref, _normalizeSeriesLimit;\n  const { annotation_layers = [], extra_form_data, time_range, since, until, row_limit, row_offset, order_desc, limit, timeseries_limit_metric, granularity, url_params = {}, custom_params = {}, series_columns, series_limit, series_limit_metric, ...residualFormData } = formData;\n  const { adhoc_filters: appendAdhocFilters = [], filters: appendFilters = [], custom_form_data = {}, ...overrides } = extra_form_data || {};\n  const numericRowLimit = Number(row_limit);\n  const numericRowOffset = Number(row_offset);\n  const { metrics, columns, orderby } = extractQueryFields(residualFormData, queryFields);\n  // collect all filters for conversion to simple filters/freeform clauses\n  const extras = extractExtras(formData);\n  const { filters: extraFilters } = extras;\n  const filterFormData = {\n    filters: [...extraFilters, ...appendFilters],\n    adhoc_filters: [...(formData.adhoc_filters || []), ...appendAdhocFilters]\n  };\n  const extrasAndfilters = processFilters({\n    ...formData,\n    ...extras,\n    ...filterFormData\n  });\n  const normalizeSeriesLimitMetric = (metric) => {\n    if (isQueryFormMetric(metric)) {\n      return metric;\n    }\n    return undefined;\n  };\n  let queryObject = {\n    // fallback `null` to `undefined` so they won't be sent to the backend\n    // (JSON.stringify will ignore `undefined`.)\n    time_range: time_range || undefined,\n    since: since || undefined,\n    until: until || undefined,\n    granularity: granularity || undefined,\n    ...extras,\n    ...extrasAndfilters,\n    columns,\n    metrics,\n    orderby,\n    annotation_layers,\n    row_limit: row_limit == null || Number.isNaN(numericRowLimit) ?\n    undefined :\n    numericRowLimit,\n    row_offset: row_offset == null || Number.isNaN(numericRowOffset) ?\n    undefined :\n    numericRowOffset,\n    series_columns,\n    series_limit: series_limit != null ? series_limit : isDefined(limit) ? Number(limit) : 0,\n    series_limit_metric: (_ref = (_normalizeSeriesLimit = normalizeSeriesLimitMetric(series_limit_metric)) != null ? _normalizeSeriesLimit :\n    timeseries_limit_metric) != null ? _ref :\n    undefined,\n    order_desc: typeof order_desc === 'undefined' ? true : order_desc,\n    url_params: url_params || undefined,\n    custom_params\n  };\n  // override extra form data used by native and cross filters\n  queryObject = overrideExtraFormData(queryObject, overrides);\n  return { ...queryObject, custom_form_data };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildQueryObject, \"buildQueryObject\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/buildQueryObject.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isQueryFormMetric","processFilters","extractExtras","extractQueryFields","overrideExtraFormData","isDefined","buildQueryObject","formData","queryFields","_ref","_normalizeSeriesLimit","annotation_layers","extra_form_data","time_range","since","until","row_limit","row_offset","order_desc","limit","timeseries_limit_metric","granularity","url_params","custom_params","series_columns","series_limit","series_limit_metric","residualFormData","adhoc_filters","appendAdhocFilters","filters","appendFilters","custom_form_data","overrides","numericRowLimit","Number","numericRowOffset","metrics","columns","orderby","extras","extraFilters","filterFormData","extrasAndfilters","normalizeSeriesLimitMetric","metric","undefined","queryObject","isNaN","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/buildQueryObject.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable camelcase */\nimport {\n  AdhocFilter,\n  QueryObject,\n  QueryObjectFilterClause,\n  isQueryFormMetric,\n} from './types';\nimport {\n  QueryFieldAliases,\n  QueryFormMetric,\n  QueryFormData,\n} from './types/QueryFormData';\nimport processFilters from './processFilters';\nimport extractExtras from './extractExtras';\nimport extractQueryFields from './extractQueryFields';\nimport { overrideExtraFormData } from './processExtraFormData';\nimport { isDefined } from '../utils';\n\n/**\n * Build the common segments of all query objects (e.g. the granularity field derived from\n * SQLAlchemy). The segments specific to each viz type is constructed in the\n * buildQuery method for each viz type (see `wordcloud/buildQuery.ts` for an example).\n * Note the type of the formData argument passed in here is the type of the formData for a\n * specific viz, which is a subtype of the generic formData shared among all viz types.\n */\nexport default function buildQueryObject<T extends QueryFormData>(\n  formData: T,\n  queryFields?: QueryFieldAliases,\n): QueryObject {\n  const {\n    annotation_layers = [],\n    extra_form_data,\n    time_range,\n    since,\n    until,\n    row_limit,\n    row_offset,\n    order_desc,\n    limit,\n    timeseries_limit_metric,\n    granularity,\n    url_params = {},\n    custom_params = {},\n    series_columns,\n    series_limit,\n    series_limit_metric,\n    ...residualFormData\n  } = formData;\n  const {\n    adhoc_filters: appendAdhocFilters = [],\n    filters: appendFilters = [],\n    custom_form_data = {},\n    ...overrides\n  } = extra_form_data || {};\n\n  const numericRowLimit = Number(row_limit);\n  const numericRowOffset = Number(row_offset);\n  const { metrics, columns, orderby } = extractQueryFields(\n    residualFormData,\n    queryFields,\n  );\n\n  // collect all filters for conversion to simple filters/freeform clauses\n  const extras = extractExtras(formData);\n  const { filters: extraFilters } = extras;\n  const filterFormData: {\n    filters: QueryObjectFilterClause[];\n    adhoc_filters: AdhocFilter[];\n  } = {\n    filters: [...extraFilters, ...appendFilters],\n    adhoc_filters: [...(formData.adhoc_filters || []), ...appendAdhocFilters],\n  };\n  const extrasAndfilters = processFilters({\n    ...formData,\n    ...extras,\n    ...filterFormData,\n  });\n  const normalizeSeriesLimitMetric = (metric: QueryFormMetric | undefined) => {\n    if (isQueryFormMetric(metric)) {\n      return metric;\n    }\n    return undefined;\n  };\n\n  let queryObject: QueryObject = {\n    // fallback `null` to `undefined` so they won't be sent to the backend\n    // (JSON.stringify will ignore `undefined`.)\n    time_range: time_range || undefined,\n    since: since || undefined,\n    until: until || undefined,\n    granularity: granularity || undefined,\n    ...extras,\n    ...extrasAndfilters,\n    columns,\n    metrics,\n    orderby,\n    annotation_layers,\n    row_limit:\n      row_limit == null || Number.isNaN(numericRowLimit)\n        ? undefined\n        : numericRowLimit,\n    row_offset:\n      row_offset == null || Number.isNaN(numericRowOffset)\n        ? undefined\n        : numericRowOffset,\n    series_columns,\n    series_limit: series_limit ?? (isDefined(limit) ? Number(limit) : 0),\n    series_limit_metric:\n      normalizeSeriesLimitMetric(series_limit_metric) ??\n      timeseries_limit_metric ??\n      undefined,\n    order_desc: typeof order_desc === 'undefined' ? true : order_desc,\n    url_params: url_params || undefined,\n    custom_params,\n  };\n\n  // override extra form data used by native and cross filters\n  queryObject = overrideExtraFormData(queryObject, overrides);\n\n  return { ...queryObject, custom_form_data };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}