{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { SupersetClient, logging, t } from '@superset-ui/core';\nimport rison from 'rison';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\n/**\n * Retrieves all pages of dataset results\n */\nconst useDatasetsList = (db, schema) => {\n  const [datasets, setDatasets] = useState([]);\n  const encodedSchema = schema ? encodeURIComponent(schema) : undefined;\n  const getDatasetsList = useCallback(async (filters) => {\n    let results = [];\n    let page = 0;\n    let count;\n    // If count is undefined or less than results, we need to\n    // asynchronously retrieve a page of dataset results\n    while (count === undefined || results.length < count) {\n      const queryParams = rison.encode_uri({ filters, page });\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dataset/?q=${queryParams}`\n        });\n        // Reassign local count to response's count\n        ({ count } = response.json);\n        const { json: { result } } = response;\n        results = [...results, ...result];\n        page += 1;\n      }\n      catch (error) {\n        addDangerToast(t('There was an error fetching dataset'));\n        logging.error(t('There was an error fetching dataset'), error);\n      }\n    }\n    setDatasets(results);\n  }, []);\n  useEffect(() => {\n    const filters = [\n    { col: 'database', opr: 'rel_o_m', value: db == null ? void 0 : db.id },\n    { col: 'schema', opr: 'eq', value: encodedSchema },\n    { col: 'sql', opr: 'dataset_is_null_or_empty', value: true }];\n\n    if (schema) {\n      getDatasetsList(filters);\n    }\n  }, [db == null ? void 0 : db.id, schema, encodedSchema, getDatasetsList]);\n  const datasetNames = useMemo(() => datasets == null ? void 0 : datasets.map((dataset) => dataset.table_name), [datasets]);\n  return { datasets, datasetNames };\n};__signature__(useDatasetsList, \"useState{[datasets, setDatasets]([])}\\nuseCallback{getDatasetsList}\\nuseEffect{}\\nuseMemo{datasetNames}\");const _default =\nuseDatasetsList;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useDatasetsList, \"useDatasetsList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/datasets/hooks/useDatasetLists.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/datasets/hooks/useDatasetLists.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","SupersetClient","logging","t","rison","addDangerToast","useDatasetsList","db","schema","datasets","setDatasets","encodedSchema","encodeURIComponent","undefined","getDatasetsList","filters","results","page","count","length","queryParams","encode_uri","response","get","endpoint","json","result","error","col","opr","value","id","datasetNames","map","dataset","table_name","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/datasets/hooks/useDatasetLists.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { SupersetClient, logging, t } from '@superset-ui/core';\nimport rison from 'rison';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { DatasetObject } from 'src/features/datasets/AddDataset/types';\nimport { DatabaseObject } from 'src/components/DatabaseSelector';\n\n/**\n * Retrieves all pages of dataset results\n */\nconst useDatasetsList = (\n  db:\n    | (DatabaseObject & {\n        owners: [number];\n      })\n    | undefined,\n  schema: string | null | undefined,\n) => {\n  const [datasets, setDatasets] = useState<DatasetObject[]>([]);\n  const encodedSchema = schema ? encodeURIComponent(schema) : undefined;\n\n  const getDatasetsList = useCallback(async (filters: object[]) => {\n    let results: DatasetObject[] = [];\n    let page = 0;\n    let count;\n\n    // If count is undefined or less than results, we need to\n    // asynchronously retrieve a page of dataset results\n    while (count === undefined || results.length < count) {\n      const queryParams = rison.encode_uri({ filters, page });\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dataset/?q=${queryParams}`,\n        });\n\n        // Reassign local count to response's count\n        ({ count } = response.json);\n\n        const {\n          json: { result },\n        } = response;\n\n        results = [...results, ...result];\n\n        page += 1;\n      } catch (error) {\n        addDangerToast(t('There was an error fetching dataset'));\n        logging.error(t('There was an error fetching dataset'), error);\n      }\n    }\n\n    setDatasets(results);\n  }, []);\n\n  useEffect(() => {\n    const filters = [\n      { col: 'database', opr: 'rel_o_m', value: db?.id },\n      { col: 'schema', opr: 'eq', value: encodedSchema },\n      { col: 'sql', opr: 'dataset_is_null_or_empty', value: true },\n    ];\n\n    if (schema) {\n      getDatasetsList(filters);\n    }\n  }, [db?.id, schema, encodedSchema, getDatasetsList]);\n\n  const datasetNames = useMemo(\n    () => datasets?.map(dataset => dataset.table_name),\n    [datasets],\n  );\n\n  return { datasets, datasetNames };\n};\n\nexport default useDatasetsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}