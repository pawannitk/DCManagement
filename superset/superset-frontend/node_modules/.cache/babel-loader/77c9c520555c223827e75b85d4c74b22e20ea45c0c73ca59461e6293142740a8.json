{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nexport const registryGetAll = ({ registryKeys, registry }) => () => registryKeys.map((key) => registry[key]);\nexport const registryDelete = ({ registryKeys, registry }) => (keyToDelete) => {\n  // eslint-disable-next-line no-param-reassign\n  registryKeys = registryKeys.filter((key) => key !== keyToDelete);\n  // eslint-disable-next-line no-param-reassign\n  delete registry[keyToDelete];\n};\nexport const registryGet = ({ registry }) => (key) => registry[key];\nexport const registrySet = ({ registryKeys, registry }) => (key, item) => {\n  registryKeys.push(key);\n  // eslint-disable-next-line no-param-reassign\n  registry[key] = {\n    key,\n    ...item\n  };\n};\nexport const registrySetComponent = ({ registryKeys, registry }) => (key, item) => {\n  registryKeys.push(key);\n  // eslint-disable-next-line no-param-reassign\n  registry[key] = {\n    key,\n    metadata: item.metadata,\n    Component: /*#__PURE__*/React.lazy(item.loadComponent)\n  };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(registryGetAll, \"registryGetAll\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts\");reactHotLoader.register(registryDelete, \"registryDelete\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts\");reactHotLoader.register(registryGet, \"registryGet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts\");reactHotLoader.register(registrySet, \"registrySet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts\");reactHotLoader.register(registrySetComponent, \"registrySetComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","registryGetAll","registryKeys","registry","map","key","registryDelete","keyToDelete","filter","registryGet","registrySet","item","push","registrySetComponent","metadata","Component","lazy","loadComponent","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/utils/functionalRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ComponentType } from 'react';\nimport { JsonObject } from '@superset-ui/core';\n\nexport interface RegistryMetadata {\n  description: string;\n  name: string;\n}\n\nexport interface ComponentItem<Metadata = RegistryMetadata> {\n  metadata: Metadata;\n  loadComponent: () => Promise<{ default: ComponentType<any> }>;\n}\n\nexport interface ComponentRegistry<Metadata = RegistryMetadata> {\n  metadata: Metadata;\n  Component: ComponentType<any>;\n}\n\nexport type FunctionalRegistryState<RegistryT> = {\n  registry: { [key: string]: RegistryT & { key: string } };\n  registryKeys: string[];\n};\n\nexport const registryGetAll =\n  <RegistryT>({ registryKeys, registry }: FunctionalRegistryState<RegistryT>) =>\n  () =>\n    registryKeys.map(key => registry[key]);\n\nexport const registryDelete =\n  <RegistryT>({ registryKeys, registry }: FunctionalRegistryState<RegistryT>) =>\n  (keyToDelete: string) => {\n    // eslint-disable-next-line no-param-reassign\n    registryKeys = registryKeys.filter(key => key !== keyToDelete);\n    // eslint-disable-next-line no-param-reassign\n    delete registry[keyToDelete];\n  };\n\nexport const registryGet =\n  <RegistryT>({ registry }: FunctionalRegistryState<RegistryT>) =>\n  (key: string) =>\n    registry[key];\n\nexport const registrySet =\n  ({ registryKeys, registry }: FunctionalRegistryState<JsonObject>) =>\n  (key: string, item: JsonObject) => {\n    registryKeys.push(key);\n    // eslint-disable-next-line no-param-reassign\n    registry[key] = {\n      key,\n      ...item,\n    };\n  };\n\nexport const registrySetComponent =\n  ({ registryKeys, registry }: FunctionalRegistryState<ComponentRegistry>) =>\n  (key: string, item: ComponentItem) => {\n    registryKeys.push(key);\n    // eslint-disable-next-line no-param-reassign\n    registry[key] = {\n      key,\n      metadata: item.metadata,\n      Component: React.lazy(item.loadComponent),\n    };\n  };\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAwB,MAAM,OAAO;AAuB5C,OAAO,MAAMC,cAAc,GACzBA,CAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAsC,KAC1E,MACED,YAAY,CAACE,GAAG,CAAC,CAAAC,GAAG,KAAIF,QAAQ,CAACE,GAAG,CAAC,CAAC;AAE1C,OAAO,MAAMC,cAAc,GACzBA,CAAY,EAAEJ,YAAY,EAAEC,QAAQ,EAAsC,KAC1E,CAACI,WAAmB,KAAI;EACtB;EACAL,YAAY,GAAGA,YAAY,CAACM,MAAM,CAAC,CAAAH,GAAG,KAAIA,GAAG,KAAKE,WAAW,CAAC;EAC9D;EACA,OAAOJ,QAAQ,CAACI,WAAW,CAAC;AAC9B,CAAC;AAEH,OAAO,MAAME,WAAW,GACtBA,CAAY,EAAEN,QAAQ,EAAsC,KAC5D,CAACE,GAAW,KACVF,QAAQ,CAACE,GAAG,CAAC;AAEjB,OAAO,MAAMK,WAAW,GACtBA,CAAC,EAAER,YAAY,EAAEC,QAAQ,EAAuC,KAChE,CAACE,GAAW,EAAEM,IAAgB,KAAI;EAChCT,YAAY,CAACU,IAAI,CAACP,GAAG,CAAC;EACtB;EACAF,QAAQ,CAACE,GAAG,CAAC,GAAG;IACdA,GAAG;IACH,GAAGM;GACJ;AACH,CAAC;AAEH,OAAO,MAAME,oBAAoB,GAC/BA,CAAC,EAAEX,YAAY,EAAEC,QAAQ,EAA8C,KACvE,CAACE,GAAW,EAAEM,IAAmB,KAAI;EACnCT,YAAY,CAACU,IAAI,CAACP,GAAG,CAAC;EACtB;EACAF,QAAQ,CAACE,GAAG,CAAC,GAAG;IACdA,GAAG;IACHS,QAAQ,EAAEH,IAAI,CAACG,QAAQ;IACvBC,SAAS,eAAEf,KAAK,CAACgB,IAAI,CAACL,IAAI,CAACM,aAAa;GACzC;AACH,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxCSrB,cAAc,8GAAAiB,cAAA,CAAAI,QAAA,CAKdhB,cAAc,8GAAAY,cAAA,CAAAI,QAAA,CASdb,WAAW,2GAAAS,cAAA,CAAAI,QAAA,CAKXZ,WAAW,2GAAAQ,cAAA,CAAAI,QAAA,CAWXT,oBAAoB,4IAAAU,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}