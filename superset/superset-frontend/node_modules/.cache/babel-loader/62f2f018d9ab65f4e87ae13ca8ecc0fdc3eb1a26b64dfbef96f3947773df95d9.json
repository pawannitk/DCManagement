{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { utcFormat, timeFormat } from 'd3-time-format';\nimport { utcUtils, localTimeUtils } from '../utils/d3Time';\nimport TimeFormatter from '../TimeFormatter';\n/*\n * A formatter that examines all the values, and uses the finest temporal grain.\n */\nexport default function finestTemporalGrain(values, useLocalTime = false) {\n  const format = useLocalTime ? timeFormat : utcFormat;\n  const formatMillisecond = format('%Y-%m-%d %H:%M:%S.%L');\n  const formatSecond = format('%Y-%m-%d %H:%M:%S');\n  const formatMinute = format('%Y-%m-%d %H:%M');\n  const formatHour = format('%Y-%m-%d %H:%M');\n  const formatDay = format('%Y-%m-%d');\n  const formatMonth = format('%Y-%m-%d');\n  const formatYear = format('%Y');\n  const { hasMillisecond, hasSecond, hasMinute, hasHour, isNotFirstDayOfMonth, isNotFirstMonth } = useLocalTime ? localTimeUtils : utcUtils;\n  let formatFunc = formatYear;\n  values.forEach((value) => {\n    if (formatFunc === formatYear && isNotFirstMonth(value)) {\n      formatFunc = formatMonth;\n    }\n    if (formatFunc === formatMonth && isNotFirstDayOfMonth(value)) {\n      formatFunc = formatDay;\n    }\n    if (formatFunc === formatDay && hasHour(value)) {\n      formatFunc = formatHour;\n    }\n    if (formatFunc === formatHour && hasMinute(value)) {\n      formatFunc = formatMinute;\n    }\n    if (formatFunc === formatMinute && hasSecond(value)) {\n      formatFunc = formatSecond;\n    }\n    if (formatFunc === formatSecond && hasMillisecond(value)) {\n      formatFunc = formatMillisecond;\n    }\n  });\n  return new TimeFormatter({\n    description: 'Use the finest grain in an array of dates to format all dates in the array',\n    formatFunc,\n    id: 'finest_temporal_grain',\n    label: 'Format temporal columns with the finest grain',\n    useLocalTime\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(finestTemporalGrain, \"finestTemporalGrain\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/formatters/finestTemporalGrain.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["utcFormat","timeFormat","utcUtils","localTimeUtils","TimeFormatter","finestTemporalGrain","values","useLocalTime","format","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatMonth","formatYear","hasMillisecond","hasSecond","hasMinute","hasHour","isNotFirstDayOfMonth","isNotFirstMonth","formatFunc","forEach","value","description","id","label","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/formatters/finestTemporalGrain.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { utcFormat, timeFormat } from 'd3-time-format';\nimport { utcUtils, localTimeUtils } from '../utils/d3Time';\nimport TimeFormatter from '../TimeFormatter';\n\n/*\n * A formatter that examines all the values, and uses the finest temporal grain.\n */\nexport default function finestTemporalGrain(\n  values: any[],\n  useLocalTime = false,\n) {\n  const format = useLocalTime ? timeFormat : utcFormat;\n\n  const formatMillisecond = format('%Y-%m-%d %H:%M:%S.%L');\n  const formatSecond = format('%Y-%m-%d %H:%M:%S');\n  const formatMinute = format('%Y-%m-%d %H:%M');\n  const formatHour = format('%Y-%m-%d %H:%M');\n  const formatDay = format('%Y-%m-%d');\n  const formatMonth = format('%Y-%m-%d');\n  const formatYear = format('%Y');\n\n  const {\n    hasMillisecond,\n    hasSecond,\n    hasMinute,\n    hasHour,\n    isNotFirstDayOfMonth,\n    isNotFirstMonth,\n  } = useLocalTime ? localTimeUtils : utcUtils;\n\n  let formatFunc = formatYear;\n  values.forEach((value: any) => {\n    if (formatFunc === formatYear && isNotFirstMonth(value)) {\n      formatFunc = formatMonth;\n    }\n    if (formatFunc === formatMonth && isNotFirstDayOfMonth(value)) {\n      formatFunc = formatDay;\n    }\n    if (formatFunc === formatDay && hasHour(value)) {\n      formatFunc = formatHour;\n    }\n    if (formatFunc === formatHour && hasMinute(value)) {\n      formatFunc = formatMinute;\n    }\n    if (formatFunc === formatMinute && hasSecond(value)) {\n      formatFunc = formatSecond;\n    }\n    if (formatFunc === formatSecond && hasMillisecond(value)) {\n      formatFunc = formatMillisecond;\n    }\n  });\n\n  return new TimeFormatter({\n    description:\n      'Use the finest grain in an array of dates to format all dates in the array',\n    formatFunc,\n    id: 'finest_temporal_grain',\n    label: 'Format temporal columns with the finest grain',\n    useLocalTime,\n  });\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACtD,SAASC,QAAQ,EAAEC,cAAc,QAAQ,iBAAiB;AAC1D,OAAOC,aAAa,MAAM,kBAAkB;AAE5C;;;AAGA,eAAc,SAAUC,mBAAmBA,CACzCC,MAAa,EACbC,YAAY,GAAG,KAAK;EAEpB,MAAMC,MAAM,GAAGD,YAAY,GAAGN,UAAU,GAAGD,SAAS;EAEpD,MAAMS,iBAAiB,GAAGD,MAAM,CAAC,sBAAsB,CAAC;EACxD,MAAME,YAAY,GAAGF,MAAM,CAAC,mBAAmB,CAAC;EAChD,MAAMG,YAAY,GAAGH,MAAM,CAAC,gBAAgB,CAAC;EAC7C,MAAMI,UAAU,GAAGJ,MAAM,CAAC,gBAAgB,CAAC;EAC3C,MAAMK,SAAS,GAAGL,MAAM,CAAC,UAAU,CAAC;EACpC,MAAMM,WAAW,GAAGN,MAAM,CAAC,UAAU,CAAC;EACtC,MAAMO,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAM,EACJQ,cAAc,EACdC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,oBAAoB,EACpBC,eAAe,EAChB,GAAGd,YAAY,GAAGJ,cAAc,GAAGD,QAAQ;EAE5C,IAAIoB,UAAU,GAAGP,UAAU;EAC3BT,MAAM,CAACiB,OAAO,CAAC,CAACC,KAAU,KAAI;IAC5B,IAAIF,UAAU,KAAKP,UAAU,IAAIM,eAAe,CAACG,KAAK,CAAC,EAAE;MACvDF,UAAU,GAAGR,WAAW;;IAE1B,IAAIQ,UAAU,KAAKR,WAAW,IAAIM,oBAAoB,CAACI,KAAK,CAAC,EAAE;MAC7DF,UAAU,GAAGT,SAAS;;IAExB,IAAIS,UAAU,KAAKT,SAAS,IAAIM,OAAO,CAACK,KAAK,CAAC,EAAE;MAC9CF,UAAU,GAAGV,UAAU;;IAEzB,IAAIU,UAAU,KAAKV,UAAU,IAAIM,SAAS,CAACM,KAAK,CAAC,EAAE;MACjDF,UAAU,GAAGX,YAAY;;IAE3B,IAAIW,UAAU,KAAKX,YAAY,IAAIM,SAAS,CAACO,KAAK,CAAC,EAAE;MACnDF,UAAU,GAAGZ,YAAY;;IAE3B,IAAIY,UAAU,KAAKZ,YAAY,IAAIM,cAAc,CAACQ,KAAK,CAAC,EAAE;MACxDF,UAAU,GAAGb,iBAAiB;;EAElC,CAAC,CAAC;EAEF,OAAO,IAAIL,aAAa,CAAC;IACvBqB,WAAW,EACT,4EAA4E;IAC9EH,UAAU;IACVI,EAAE,EAAE,uBAAuB;IAC3BC,KAAK,EAAE,+CAA+C;IACtDpB;GACD,CAAC;AACJ,CAAC,mBAAAqB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArDuB3B,mBAAmB,uLAAA4B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}