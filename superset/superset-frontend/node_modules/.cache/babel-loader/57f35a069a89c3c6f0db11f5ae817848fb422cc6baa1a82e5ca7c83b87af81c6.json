{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\nimport NumberFormats from '../NumberFormats';\nconst siFormatter = d3Format(`.3~s`);\nconst float2PointFormatter = d3Format(`.2~f`);\nconst float4PointFormatter = d3Format(`.4~f`);\nfunction formatValue(value) {\n  if (value === 0) {\n    return '0';\n  }\n  const absoluteValue = Math.abs(value);\n  if (absoluteValue >= 1000) {\n    // Normal human being are more familiar\n    // with billion (B) that giga (G)\n    return siFormatter(value).replace('G', 'B');\n  }\n  if (absoluteValue >= 1) {\n    return float2PointFormatter(value);\n  }\n  if (absoluteValue >= 0.001) {\n    return float4PointFormatter(value);\n  }\n  if (absoluteValue > 0.000001) {\n    return `${siFormatter(value * 1000000)}µ`;\n  }\n  return siFormatter(value);\n}\nexport default function createSmartNumberFormatter(config = {}) {\n  const { description, signed = false, id, label } = config;\n  const getSign = signed ? (value) => value > 0 ? '+' : '' : () => '';\n  return new NumberFormatter({\n    description,\n    formatFunc: (value) => `${getSign(value)}${formatValue(value)}`,\n    id: id || signed ?\n    NumberFormats.SMART_NUMBER_SIGNED :\n    NumberFormats.SMART_NUMBER,\n    label: label != null ? label : 'Adaptive formatter'\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(siFormatter, \"siFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts\");reactHotLoader.register(float2PointFormatter, \"float2PointFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts\");reactHotLoader.register(float4PointFormatter, \"float4PointFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts\");reactHotLoader.register(formatValue, \"formatValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts\");reactHotLoader.register(createSmartNumberFormatter, \"createSmartNumberFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["format","d3Format","NumberFormatter","NumberFormats","siFormatter","float2PointFormatter","float4PointFormatter","formatValue","value","absoluteValue","Math","abs","replace","createSmartNumberFormatter","config","description","signed","id","label","getSign","formatFunc","SMART_NUMBER_SIGNED","SMART_NUMBER","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createSmartNumberFormatter.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\nimport NumberFormats from '../NumberFormats';\n\nconst siFormatter = d3Format(`.3~s`);\nconst float2PointFormatter = d3Format(`.2~f`);\nconst float4PointFormatter = d3Format(`.4~f`);\n\nfunction formatValue(value: number) {\n  if (value === 0) {\n    return '0';\n  }\n  const absoluteValue = Math.abs(value);\n  if (absoluteValue >= 1000) {\n    // Normal human being are more familiar\n    // with billion (B) that giga (G)\n    return siFormatter(value).replace('G', 'B');\n  }\n  if (absoluteValue >= 1) {\n    return float2PointFormatter(value);\n  }\n  if (absoluteValue >= 0.001) {\n    return float4PointFormatter(value);\n  }\n  if (absoluteValue > 0.000001) {\n    return `${siFormatter(value * 1000000)}µ`;\n  }\n  return siFormatter(value);\n}\n\nexport default function createSmartNumberFormatter(\n  config: {\n    description?: string;\n    signed?: boolean;\n    id?: string;\n    label?: string;\n  } = {},\n) {\n  const { description, signed = false, id, label } = config;\n  const getSign = signed ? (value: number) => (value > 0 ? '+' : '') : () => '';\n\n  return new NumberFormatter({\n    description,\n    formatFunc: value => `${getSign(value)}${formatValue(value)}`,\n    id:\n      id || signed\n        ? NumberFormats.SMART_NUMBER_SIGNED\n        : NumberFormats.SMART_NUMBER,\n    label: label ?? 'Adaptive formatter',\n  });\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,MAAM,IAAIC,QAAQ,QAAQ,WAAW;AAC9C,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,MAAMC,WAAW,GAAGH,QAAQ,CAAC,MAAM,CAAC;AACpC,MAAMI,oBAAoB,GAAGJ,QAAQ,CAAC,MAAM,CAAC;AAC7C,MAAMK,oBAAoB,GAAGL,QAAQ,CAAC,MAAM,CAAC;AAE7C,SAASM,WAAWA,CAACC,KAAa;EAChC,IAAIA,KAAK,KAAK,CAAC,EAAE;IACf,OAAO,GAAG;;EAEZ,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC;EACrC,IAAIC,aAAa,IAAI,IAAI,EAAE;IACzB;IACA;IACA,OAAOL,WAAW,CAACI,KAAK,CAAC,CAACI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;;EAE7C,IAAIH,aAAa,IAAI,CAAC,EAAE;IACtB,OAAOJ,oBAAoB,CAACG,KAAK,CAAC;;EAEpC,IAAIC,aAAa,IAAI,KAAK,EAAE;IAC1B,OAAOH,oBAAoB,CAACE,KAAK,CAAC;;EAEpC,IAAIC,aAAa,GAAG,QAAQ,EAAE;IAC5B,OAAO,GAAGL,WAAW,CAACI,KAAK,GAAG,OAAO,CAAC,GAAG;;EAE3C,OAAOJ,WAAW,CAACI,KAAK,CAAC;AAC3B;AAEA,eAAc,SAAUK,0BAA0BA,CAChDC,MAAA,GAKI,EAAE;EAEN,MAAM,EAAEC,WAAW,EAAEC,MAAM,GAAG,KAAK,EAAEC,EAAE,EAAEC,KAAK,EAAE,GAAGJ,MAAM;EACzD,MAAMK,OAAO,GAAGH,MAAM,GAAG,CAACR,KAAa,KAAMA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,GAAG,MAAM,EAAE;EAE7E,OAAO,IAAIN,eAAe,CAAC;IACzBa,WAAW;IACXK,UAAU,EAAEA,CAAAZ,KAAK,KAAI,GAAGW,OAAO,CAACX,KAAK,CAAC,GAAGD,WAAW,CAACC,KAAK,CAAC,EAAE;IAC7DS,EAAE,EACAA,EAAE,IAAID,MAAM;IACRb,aAAa,CAACkB,mBAAmB;IACjClB,aAAa,CAACmB,YAAY;IAChCJ,KAAK,EAAEA,KAAK,WAALA,KAAK,GAAI;GACjB,CAAC;AACJ,CAAC,mBAAAK,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA9CKvB,WAAW,+JAAAmB,cAAA,CAAAI,QAAA,CACXtB,oBAAoB,wKAAAkB,cAAA,CAAAI,QAAA,CACpBrB,oBAAoB,wKAAAiB,cAAA,CAAAI,QAAA,CAEjBpB,WAAW,+JAAAgB,cAAA,CAAAI,QAAA,CAsBId,0BAA0B,sMAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}