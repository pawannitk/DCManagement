{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport shortid from 'shortid';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { t, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"Asc\"] = 1] = \"Asc\";\n  SortOrder[SortOrder[\"Desc\"] = 2] = \"Desc\";\n  SortOrder[SortOrder[\"Unsorted\"] = 0] = \"Unsorted\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid.generate()\n  }));\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray\n  };\n}\nconst CrudTableWrapper = styled.div`\n  ${({ stickyHeader }) => stickyHeader &&\n`\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  ${({ theme }) => `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `}\n`;\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\nconst StyledButtonWrapper = styled.span`\n  ${({ theme }) => `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `}\n`;\nexport default class CRUDCollection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray\n      });\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val\n      }\n    });\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item\n    });\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels != null && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  getTooltip(col) {\n    const { columnLabelTooltips } = this.props;\n    return columnLabelTooltips == null ? void 0 : columnLabelTooltips[col];\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id]\n      }\n    }));\n  }\n  sortColumn(col, sort = SortOrder.Unsorted) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && sortColumns.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.Unsorted) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort\n          });\n          return;\n        }\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.Asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort\n        }));\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.Asc) {\n      return ___EmotionJSX(Icons.SortAsc, { onClick: this.sortColumn(col, 2) });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.Desc) {\n      return ___EmotionJSX(Icons.SortDesc, { onClick: this.sortColumn(col, 0) });\n    }\n    return ___EmotionJSX(Icons.Sort, { onClick: this.sortColumn(col, 1) });\n  }\n  renderTH(col, sortColumns) {\n    const tooltip = this.getTooltip(col);\n    return ___EmotionJSX(\"th\", { key: col, className: \"no-wrap\" },\n    this.getLabel(col),\n    tooltip && ___EmotionJSX(React.Fragment, null,\n    ' ',\n    ___EmotionJSX(InfoTooltipWithTrigger, { label: t('description'), tooltip: tooltip })\n    ),\n    (sortColumns == null ? void 0 : sortColumns.includes(col)) && this.renderSortIcon(col)\n    );\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return ___EmotionJSX(\"thead\", null,\n    ___EmotionJSX(\"tr\", null,\n    expandFieldset && ___EmotionJSX(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\" }),\n    cols.map((col) => this.renderTH(col, sortColumns)),\n    extraButtons,\n    allowDeletes && ___EmotionJSX(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\" })\n    )\n    );\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(this.props.expandFieldset, Fieldset, propsGenerator);\n  }\n  getCellProps(record, col) {var _this$props$itemCellP;\n    const cellPropsFn = (_this$props$itemCellP = this.props.itemCellProps) == null ? void 0 : _this$props$itemCellP[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n  renderCell(record, col) {var _this$props$itemRende;\n    const renderer = (_this$props$itemRende = this.props.itemRenderers) == null ? void 0 : _this$props$itemRende[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__expand\", className: \"expand\" },\n      ___EmotionJSX(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id) })\n      ));\n    }\n    tds = tds.concat(tableColumns.map((col) => ___EmotionJSX(\"td\", _extends({}, this.getCellProps(record, col), { key: col }),\n    this.renderCell(record, col)\n    )));\n    if (allowAddItem) {\n      tds.push(___EmotionJSX(\"td\", { key: \"add\" }));\n    }\n    if (allowDeletes) {\n      tds.push(___EmotionJSX(\"td\", { key: \"__actions\", \"data-test\": \"crud-delete-option\", className: \"text-primary\" },\n      ___EmotionJSX(Icons.Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", \"data-test\": \"crud-delete-icon\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id) })\n      ));\n    }\n    const trs = [\n    ___EmotionJSX(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id },\n    tds\n    )];\n\n    if (isExpanded) {\n      trs.push(___EmotionJSX(\"tr\", { className: \"exp\", key: `exp__${record.id}` },\n      ___EmotionJSX(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\" },\n      ___EmotionJSX(\"div\", null, this.renderExpandableSection(record))\n      )\n      ));\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return ___EmotionJSX(\"tr\", null,\n    ___EmotionJSX(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage)\n    );\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return ___EmotionJSX(\"tbody\", { \"data-test\": \"table-content-rows\" }, content);\n  }\n  render() {\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(CrudButtonWrapper, null,\n    this.props.allowAddItem && ___EmotionJSX(StyledButtonWrapper, null,\n    ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem, \"data-test\": \"add-item-button\" },\n    ___EmotionJSX(\"i\", { \"data-test\": \"crud-add-table-item\", className: \"fa fa-plus\" }), ' ',\n    t('Add item')\n    )\n    )\n    ),\n    ___EmotionJSX(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader },\n    ___EmotionJSX(\"table\", { \"data-test\": \"crud-table\", className: \"table\" },\n    this.renderHeaderRow(),\n    this.renderTableBody()\n    )\n    )\n    );\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortOrder, \"SortOrder\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createCollectionArray, \"createCollectionArray\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudTableWrapper, \"CrudTableWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudButtonWrapper, \"CrudButtonWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(StyledButtonWrapper, \"StyledButtonWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","shortid","InfoTooltipWithTrigger","t","styled","Button","Icons","Fieldset","recurseReactClone","jsx","___EmotionJSX","SortOrder","createCollectionArray","collection","Object","keys","map","k","createKeyedCollection","arr","collectionArray","o","id","generate","forEach","CrudTableWrapper","div","stickyHeader","theme","gridUnit","CrudButtonWrapper","StyledButtonWrapper","span","CRUDCollection","PureComponent","constructor","props","state","expandedColumns","sortColumn","sort","renderItem","bind","onAddItem","renderExpandableSection","getLabel","onFieldsetChange","renderTableBody","changeCollection","renderSortIcon","UNSAFE_componentWillReceiveProps","nextProps","setState","onCellChange","col","val","itemGenerator","newItem","item","columnLabels","label","startsWith","getTooltip","columnLabelTooltips","onChange","c","filter","undefined","unshift","deleteItem","newColl","effectiveTableColumns","tableColumns","allowDeletes","expandFieldset","cols","concat","toggleExpand","prevState","Unsorted","sortColumns","compareSort","m","n","localeCompare","includes","sorted","a","b","newCollection","Asc","reverse","SortAsc","onClick","Desc","SortDesc","Sort","renderTH","tooltip","key","className","Fragment","renderHeaderRow","extraButtons","propsGenerator","getCellProps","record","_this$props$itemCellP","cellPropsFn","itemCellProps","renderCell","_this$props$itemRende","renderer","itemRenderers","allowAddItem","isExpanded","__expanded","tds","push","role","tabIndex","_extends","Trash","trs","colSpan","length","renderEmptyCell","emptyMessage","data","content","d","render","buttonSize","buttonStyle","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Datasource/CollectionTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode } from 'react';\nimport shortid from 'shortid';\n\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { t, styled } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\n\ninterface CRUDCollectionProps {\n  allowAddItem?: boolean;\n  allowDeletes?: boolean;\n  collection: Array<object>;\n  columnLabels?: object;\n  columnLabelTooltips?: object;\n  emptyMessage?: ReactNode;\n  expandFieldset?: ReactNode;\n  extraButtons?: ReactNode;\n  itemGenerator?: () => any;\n  itemCellProps?: ((\n    val: unknown,\n    label: string,\n    record: any,\n  ) => React.DetailedHTMLProps<\n    React.TdHTMLAttributes<HTMLTableCellElement>,\n    HTMLTableCellElement\n  >)[];\n  itemRenderers?: ((\n    val: unknown,\n    onChange: () => void,\n    label: string,\n    record: any,\n  ) => ReactNode)[];\n  onChange?: (arg0: any) => void;\n  tableColumns: Array<any>;\n  sortColumns: Array<string>;\n  stickyHeader?: boolean;\n}\n\ntype Sort = number | string | boolean | any;\n\nenum SortOrder {\n  Asc = 1,\n  Desc = 2,\n  Unsorted = 0,\n}\n\ninterface CRUDCollectionState {\n  collection: object;\n  collectionArray: Array<object>;\n  expandedColumns: object;\n  sortColumn: string;\n  sort: SortOrder;\n}\n\nfunction createCollectionArray(collection: object) {\n  return Object.keys(collection).map(k => collection[k]);\n}\n\nfunction createKeyedCollection(arr: Array<object>) {\n  const collectionArray = arr.map((o: any) => ({\n    ...o,\n    id: o.id || shortid.generate(),\n  }));\n\n  const collection = {};\n  collectionArray.forEach((o: any) => {\n    collection[o.id] = o;\n  });\n\n  return {\n    collection,\n    collectionArray,\n  };\n}\n\nconst CrudTableWrapper = styled.div<{ stickyHeader?: boolean }>`\n  ${({ stickyHeader }) =>\n    stickyHeader &&\n    `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `}\n  ${({ theme }) => `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `}\n`;\n\nconst CrudButtonWrapper = styled.div`\n  text-align: right;\n  ${({ theme }) => `margin-bottom: ${theme.gridUnit * 2}px`}\n`;\n\nconst StyledButtonWrapper = styled.span`\n  ${({ theme }) => `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `}\n`;\n\nexport default class CRUDCollection extends React.PureComponent<\n  CRUDCollectionProps,\n  CRUDCollectionState\n> {\n  constructor(props: CRUDCollectionProps) {\n    super(props);\n\n    const { collection, collectionArray } = createKeyedCollection(\n      props.collection,\n    );\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0,\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CRUDCollectionProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(\n        nextProps.collection,\n      );\n      this.setState({\n        collection,\n        collectionArray,\n      });\n    }\n  }\n\n  onCellChange(id: number, col: string, val: boolean) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val,\n      },\n    });\n  }\n\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid.generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n\n  onFieldsetChange(item: any) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item,\n    });\n  }\n\n  getLabel(col: any) {\n    const { columnLabels } = this.props;\n    let label = columnLabels?.[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n\n  getTooltip(col: string) {\n    const { columnLabelTooltips } = this.props;\n    return columnLabelTooltips?.[col];\n  }\n\n  changeCollection(collection: any, newItem?: object) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray\n        .map((c: { id: number }) => collection[c.id])\n        // filter out removed items\n        .filter(c => c !== undefined);\n\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n\n  deleteItem(id: number) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes\n      ? tableColumns.concat(['__actions'])\n      : tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n\n  toggleExpand(id: any) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState(prevState => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id],\n      },\n    }));\n  }\n\n  sortColumn(col: string, sort = SortOrder.Unsorted) {\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m: Sort, n: Sort) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns?.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.Unsorted) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort,\n          });\n          return;\n        }\n\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort(\n          (a: object, b: object) => compareSort(a[col], b[col]),\n        );\n        const newCollection =\n          sort === SortOrder.Asc ? sorted : sorted.reverse();\n\n        this.setState(prevState => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort,\n        }));\n      }\n    };\n  }\n\n  renderSortIcon(col: string) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.Asc) {\n      return <Icons.SortAsc onClick={this.sortColumn(col, 2)} />;\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.Desc) {\n      return <Icons.SortDesc onClick={this.sortColumn(col, 0)} />;\n    }\n    return <Icons.Sort onClick={this.sortColumn(col, 1)} />;\n  }\n\n  renderTH(col: string, sortColumns: Array<string>) {\n    const tooltip = this.getTooltip(col);\n    return (\n      <th key={col} className=\"no-wrap\">\n        {this.getLabel(col)}\n        {tooltip && (\n          <>\n            {' '}\n            <InfoTooltipWithTrigger\n              label={t('description')}\n              tooltip={tooltip}\n            />\n          </>\n        )}\n        {sortColumns?.includes(col) && this.renderSortIcon(col)}\n      </th>\n    );\n  }\n\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } =\n      this.props;\n    return (\n      <thead>\n        <tr>\n          {expandFieldset && <th aria-label=\"Expand\" className=\"tiny-cell\" />}\n          {cols.map(col => this.renderTH(col, sortColumns))}\n          {extraButtons}\n          {allowDeletes && (\n            <th key=\"delete-item\" aria-label=\"Delete\" className=\"tiny-cell\" />\n          )}\n        </tr>\n      </thead>\n    );\n  }\n\n  renderExpandableSection(item: any) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(\n      this.props.expandFieldset,\n      Fieldset,\n      propsGenerator,\n    );\n  }\n\n  getCellProps(record: any, col: any) {\n    const cellPropsFn = this.props.itemCellProps?.[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n\n  renderCell(record: any, col: any) {\n    const renderer = this.props.itemRenderers?.[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n\n  renderItem(record: any) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } =\n      this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded =\n      !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push(\n        <td key=\"__expand\" className=\"expand\">\n          <i\n            role=\"button\"\n            aria-label=\"Toggle expand\"\n            tabIndex={0}\n            className={`fa fa-caret-${\n              isExpanded ? 'down' : 'right'\n            } text-primary pointer`}\n            onClick={this.toggleExpand.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    tds = tds.concat(\n      tableColumns.map(col => (\n        <td {...this.getCellProps(record, col)} key={col}>\n          {this.renderCell(record, col)}\n        </td>\n      )),\n    );\n    if (allowAddItem) {\n      tds.push(<td key=\"add\" />);\n    }\n    if (allowDeletes) {\n      tds.push(\n        <td\n          key=\"__actions\"\n          data-test=\"crud-delete-option\"\n          className=\"text-primary\"\n        >\n          <Icons.Trash\n            aria-label=\"Delete item\"\n            className=\"pointer\"\n            data-test=\"crud-delete-icon\"\n            role=\"button\"\n            tabIndex={0}\n            onClick={this.deleteItem.bind(this, record.id)}\n          />\n        </td>,\n      );\n    }\n    const trs = [\n      <tr {...{ 'data-test': 'table-row' }} className=\"row\" key={record.id}>\n        {tds}\n      </tr>,\n    ];\n    if (isExpanded) {\n      trs.push(\n        <tr className=\"exp\" key={`exp__${record.id}`}>\n          <td\n            colSpan={this.effectiveTableColumns().length}\n            className=\"expanded\"\n          >\n            <div>{this.renderExpandableSection(record)}</div>\n          </td>\n        </tr>,\n      );\n    }\n    return trs;\n  }\n\n  renderEmptyCell() {\n    return (\n      <tr>\n        <td className=\"empty-collection\">{this.props.emptyMessage}</td>\n      </tr>\n    );\n  }\n\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length\n      ? data.map(d => this.renderItem(d))\n      : this.renderEmptyCell();\n    return <tbody data-test=\"table-content-rows\">{content}</tbody>;\n  }\n\n  render() {\n    return (\n      <>\n        <CrudButtonWrapper>\n          {this.props.allowAddItem && (\n            <StyledButtonWrapper>\n              <Button\n                buttonSize=\"small\"\n                buttonStyle=\"tertiary\"\n                onClick={this.onAddItem}\n                data-test=\"add-item-button\"\n              >\n                <i data-test=\"crud-add-table-item\" className=\"fa fa-plus\" />{' '}\n                {t('Add item')}\n              </Button>\n            </StyledButtonWrapper>\n          )}\n        </CrudButtonWrapper>\n        <CrudTableWrapper\n          className=\"CRUD\"\n          stickyHeader={this.props.stickyHeader}\n        >\n          <table data-test=\"crud-table\" className=\"table\">\n            {this.renderHeaderRow()}\n            {this.renderTableBody()}\n          </table>\n        </CrudTableWrapper>\n      </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}