{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport TimeFormats from './TimeFormats';\nimport { TimeGranularity } from './types';\nconst { DATABASE_DATE, DATABASE_DATETIME } = TimeFormats;\nconst MINUTE = '%Y-%m-%d %H:%M';\n/**\n * Map time granularity to d3-format string\n */\nconst TimeFormatsForGranularity = {\n  [TimeGranularity.DATE]: DATABASE_DATE,\n  [TimeGranularity.SECOND]: DATABASE_DATETIME,\n  [TimeGranularity.MINUTE]: MINUTE,\n  [TimeGranularity.FIVE_MINUTES]: MINUTE,\n  [TimeGranularity.TEN_MINUTES]: MINUTE,\n  [TimeGranularity.FIFTEEN_MINUTES]: MINUTE,\n  [TimeGranularity.THIRTY_MINUTES]: MINUTE,\n  [TimeGranularity.HOUR]: '%Y-%m-%d %H:00',\n  [TimeGranularity.DAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK]: DATABASE_DATE,\n  [TimeGranularity.MONTH]: '%b %Y',\n  [TimeGranularity.QUARTER]: '%Y Q%q',\n  [TimeGranularity.YEAR]: '%Y',\n  [TimeGranularity.WEEK_STARTING_SUNDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_STARTING_MONDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_ENDING_SATURDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_ENDING_SUNDAY]: DATABASE_DATE\n};const _default =\nTimeFormatsForGranularity;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DATABASE_DATE, \"DATABASE_DATE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts\");reactHotLoader.register(DATABASE_DATETIME, \"DATABASE_DATETIME\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts\");reactHotLoader.register(MINUTE, \"MINUTE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts\");reactHotLoader.register(TimeFormatsForGranularity, \"TimeFormatsForGranularity\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["TimeFormats","TimeGranularity","DATABASE_DATE","DATABASE_DATETIME","MINUTE","TimeFormatsForGranularity","DATE","SECOND","FIVE_MINUTES","TEN_MINUTES","FIFTEEN_MINUTES","THIRTY_MINUTES","HOUR","DAY","WEEK","MONTH","QUARTER","YEAR","WEEK_STARTING_SUNDAY","WEEK_STARTING_MONDAY","WEEK_ENDING_SATURDAY","WEEK_ENDING_SUNDAY","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatsForGranularity.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport TimeFormats from './TimeFormats';\nimport { TimeGranularity } from './types';\n\nconst { DATABASE_DATE, DATABASE_DATETIME } = TimeFormats;\nconst MINUTE = '%Y-%m-%d %H:%M';\n\n/**\n * Map time granularity to d3-format string\n */\nconst TimeFormatsForGranularity: Record<TimeGranularity, string> = {\n  [TimeGranularity.DATE]: DATABASE_DATE,\n  [TimeGranularity.SECOND]: DATABASE_DATETIME,\n  [TimeGranularity.MINUTE]: MINUTE,\n  [TimeGranularity.FIVE_MINUTES]: MINUTE,\n  [TimeGranularity.TEN_MINUTES]: MINUTE,\n  [TimeGranularity.FIFTEEN_MINUTES]: MINUTE,\n  [TimeGranularity.THIRTY_MINUTES]: MINUTE,\n  [TimeGranularity.HOUR]: '%Y-%m-%d %H:00',\n  [TimeGranularity.DAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK]: DATABASE_DATE,\n  [TimeGranularity.MONTH]: '%b %Y',\n  [TimeGranularity.QUARTER]: '%Y Q%q',\n  [TimeGranularity.YEAR]: '%Y',\n  [TimeGranularity.WEEK_STARTING_SUNDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_STARTING_MONDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_ENDING_SATURDAY]: DATABASE_DATE,\n  [TimeGranularity.WEEK_ENDING_SUNDAY]: DATABASE_DATE,\n};\n\nexport default TimeFormatsForGranularity;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,eAAe,QAAQ,SAAS;AAEzC,MAAM,EAAEC,aAAa,EAAEC,iBAAiB,EAAE,GAAGH,WAAW;AACxD,MAAMI,MAAM,GAAG,gBAAgB;AAE/B;;;AAGA,MAAMC,yBAAyB,GAAoC;EACjE,CAACJ,eAAe,CAACK,IAAI,GAAGJ,aAAa;EACrC,CAACD,eAAe,CAACM,MAAM,GAAGJ,iBAAiB;EAC3C,CAACF,eAAe,CAACG,MAAM,GAAGA,MAAM;EAChC,CAACH,eAAe,CAACO,YAAY,GAAGJ,MAAM;EACtC,CAACH,eAAe,CAACQ,WAAW,GAAGL,MAAM;EACrC,CAACH,eAAe,CAACS,eAAe,GAAGN,MAAM;EACzC,CAACH,eAAe,CAACU,cAAc,GAAGP,MAAM;EACxC,CAACH,eAAe,CAACW,IAAI,GAAG,gBAAgB;EACxC,CAACX,eAAe,CAACY,GAAG,GAAGX,aAAa;EACpC,CAACD,eAAe,CAACa,IAAI,GAAGZ,aAAa;EACrC,CAACD,eAAe,CAACc,KAAK,GAAG,OAAO;EAChC,CAACd,eAAe,CAACe,OAAO,GAAG,QAAQ;EACnC,CAACf,eAAe,CAACgB,IAAI,GAAG,IAAI;EAC5B,CAAChB,eAAe,CAACiB,oBAAoB,GAAGhB,aAAa;EACrD,CAACD,eAAe,CAACkB,oBAAoB,GAAGjB,aAAa;EACrD,CAACD,eAAe,CAACmB,oBAAoB,GAAGlB,aAAa;EACrD,CAACD,eAAe,CAACoB,kBAAkB,GAAGnB;CACvC,CAAC,MAAAoB,QAAA;AAEajB,yBAAyB,CAAxC,eAAAiB,QAAA,CAAyC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1BjCzB,aAAa,oJAAAqB,cAAA,CAAAI,QAAA,CAAExB,iBAAiB,wJAAAoB,cAAA,CAAAI,QAAA,CAClCvB,MAAM,6IAAAmB,cAAA,CAAAI,QAAA,CAKNtB,yBAAyB,gKAAAkB,cAAA,CAAAI,QAAA,CAAAL,QAAA,sKAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}