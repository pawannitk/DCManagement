{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nimport { BroadcastChannel } from 'broadcast-channel';\n// TODO: We are using broadcast-channel to support Safari.\n// The native BroadcastChannel API will be supported in Safari version 15.4.\n// After that, we should remove this dependency and use the native API.\nconst channel = new BroadcastChannel('tab_id_channel');\nexport function useTabId() {\n  const [tabId, setTabId] = useState();\n  function isStorageAvailable() {\n    try {\n      return window.localStorage && window.sessionStorage;\n    }\n    catch (error) {\n      return false;\n    }\n  }\n  useEffect(() => {\n    if (!isStorageAvailable()) {\n      if (!tabId) {\n        setTabId(shortid.generate());\n      }\n      return;\n    }\n    const updateTabId = () => {\n      let lastTabId;\n      try {\n        lastTabId = window.localStorage.getItem('last_tab_id');\n      }\n      catch (error) {\n\n        // continue regardless of error\n      }const newTabId = String(lastTabId ? Number.parseInt(lastTabId, 10) + 1 : 1);\n      try {\n        window.sessionStorage.setItem('tab_id', newTabId);\n        window.localStorage.setItem('last_tab_id', newTabId);\n      }\n      catch (error) {\n\n        // continue regardless of error\n      }setTabId(newTabId);\n    };\n    let storedTabId;\n    try {\n      storedTabId = window.sessionStorage.getItem('tab_id');\n    }\n    catch (error) {\n\n      // continue regardless of error\n    }if (storedTabId) {\n      channel.postMessage({\n        type: 'REQUESTING_TAB_ID',\n        tabId: storedTabId\n      });\n      setTabId(storedTabId);\n    } else\n    {\n      updateTabId();\n    }\n    channel.onmessage = (messageEvent) => {\n      if (messageEvent.tabId === tabId) {\n        if (messageEvent.type === 'REQUESTING_TAB_ID') {\n          const message = {\n            type: 'TAB_ID_DENIED',\n            tabId: messageEvent.tabId\n          };\n          channel.postMessage(message);\n        } else\n        if (messageEvent.type === 'TAB_ID_DENIED') {\n          updateTabId();\n        }\n      }\n    };\n  }, [tabId]);\n  return tabId;\n}__signature__(useTabId, \"useState{[tabId, setTabId]}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(channel, \"channel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/useTabId.ts\");reactHotLoader.register(useTabId, \"useTabId\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/useTabId.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","shortid","BroadcastChannel","channel","useTabId","tabId","setTabId","isStorageAvailable","window","localStorage","sessionStorage","error","generate","updateTabId","lastTabId","getItem","newTabId","String","Number","parseInt","setItem","storedTabId","postMessage","type","onmessage","messageEvent","message","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/useTabId.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nimport { BroadcastChannel } from 'broadcast-channel';\n\ninterface TabIdChannelMessage {\n  type: 'REQUESTING_TAB_ID' | 'TAB_ID_DENIED';\n  tabId: string;\n}\n\n// TODO: We are using broadcast-channel to support Safari.\n// The native BroadcastChannel API will be supported in Safari version 15.4.\n// After that, we should remove this dependency and use the native API.\nconst channel = new BroadcastChannel<TabIdChannelMessage>('tab_id_channel');\n\nexport function useTabId() {\n  const [tabId, setTabId] = useState<string>();\n\n  function isStorageAvailable() {\n    try {\n      return window.localStorage && window.sessionStorage;\n    } catch (error) {\n      return false;\n    }\n  }\n  useEffect(() => {\n    if (!isStorageAvailable()) {\n      if (!tabId) {\n        setTabId(shortid.generate());\n      }\n      return;\n    }\n\n    const updateTabId = () => {\n      let lastTabId;\n      try {\n        lastTabId = window.localStorage.getItem('last_tab_id');\n      } catch (error) {\n        // continue regardless of error\n      }\n      const newTabId = String(\n        lastTabId ? Number.parseInt(lastTabId, 10) + 1 : 1,\n      );\n      try {\n        window.sessionStorage.setItem('tab_id', newTabId);\n        window.localStorage.setItem('last_tab_id', newTabId);\n      } catch (error) {\n        // continue regardless of error\n      }\n      setTabId(newTabId);\n    };\n    let storedTabId;\n    try {\n      storedTabId = window.sessionStorage.getItem('tab_id');\n    } catch (error) {\n      // continue regardless of error\n    }\n    if (storedTabId) {\n      channel.postMessage({\n        type: 'REQUESTING_TAB_ID',\n        tabId: storedTabId,\n      });\n      setTabId(storedTabId);\n    } else {\n      updateTabId();\n    }\n\n    channel.onmessage = messageEvent => {\n      if (messageEvent.tabId === tabId) {\n        if (messageEvent.type === 'REQUESTING_TAB_ID') {\n          const message: TabIdChannelMessage = {\n            type: 'TAB_ID_DENIED',\n            tabId: messageEvent.tabId,\n          };\n          channel.postMessage(message);\n        } else if (messageEvent.type === 'TAB_ID_DENIED') {\n          updateTabId();\n        }\n      }\n    };\n  }, [tabId]);\n\n  return tabId;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,gBAAgB,QAAQ,mBAAmB;AAOpD;AACA;AACA;AACA,MAAMC,OAAO,GAAG,IAAID,gBAAgB,CAAsB,gBAAgB,CAAC;AAE3E,OAAM,SAAUE,QAAQA,CAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAU;EAE5C,SAASO,kBAAkBA,CAAA;IACzB,IAAI;MACF,OAAOC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,cAAc;;IACnD,OAAOC,KAAK,EAAE;MACd,OAAO,KAAK;;EAEhB;EACAZ,SAAS,CAAC,MAAK;IACb,IAAI,CAACQ,kBAAkB,EAAE,EAAE;MACzB,IAAI,CAACF,KAAK,EAAE;QACVC,QAAQ,CAACL,OAAO,CAACW,QAAQ,EAAE,CAAC;;MAE9B;;IAGF,MAAMC,WAAW,GAAGA,CAAA,KAAK;MACvB,IAAIC,SAAS;MACb,IAAI;QACFA,SAAS,GAAGN,MAAM,CAACC,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;;MACtD,OAAOJ,KAAK,EAAE;;QACd;MAAA,CAEF,MAAMK,QAAQ,GAAGC,MAAM,CACrBH,SAAS,GAAGI,MAAM,CAACC,QAAQ,CAACL,SAAS,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CACnD;MACD,IAAI;QACFN,MAAM,CAACE,cAAc,CAACU,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;QACjDR,MAAM,CAACC,YAAY,CAACW,OAAO,CAAC,aAAa,EAAEJ,QAAQ,CAAC;;MACpD,OAAOL,KAAK,EAAE;;QACd;MAAA,CAEFL,QAAQ,CAACU,QAAQ,CAAC;IACpB,CAAC;IACD,IAAIK,WAAW;IACf,IAAI;MACFA,WAAW,GAAGb,MAAM,CAACE,cAAc,CAACK,OAAO,CAAC,QAAQ,CAAC;;IACrD,OAAOJ,KAAK,EAAE;;MACd;IAAA,CAEF,IAAIU,WAAW,EAAE;MACflB,OAAO,CAACmB,WAAW,CAAC;QAClBC,IAAI,EAAE,mBAAmB;QACzBlB,KAAK,EAAEgB;OACR,CAAC;MACFf,QAAQ,CAACe,WAAW,CAAC;KACtB;IAAM;MACLR,WAAW,EAAE;;IAGfV,OAAO,CAACqB,SAAS,GAAG,CAAAC,YAAY,KAAG;MACjC,IAAIA,YAAY,CAACpB,KAAK,KAAKA,KAAK,EAAE;QAChC,IAAIoB,YAAY,CAACF,IAAI,KAAK,mBAAmB,EAAE;UAC7C,MAAMG,OAAO,GAAwB;YACnCH,IAAI,EAAE,eAAe;YACrBlB,KAAK,EAAEoB,YAAY,CAACpB;WACrB;UACDF,OAAO,CAACmB,WAAW,CAACI,OAAO,CAAC;SAC7B;QAAM,IAAID,YAAY,CAACF,IAAI,KAAK,eAAe,EAAE;UAChDV,WAAW,EAAE;;;IAGnB,CAAC;EACH,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,OAAOA,KAAK;AACd,CAACsB,aAAA,CApEevB,QAAQ,iEAAAwB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAFlB7B,OAAO,6FAAAyB,cAAA,CAAAI,QAAA,CAEG5B,QAAQ,sHAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}