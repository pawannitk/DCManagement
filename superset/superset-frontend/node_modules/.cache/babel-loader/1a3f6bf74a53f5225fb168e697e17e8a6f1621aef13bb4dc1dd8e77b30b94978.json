{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  isDefined,\n  t,\n  styled,\n  ensureIsArray,\n  DatasourceType } from\n'@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { EmptyStateSmall } from 'src/components/EmptyState';\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\nimport {\n  AGGREGATES_OPTIONS,\n  POPOVER_INITIAL_HEIGHT,\n  POPOVER_INITIAL_WIDTH } from\n'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\n  EXPRESSION_TYPES } from\n'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\n  StyledMetricOption,\n  StyledColumnOption } from\n'src/explore/components/optionRenderers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  isNewMetric: PropTypes.bool,\n  isLabelModified: PropTypes.bool\n};\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp,\n  isNewMetric: false\n};\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n\n\n\n  constructor(props) {\n    super(props); // \"Saved\" is a default tab unless there are no saved metrics for dataset\n    this.defaultActiveTabKey = this.getDefaultTab();this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n    this.getDefaultTab = this.getDefaultTab.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: POPOVER_INITIAL_WIDTH,\n      height: POPOVER_INITIAL_HEIGHT\n    };\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {var _prevState$adhocMetri, _this$state$adhocMetr, _prevState$adhocMetri2, _this$state$adhocMetr2, _prevState$adhocMetri3, _prevState$adhocMetri4, _this$state$adhocMetr3, _this$state$adhocMetr4, _prevState$savedMetri, _this$state$savedMetr;\n    if (\n    ((_prevState$adhocMetri = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri.sqlExpression) !== ((_this$state$adhocMetr =\n    this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr.sqlExpression) ||\n    ((_prevState$adhocMetri2 = prevState.adhocMetric) == null ? void 0 : _prevState$adhocMetri2.aggregate) !== ((_this$state$adhocMetr2 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr2.aggregate) ||\n    ((_prevState$adhocMetri3 = prevState.adhocMetric) == null ? void 0 : (_prevState$adhocMetri4 = _prevState$adhocMetri3.column) == null ? void 0 : _prevState$adhocMetri4.column_name) !== ((_this$state$adhocMetr3 =\n    this.state.adhocMetric) == null ? void 0 : (_this$state$adhocMetr4 = _this$state$adhocMetr3.column) == null ? void 0 : _this$state$adhocMetr4.column_name) ||\n    ((_prevState$savedMetri = prevState.savedMetric) == null ? void 0 : _prevState$savedMetri.metric_name) !== ((_this$state$savedMetr = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr.metric_name))\n    {var _this$state$savedMetr2, _this$state$savedMetr3, _this$state$adhocMetr5;\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n        ((_this$state$savedMetr2 = this.state.savedMetric) == null ? void 0 : _this$state$savedMetr2.verbose_name) || ((_this$state$savedMetr3 =\n        this.state.savedMetric) == null ? void 0 : _this$state$savedMetr3.metric_name),\n        adhocMetricLabel: (_this$state$adhocMetr5 = this.state.adhocMetric) == null ? void 0 : _this$state$adhocMetr5.getDefaultLabel()\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  getDefaultTab() {\n    const { adhocMetric, savedMetric, savedMetricsOptions, isNewMetric } =\n    this.props;\n    if (isDefined(adhocMetric.column) || isDefined(adhocMetric.sqlExpression)) {\n      return adhocMetric.expressionType;\n    }\n    if (\n    (isNewMetric || savedMetric.metric_name) &&\n    Array.isArray(savedMetricsOptions) &&\n    savedMetricsOptions.length > 0)\n    {\n      return SAVED_TAB_KEY;\n    }\n    return adhocMetric.expressionType;\n  }\n\n  onSave() {var _this$props$savedMetr;\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric != null && savedMetric.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = (_this$props$savedMetr = this.props.savedMetric) != null && _this$props$savedMetr.metric_name ?\n    this.props.savedMetric :\n    this.props.adhocMetric;\n    this.props.onChange(\n      {\n        ...metric\n      },\n      oldMetric\n    );\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n      {\n        adhocMetric: this.props.adhocMetric,\n        savedMetric: this.props.savedMetric\n      },\n      this.props.onClose\n    );\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n      (column) => column.column_name === columnName\n    );\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE\n      }),\n      savedMetric: undefined\n    }));\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE\n      }),\n      savedMetric: undefined\n    }));\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n      (metric) => metric.metric_name === savedMetricName\n    );\n    this.setState((prevState) => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE\n      })\n    }));\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState((prevState) => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL\n      }),\n      savedMetric: undefined\n    }));\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n        this.dragStartWidth + (e.clientX - this.dragStartX),\n        POPOVER_INITIAL_WIDTH\n      ),\n      height: Math.max(\n        this.dragStartHeight + (e.clientY - this.dragStartY),\n        POPOVER_INITIAL_HEIGHT\n      )\n    });\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return ___EmotionJSX(StyledColumnOption, { column: column, showType: true });\n  }\n\n  renderMetricOption(savedMetric) {\n    return ___EmotionJSX(StyledMetricOption, { metric: savedMetric, showType: true });\n  }\n\n  render() {var _savedMetricsOptions$;\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasource,\n      isNewMetric,\n      isLabelModified,\n      ...popoverProps\n    } = this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n      columns.map((column) => ({\n        name: column.column_name,\n        value: column.column_name,\n        score: 50,\n        meta: 'column'\n      }))\n    );\n\n    const columnValue =\n    adhocMetric.column && adhocMetric.column.column_name ||\n    adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue\n    };\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue\n    };\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', (_savedMetricsOptions$ = savedMetricsOptions == null ? void 0 : savedMetricsOptions.length) != null ? _savedMetricsOptions$ : 0),\n      value: savedMetric == null ? void 0 : savedMetric.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true\n    };\n\n    const stateIsValid = adhocMetric.isValid() || (savedMetric == null ? void 0 : savedMetric.metric_name);\n    const hasUnsavedChanges =\n    isLabelModified ||\n    isNewMetric ||\n    !adhocMetric.equals(propsAdhocMetric) ||\n    !(\n    typeof (savedMetric == null ? void 0 : savedMetric.metric_name) === 'undefined' &&\n    typeof (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name) === 'undefined') &&\n\n    (savedMetric == null ? void 0 : savedMetric.metric_name) !== (propsSavedMetric == null ? void 0 : propsSavedMetric.metric_name);\n\n    let extra = {};\n    if (datasource != null && datasource.extra) {\n      try {\n        extra = JSON.parse(datasource.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      ___EmotionJSX(Form, _extends({\n        layout: \"vertical\",\n        id: \"metrics-edit-popover\",\n        \"data-test\": \"metrics-edit-popover\" },\n      popoverProps),\n\n      ___EmotionJSX(Tabs, {\n        id: \"adhoc-metric-edit-tabs\",\n        \"data-test\": \"adhoc-metric-edit-tabs\",\n        defaultActiveKey: this.defaultActiveTabKey,\n        className: \"adhoc-metric-edit-tabs\",\n        style: { height: this.state.height, width: this.state.width },\n        onChange: this.onTabChange,\n        allowOverflow: true },\n\n      ___EmotionJSX(Tabs.TabPane, { key: SAVED_TAB_KEY, tab: t('Saved') },\n      ensureIsArray(savedMetricsOptions).length > 0 ?\n      ___EmotionJSX(FormItem, { label: t('Saved metric') },\n      ___EmotionJSX(StyledSelect, _extends({\n        options: ensureIsArray(savedMetricsOptions).map(\n          (savedMetric) => ({\n            value: savedMetric.metric_name,\n            label: savedMetric.metric_name,\n            customLabel: this.renderMetricOption(savedMetric),\n            key: savedMetric.id\n          })\n        ) },\n      savedSelectProps)\n      )\n      ) :\n      datasource.type === DatasourceType.Table ?\n      ___EmotionJSX(EmptyStateSmall, {\n        image: \"empty.svg\",\n        title: t('No saved metrics found'),\n        description: t(\n          'Add metrics to dataset in \"Edit datasource\" modal'\n        ) }\n      ) :\n\n      ___EmotionJSX(EmptyStateSmall, {\n        image: \"empty.svg\",\n        title: t('No saved metrics found'),\n        description:\n        ___EmotionJSX(React.Fragment, null,\n        ___EmotionJSX(\"span\", {\n          tabIndex: 0,\n          role: \"button\",\n          onClick: () => {\n            this.props.handleDatasetModal(true);\n            this.props.onClose();\n          } },\n\n        t('Create a dataset')\n        ),\n        t(' to add metrics')\n        ) }\n\n      )\n\n      ),\n      ___EmotionJSX(Tabs.TabPane, {\n        key: EXPRESSION_TYPES.SIMPLE,\n        tab:\n        extra.disallow_adhoc_metrics ?\n        ___EmotionJSX(Tooltip, {\n          title: t(\n            'Simple ad-hoc metrics are not enabled for this dataset'\n          ) },\n\n        t('Simple')\n        ) :\n\n        t('Simple'),\n\n\n        disabled: extra.disallow_adhoc_metrics },\n\n      ___EmotionJSX(FormItem, { label: t('column') },\n      ___EmotionJSX(Select, _extends({\n        options: columns.map((column) => ({\n          value: column.column_name,\n          label: column.verbose_name || column.column_name,\n          key: column.id,\n          customLabel: this.renderColumnOption(column)\n        })) },\n      columnSelectProps)\n      )\n      ),\n      ___EmotionJSX(FormItem, { label: t('aggregate') },\n      ___EmotionJSX(Select, _extends({\n        options: AGGREGATES_OPTIONS.map((option) => ({\n          value: option,\n          label: option,\n          key: option\n        })) },\n      aggregateSelectProps)\n      )\n      )\n      ),\n      ___EmotionJSX(Tabs.TabPane, {\n        key: EXPRESSION_TYPES.SQL,\n        tab:\n        extra.disallow_adhoc_metrics ?\n        ___EmotionJSX(Tooltip, {\n          title: t(\n            'Custom SQL ad-hoc metrics are not enabled for this dataset'\n          ) },\n\n        t('Custom SQL')\n        ) :\n\n        t('Custom SQL'),\n\n\n        \"data-test\": \"adhoc-metric-edit-tab#custom\",\n        disabled: extra.disallow_adhoc_metrics },\n\n      ___EmotionJSX(SQLEditor, {\n        \"data-test\": \"sql-editor\",\n        showLoadingForImport: true,\n        ref: this.handleAceEditorRef,\n        keywords: keywords,\n        height: `${this.state.height - 80}px`,\n        onChange: this.onSqlExpressionChange,\n        width: \"100%\",\n        showGutter: false,\n        value:\n        adhocMetric.sqlExpression ||\n        adhocMetric.translateToSql({ transformCountDistinct: true }),\n\n        editorProps: { $blockScrolling: true },\n        enableLiveAutocompletion: true,\n        className: \"filter-sql-editor\",\n        wrapEnabled: true }\n      )\n      )\n      ),\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(Button, {\n        buttonSize: \"small\",\n        onClick: this.onResetStateAndClose,\n        \"data-test\": \"AdhocMetricEdit#cancel\",\n        cta: true },\n\n      t('Close')\n      ),\n      ___EmotionJSX(Button, {\n        disabled: !stateIsValid || !hasUnsavedChanges,\n        buttonStyle: \"primary\",\n        buttonSize: \"small\",\n        \"data-test\": \"AdhocMetricEdit#save\",\n        onClick: this.onSave,\n        cta: true },\n\n      t('Save')\n      ),\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Resize\",\n        tabIndex: 0,\n        onMouseDown: this.onDragDown,\n        className: \"fa fa-expand edit-popover-resize text-muted\" }\n      )\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}AdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(SAVED_TAB_KEY, \"SAVED_TAB_KEY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");reactHotLoader.register(AdhocMetricEditPopover, \"AdhocMetricEditPopover\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","isDefined","t","styled","ensureIsArray","DatasourceType","Tabs","Button","Select","Tooltip","EmptyStateSmall","Form","FormItem","SQLEditor","sqlKeywords","noOp","AGGREGATES_OPTIONS","POPOVER_INITIAL_HEIGHT","POPOVER_INITIAL_WIDTH","columnType","savedMetricType","AdhocMetric","EXPRESSION_TYPES","StyledMetricOption","StyledColumnOption","jsx","___EmotionJSX","propTypes","onChange","func","isRequired","onClose","onResize","getCurrentTab","getCurrentLabel","adhocMetric","instanceOf","columns","arrayOf","savedMetricsOptions","savedMetric","datasource","object","isNewMetric","bool","isLabelModified","defaultProps","StyledSelect","theme","gridUnit","SAVED_TAB_KEY","AdhocMetricEditPopover","PureComponent","constructor","props","defaultActiveTabKey","getDefaultTab","onSave","bind","onResetStateAndClose","onColumnChange","onAggregateChange","onSavedMetricChange","onSqlExpressionChange","onDragDown","onMouseMove","onMouseUp","onTabChange","handleAceEditorRef","refreshAceEditor","state","width","height","document","addEventListener","componentDidMount","componentDidUpdate","prevProps","prevState","_prevState$adhocMetri","_this$state$adhocMetr","_prevState$adhocMetri2","_this$state$adhocMetr2","_prevState$adhocMetri3","_prevState$adhocMetri4","_this$state$adhocMetr3","_this$state$adhocMetr4","_prevState$savedMetri","_this$state$savedMetr","sqlExpression","aggregate","column","column_name","metric_name","_this$state$savedMetr2","_this$state$savedMetr3","_this$state$adhocMetr5","savedMetricLabel","verbose_name","adhocMetricLabel","getDefaultLabel","componentWillUnmount","removeEventListener","expressionType","Array","isArray","length","_this$props$savedMetr","metric","oldMetric","setState","columnName","find","duplicateWith","SIMPLE","undefined","savedMetricName","SQL","e","dragStartX","clientX","dragStartY","clientY","dragStartWidth","dragStartHeight","Math","max","tab","ref","aceEditorRef","setTimeout","editor","resize","renderColumnOption","option","showType","renderMetricOption","render","_savedMetricsOptions$","propsAdhocMetric","propsSavedMetric","popoverProps","keywords","concat","map","name","value","score","meta","columnValue","inferSqlExpressionColumn","columnSelectProps","ariaLabel","placeholder","allowClear","autoFocus","aggregateSelectProps","inferSqlExpressionAggregate","savedSelectProps","stateIsValid","isValid","hasUnsavedChanges","equals","extra","JSON","parse","_extends","layout","id","defaultActiveKey","className","style","allowOverflow","TabPane","key","label","options","customLabel","type","Table","image","title","description","Fragment","tabIndex","role","onClick","handleDatasetModal","disallow_adhoc_metrics","disabled","showLoadingForImport","showGutter","translateToSql","transformCountDistinct","editorProps","$blockScrolling","enableLiveAutocompletion","wrapEnabled","buttonSize","cta","buttonStyle","onMouseDown","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricEditPopover/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  isDefined,\n  t,\n  styled,\n  ensureIsArray,\n  DatasourceType,\n} from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { EmptyStateSmall } from 'src/components/EmptyState';\nimport { Form, FormItem } from 'src/components/Form';\nimport { SQLEditor } from 'src/components/AsyncAceEditor';\nimport sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\nimport { noOp } from 'src/utils/common';\nimport {\n  AGGREGATES_OPTIONS,\n  POPOVER_INITIAL_HEIGHT,\n  POPOVER_INITIAL_WIDTH,\n} from 'src/explore/constants';\nimport columnType from 'src/explore/components/controls/MetricControl/columnType';\nimport savedMetricType from 'src/explore/components/controls/MetricControl/savedMetricType';\nimport AdhocMetric, {\n  EXPRESSION_TYPES,\n} from 'src/explore/components/controls/MetricControl/AdhocMetric';\nimport {\n  StyledMetricOption,\n  StyledColumnOption,\n} from 'src/explore/components/optionRenderers';\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  getCurrentTab: PropTypes.func,\n  getCurrentLabel: PropTypes.func,\n  adhocMetric: PropTypes.instanceOf(AdhocMetric).isRequired,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasource: PropTypes.object,\n  isNewMetric: PropTypes.bool,\n  isLabelModified: PropTypes.bool,\n};\n\nconst defaultProps = {\n  columns: [],\n  getCurrentTab: noOp,\n  isNewMetric: false,\n};\n\nconst StyledSelect = styled(Select)`\n  .metric-option {\n    & > svg {\n      min-width: ${({ theme }) => `${theme.gridUnit * 4}px`};\n    }\n    & > .option-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const SAVED_TAB_KEY = 'SAVED';\n\nexport default class AdhocMetricEditPopover extends React.PureComponent {\n  // \"Saved\" is a default tab unless there are no saved metrics for dataset\n  defaultActiveTabKey = this.getDefaultTab();\n\n  constructor(props) {\n    super(props);\n    this.onSave = this.onSave.bind(this);\n    this.onResetStateAndClose = this.onResetStateAndClose.bind(this);\n    this.onColumnChange = this.onColumnChange.bind(this);\n    this.onAggregateChange = this.onAggregateChange.bind(this);\n    this.onSavedMetricChange = this.onSavedMetricChange.bind(this);\n    this.onSqlExpressionChange = this.onSqlExpressionChange.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n    this.handleAceEditorRef = this.handleAceEditorRef.bind(this);\n    this.refreshAceEditor = this.refreshAceEditor.bind(this);\n    this.getDefaultTab = this.getDefaultTab.bind(this);\n\n    this.state = {\n      adhocMetric: this.props.adhocMetric,\n      savedMetric: this.props.savedMetric,\n      width: POPOVER_INITIAL_WIDTH,\n      height: POPOVER_INITIAL_HEIGHT,\n    };\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentTab(this.defaultActiveTabKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.adhocMetric?.sqlExpression !==\n        this.state.adhocMetric?.sqlExpression ||\n      prevState.adhocMetric?.aggregate !== this.state.adhocMetric?.aggregate ||\n      prevState.adhocMetric?.column?.column_name !==\n        this.state.adhocMetric?.column?.column_name ||\n      prevState.savedMetric?.metric_name !== this.state.savedMetric?.metric_name\n    ) {\n      this.props.getCurrentLabel({\n        savedMetricLabel:\n          this.state.savedMetric?.verbose_name ||\n          this.state.savedMetric?.metric_name,\n        adhocMetricLabel: this.state.adhocMetric?.getDefaultLabel(),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  getDefaultTab() {\n    const { adhocMetric, savedMetric, savedMetricsOptions, isNewMetric } =\n      this.props;\n    if (isDefined(adhocMetric.column) || isDefined(adhocMetric.sqlExpression)) {\n      return adhocMetric.expressionType;\n    }\n    if (\n      (isNewMetric || savedMetric.metric_name) &&\n      Array.isArray(savedMetricsOptions) &&\n      savedMetricsOptions.length > 0\n    ) {\n      return SAVED_TAB_KEY;\n    }\n    return adhocMetric.expressionType;\n  }\n\n  onSave() {\n    const { adhocMetric, savedMetric } = this.state;\n\n    const metric = savedMetric?.metric_name ? savedMetric : adhocMetric;\n    const oldMetric = this.props.savedMetric?.metric_name\n      ? this.props.savedMetric\n      : this.props.adhocMetric;\n    this.props.onChange(\n      {\n        ...metric,\n      },\n      oldMetric,\n    );\n    this.props.onClose();\n  }\n\n  onResetStateAndClose() {\n    this.setState(\n      {\n        adhocMetric: this.props.adhocMetric,\n        savedMetric: this.props.savedMetric,\n      },\n      this.props.onClose,\n    );\n  }\n\n  onColumnChange(columnName) {\n    const column = this.props.columns.find(\n      column => column.column_name === columnName,\n    );\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onAggregateChange(aggregate) {\n    // we construct this object explicitly to overwrite the value in the case aggregate is null\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        aggregate,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onSavedMetricChange(savedMetricName) {\n    const savedMetric = this.props.savedMetricsOptions.find(\n      metric => metric.metric_name === savedMetricName,\n    );\n    this.setState(prevState => ({\n      savedMetric,\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        column: undefined,\n        aggregate: undefined,\n        sqlExpression: undefined,\n        expressionType: EXPRESSION_TYPES.SIMPLE,\n      }),\n    }));\n  }\n\n  onSqlExpressionChange(sqlExpression) {\n    this.setState(prevState => ({\n      adhocMetric: prevState.adhocMetric.duplicateWith({\n        sqlExpression,\n        expressionType: EXPRESSION_TYPES.SQL,\n      }),\n      savedMetric: undefined,\n    }));\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n        this.dragStartWidth + (e.clientX - this.dragStartX),\n        POPOVER_INITIAL_WIDTH,\n      ),\n      height: Math.max(\n        this.dragStartHeight + (e.clientY - this.dragStartY),\n        POPOVER_INITIAL_HEIGHT,\n      ),\n    });\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(tab) {\n    this.refreshAceEditor();\n    this.props.getCurrentTab(tab);\n  }\n\n  handleAceEditorRef(ref) {\n    if (ref) {\n      this.aceEditorRef = ref;\n    }\n  }\n\n  refreshAceEditor() {\n    setTimeout(() => {\n      if (this.aceEditorRef) {\n        this.aceEditorRef.editor.resize();\n      }\n    }, 0);\n  }\n\n  renderColumnOption(option) {\n    const column = { ...option };\n    if (column.metric_name && !column.verbose_name) {\n      column.verbose_name = column.metric_name;\n    }\n    return <StyledColumnOption column={column} showType />;\n  }\n\n  renderMetricOption(savedMetric) {\n    return <StyledMetricOption metric={savedMetric} showType />;\n  }\n\n  render() {\n    const {\n      adhocMetric: propsAdhocMetric,\n      savedMetric: propsSavedMetric,\n      columns,\n      savedMetricsOptions,\n      onChange,\n      onClose,\n      onResize,\n      datasource,\n      isNewMetric,\n      isLabelModified,\n      ...popoverProps\n    } = this.props;\n    const { adhocMetric, savedMetric } = this.state;\n    const keywords = sqlKeywords.concat(\n      columns.map(column => ({\n        name: column.column_name,\n        value: column.column_name,\n        score: 50,\n        meta: 'column',\n      })),\n    );\n\n    const columnValue =\n      (adhocMetric.column && adhocMetric.column.column_name) ||\n      adhocMetric.inferSqlExpressionColumn();\n\n    // autofocus on column if there's no value in column; otherwise autofocus on aggregate\n    const columnSelectProps = {\n      ariaLabel: t('Select column'),\n      placeholder: t('%s column(s)', columns.length),\n      value: columnValue,\n      onChange: this.onColumnChange,\n      allowClear: true,\n      autoFocus: !columnValue,\n    };\n\n    const aggregateSelectProps = {\n      ariaLabel: t('Select aggregate options'),\n      placeholder: t('%s aggregates(s)', AGGREGATES_OPTIONS.length),\n      value: adhocMetric.aggregate || adhocMetric.inferSqlExpressionAggregate(),\n      onChange: this.onAggregateChange,\n      allowClear: true,\n      autoFocus: !!columnValue,\n    };\n\n    const savedSelectProps = {\n      ariaLabel: t('Select saved metrics'),\n      placeholder: t('%s saved metric(s)', savedMetricsOptions?.length ?? 0),\n      value: savedMetric?.metric_name,\n      onChange: this.onSavedMetricChange,\n      allowClear: true,\n      autoFocus: true,\n    };\n\n    const stateIsValid = adhocMetric.isValid() || savedMetric?.metric_name;\n    const hasUnsavedChanges =\n      isLabelModified ||\n      isNewMetric ||\n      !adhocMetric.equals(propsAdhocMetric) ||\n      (!(\n        typeof savedMetric?.metric_name === 'undefined' &&\n        typeof propsSavedMetric?.metric_name === 'undefined'\n      ) &&\n        savedMetric?.metric_name !== propsSavedMetric?.metric_name);\n\n    let extra = {};\n    if (datasource?.extra) {\n      try {\n        extra = JSON.parse(datasource.extra);\n      } catch {} // eslint-disable-line no-empty\n    }\n\n    return (\n      <Form\n        layout=\"vertical\"\n        id=\"metrics-edit-popover\"\n        data-test=\"metrics-edit-popover\"\n        {...popoverProps}\n      >\n        <Tabs\n          id=\"adhoc-metric-edit-tabs\"\n          data-test=\"adhoc-metric-edit-tabs\"\n          defaultActiveKey={this.defaultActiveTabKey}\n          className=\"adhoc-metric-edit-tabs\"\n          style={{ height: this.state.height, width: this.state.width }}\n          onChange={this.onTabChange}\n          allowOverflow\n        >\n          <Tabs.TabPane key={SAVED_TAB_KEY} tab={t('Saved')}>\n            {ensureIsArray(savedMetricsOptions).length > 0 ? (\n              <FormItem label={t('Saved metric')}>\n                <StyledSelect\n                  options={ensureIsArray(savedMetricsOptions).map(\n                    savedMetric => ({\n                      value: savedMetric.metric_name,\n                      label: savedMetric.metric_name,\n                      customLabel: this.renderMetricOption(savedMetric),\n                      key: savedMetric.id,\n                    }),\n                  )}\n                  {...savedSelectProps}\n                />\n              </FormItem>\n            ) : datasource.type === DatasourceType.Table ? (\n              <EmptyStateSmall\n                image=\"empty.svg\"\n                title={t('No saved metrics found')}\n                description={t(\n                  'Add metrics to dataset in \"Edit datasource\" modal',\n                )}\n              />\n            ) : (\n              <EmptyStateSmall\n                image=\"empty.svg\"\n                title={t('No saved metrics found')}\n                description={\n                  <>\n                    <span\n                      tabIndex={0}\n                      role=\"button\"\n                      onClick={() => {\n                        this.props.handleDatasetModal(true);\n                        this.props.onClose();\n                      }}\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to add metrics')}\n                  </>\n                }\n              />\n            )}\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            key={EXPRESSION_TYPES.SIMPLE}\n            tab={\n              extra.disallow_adhoc_metrics ? (\n                <Tooltip\n                  title={t(\n                    'Simple ad-hoc metrics are not enabled for this dataset',\n                  )}\n                >\n                  {t('Simple')}\n                </Tooltip>\n              ) : (\n                t('Simple')\n              )\n            }\n            disabled={extra.disallow_adhoc_metrics}\n          >\n            <FormItem label={t('column')}>\n              <Select\n                options={columns.map(column => ({\n                  value: column.column_name,\n                  label: column.verbose_name || column.column_name,\n                  key: column.id,\n                  customLabel: this.renderColumnOption(column),\n                }))}\n                {...columnSelectProps}\n              />\n            </FormItem>\n            <FormItem label={t('aggregate')}>\n              <Select\n                options={AGGREGATES_OPTIONS.map(option => ({\n                  value: option,\n                  label: option,\n                  key: option,\n                }))}\n                {...aggregateSelectProps}\n              />\n            </FormItem>\n          </Tabs.TabPane>\n          <Tabs.TabPane\n            key={EXPRESSION_TYPES.SQL}\n            tab={\n              extra.disallow_adhoc_metrics ? (\n                <Tooltip\n                  title={t(\n                    'Custom SQL ad-hoc metrics are not enabled for this dataset',\n                  )}\n                >\n                  {t('Custom SQL')}\n                </Tooltip>\n              ) : (\n                t('Custom SQL')\n              )\n            }\n            data-test=\"adhoc-metric-edit-tab#custom\"\n            disabled={extra.disallow_adhoc_metrics}\n          >\n            <SQLEditor\n              data-test=\"sql-editor\"\n              showLoadingForImport\n              ref={this.handleAceEditorRef}\n              keywords={keywords}\n              height={`${this.state.height - 80}px`}\n              onChange={this.onSqlExpressionChange}\n              width=\"100%\"\n              showGutter={false}\n              value={\n                adhocMetric.sqlExpression ||\n                adhocMetric.translateToSql({ transformCountDistinct: true })\n              }\n              editorProps={{ $blockScrolling: true }}\n              enableLiveAutocompletion\n              className=\"filter-sql-editor\"\n              wrapEnabled\n            />\n          </Tabs.TabPane>\n        </Tabs>\n        <div>\n          <Button\n            buttonSize=\"small\"\n            onClick={this.onResetStateAndClose}\n            data-test=\"AdhocMetricEdit#cancel\"\n            cta\n          >\n            {t('Close')}\n          </Button>\n          <Button\n            disabled={!stateIsValid || !hasUnsavedChanges}\n            buttonStyle=\"primary\"\n            buttonSize=\"small\"\n            data-test=\"AdhocMetricEdit#save\"\n            onClick={this.onSave}\n            cta\n          >\n            {t('Save')}\n          </Button>\n          <i\n            role=\"button\"\n            aria-label=\"Resize\"\n            tabIndex={0}\n            onMouseDown={this.onDragDown}\n            className=\"fa fa-expand edit-popover-resize text-muted\"\n          />\n        </div>\n      </Form>\n    );\n  }\n}\nAdhocMetricEditPopover.propTypes = propTypes;\nAdhocMetricEditPopover.defaultProps = defaultProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}