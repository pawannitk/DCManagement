{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { useFilteredTableData, useTableColumns } from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const SingleQueryResultPane = ({ data, colnames, coltypes, rowcount, datasourceId, dataSize = 50, isVisible }) => {\n  const [filterText, setFilterText] = useState('');\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(colnames, coltypes, data, datasourceId, isVisible, {}, // moreConfig\n  true);\n  const filteredData = useFilteredTableData(filterText, data);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(TableControls, { data: filteredData, columnNames: colnames, columnTypes: coltypes, rowcount: rowcount, datasourceId: datasourceId, onInputChange: (input) => setFilterText(input), isLoading: false }),\n  ___EmotionJSX(TableView, { columns: columns, data: filteredData, pageSize: dataSize, noDataText: t('No results'), emptyWrapperType: EmptyWrapperType.Small, className: \"table-condensed\", isPaginationSticky: true, showRowCount: false, small: true })\n  );\n};__signature__(SingleQueryResultPane, \"useState{[filterText, setFilterText]('')}\\nuseTableColumns{columns}\\nuseFilteredTableData{filteredData}\", () => [useTableColumns, useFilteredTableData]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SingleQueryResultPane, \"SingleQueryResultPane\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTablesPane/components/SingleQueryResultPane.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","t","TableView","EmptyWrapperType","useFilteredTableData","useTableColumns","TableControls","jsx","___EmotionJSX","SingleQueryResultPane","data","colnames","coltypes","rowcount","datasourceId","dataSize","isVisible","filterText","setFilterText","columns","filteredData","Fragment","columnNames","columnTypes","onInputChange","input","isLoading","pageSize","noDataText","emptyWrapperType","Small","className","isPaginationSticky","showRowCount","small","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTablesPane/components/SingleQueryResultPane.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport {\n  useFilteredTableData,\n  useTableColumns,\n} from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';\nimport { SingleQueryResultPaneProp } from '../types';\n\nexport const SingleQueryResultPane = ({\n  data,\n  colnames,\n  coltypes,\n  rowcount,\n  datasourceId,\n  dataSize = 50,\n  isVisible,\n}: SingleQueryResultPaneProp) => {\n  const [filterText, setFilterText] = useState('');\n\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(\n    colnames,\n    coltypes,\n    data,\n    datasourceId,\n    isVisible,\n    {}, // moreConfig\n    true, // allowHTML\n  );\n  const filteredData = useFilteredTableData(filterText, data);\n\n  return (\n    <>\n      <TableControls\n        data={filteredData}\n        columnNames={colnames}\n        columnTypes={coltypes}\n        rowcount={rowcount}\n        datasourceId={datasourceId}\n        onInputChange={input => setFilterText(input)}\n        isLoading={false}\n      />\n      <TableView\n        columns={columns}\n        data={filteredData}\n        pageSize={dataSize}\n        noDataText={t('No results')}\n        emptyWrapperType={EmptyWrapperType.Small}\n        className=\"table-condensed\"\n        isPaginationSticky\n        showRowCount={false}\n        small\n      />\n    </>\n  );\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,CAAC,QAAQ,mBAAmB;AACrC,OAAOC,SAAS,IAAIC,gBAAgB,QAAQ,0BAA0B;AACtE,SACEC,oBAAoB,EACpBC,eAAe,QACV,yCAAyC;AAChD,SAASC,aAAa,QAAQ,qBAAqB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAGpD,OAAO,MAAMC,qBAAqB,GAAGA,CAAC,EACpCC,IAAI,EACJC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,QAAQ,GAAG,EAAE,EACbC,SAAS,EACiB,KAAI;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhD;EACA;EACA,MAAMmB,OAAO,GAAGd,eAAe,CAC7BM,QAAQ,EACRC,QAAQ,EACRF,IAAI,EACJI,YAAY,EACZE,SAAS,EACT,EAAE,EAAE;EACJ,IAAI,CACL;EACD,MAAMI,YAAY,GAAGhB,oBAAoB,CAACa,UAAU,EAAEP,IAAI,CAAC;EAE3D,OACEF,aAAA,CAAAT,KAAA,CAAAsB,QAAA;EACEb,aAAA,CAACF,aAAa,IACZI,IAAI,EAAEU,YAAa,EACnBE,WAAW,EAAEX,QAAS,EACtBY,WAAW,EAAEX,QAAS,EACtBC,QAAQ,EAAEA,QAAS,EACnBC,YAAY,EAAEA,YAAa,EAC3BU,aAAa,EAAEA,CAAAC,KAAK,KAAIP,aAAa,CAACO,KAAK,CAAE,EAC7CC,SAAS,EAAE,KAAM,GAEnB;EAAAlB,aAAA,CAACN,SAAS,IACRiB,OAAO,EAAEA,OAAQ,EACjBT,IAAI,EAAEU,YAAa,EACnBO,QAAQ,EAAEZ,QAAS,EACnBa,UAAU,EAAE3B,CAAC,CAAC,YAAY,CAAE,EAC5B4B,gBAAgB,EAAE1B,gBAAgB,CAAC2B,KAAM,EACzCC,SAAS,EAAC,iBAAiB,EAC3BC,kBAAkB,QAClBC,YAAY,EAAE,KAAM,EACpBC,KAAK;EAET,CAAG;AAEP,CAAC,CAACC,aAAA,CAhDW1B,qBAAqB,oHAahBJ,eAAe,EASVD,oBAAoB,sBAAAgC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAtB9B/B,qBAAqB,wLAAAgC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}