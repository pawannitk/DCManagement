{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useLayoutEffect, useMemo, useState } from 'react';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport { DTTM_ALIAS, ensureIsArray, GenericDataType, getSelectedText, getTimeFormatterForGranularity, styled, css, t, tn } from '@superset-ui/core';\nimport DataTable from './DataTable';\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' '\n};\n/**\n * Return sortType based on data type\n */\nfunction getSortTypeByDataType(dataType) {\n  if (dataType === GenericDataType.Temporal) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.String) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth({ value, valueRange, alignPositiveNegative }) {\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round(value / maxValue * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round(Math.abs(value) / tot * 100);\n  return perc2;\n}\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset({ value, valueRange, alignPositiveNegative }) {\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round(Math.min(negExtent + value, negExtent) / tot * 100);\n}\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground({ value, colorPositiveNegative = false }) {\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\nfunction SortIcon({ column }) {\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = ___EmotionJSX(FaSort, null);\n  if (isSorted) {\n    sortIcon = isSortedDesc ? ___EmotionJSX(FaSortDesc, null) : ___EmotionJSX(FaSortAsc, null);\n  }\n  return sortIcon;\n}\nfunction SearchInput({ count, value, onChange }) {\n  return ___EmotionJSX(\"span\", { className: \"dt-global-filter\" },\n  t('Search'), ' ',\n  ___EmotionJSX(\"input\", { className: \"form-control input-sm\", placeholder: tn('search.num_records', count), value: value, \"aria-label\": t('Search %s records', count), onChange: onChange })\n  );\n}\nfunction SelectPageSize({ options, current, onChange }) {\n  return ___EmotionJSX(\"span\", { className: \"dt-select-page-size form-inline\" },\n  t('page_size.show'), ' ',\n  ___EmotionJSX(\"select\", { className: \"form-control input-sm\", value: current, onBlur: () => {}, onChange: (e) => {\n      onChange(Number(e.target.value));\n    } },\n  options.map((option) => {\n    const [size, text] = Array.isArray(option) ?\n    option :\n    [option, option];\n    return ___EmotionJSX(\"option\", { key: size, value: size },\n    text\n    );\n  })\n  ), ' ',\n  t('page_size.entries')\n  );\n}\nconst getNoResultsMessage = (filter) => filter ? t('No matching records found') : t('No records found');var _ref = process.env.NODE_ENV === \"production\" ? { name: \"tvoj80\", styles: \"display:inline-flex;align-items:flex-end\" } : { name: \"1f5n49p-Header\", styles: \"display:inline-flex;align-items:flex-end;label:Header;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport default function TableChart(props) {\n  const { timeGrain, height, width, data, totals, isRawRecords, rowCount = 0, columns: columnsMeta, alignPositiveNegative: defaultAlignPN = false, colorPositiveNegative: defaultColorPN = false, includeSearch = false, pageSize = 0, serverPagination = false, serverPaginationData, setDataMask, showCellBars = true, sortDesc = false, filters, sticky = true, // whether to use sticky header\n    columnColorFormatters, allowRearrangeColumns = false, allowRenderHtml = true, onContextMenu, emitCrossFilters } = props;\n  const timestampFormatter = useCallback((value) => getTimeFormatterForGranularity(timeGrain)(value), [timeGrain]);\n  const [tableSize, setTableSize] = useState({\n    width: 0,\n    height: 0\n  });\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter(([n]) => serverPagination ? getServerPagination(n) : n <= 2 * data.length);\n  }, [data.length, rowCount, serverPagination]);\n  const getValueRange = useCallback(function getValueRange(key, alignPositiveNegative) {var _data$;\n    if (typeof (data == null ? void 0 : (_data$ = data[0]) == null ? void 0 : _data$[key]) === 'number') {\n      const nums = data.map((row) => row[key]);\n      return alignPositiveNegative ?\n      [0, d3Max(nums.map(Math.abs))] :\n      d3Extent(nums);\n    }\n    return null;\n  }, [data]);\n  const isActiveFilterValue = useCallback(function isActiveFilterValue(key, val) {var _filters$key;\n    return !!filters && ((_filters$key = filters[key]) == null ? void 0 : _filters$key.includes(val));\n  }, [filters]);\n  const getCrossFilterDataMask = (key, value) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else\n    {\n      updatedFilters = {\n        [key]: [value]\n      };\n    }\n    if (Array.isArray(updatedFilters[key]) &&\n    updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements = [];\n    groupBy.forEach((col) => {var _updatedFilters;\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray((_updatedFilters = updatedFilters) == null ? void 0 : _updatedFilters[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map((value) => isTimestamp ? timestampFormatter(value) : value);\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: groupBy.length === 0 ?\n          [] :\n          groupBy.map((col) => {var _updatedFilters2;\n            const val = ensureIsArray((_updatedFilters2 = updatedFilters) == null ? void 0 : _updatedFilters2[col]);\n            if (!val.length)\n            return {\n              col,\n              op: 'IS NULL'\n            };\n            return {\n              col,\n              op: 'IN',\n              val: val.map((el) => el instanceof Date ? el.getTime() : el),\n              grain: col === DTTM_ALIAS ? timeGrain : undefined\n            };\n          })\n        },\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters: updatedFilters && Object.keys(updatedFilters).length ?\n          updatedFilters :\n          null\n        }\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, value)\n    };\n  };\n  const toggleFilter = useCallback(function toggleFilter(key, val) {\n    if (!emitCrossFilters) {\n      return;\n    }\n    setDataMask(getCrossFilterDataMask(key, val).dataMask);\n  }, [emitCrossFilters, getCrossFilterDataMask, setDataMask]);\n  const getSharedStyle = (column) => {\n    const { isNumeric, config = {} } = column;\n    const textAlign = config.horizontalAlign ?\n    config.horizontalAlign :\n    isNumeric ?\n    'right' :\n    'left';\n    return {\n      textAlign\n    };\n  };\n  const handleContextMenu = onContextMenu && !isRawRecords ?\n  (value, cellPoint, clientX, clientY) => {\n    const drillToDetailFilters = [];\n    columnsMeta.forEach((col) => {\n      if (!col.isMetric) {\n        const dataRecordValue = value[col.key];\n        drillToDetailFilters.push({\n          col: col.key,\n          op: '==',\n          val: dataRecordValue,\n          formattedVal: formatColumnValue(col, dataRecordValue)[1]\n        });\n      }\n    });\n    onContextMenu(clientX, clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: cellPoint.isMetric ?\n      undefined :\n      getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n      drillBy: cellPoint.isMetric ?\n      undefined :\n      {\n        filters: [\n        {\n          col: cellPoint.key,\n          op: '==',\n          val: cellPoint.value\n        }],\n\n        groupbyFieldName: 'groupby'\n      }\n    });\n  } :\n  undefined;\n  const getColumnConfigs = useCallback((column, i) => {\n    const { key, label, isNumeric, dataType, isMetric, isPercentMetric, config = {} } = column;\n    const columnWidth = Number.isNaN(Number(config.columnWidth)) ?\n    config.columnWidth :\n    Number(config.columnWidth);\n    // inline style for both th and td cell\n    const sharedStyle = getSharedStyle(column);\n    const alignPositiveNegative = config.alignPositiveNegative === undefined ?\n    defaultAlignPN :\n    config.alignPositiveNegative;\n    const colorPositiveNegative = config.colorPositiveNegative === undefined ?\n    defaultColorPN :\n    config.colorPositiveNegative;\n    const { truncateLongCells } = config;\n    const hasColumnColorFormatters = isNumeric &&\n    Array.isArray(columnColorFormatters) &&\n    columnColorFormatters.length > 0;\n    const valueRange = !hasColumnColorFormatters && (\n    config.showCellBars === undefined ?\n    showCellBars :\n    config.showCellBars) && (\n    isMetric || isRawRecords || isPercentMetric) &&\n    getValueRange(key, alignPositiveNegative);\n    let className = '';\n    if (emitCrossFilters && !isMetric) {\n      className += ' dt-is-filter';\n    }\n    return {\n      id: String(i),\n      // must use custom accessor to allow `.` in column names\n      // typing is incorrect in current version of `@types/react-table`\n      // so we ask TS not to check.\n      accessor: (datum) => datum[key],\n      Cell: ({ value, row }) => {\n        const [isHtml, text] = formatColumnValue(column, value);\n        const html = isHtml && allowRenderHtml ? { __html: text } : undefined;\n        let backgroundColor;\n        if (hasColumnColorFormatters) {\n          columnColorFormatters.\n          filter((formatter) => formatter.column === column.key).\n          forEach((formatter) => {\n            const formatterResult = value || value === 0 ?\n            formatter.getColorFromValue(value) :\n            false;\n            if (formatterResult) {\n              backgroundColor = formatterResult;\n            }\n          });\n        }\n        const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n        const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n        `\n                width: ${`${cellWidth({\n          value: value,\n          valueRange,\n          alignPositiveNegative\n        })}%`};\n                left: ${`${cellOffset({\n          value: value,\n          valueRange,\n          alignPositiveNegative\n        })}%`};\n                background-color: ${cellBackground({\n          value: value,\n          colorPositiveNegative\n        })};\n              `}\n          `;\n        const cellProps = {\n          'aria-labelledby': `header-${column.key}`,\n          role: 'cell',\n          // show raw number in title in case of numeric values\n          title: typeof value === 'number' ? String(value) : undefined,\n          onClick: emitCrossFilters && !valueRange && !isMetric ?\n          () => {\n            // allow selecting text in a cell\n            if (!getSelectedText()) {\n              toggleFilter(key, value);\n            }\n          } :\n          undefined,\n          onContextMenu: (e) => {\n            if (handleContextMenu) {\n              e.preventDefault();\n              e.stopPropagation();\n              handleContextMenu(row.original, { key, value, isMetric }, e.nativeEvent.clientX, e.nativeEvent.clientY);\n            }\n          },\n          className: [\n          className,\n          value == null ? 'dt-is-null' : '',\n          isActiveFilterValue(key, value) ? ' dt-is-active-filter' : ''].\n          join(' '),\n          tabIndex: 0\n        };\n        if (html) {\n          if (truncateLongCells) {\n            // eslint-disable-next-line react/no-danger\n            return ___EmotionJSX(StyledCell, cellProps,\n            ___EmotionJSX(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined, dangerouslySetInnerHTML: html })\n            );\n          }\n          // eslint-disable-next-line react/no-danger\n          return ___EmotionJSX(StyledCell, _extends({}, cellProps, { dangerouslySetInnerHTML: html }));\n        }\n        // If cellProps renders textContent already, then we don't have to\n        // render `Cell`. This saves some time for large tables.\n        return ___EmotionJSX(StyledCell, cellProps,\n        valueRange && ___EmotionJSX(\"div\", {\n          /* The following classes are added to support custom CSS styling */\n          className: cx('cell-bar', value && value < 0 ? 'negative' : 'positive'), css: cellBarStyles, role: \"presentation\" }),\n        truncateLongCells ? ___EmotionJSX(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined },\n        text\n        ) : text\n        );\n      },\n      Header: ({ column: col, onClick, style, onDragStart, onDrop }) => ___EmotionJSX(\"th\", _extends({ id: `header-${column.key}`, title: t('Shift + Click to sort by multiple columns'), className: [className, col.isSorted ? 'is-sorted' : ''].join(' '), style: {\n          ...sharedStyle,\n          ...style\n        }, onKeyDown: (e) => {\n          // programatically sort column on keypress\n          if (Object.values(ACTION_KEYS).includes(e.key)) {\n            col.toggleSortBy();\n          }\n        }, role: \"columnheader button\", onClick: onClick, \"data-column-name\": col.id }, allowRearrangeColumns && {\n        draggable: 'true',\n        onDragStart,\n        onDragOver: (e) => e.preventDefault(),\n        onDragEnter: (e) => e.preventDefault(),\n        onDrop\n      }, { tabIndex: 0 }),\n\n      config.columnWidth ?\n      // column width hint\n      ___EmotionJSX(\"div\", { style: {\n          width: columnWidth,\n          height: 0.01\n        } }) : null,\n      ___EmotionJSX(\"div\", { \"data-column-name\": col.id, css: _ref },\n\n\n\n      ___EmotionJSX(\"span\", { \"data-column-name\": col.id }, label),\n      ___EmotionJSX(SortIcon, { column: col })\n      )\n      ),\n      Footer: totals ? i === 0 ? ___EmotionJSX(\"th\", null, t('Totals')) : ___EmotionJSX(\"td\", { style: sharedStyle },\n      ___EmotionJSX(\"strong\", null, formatColumnValue(column, totals[key])[1])\n      ) : undefined,\n      sortDescFirst: sortDesc,\n      sortType: getSortTypeByDataType(dataType)\n    };\n  }, [\n  defaultAlignPN,\n  defaultColorPN,\n  emitCrossFilters,\n  getValueRange,\n  isActiveFilterValue,\n  isRawRecords,\n  showCellBars,\n  sortDesc,\n  toggleFilter,\n  totals,\n  columnColorFormatters,\n  columnOrderToggle]\n  );\n  const columns = useMemo(() => columnsMeta.map(getColumnConfigs), [columnsMeta, getColumnConfigs]);\n  const handleServerPaginationChange = useCallback((pageNumber, pageSize) => {\n    updateExternalFormData(setDataMask, pageNumber, pageSize);\n  }, [setDataMask]);\n  const handleSizeChange = useCallback(({ width, height }) => {\n    setTableSize({ width, height });\n  }, []);\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (width - tableWidth > scrollBarSize ||\n    height - tableHeight > scrollBarSize) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize\n      });\n    } else\n    if (tableWidth - width > scrollBarSize ||\n    tableHeight - height > scrollBarSize) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height\n      });\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n  const { width: widthFromState, height: heightFromState } = tableSize;\n  return ___EmotionJSX(Styles, null,\n  ___EmotionJSX(DataTable, { columns: columns, data: data, rowCount: rowCount, tableClassName: \"table table-striped table-condensed\", pageSize: pageSize, serverPaginationData: serverPaginationData, pageSizeOptions: pageSizeOptions, width: widthFromState, height: heightFromState, serverPagination: serverPagination, onServerPaginationChange: handleServerPaginationChange, onColumnOrderChange: () => setColumnOrderToggle(!columnOrderToggle)\n    // 9 page items in > 340px works well even for 100+ pages\n    , maxPageItemCount: width > 340 ? 9 : 7, noResults: getNoResultsMessage, searchInput: includeSearch && SearchInput, selectPageSize: pageSize !== null && SelectPageSize\n    // not in use in Superset, but needed for unit tests\n    , sticky: sticky })\n  );\n}__signature__(TableChart, \"useCallback{timestampFormatter}\\nuseState{[tableSize, setTableSize]({\\n        width: 0,\\n        height: 0,\\n    })}\\nuseState{[columnOrderToggle, setColumnOrderToggle](false)}\\nuseMemo{pageSizeOptions}\\nuseCallback{getValueRange}\\nuseCallback{isActiveFilterValue}\\nuseCallback{toggleFilter}\\nuseCallback{getColumnConfigs}\\nuseMemo{columns}\\nuseCallback{handleServerPaginationChange}\\nuseCallback{handleSizeChange}\\nuseLayoutEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ACTION_KEYS, \"ACTION_KEYS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(getSortTypeByDataType, \"getSortTypeByDataType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellWidth, \"cellWidth\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellOffset, \"cellOffset\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellBackground, \"cellBackground\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SortIcon, \"SortIcon\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SearchInput, \"SearchInput\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SelectPageSize, \"SelectPageSize\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(getNoResultsMessage, \"getNoResultsMessage\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(TableChart, \"TableChart\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useLayoutEffect","useMemo","useState","extent","d3Extent","max","d3Max","FaSort","FaSortDown","FaSortDesc","FaSortUp","FaSortAsc","cx","DTTM_ALIAS","ensureIsArray","GenericDataType","getSelectedText","getTimeFormatterForGranularity","styled","css","t","tn","DataTable","Styles","formatColumnValue","PAGE_SIZE_OPTIONS","updateExternalFormData","getScrollBarSize","jsx","___EmotionJSX","ACTION_KEYS","enter","spacebar","space","getSortTypeByDataType","dataType","Temporal","String","cellWidth","value","valueRange","alignPositiveNegative","minValue","maxValue","perc","Math","abs","round","posExtent","negExtent","min","tot","perc2","cellOffset","cellBackground","colorPositiveNegative","r","SortIcon","column","isSorted","isSortedDesc","sortIcon","SearchInput","count","onChange","className","placeholder","SelectPageSize","options","current","onBlur","e","Number","target","map","option","size","text","Array","isArray","key","getNoResultsMessage","filter","_ref","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","TableChart","props","timeGrain","height","width","data","totals","isRawRecords","rowCount","columns","columnsMeta","defaultAlignPN","defaultColorPN","includeSearch","pageSize","serverPagination","serverPaginationData","setDataMask","showCellBars","sortDesc","filters","sticky","columnColorFormatters","allowRearrangeColumns","allowRenderHtml","onContextMenu","emitCrossFilters","timestampFormatter","tableSize","setTableSize","columnOrderToggle","setColumnOrderToggle","pageSizeOptions","getServerPagination","n","length","getValueRange","_data$","nums","row","isActiveFilterValue","val","_filters$key","includes","getCrossFilterDataMask","updatedFilters","groupBy","Object","keys","groupByValues","values","labelElements","forEach","col","_updatedFilters","isTimestamp","filterValues","valueLabels","push","join","dataMask","extraFormData","_updatedFilters2","op","el","Date","getTime","grain","undefined","filterState","label","isCurrentValueSelected","toggleFilter","getSharedStyle","isNumeric","config","textAlign","horizontalAlign","handleContextMenu","cellPoint","clientX","clientY","drillToDetailFilters","isMetric","dataRecordValue","formattedVal","drillToDetail","crossFilter","drillBy","groupbyFieldName","getColumnConfigs","i","isPercentMetric","columnWidth","isNaN","sharedStyle","truncateLongCells","hasColumnColorFormatters","id","accessor","datum","Cell","isHtml","html","__html","backgroundColor","formatter","formatterResult","getColorFromValue","StyledCell","td","cellBarStyles","cellProps","role","title","onClick","preventDefault","stopPropagation","original","nativeEvent","tabIndex","style","dangerouslySetInnerHTML","_extends","Header","onDragStart","onDrop","onKeyDown","toggleSortBy","draggable","onDragOver","onDragEnter","Footer","sortDescFirst","sortType","handleServerPaginationChange","pageNumber","handleSizeChange","scrollBarSize","tableWidth","tableHeight","widthFromState","heightFromState","tableClassName","onServerPaginationChange","onColumnOrderChange","maxPageItemCount","noResults","searchInput","selectPageSize","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  CSSProperties,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react';\nimport {\n  ColumnInstance,\n  ColumnWithLooseAccessor,\n  DefaultSortTypes,\n  Row,\n} from 'react-table';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport {\n  DataRecord,\n  DataRecordValue,\n  DTTM_ALIAS,\n  ensureIsArray,\n  GenericDataType,\n  getSelectedText,\n  getTimeFormatterForGranularity,\n  BinaryQueryObjectFilterClause,\n  styled,\n  css,\n  t,\n  tn,\n} from '@superset-ui/core';\n\nimport { DataColumnMeta, TableChartTransformedProps } from './types';\nimport DataTable, {\n  DataTableProps,\n  SearchInputProps,\n  SelectPageSizeRendererProps,\n  SizeOption,\n} from './DataTable';\n\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';\n\ntype ValueRange = [number, number];\n\ninterface TableSize {\n  width: number;\n  height: number;\n}\n\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' ',\n};\n\n/**\n * Return sortType based on data type\n */\nfunction getSortTypeByDataType(dataType: GenericDataType): DefaultSortTypes {\n  if (dataType === GenericDataType.Temporal) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.String) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round((value / maxValue) * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round((Math.abs(value) / tot) * 100);\n  return perc2;\n}\n\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round((Math.min(negExtent + value, negExtent) / tot) * 100);\n}\n\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground({\n  value,\n  colorPositiveNegative = false,\n}: {\n  value: number;\n  colorPositiveNegative: boolean;\n}) {\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\n\nfunction SortIcon<D extends object>({ column }: { column: ColumnInstance<D> }) {\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = <FaSort />;\n  if (isSorted) {\n    sortIcon = isSortedDesc ? <FaSortDesc /> : <FaSortAsc />;\n  }\n  return sortIcon;\n}\n\nfunction SearchInput({ count, value, onChange }: SearchInputProps) {\n  return (\n    <span className=\"dt-global-filter\">\n      {t('Search')}{' '}\n      <input\n        className=\"form-control input-sm\"\n        placeholder={tn('search.num_records', count)}\n        value={value}\n        aria-label={t('Search %s records', count)}\n        onChange={onChange}\n      />\n    </span>\n  );\n}\n\nfunction SelectPageSize({\n  options,\n  current,\n  onChange,\n}: SelectPageSizeRendererProps) {\n  return (\n    <span className=\"dt-select-page-size form-inline\">\n      {t('page_size.show')}{' '}\n      <select\n        className=\"form-control input-sm\"\n        value={current}\n        onBlur={() => {}}\n        onChange={e => {\n          onChange(Number((e.target as HTMLSelectElement).value));\n        }}\n      >\n        {options.map(option => {\n          const [size, text] = Array.isArray(option)\n            ? option\n            : [option, option];\n          return (\n            <option key={size} value={size}>\n              {text}\n            </option>\n          );\n        })}\n      </select>{' '}\n      {t('page_size.entries')}\n    </span>\n  );\n}\n\nconst getNoResultsMessage = (filter: string) =>\n  filter ? t('No matching records found') : t('No records found');\n\nexport default function TableChart<D extends DataRecord = DataRecord>(\n  props: TableChartTransformedProps<D> & {\n    sticky?: DataTableProps<D>['sticky'];\n  },\n) {\n  const {\n    timeGrain,\n    height,\n    width,\n    data,\n    totals,\n    isRawRecords,\n    rowCount = 0,\n    columns: columnsMeta,\n    alignPositiveNegative: defaultAlignPN = false,\n    colorPositiveNegative: defaultColorPN = false,\n    includeSearch = false,\n    pageSize = 0,\n    serverPagination = false,\n    serverPaginationData,\n    setDataMask,\n    showCellBars = true,\n    sortDesc = false,\n    filters,\n    sticky = true, // whether to use sticky header\n    columnColorFormatters,\n    allowRearrangeColumns = false,\n    allowRenderHtml = true,\n    onContextMenu,\n    emitCrossFilters,\n  } = props;\n  const timestampFormatter = useCallback(\n    value => getTimeFormatterForGranularity(timeGrain)(value),\n    [timeGrain],\n  );\n  const [tableSize, setTableSize] = useState<TableSize>({\n    width: 0,\n    height: 0,\n  });\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n: number) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter(([n]) =>\n      serverPagination ? getServerPagination(n) : n <= 2 * data.length,\n    ) as SizeOption[];\n  }, [data.length, rowCount, serverPagination]);\n\n  const getValueRange = useCallback(\n    function getValueRange(key: string, alignPositiveNegative: boolean) {\n      if (typeof data?.[0]?.[key] === 'number') {\n        const nums = data.map(row => row[key]) as number[];\n        return (\n          alignPositiveNegative\n            ? [0, d3Max(nums.map(Math.abs))]\n            : d3Extent(nums)\n        ) as ValueRange;\n      }\n      return null;\n    },\n    [data],\n  );\n\n  const isActiveFilterValue = useCallback(\n    function isActiveFilterValue(key: string, val: DataRecordValue) {\n      return !!filters && filters[key]?.includes(val);\n    },\n    [filters],\n  );\n\n  const getCrossFilterDataMask = (key: string, value: DataRecordValue) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else {\n      updatedFilters = {\n        [key]: [value],\n      };\n    }\n    if (\n      Array.isArray(updatedFilters[key]) &&\n      updatedFilters[key].length === 0\n    ) {\n      delete updatedFilters[key];\n    }\n\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements: string[] = [];\n    groupBy.forEach(col => {\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray(updatedFilters?.[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map(value =>\n          isTimestamp ? timestampFormatter(value) : value,\n        );\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters:\n            groupBy.length === 0\n              ? []\n              : groupBy.map(col => {\n                  const val = ensureIsArray(updatedFilters?.[col]);\n                  if (!val.length)\n                    return {\n                      col,\n                      op: 'IS NULL' as const,\n                    };\n                  return {\n                    col,\n                    op: 'IN' as const,\n                    val: val.map(el =>\n                      el instanceof Date ? el.getTime() : el!,\n                    ),\n                    grain: col === DTTM_ALIAS ? timeGrain : undefined,\n                  };\n                }),\n        },\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters:\n            updatedFilters && Object.keys(updatedFilters).length\n              ? updatedFilters\n              : null,\n        },\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, value),\n    };\n  };\n\n  const toggleFilter = useCallback(\n    function toggleFilter(key: string, val: DataRecordValue) {\n      if (!emitCrossFilters) {\n        return;\n      }\n      setDataMask(getCrossFilterDataMask(key, val).dataMask);\n    },\n    [emitCrossFilters, getCrossFilterDataMask, setDataMask],\n  );\n\n  const getSharedStyle = (column: DataColumnMeta): CSSProperties => {\n    const { isNumeric, config = {} } = column;\n    const textAlign = config.horizontalAlign\n      ? config.horizontalAlign\n      : isNumeric\n        ? 'right'\n        : 'left';\n    return {\n      textAlign,\n    };\n  };\n\n  const handleContextMenu =\n    onContextMenu && !isRawRecords\n      ? (\n          value: D,\n          cellPoint: {\n            key: string;\n            value: DataRecordValue;\n            isMetric?: boolean;\n          },\n          clientX: number,\n          clientY: number,\n        ) => {\n          const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n          columnsMeta.forEach(col => {\n            if (!col.isMetric) {\n              const dataRecordValue = value[col.key];\n              drillToDetailFilters.push({\n                col: col.key,\n                op: '==',\n                val: dataRecordValue as string | number | boolean,\n                formattedVal: formatColumnValue(col, dataRecordValue)[1],\n              });\n            }\n          });\n          onContextMenu(clientX, clientY, {\n            drillToDetail: drillToDetailFilters,\n            crossFilter: cellPoint.isMetric\n              ? undefined\n              : getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n            drillBy: cellPoint.isMetric\n              ? undefined\n              : {\n                  filters: [\n                    {\n                      col: cellPoint.key,\n                      op: '==',\n                      val: cellPoint.value as string | number | boolean,\n                    },\n                  ],\n                  groupbyFieldName: 'groupby',\n                },\n          });\n        }\n      : undefined;\n\n  const getColumnConfigs = useCallback(\n    (column: DataColumnMeta, i: number): ColumnWithLooseAccessor<D> => {\n      const {\n        key,\n        label,\n        isNumeric,\n        dataType,\n        isMetric,\n        isPercentMetric,\n        config = {},\n      } = column;\n      const columnWidth = Number.isNaN(Number(config.columnWidth))\n        ? config.columnWidth\n        : Number(config.columnWidth);\n\n      // inline style for both th and td cell\n      const sharedStyle: CSSProperties = getSharedStyle(column);\n\n      const alignPositiveNegative =\n        config.alignPositiveNegative === undefined\n          ? defaultAlignPN\n          : config.alignPositiveNegative;\n      const colorPositiveNegative =\n        config.colorPositiveNegative === undefined\n          ? defaultColorPN\n          : config.colorPositiveNegative;\n\n      const { truncateLongCells } = config;\n\n      const hasColumnColorFormatters =\n        isNumeric &&\n        Array.isArray(columnColorFormatters) &&\n        columnColorFormatters.length > 0;\n\n      const valueRange =\n        !hasColumnColorFormatters &&\n        (config.showCellBars === undefined\n          ? showCellBars\n          : config.showCellBars) &&\n        (isMetric || isRawRecords || isPercentMetric) &&\n        getValueRange(key, alignPositiveNegative);\n\n      let className = '';\n      if (emitCrossFilters && !isMetric) {\n        className += ' dt-is-filter';\n      }\n\n      return {\n        id: String(i), // to allow duplicate column keys\n        // must use custom accessor to allow `.` in column names\n        // typing is incorrect in current version of `@types/react-table`\n        // so we ask TS not to check.\n        accessor: ((datum: D) => datum[key]) as never,\n        Cell: ({ value, row }: { value: DataRecordValue; row: Row<D> }) => {\n          const [isHtml, text] = formatColumnValue(column, value);\n          const html = isHtml && allowRenderHtml ? { __html: text } : undefined;\n\n          let backgroundColor;\n          if (hasColumnColorFormatters) {\n            columnColorFormatters!\n              .filter(formatter => formatter.column === column.key)\n              .forEach(formatter => {\n                const formatterResult =\n                  value || value === 0\n                    ? formatter.getColorFromValue(value as number)\n                    : false;\n                if (formatterResult) {\n                  backgroundColor = formatterResult;\n                }\n              });\n          }\n\n          const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n\n          const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n            `\n                width: ${`${cellWidth({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                left: ${`${cellOffset({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                background-color: ${cellBackground({\n                  value: value as number,\n                  colorPositiveNegative,\n                })};\n              `}\n          `;\n\n          const cellProps = {\n            'aria-labelledby': `header-${column.key}`,\n            role: 'cell',\n            // show raw number in title in case of numeric values\n            title: typeof value === 'number' ? String(value) : undefined,\n            onClick:\n              emitCrossFilters && !valueRange && !isMetric\n                ? () => {\n                    // allow selecting text in a cell\n                    if (!getSelectedText()) {\n                      toggleFilter(key, value);\n                    }\n                  }\n                : undefined,\n            onContextMenu: (e: MouseEvent) => {\n              if (handleContextMenu) {\n                e.preventDefault();\n                e.stopPropagation();\n                handleContextMenu(\n                  row.original,\n                  { key, value, isMetric },\n                  e.nativeEvent.clientX,\n                  e.nativeEvent.clientY,\n                );\n              }\n            },\n            className: [\n              className,\n              value == null ? 'dt-is-null' : '',\n              isActiveFilterValue(key, value) ? ' dt-is-active-filter' : '',\n            ].join(' '),\n            tabIndex: 0,\n          };\n          if (html) {\n            if (truncateLongCells) {\n              // eslint-disable-next-line react/no-danger\n              return (\n                <StyledCell {...cellProps}>\n                  <div\n                    className=\"dt-truncate-cell\"\n                    style={columnWidth ? { width: columnWidth } : undefined}\n                    dangerouslySetInnerHTML={html}\n                  />\n                </StyledCell>\n              );\n            }\n            // eslint-disable-next-line react/no-danger\n            return <StyledCell {...cellProps} dangerouslySetInnerHTML={html} />;\n          }\n          // If cellProps renders textContent already, then we don't have to\n          // render `Cell`. This saves some time for large tables.\n          return (\n            <StyledCell {...cellProps}>\n              {valueRange && (\n                <div\n                  /* The following classes are added to support custom CSS styling */\n                  className={cx(\n                    'cell-bar',\n                    value && value < 0 ? 'negative' : 'positive',\n                  )}\n                  css={cellBarStyles}\n                  role=\"presentation\"\n                />\n              )}\n              {truncateLongCells ? (\n                <div\n                  className=\"dt-truncate-cell\"\n                  style={columnWidth ? { width: columnWidth } : undefined}\n                >\n                  {text}\n                </div>\n              ) : (\n                text\n              )}\n            </StyledCell>\n          );\n        },\n        Header: ({ column: col, onClick, style, onDragStart, onDrop }) => (\n          <th\n            id={`header-${column.key}`}\n            title={t('Shift + Click to sort by multiple columns')}\n            className={[className, col.isSorted ? 'is-sorted' : ''].join(' ')}\n            style={{\n              ...sharedStyle,\n              ...style,\n            }}\n            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) => {\n              // programatically sort column on keypress\n              if (Object.values(ACTION_KEYS).includes(e.key)) {\n                col.toggleSortBy();\n              }\n            }}\n            role=\"columnheader button\"\n            onClick={onClick}\n            data-column-name={col.id}\n            {...(allowRearrangeColumns && {\n              draggable: 'true',\n              onDragStart,\n              onDragOver: e => e.preventDefault(),\n              onDragEnter: e => e.preventDefault(),\n              onDrop,\n            })}\n            tabIndex={0}\n          >\n            {/* can't use `columnWidth &&` because it may also be zero */}\n            {config.columnWidth ? (\n              // column width hint\n              <div\n                style={{\n                  width: columnWidth,\n                  height: 0.01,\n                }}\n              />\n            ) : null}\n            <div\n              data-column-name={col.id}\n              css={{\n                display: 'inline-flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <span data-column-name={col.id}>{label}</span>\n              <SortIcon column={col} />\n            </div>\n          </th>\n        ),\n        Footer: totals ? (\n          i === 0 ? (\n            <th>{t('Totals')}</th>\n          ) : (\n            <td style={sharedStyle}>\n              <strong>{formatColumnValue(column, totals[key])[1]}</strong>\n            </td>\n          )\n        ) : undefined,\n        sortDescFirst: sortDesc,\n        sortType: getSortTypeByDataType(dataType),\n      };\n    },\n    [\n      defaultAlignPN,\n      defaultColorPN,\n      emitCrossFilters,\n      getValueRange,\n      isActiveFilterValue,\n      isRawRecords,\n      showCellBars,\n      sortDesc,\n      toggleFilter,\n      totals,\n      columnColorFormatters,\n      columnOrderToggle,\n    ],\n  );\n\n  const columns = useMemo(\n    () => columnsMeta.map(getColumnConfigs),\n    [columnsMeta, getColumnConfigs],\n  );\n\n  const handleServerPaginationChange = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      updateExternalFormData(setDataMask, pageNumber, pageSize);\n    },\n    [setDataMask],\n  );\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      setTableSize({ width, height });\n    },\n    [],\n  );\n\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (\n      width - tableWidth > scrollBarSize ||\n      height - tableHeight > scrollBarSize\n    ) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize,\n      });\n    } else if (\n      tableWidth - width > scrollBarSize ||\n      tableHeight - height > scrollBarSize\n    ) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height,\n      });\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n\n  const { width: widthFromState, height: heightFromState } = tableSize;\n\n  return (\n    <Styles>\n      <DataTable<D>\n        columns={columns}\n        data={data}\n        rowCount={rowCount}\n        tableClassName=\"table table-striped table-condensed\"\n        pageSize={pageSize}\n        serverPaginationData={serverPaginationData}\n        pageSizeOptions={pageSizeOptions}\n        width={widthFromState}\n        height={heightFromState}\n        serverPagination={serverPagination}\n        onServerPaginationChange={handleServerPaginationChange}\n        onColumnOrderChange={() => setColumnOrderToggle(!columnOrderToggle)}\n        // 9 page items in > 340px works well even for 100+ pages\n        maxPageItemCount={width > 340 ? 9 : 7}\n        noResults={getNoResultsMessage}\n        searchInput={includeSearch && SearchInput}\n        selectPageSize={pageSize !== null && SelectPageSize}\n        // not in use in Superset, but needed for unit tests\n        sticky={sticky}\n      />\n    </Styles>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}