{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useCallback } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { Behavior, css, isFeatureEnabled, FeatureFlag, getChartMetadataRegistry, styled, t, useTheme, ensureIsArray } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { MenuItemKeyEnum, Menu, isAntdMenuItem, isAntdMenuItemRef, isSubMenuOrItemType, isAntdMenuSubmenu } from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport Modal from 'src/components/Modal';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { MenuKeys } from 'src/dashboard/types';\nimport { findPermission } from 'src/utils/findPermission';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' '\n};\nconst NAV_KEYS = {\n  tab: 'Tab',\n  escape: 'Escape',\n  up: 'ArrowUp',\n  down: 'ArrowDown'\n};\n// TODO: replace 3 dots with an icon\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n\n    height: ${({ theme }) => theme.gridUnit}px;\n    width: ${({ theme }) => theme.gridUnit}px;\n    border-radius: 50%;\n    margin: ${({ theme }) => theme.gridUnit / 2}px 0;\n\n    background-color: ${({ theme }) => theme.colors.text.label};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\nconst getScreenshotNodeSelector = (chartId) => `.dashboard-chart-id-${chartId}`;\nconst VerticalDotsTrigger = () => ___EmotionJSX(VerticalDotsContainer, null,\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" })\n);\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n/**\n * A MenuItem can be recognized in the tree by the presence of a ref\n *\n * @param children\n * @param currentKeys\n * @returns an array of keys\n */\nconst extractMenuItemRefs = (child) => {\n  // check that child has props\n  const childProps = child == null ? void 0 : child.props;\n  // loop through each prop\n  if (childProps) {\n    const arrayProps = Object.values(childProps);\n    // check if any is of type ref MenuItem\n    const refs = arrayProps.filter((ref) => isAntdMenuItemRef(ref));\n    return refs;\n  }\n  return [];\n};\n/**\n * Recursively extracts keys from menu items\n *\n * @param children\n * @param currentKeys\n * @returns an array of keys and their refs\n *\n */\nconst extractMenuItemsKeys = (children, currentKeys) => {\n  const allKeys = currentKeys || [];\n  const arrayChildren = ensureIsArray(children);\n  arrayChildren.forEach((child) => {var _child$props;\n    const isMenuItem = isAntdMenuItem(child);\n    const refs = extractMenuItemRefs(child);\n    // key is immediately available in a standard MenuItem\n    if (isMenuItem) {\n      const { key } = child;\n      if (key) {\n        allKeys.push({\n          key\n        });\n      }\n    }\n    // one or more menu items refs are available\n    if (refs.length) {\n      allKeys.push(...refs.map((ref) => ({ key: ref.current.props.eventKey, ref })));\n    }\n    // continue to extract keys from nested children\n    if (child != null && (_child$props = child.props) != null && _child$props.children) {\n      const childKeys = extractMenuItemsKeys(child.props.children, allKeys);\n      allKeys.push(...childKeys);\n    }\n  });\n  return allKeys;\n};\n/**\n * Generates a map of keys and their types for a MenuItem\n * Individual refs can be given to extract keys from nested items\n * Refs can be used to control the event handlers of the menu items\n *\n * @param itemChildren\n * @param type\n * @returns a map of keys and their types\n */\nconst extractMenuItemsKeyMap = (children) => {\n  const keysMap = {};\n  const childrenArray = ensureIsArray(children);\n  childrenArray.forEach((child) => {var _child$props2;\n    const isMenuItem = isAntdMenuItem(child);\n    const isSubmenu = isAntdMenuSubmenu(child);\n    const menuItemsRefs = extractMenuItemRefs(child);\n    // key is immediately available in MenuItem or SubMenu\n    if (isMenuItem || isSubmenu) {\n      const directKey = child == null ? void 0 : child.key;\n      if (directKey) {\n        keysMap[directKey] = {};\n        keysMap[directKey].type = isSubmenu ?\n        MenuItemKeyEnum.SubMenu :\n        MenuItemKeyEnum.MenuItem;\n      }\n    }\n    // one or more menu items refs are available\n    if (menuItemsRefs.length) {\n      menuItemsRefs.forEach((ref) => {\n        const key = ref.current.props.eventKey;\n        keysMap[key] = {};\n        keysMap[key].type = isSubmenu ?\n        MenuItemKeyEnum.SubMenu :\n        MenuItemKeyEnum.MenuItem;\n        keysMap[key].parent = child.key;\n        keysMap[key].ref = ref;\n      });\n    }\n    // if it has children must check for the presence of menu items\n    if (child != null && (_child$props2 = child.props) != null && _child$props2.children) {var _child$props3;\n      const theChildren = child == null ? void 0 : (_child$props3 = child.props) == null ? void 0 : _child$props3.children;\n      const childKeys = extractMenuItemsKeys(theChildren);\n      childKeys.forEach((keyMap) => {\n        const k = keyMap.key;\n        keysMap[k] = {};\n        keysMap[k].type = MenuItemKeyEnum.SubMenuItem;\n        keysMap[k].parent = child.key;\n        if (keyMap.ref) {\n          keysMap[k].ref = keyMap.ref;\n        }\n      });\n    }\n  });\n  return keysMap;\n};\n/**\n *\n * Determines the next key to select based on the current key and direction\n *\n * @param keys\n * @param keysMap\n * @param currentKeyIndex\n * @param direction\n * @returns the selected key and the open key\n */\nconst getNavigationKeys = (keys, keysMap, currentKeyIndex, direction = 'up') => {var _keysMap$selectedKey;\n  const step = direction === 'up' ? -1 : 1;\n  const skipStep = direction === 'up' ? -2 : 2;\n  const keysLen = direction === 'up' ? 0 : keys.length;\n  const mathFn = direction === 'up' ? Math.max : Math.min;\n  let openKey;\n  let selectedKey = keys[mathFn(currentKeyIndex + step, keysLen)];\n  // go to first key if current key is the last\n  if (!selectedKey) {\n    return { selectedKey: keys[0], openKey: undefined };\n  }\n  const isSubMenu = ((_keysMap$selectedKey = keysMap[selectedKey]) == null ? void 0 : _keysMap$selectedKey.type) === MenuItemKeyEnum.SubMenu;\n  if (isSubMenu) {\n    // this is a submenu, skip to first submenu item\n    selectedKey = keys[mathFn(currentKeyIndex + skipStep, keysLen)];\n  }\n  // re-evaulate if current selected key is a submenu or submenu item\n  if (!isSubMenuOrItemType(keysMap[selectedKey].type)) {\n    openKey = undefined;\n  } else\n  {\n    const parentKey = keysMap[selectedKey].parent;\n    if (parentKey) {\n      openKey = parentKey;\n    }\n  }\n  return { selectedKey, openKey };\n};\nexport const handleDropdownNavigation = (e, dropdownIsOpen, menu, toggleDropdown, setSelectedKeys, setOpenKeys) => {\n  if (e.key === NAV_KEYS.tab && !dropdownIsOpen) {\n    return; // if tab, continue with system tab navigation\n  }\n  const menuProps = menu.props || {};\n  const keysMap = extractMenuItemsKeyMap(menuProps.children);\n  const keys = Object.keys(keysMap);\n  const { selectedKeys = [] } = menuProps;\n  const currentKeyIndex = keys.indexOf(selectedKeys[0]);\n  switch (e.key) {\n    // toggle the dropdown on keypress\n    case ACTION_KEYS.enter:\n    case ACTION_KEYS.spacebar:\n    case ACTION_KEYS.space:\n      if (selectedKeys.length) {\n        const currentKey = selectedKeys[0];\n        const currentKeyConf = keysMap[selectedKeys];\n        // when a menu item is selected, then trigger\n        // the menu item's onClick handler\n        menuProps.onClick == null ? void 0 : menuProps.onClick({ key: currentKey, domEvent: e });\n        // trigger click handle on ref\n        if (currentKeyConf != null && currentKeyConf.ref) {\n          const refMenuItemProps = currentKeyConf.ref.current.props;\n          refMenuItemProps.onClick == null ? void 0 : refMenuItemProps.onClick({\n            key: currentKey,\n            domEvent: e\n          });\n        }\n        // clear out/deselect keys\n        setSelectedKeys([]);\n        // close submenus\n        setOpenKeys([]);\n        // put focus back on menu trigger\n        e.currentTarget.focus();\n      }\n      // if nothing was selected, or after selecting new menu item,\n      toggleDropdown();\n      break;\n    // select the menu items going down\n    case NAV_KEYS.down:\n    case NAV_KEYS.tab && !e.shiftKey:{\n        const { selectedKey, openKey } = getNavigationKeys(keys, keysMap, currentKeyIndex, 'down');\n        setSelectedKeys([selectedKey]);\n        setOpenKeys(openKey ? [openKey] : []);\n        break;\n      }\n    // select the menu items going up\n    case NAV_KEYS.up:\n    case NAV_KEYS.tab && e.shiftKey:{\n        const { selectedKey, openKey } = getNavigationKeys(keys, keysMap, currentKeyIndex, 'up');\n        setSelectedKeys([selectedKey]);\n        setOpenKeys(openKey ? [openKey] : []);\n        break;\n      }\n    case NAV_KEYS.escape:\n      // close dropdown menu\n      toggleDropdown();\n      break;\n    default:\n      break;\n  }\n};\nconst ViewResultsModalTrigger = ({ canExplore, exploreUrl, triggerNode, modalTitle, modalBody, showModal = false, setShowModal }) => {\n  const history = useHistory();\n  const exploreChart = () => history.push(exploreUrl);\n  const theme = useTheme();\n  const openModal = useCallback(() => setShowModal(true), []);\n  const closeModal = useCallback(() => setShowModal(false), []);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"span\", { \"data-test\": \"span-modal-trigger\", onClick: openModal, role: \"button\", tabIndex: 0 },\n  triggerNode\n  ),\n  (() => ___EmotionJSX(Modal, { css: css`\n            .ant-modal-body {\n              display: flex;\n              flex-direction: column;\n            }\n          `, show: showModal, onHide: closeModal, closable: true, title: modalTitle, footer: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { buttonStyle: \"secondary\", buttonSize: \"small\", onClick: exploreChart, disabled: !canExplore, tooltip: !canExplore ?\n      t('You do not have sufficient permissions to edit the chart') :\n      undefined },\n    t('Edit chart')\n    ),\n    ___EmotionJSX(Button, { buttonStyle: \"primary\", buttonSize: \"small\", onClick: closeModal, css: css`\n                  margin-left: ${theme.gridUnit * 2}px;\n                ` },\n    t('Close')\n    )\n    ), responsive: true, resizable: true, resizableConfig: {\n      minHeight: theme.gridUnit * 128,\n      minWidth: theme.gridUnit * 128,\n      defaultSize: {\n        width: 'auto',\n        height: '75vh'\n      }\n    }, draggable: true, destroyOnClose: true },\n  modalBody\n  ))()\n  );\n};__signature__(ViewResultsModalTrigger, \"useHistory{history}\\nuseTheme{theme}\\nuseCallback{openModal}\\nuseCallback{closeModal}\", () => [useHistory, useTheme]);\nconst SliceHeaderControls = (props) => {var _getChartMetadataRegi, _getChartMetadataRegi2;\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n  const [tableModalIsOpen, setTableModalIsOpen] = useState(false);\n  const [drillModalIsOpen, setDrillModalIsOpen] = useState(false);\n  const [selectedKeys, setSelectedKeys] = useState([]);\n  // setting openKeys undefined falls back to uncontrolled behaviour\n  const [openKeys, setOpenKeys] = useState(undefined);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(props.slice.slice_id);\n  const history = useHistory();\n  const queryMenuRef = useRef(null);\n  const menuRef = useRef(null);\n  const copyLinkMenuRef = useRef(null);\n  const shareByEmailMenuRef = useRef(null);\n  const drillToDetailMenuRef = useRef(null);\n  const toggleDropdown = ({ close } = {}) => {\n    setDropdownIsOpen(!(close || dropdownIsOpen));\n    // clear selected keys\n    setSelectedKeys([]);\n    // clear out/deselect submenus\n    // setOpenKeys([]);\n  };\n  const canEditCrossFilters = useSelector(({ dashboardInfo }) => dashboardInfo.dash_edit_perm) &&\n  isFeatureEnabled(FeatureFlag.DashboardCrossFilters) && ((_getChartMetadataRegi =\n  getChartMetadataRegistry().\n  get(props.slice.viz_type)) == null ? void 0 : (_getChartMetadataRegi2 = _getChartMetadataRegi.\n  behaviors) == null ? void 0 : _getChartMetadataRegi2.includes(Behavior.InteractiveChart));\n  const canExplore = props.supersetCanExplore;\n  const canDatasourceSamples = useSelector((state) => {var _state$user;return findPermission('can_samples', 'Datasource', (_state$user = state.user) == null ? void 0 : _state$user.roles);});\n  const canDrill = useSelector((state) => {var _state$user2;return findPermission('can_drill', 'Dashboard', (_state$user2 = state.user) == null ? void 0 : _state$user2.roles);});\n  const canDrillToDetail = (canExplore || canDrill) && canDatasourceSamples;\n  const canViewQuery = useSelector((state) => {var _state$user3;return findPermission('can_view_query', 'Dashboard', (_state$user3 = state.user) == null ? void 0 : _state$user3.roles);});\n  const canViewTable = useSelector((state) => {var _state$user4;return findPermission('can_view_chart_as_table', 'Dashboard', (_state$user4 = state.user) == null ? void 0 : _state$user4.roles);});\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n  const handleMenuClick = ({ key, domEvent }) => {\n    // close menu\n    toggleDropdown({ close: true });\n    switch (key) {\n      case MenuKeys.ForceRefresh:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MenuKeys.ToggleChartDescription:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice == null ? void 0 : props.toggleExpandSlice(props.slice.slice_id);\n        break;\n      case MenuKeys.ExploreChart:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart == null ? void 0 : props.logExploreChart(props.slice.slice_id);\n        if (domEvent.metaKey || domEvent.ctrlKey) {\n          domEvent.preventDefault();\n          window.open(props.exploreUrl, '_blank');\n        } else\n        {\n          history.push(props.exploreUrl);\n        }\n        break;\n      case MenuKeys.ExportCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV == null ? void 0 : props.exportCSV(props.slice.slice_id);\n        break;\n      case MenuKeys.Fullscreen:\n        props.handleToggleFullSize();\n        break;\n      case MenuKeys.ExportFullCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV == null ? void 0 : props.exportFullCSV(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportFullXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullXLSX == null ? void 0 : props.exportFullXLSX(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX == null ? void 0 : props.exportXLSX(props.slice.slice_id);\n        break;\n      case MenuKeys.DownloadAsImage:{\n          // menu closes with a delay, we need to hide it manually,\n          // so that we don't capture it on the screenshot\n          const menu = document.querySelector('.ant-dropdown:not(.ant-dropdown-hidden)');\n          if (menu) {\n            menu.style.visibility = 'hidden';\n          }\n          downloadAsImage(getScreenshotNodeSelector(props.slice.slice_id), props.slice.slice_name, true)(domEvent).then(() => {\n            if (menu) {\n              menu.style.visibility = 'visible';\n            }\n          });\n          props.logEvent == null ? void 0 : props.logEvent(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n            chartId: props.slice.slice_id\n          });\n          break;\n        }\n      case MenuKeys.CrossFilterScoping:{\n          openScopingModal();\n          break;\n        }\n      case MenuKeys.ViewResults:{\n          if (!tableModalIsOpen) {\n            setTableModalIsOpen(true);\n          }\n          break;\n        }\n      case MenuKeys.DrillToDetail:{\n          setDrillModalIsOpen(!drillModalIsOpen);\n          break;\n        }\n      case MenuKeys.ViewQuery:{\n          if (queryMenuRef.current && !queryMenuRef.current.showModal) {\n            queryMenuRef.current.open(domEvent);\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  const { componentId, dashboardId, slice, isFullSize, cachedDttm = [], updatedDttm = null, addSuccessToast = () => {}, addDangerToast = () => {}, supersetCanShare = false, isCached = [] } = props;\n  const isTable = slice.viz_type === 'table';\n  const cachedWhen = (cachedDttm || []).map((itemCachedDttm) => moment.utc(itemCachedDttm).fromNow());\n  const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n  const getCachedTitle = (itemCached) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => ___EmotionJSX(\"div\", { key: `tooltip-${index}` },\n  refreshTooltipData.length > 1 ?\n  t('Query %s: %s', index + 1, item) :\n  item\n  ));\n  const fullscreenLabel = isFullSize ?\n  t('Exit fullscreen') :\n  t('Enter fullscreen');\n  // @z-index-below-dashboard-header (100) - 1 = 99 for !isFullSize and 101 for isFullSize\n  const dropdownOverlayStyle = {\n    zIndex: isFullSize ? 101 : 99,\n    animationDuration: '0s'\n  };\n  // controlled/uncontrolled behaviour for submenus\n  const openKeysProps = {};\n  if (openKeys) {\n    openKeysProps.openKeys = openKeys;\n  }\n  const menu = ___EmotionJSX(Menu, _extends({ onClick: handleMenuClick, selectable: false, \"data-test\": `slice_${slice.slice_id}-menu`, selectedKeys: selectedKeys, id: `slice_${slice.slice_id}-menu`, ref: menuRef\n    // submenus must be rendered for handleDropdownNavigation\n    , forceSubMenuRender: true }, openKeysProps),\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.ForceRefresh, disabled: props.chartStatus === 'loading', style: { height: 'auto', lineHeight: 'initial' }, \"data-test\": \"refresh-chart-menu-item\" },\n  t('Force refresh'),\n  ___EmotionJSX(RefreshTooltip, { \"data-test\": \"dashboard-slice-refresh-tooltip\" },\n  refreshTooltip\n  )\n  ),\n\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.Fullscreen }, fullscreenLabel),\n\n  ___EmotionJSX(Menu.Divider, null),\n\n  slice.description && ___EmotionJSX(Menu.Item, { key: MenuKeys.ToggleChartDescription },\n  props.isDescriptionExpanded ?\n  t('Hide chart description') :\n  t('Show chart description')\n  ),\n\n  canExplore && ___EmotionJSX(Menu.Item, { key: MenuKeys.ExploreChart },\n  ___EmotionJSX(Tooltip, { title: getSliceHeaderTooltip(props.slice.slice_name) },\n  t('Edit chart')\n  )\n  ),\n\n  canEditCrossFilters && ___EmotionJSX(Menu.Item, { key: MenuKeys.CrossFilterScoping },\n  t('Cross-filtering scoping')\n  ),\n\n  (canExplore || canEditCrossFilters) && ___EmotionJSX(Menu.Divider, null),\n\n  (canExplore || canViewQuery) && ___EmotionJSX(Menu.Item, { key: MenuKeys.ViewQuery },\n  ___EmotionJSX(ModalTrigger, { triggerNode: ___EmotionJSX(\"span\", { \"data-test\": \"view-query-menu-item\" }, t('View query')), modalTitle: t('View query'), modalBody: ___EmotionJSX(ViewQueryModal, { latestQueryFormData: props.formData }), draggable: true, resizable: true, responsive: true, ref: queryMenuRef })\n  ),\n\n  (canExplore || canViewTable) && ___EmotionJSX(Menu.Item, { key: MenuKeys.ViewResults },\n  ___EmotionJSX(ViewResultsModalTrigger, { canExplore: props.supersetCanExplore, exploreUrl: props.exploreUrl, triggerNode: ___EmotionJSX(\"span\", { \"data-test\": \"view-query-menu-item\" }, t('View as table')), setShowModal: setTableModalIsOpen, showModal: tableModalIsOpen, modalTitle: t('Chart Data: %s', slice.slice_name), modalBody: ___EmotionJSX(ResultsPaneOnDashboard, { queryFormData: props.formData, queryForce: false, dataSize: 20, isRequest: true, isVisible: true }) })\n  ),\n\n  isFeatureEnabled(FeatureFlag.DrillToDetail) && canDrillToDetail && ___EmotionJSX(DrillDetailMenuItems, { chartId: slice.slice_id, formData: props.formData, key: MenuKeys.DrillToDetail, showModal: drillModalIsOpen, setShowModal: setDrillModalIsOpen, drillToDetailMenuRef: drillToDetailMenuRef }),\n\n  (slice.description || canExplore) && ___EmotionJSX(Menu.Divider, null),\n\n  supersetCanShare && ___EmotionJSX(Menu.SubMenu, { title: t('Share'), key: MenuKeys.Share\n    // reset to uncontrolled behaviour\n    , onTitleMouseEnter: () => setOpenKeys(undefined) },\n  ___EmotionJSX(ShareMenuItems, { dashboardId: dashboardId, dashboardComponentId: componentId, copyMenuItemTitle: t('Copy permalink to clipboard'), emailMenuItemTitle: t('Share chart by email'), emailSubject: t('Superset chart'), emailBody: t('Check out this chart: '), addSuccessToast: addSuccessToast, addDangerToast: addDangerToast, copyMenuItemRef: copyLinkMenuRef, shareByEmailMenuItemRef: shareByEmailMenuRef, selectedKeys: selectedKeys.filter((key) => key === MenuKeys.CopyLink || key === MenuKeys.ShareByEmail) })\n  ),\n\n  props.supersetCanCSV && ___EmotionJSX(Menu.SubMenu, { title: t('Download'), key: MenuKeys.Download, onTitleMouseEnter: () => setOpenKeys(undefined) },\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.ExportCsv, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to .CSV')\n  ),\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.ExportXlsx, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to Excel')\n  ),\n\n  isFeatureEnabled(FeatureFlag.AllowFullCsvExport) &&\n  props.supersetCanCSV &&\n  isTable && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.ExportFullCsv, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to full .CSV')\n  ),\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.ExportFullXlsx, icon: ___EmotionJSX(Icons.FileOutlined, { css: dropdownIconsStyles }) },\n  t('Export to full Excel')\n  )\n  ),\n\n  ___EmotionJSX(Menu.Item, { key: MenuKeys.DownloadAsImage, icon: ___EmotionJSX(Icons.FileImageOutlined, { css: dropdownIconsStyles }) },\n  t('Download as image')\n  )\n  )\n  );\n  return ___EmotionJSX(React.Fragment, null,\n  isFullSize && ___EmotionJSX(Icons.FullscreenExitOutlined, { style: { fontSize: 22 }, onClick: () => {\n      props.handleToggleFullSize();\n    } }),\n  ___EmotionJSX(NoAnimationDropdown, { overlay: menu, overlayStyle: dropdownOverlayStyle, trigger: ['click'], placement: \"bottomRight\", visible: dropdownIsOpen, onVisibleChange: (status) => toggleDropdown({ close: !status }), onKeyDown: (e) => handleDropdownNavigation(e, dropdownIsOpen, menu, toggleDropdown, setSelectedKeys, setOpenKeys) },\n  ___EmotionJSX(\"span\", { css: () => css`\n            display: flex;\n            align-items: center;\n          `, id: `slice_${slice.slice_id}-controls`, role: \"button\", \"aria-label\": \"More Options\", \"aria-haspopup\": \"true\", tabIndex: 0 },\n  ___EmotionJSX(VerticalDotsTrigger, null)\n  )\n  ),\n  canEditCrossFilters && scopingModal\n  );\n};__signature__(SliceHeaderControls, \"useState{[dropdownIsOpen, setDropdownIsOpen](false)}\\nuseState{[tableModalIsOpen, setTableModalIsOpen](false)}\\nuseState{[drillModalIsOpen, setDrillModalIsOpen](false)}\\nuseState{[selectedKeys, setSelectedKeys]([])}\\nuseState{[openKeys, setOpenKeys](undefined)}\\nuseCrossFiltersScopingModal{[openScopingModal, scopingModal]}\\nuseHistory{history}\\nuseRef{queryMenuRef}\\nuseRef{menuRef}\\nuseRef{copyLinkMenuRef}\\nuseRef{shareByEmailMenuRef}\\nuseRef{drillToDetailMenuRef}\\nuseSelector{}\\nuseSelector{canDatasourceSamples}\\nuseSelector{canDrill}\\nuseSelector{canViewQuery}\\nuseSelector{canViewTable}\", () => [useCrossFiltersScopingModal, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector]);const _default =\nwithRouter(SliceHeaderControls);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ACTION_KEYS, \"ACTION_KEYS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(NAV_KEYS, \"NAV_KEYS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(VerticalDotsContainer, \"VerticalDotsContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(RefreshTooltip, \"RefreshTooltip\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(getScreenshotNodeSelector, \"getScreenshotNodeSelector\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(VerticalDotsTrigger, \"VerticalDotsTrigger\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(dropdownIconsStyles, \"dropdownIconsStyles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(extractMenuItemRefs, \"extractMenuItemRefs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(extractMenuItemsKeys, \"extractMenuItemsKeys\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(extractMenuItemsKeyMap, \"extractMenuItemsKeyMap\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(getNavigationKeys, \"getNavigationKeys\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(handleDropdownNavigation, \"handleDropdownNavigation\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(ViewResultsModalTrigger, \"ViewResultsModalTrigger\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(SliceHeaderControls, \"SliceHeaderControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useRef","useCallback","useHistory","withRouter","moment","Behavior","css","isFeatureEnabled","FeatureFlag","getChartMetadataRegistry","styled","t","useTheme","ensureIsArray","useSelector","MenuItemKeyEnum","Menu","isAntdMenuItem","isAntdMenuItemRef","isSubMenuOrItemType","isAntdMenuSubmenu","NoAnimationDropdown","ShareMenuItems","downloadAsImage","getSliceHeaderTooltip","Tooltip","Icons","ModalTrigger","Button","ViewQueryModal","ResultsPaneOnDashboard","Modal","DrillDetailMenuItems","LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE","MenuKeys","findPermission","useCrossFiltersScopingModal","jsx","___EmotionJSX","ACTION_KEYS","enter","spacebar","space","NAV_KEYS","tab","escape","up","down","VerticalDotsContainer","div","theme","gridUnit","colors","text","label","RefreshTooltip","grayscale","base","getScreenshotNodeSelector","chartId","VerticalDotsTrigger","className","dropdownIconsStyles","extractMenuItemRefs","child","childProps","props","arrayProps","Object","values","refs","filter","ref","extractMenuItemsKeys","children","currentKeys","allKeys","arrayChildren","forEach","_child$props","isMenuItem","key","push","length","map","current","eventKey","childKeys","extractMenuItemsKeyMap","keysMap","childrenArray","_child$props2","isSubmenu","menuItemsRefs","directKey","type","SubMenu","MenuItem","parent","_child$props3","theChildren","keyMap","k","SubMenuItem","getNavigationKeys","keys","currentKeyIndex","direction","_keysMap$selectedKey","step","skipStep","keysLen","mathFn","Math","max","min","openKey","selectedKey","undefined","isSubMenu","parentKey","handleDropdownNavigation","e","dropdownIsOpen","menu","toggleDropdown","setSelectedKeys","setOpenKeys","menuProps","selectedKeys","indexOf","currentKey","currentKeyConf","onClick","domEvent","refMenuItemProps","currentTarget","focus","shiftKey","ViewResultsModalTrigger","canExplore","exploreUrl","triggerNode","modalTitle","modalBody","showModal","setShowModal","history","exploreChart","openModal","closeModal","Fragment","role","tabIndex","show","onHide","closable","title","footer","buttonStyle","buttonSize","disabled","tooltip","responsive","resizable","resizableConfig","minHeight","minWidth","defaultSize","width","height","draggable","destroyOnClose","__signature__","SliceHeaderControls","_getChartMetadataRegi","_getChartMetadataRegi2","setDropdownIsOpen","tableModalIsOpen","setTableModalIsOpen","drillModalIsOpen","setDrillModalIsOpen","openKeys","openScopingModal","scopingModal","slice","slice_id","queryMenuRef","menuRef","copyLinkMenuRef","shareByEmailMenuRef","drillToDetailMenuRef","close","canEditCrossFilters","dashboardInfo","dash_edit_perm","DashboardCrossFilters","get","viz_type","behaviors","includes","InteractiveChart","supersetCanExplore","canDatasourceSamples","state","_state$user","user","roles","canDrill","_state$user2","canDrillToDetail","canViewQuery","_state$user3","canViewTable","_state$user4","refreshChart","updatedDttm","forceRefresh","dashboardId","handleMenuClick","ForceRefresh","addSuccessToast","ToggleChartDescription","toggleExpandSlice","ExploreChart","logExploreChart","metaKey","ctrlKey","preventDefault","window","open","ExportCsv","exportCSV","Fullscreen","handleToggleFullSize","ExportFullCsv","exportFullCSV","ExportFullXlsx","exportFullXLSX","ExportXlsx","exportXLSX","DownloadAsImage","document","querySelector","style","visibility","slice_name","then","logEvent","CrossFilterScoping","ViewResults","DrillToDetail","ViewQuery","componentId","isFullSize","cachedDttm","addDangerToast","supersetCanShare","isCached","isTable","cachedWhen","itemCachedDttm","utc","fromNow","updatedWhen","getCachedTitle","itemCached","refreshTooltipData","Set","refreshTooltip","item","index","fullscreenLabel","dropdownOverlayStyle","zIndex","animationDuration","openKeysProps","_extends","selectable","id","forceSubMenuRender","Item","chartStatus","lineHeight","Divider","description","isDescriptionExpanded","latestQueryFormData","formData","queryFormData","queryForce","dataSize","isRequest","isVisible","Share","onTitleMouseEnter","dashboardComponentId","copyMenuItemTitle","emailMenuItemTitle","emailSubject","emailBody","copyMenuItemRef","shareByEmailMenuItemRef","CopyLink","ShareByEmail","supersetCanCSV","Download","icon","FileOutlined","AllowFullCsvExport","FileImageOutlined","FullscreenExitOutlined","fontSize","overlay","overlayStyle","trigger","placement","visible","onVisibleChange","status","onKeyDown","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  MouseEvent,\n  Key,\n  ReactChild,\n  useState,\n  useRef,\n  RefObject,\n  useCallback,\n} from 'react';\nimport { RouteComponentProps, useHistory, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n  Behavior,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  QueryFormData,\n  styled,\n  t,\n  useTheme,\n  ensureIsArray,\n} from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport {\n  MenuItemKeyEnum,\n  Menu,\n  MenuItemChildType,\n  isAntdMenuItem,\n  isAntdMenuItemRef,\n  isSubMenuOrItemType,\n  isAntdMenuSubmenu,\n} from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport Modal from 'src/components/Modal';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { MenuKeys, RootState } from 'src/dashboard/types';\nimport { findPermission } from 'src/utils/findPermission';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';\n\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' ',\n};\n\nconst NAV_KEYS = {\n  tab: 'Tab',\n  escape: 'Escape',\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n};\n\n// TODO: replace 3 dots with an icon\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n\n    height: ${({ theme }) => theme.gridUnit}px;\n    width: ${({ theme }) => theme.gridUnit}px;\n    border-radius: 50%;\n    margin: ${({ theme }) => theme.gridUnit / 2}px 0;\n\n    background-color: ${({ theme }) => theme.colors.text.label};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst getScreenshotNodeSelector = (chartId: string | number) =>\n  `.dashboard-chart-id-${chartId}`;\n\nconst VerticalDotsTrigger = () => (\n  <VerticalDotsContainer>\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n  </VerticalDotsContainer>\n);\n\nexport interface SliceHeaderControlsProps {\n  slice: {\n    description: string;\n    viz_type: string;\n    slice_name: string;\n    slice_id: number;\n    slice_description: string;\n    datasource: string;\n  };\n\n  componentId: string;\n  dashboardId: number;\n  chartStatus: string;\n  isCached: boolean[];\n  cachedDttm: string[] | null;\n  isExpanded?: boolean;\n  updatedDttm: number | null;\n  isFullSize?: boolean;\n  isDescriptionExpanded?: boolean;\n  formData: QueryFormData;\n  exploreUrl: string;\n\n  forceRefresh: (sliceId: number, dashboardId: number) => void;\n  logExploreChart?: (sliceId: number) => void;\n  logEvent?: (eventName: string, eventData?: object) => void;\n  toggleExpandSlice?: (sliceId: number) => void;\n  exportCSV?: (sliceId: number) => void;\n  exportFullCSV?: (sliceId: number) => void;\n  exportXLSX?: (sliceId: number) => void;\n  exportFullXLSX?: (sliceId: number) => void;\n  handleToggleFullSize: () => void;\n\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n\n  supersetCanExplore?: boolean;\n  supersetCanShare?: boolean;\n  supersetCanCSV?: boolean;\n\n  crossFiltersEnabled?: boolean;\n}\ntype SliceHeaderControlsPropsWithRouter = SliceHeaderControlsProps &\n  RouteComponentProps;\n\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n\n/**\n * A MenuItem can be recognized in the tree by the presence of a ref\n *\n * @param children\n * @param currentKeys\n * @returns an array of keys\n */\nconst extractMenuItemRefs = (child: MenuItemChildType): RefObject<any>[] => {\n  // check that child has props\n  const childProps: Record<string, any> = child?.props;\n  // loop through each prop\n  if (childProps) {\n    const arrayProps = Object.values(childProps);\n    // check if any is of type ref MenuItem\n    const refs = arrayProps.filter(ref => isAntdMenuItemRef(ref));\n    return refs;\n  }\n  return [];\n};\n/**\n * Recursively extracts keys from menu items\n *\n * @param children\n * @param currentKeys\n * @returns an array of keys and their refs\n *\n */\nconst extractMenuItemsKeys = (\n  children: MenuItemChildType[],\n  currentKeys?: { key: string; ref?: RefObject<any> }[],\n): { key: string; ref?: RefObject<any> }[] => {\n  const allKeys = currentKeys || [];\n  const arrayChildren = ensureIsArray(children);\n\n  arrayChildren.forEach((child: MenuItemChildType) => {\n    const isMenuItem = isAntdMenuItem(child);\n    const refs = extractMenuItemRefs(child);\n    // key is immediately available in a standard MenuItem\n    if (isMenuItem) {\n      const { key } = child;\n      if (key) {\n        allKeys.push({\n          key,\n        });\n      }\n    }\n    // one or more menu items refs are available\n    if (refs.length) {\n      allKeys.push(\n        ...refs.map(ref => ({ key: ref.current.props.eventKey, ref })),\n      );\n    }\n\n    // continue to extract keys from nested children\n    if (child?.props?.children) {\n      const childKeys = extractMenuItemsKeys(child.props.children, allKeys);\n      allKeys.push(...childKeys);\n    }\n  });\n\n  return allKeys;\n};\n\n/**\n * Generates a map of keys and their types for a MenuItem\n * Individual refs can be given to extract keys from nested items\n * Refs can be used to control the event handlers of the menu items\n *\n * @param itemChildren\n * @param type\n * @returns a map of keys and their types\n */\nconst extractMenuItemsKeyMap = (\n  children: MenuItemChildType,\n): Record<string, any> => {\n  const keysMap: Record<string, any> = {};\n  const childrenArray = ensureIsArray(children);\n\n  childrenArray.forEach((child: MenuItemChildType) => {\n    const isMenuItem = isAntdMenuItem(child);\n    const isSubmenu = isAntdMenuSubmenu(child);\n    const menuItemsRefs = extractMenuItemRefs(child);\n\n    // key is immediately available in MenuItem or SubMenu\n    if (isMenuItem || isSubmenu) {\n      const directKey = child?.key;\n      if (directKey) {\n        keysMap[directKey] = {};\n        keysMap[directKey].type = isSubmenu\n          ? MenuItemKeyEnum.SubMenu\n          : MenuItemKeyEnum.MenuItem;\n      }\n    }\n\n    // one or more menu items refs are available\n    if (menuItemsRefs.length) {\n      menuItemsRefs.forEach(ref => {\n        const key = ref.current.props.eventKey;\n        keysMap[key] = {};\n        keysMap[key].type = isSubmenu\n          ? MenuItemKeyEnum.SubMenu\n          : MenuItemKeyEnum.MenuItem;\n        keysMap[key].parent = child.key;\n        keysMap[key].ref = ref;\n      });\n    }\n\n    // if it has children must check for the presence of menu items\n    if (child?.props?.children) {\n      const theChildren = child?.props?.children;\n      const childKeys = extractMenuItemsKeys(theChildren);\n      childKeys.forEach(keyMap => {\n        const k = keyMap.key;\n        keysMap[k] = {};\n        keysMap[k].type = MenuItemKeyEnum.SubMenuItem;\n        keysMap[k].parent = child.key;\n        if (keyMap.ref) {\n          keysMap[k].ref = keyMap.ref;\n        }\n      });\n    }\n  });\n\n  return keysMap;\n};\n\n/**\n *\n * Determines the next key to select based on the current key and direction\n *\n * @param keys\n * @param keysMap\n * @param currentKeyIndex\n * @param direction\n * @returns the selected key and the open key\n */\nconst getNavigationKeys = (\n  keys: string[],\n  keysMap: Record<string, any>,\n  currentKeyIndex: number,\n  direction = 'up',\n) => {\n  const step = direction === 'up' ? -1 : 1;\n  const skipStep = direction === 'up' ? -2 : 2;\n  const keysLen = direction === 'up' ? 0 : keys.length;\n  const mathFn = direction === 'up' ? Math.max : Math.min;\n  let openKey: string | undefined;\n  let selectedKey = keys[mathFn(currentKeyIndex + step, keysLen)];\n\n  // go to first key if current key is the last\n  if (!selectedKey) {\n    return { selectedKey: keys[0], openKey: undefined };\n  }\n\n  const isSubMenu = keysMap[selectedKey]?.type === MenuItemKeyEnum.SubMenu;\n  if (isSubMenu) {\n    // this is a submenu, skip to first submenu item\n    selectedKey = keys[mathFn(currentKeyIndex + skipStep, keysLen)];\n  }\n  // re-evaulate if current selected key is a submenu or submenu item\n  if (!isSubMenuOrItemType(keysMap[selectedKey].type)) {\n    openKey = undefined;\n  } else {\n    const parentKey = keysMap[selectedKey].parent;\n    if (parentKey) {\n      openKey = parentKey;\n    }\n  }\n  return { selectedKey, openKey };\n};\n\nexport const handleDropdownNavigation = (\n  e: React.KeyboardEvent<HTMLElement>,\n  dropdownIsOpen: boolean,\n  menu: React.ReactElement,\n  toggleDropdown: () => void,\n  setSelectedKeys: (keys: string[]) => void,\n  setOpenKeys: (keys: string[]) => void,\n) => {\n  if (e.key === NAV_KEYS.tab && !dropdownIsOpen) {\n    return; // if tab, continue with system tab navigation\n  }\n  const menuProps = menu.props || {};\n  const keysMap = extractMenuItemsKeyMap(menuProps.children);\n  const keys = Object.keys(keysMap);\n  const { selectedKeys = [] } = menuProps;\n  const currentKeyIndex = keys.indexOf(selectedKeys[0]);\n\n  switch (e.key) {\n    // toggle the dropdown on keypress\n    case ACTION_KEYS.enter:\n    case ACTION_KEYS.spacebar:\n    case ACTION_KEYS.space:\n      if (selectedKeys.length) {\n        const currentKey = selectedKeys[0];\n        const currentKeyConf = keysMap[selectedKeys];\n        // when a menu item is selected, then trigger\n        // the menu item's onClick handler\n        menuProps.onClick?.({ key: currentKey, domEvent: e });\n        // trigger click handle on ref\n        if (currentKeyConf?.ref) {\n          const refMenuItemProps = currentKeyConf.ref.current.props;\n          refMenuItemProps.onClick?.({\n            key: currentKey,\n            domEvent: e,\n          });\n        }\n        // clear out/deselect keys\n        setSelectedKeys([]);\n        // close submenus\n        setOpenKeys([]);\n        // put focus back on menu trigger\n        e.currentTarget.focus();\n      }\n      // if nothing was selected, or after selecting new menu item,\n      toggleDropdown();\n      break;\n    // select the menu items going down\n    case NAV_KEYS.down:\n    case NAV_KEYS.tab && !e.shiftKey: {\n      const { selectedKey, openKey } = getNavigationKeys(\n        keys,\n        keysMap,\n        currentKeyIndex,\n        'down',\n      );\n      setSelectedKeys([selectedKey]);\n      setOpenKeys(openKey ? [openKey] : []);\n      break;\n    }\n    // select the menu items going up\n    case NAV_KEYS.up:\n    case NAV_KEYS.tab && e.shiftKey: {\n      const { selectedKey, openKey } = getNavigationKeys(\n        keys,\n        keysMap,\n        currentKeyIndex,\n        'up',\n      );\n      setSelectedKeys([selectedKey]);\n      setOpenKeys(openKey ? [openKey] : []);\n      break;\n    }\n    case NAV_KEYS.escape:\n      // close dropdown menu\n      toggleDropdown();\n      break;\n    default:\n      break;\n  }\n};\n\nconst ViewResultsModalTrigger = ({\n  canExplore,\n  exploreUrl,\n  triggerNode,\n  modalTitle,\n  modalBody,\n  showModal = false,\n  setShowModal,\n}: {\n  canExplore?: boolean;\n  exploreUrl: string;\n  triggerNode: ReactChild;\n  modalTitle: ReactChild;\n  modalBody: ReactChild;\n  showModal: boolean;\n  setShowModal: (showModal: boolean) => void;\n}) => {\n  const history = useHistory();\n  const exploreChart = () => history.push(exploreUrl);\n  const theme = useTheme();\n  const openModal = useCallback(() => setShowModal(true), []);\n  const closeModal = useCallback(() => setShowModal(false), []);\n\n  return (\n    <>\n      <span\n        data-test=\"span-modal-trigger\"\n        onClick={openModal}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {triggerNode}\n      </span>\n      {(() => (\n        <Modal\n          css={css`\n            .ant-modal-body {\n              display: flex;\n              flex-direction: column;\n            }\n          `}\n          show={showModal}\n          onHide={closeModal}\n          closable\n          title={modalTitle}\n          footer={\n            <>\n              <Button\n                buttonStyle=\"secondary\"\n                buttonSize=\"small\"\n                onClick={exploreChart}\n                disabled={!canExplore}\n                tooltip={\n                  !canExplore\n                    ? t(\n                        'You do not have sufficient permissions to edit the chart',\n                      )\n                    : undefined\n                }\n              >\n                {t('Edit chart')}\n              </Button>\n              <Button\n                buttonStyle=\"primary\"\n                buttonSize=\"small\"\n                onClick={closeModal}\n                css={css`\n                  margin-left: ${theme.gridUnit * 2}px;\n                `}\n              >\n                {t('Close')}\n              </Button>\n            </>\n          }\n          responsive\n          resizable\n          resizableConfig={{\n            minHeight: theme.gridUnit * 128,\n            minWidth: theme.gridUnit * 128,\n            defaultSize: {\n              width: 'auto',\n              height: '75vh',\n            },\n          }}\n          draggable\n          destroyOnClose\n        >\n          {modalBody}\n        </Modal>\n      ))()}\n    </>\n  );\n};\n\nconst SliceHeaderControls = (props: SliceHeaderControlsPropsWithRouter) => {\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n  const [tableModalIsOpen, setTableModalIsOpen] = useState(false);\n  const [drillModalIsOpen, setDrillModalIsOpen] = useState(false);\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\n  // setting openKeys undefined falls back to uncontrolled behaviour\n  const [openKeys, setOpenKeys] = useState<string[] | undefined>(undefined);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(\n    props.slice.slice_id,\n  );\n  const history = useHistory();\n\n  const queryMenuRef: RefObject<any> = useRef(null);\n  const menuRef: RefObject<any> = useRef(null);\n  const copyLinkMenuRef: RefObject<any> = useRef(null);\n  const shareByEmailMenuRef: RefObject<any> = useRef(null);\n  const drillToDetailMenuRef: RefObject<any> = useRef(null);\n\n  const toggleDropdown = ({ close }: { close?: boolean } = {}) => {\n    setDropdownIsOpen(!(close || dropdownIsOpen));\n    // clear selected keys\n    setSelectedKeys([]);\n    // clear out/deselect submenus\n    // setOpenKeys([]);\n  };\n\n  const canEditCrossFilters =\n    useSelector<RootState, boolean>(\n      ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n    ) &&\n    isFeatureEnabled(FeatureFlag.DashboardCrossFilters) &&\n    getChartMetadataRegistry()\n      .get(props.slice.viz_type)\n      ?.behaviors?.includes(Behavior.InteractiveChart);\n  const canExplore = props.supersetCanExplore;\n  const canDatasourceSamples = useSelector((state: RootState) =>\n    findPermission('can_samples', 'Datasource', state.user?.roles),\n  );\n  const canDrill = useSelector((state: RootState) =>\n    findPermission('can_drill', 'Dashboard', state.user?.roles),\n  );\n  const canDrillToDetail = (canExplore || canDrill) && canDatasourceSamples;\n  const canViewQuery = useSelector((state: RootState) =>\n    findPermission('can_view_query', 'Dashboard', state.user?.roles),\n  );\n  const canViewTable = useSelector((state: RootState) =>\n    findPermission('can_view_chart_as_table', 'Dashboard', state.user?.roles),\n  );\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n\n  const handleMenuClick = ({\n    key,\n    domEvent,\n  }: {\n    key: Key;\n    domEvent: MouseEvent<HTMLElement>;\n  }) => {\n    // close menu\n    toggleDropdown({ close: true });\n    switch (key) {\n      case MenuKeys.ForceRefresh:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MenuKeys.ToggleChartDescription:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExploreChart:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart?.(props.slice.slice_id);\n        if (domEvent.metaKey || domEvent.ctrlKey) {\n          domEvent.preventDefault();\n          window.open(props.exploreUrl, '_blank');\n        } else {\n          history.push(props.exploreUrl);\n        }\n        break;\n      case MenuKeys.ExportCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV?.(props.slice.slice_id);\n        break;\n      case MenuKeys.Fullscreen:\n        props.handleToggleFullSize();\n        break;\n      case MenuKeys.ExportFullCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportFullXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullXLSX?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX?.(props.slice.slice_id);\n        break;\n      case MenuKeys.DownloadAsImage: {\n        // menu closes with a delay, we need to hide it manually,\n        // so that we don't capture it on the screenshot\n        const menu = document.querySelector(\n          '.ant-dropdown:not(.ant-dropdown-hidden)',\n        ) as HTMLElement;\n        if (menu) {\n          menu.style.visibility = 'hidden';\n        }\n        downloadAsImage(\n          getScreenshotNodeSelector(props.slice.slice_id),\n          props.slice.slice_name,\n          true,\n          // @ts-ignore\n        )(domEvent).then(() => {\n          if (menu) {\n            menu.style.visibility = 'visible';\n          }\n        });\n        props.logEvent?.(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n          chartId: props.slice.slice_id,\n        });\n        break;\n      }\n      case MenuKeys.CrossFilterScoping: {\n        openScopingModal();\n        break;\n      }\n      case MenuKeys.ViewResults: {\n        if (!tableModalIsOpen) {\n          setTableModalIsOpen(true);\n        }\n        break;\n      }\n      case MenuKeys.DrillToDetail: {\n        setDrillModalIsOpen(!drillModalIsOpen);\n        break;\n      }\n      case MenuKeys.ViewQuery: {\n        if (queryMenuRef.current && !queryMenuRef.current.showModal) {\n          queryMenuRef.current.open(domEvent);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const {\n    componentId,\n    dashboardId,\n    slice,\n    isFullSize,\n    cachedDttm = [],\n    updatedDttm = null,\n    addSuccessToast = () => {},\n    addDangerToast = () => {},\n    supersetCanShare = false,\n    isCached = [],\n  } = props;\n  const isTable = slice.viz_type === 'table';\n  const cachedWhen = (cachedDttm || []).map(itemCachedDttm =>\n    moment.utc(itemCachedDttm).fromNow(),\n  );\n  const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n  const getCachedTitle = (itemCached: boolean) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => (\n    <div key={`tooltip-${index}`}>\n      {refreshTooltipData.length > 1\n        ? t('Query %s: %s', index + 1, item)\n        : item}\n    </div>\n  ));\n  const fullscreenLabel = isFullSize\n    ? t('Exit fullscreen')\n    : t('Enter fullscreen');\n\n  // @z-index-below-dashboard-header (100) - 1 = 99 for !isFullSize and 101 for isFullSize\n  const dropdownOverlayStyle = {\n    zIndex: isFullSize ? 101 : 99,\n    animationDuration: '0s',\n  };\n\n  // controlled/uncontrolled behaviour for submenus\n  const openKeysProps: Record<string, string[]> = {};\n  if (openKeys) {\n    openKeysProps.openKeys = openKeys;\n  }\n\n  const menu = (\n    <Menu\n      onClick={handleMenuClick}\n      selectable={false}\n      data-test={`slice_${slice.slice_id}-menu`}\n      selectedKeys={selectedKeys}\n      id={`slice_${slice.slice_id}-menu`}\n      ref={menuRef}\n      // submenus must be rendered for handleDropdownNavigation\n      forceSubMenuRender\n      {...openKeysProps}\n    >\n      <Menu.Item\n        key={MenuKeys.ForceRefresh}\n        disabled={props.chartStatus === 'loading'}\n        style={{ height: 'auto', lineHeight: 'initial' }}\n        data-test=\"refresh-chart-menu-item\"\n      >\n        {t('Force refresh')}\n        <RefreshTooltip data-test=\"dashboard-slice-refresh-tooltip\">\n          {refreshTooltip}\n        </RefreshTooltip>\n      </Menu.Item>\n\n      <Menu.Item key={MenuKeys.Fullscreen}>{fullscreenLabel}</Menu.Item>\n\n      <Menu.Divider />\n\n      {slice.description && (\n        <Menu.Item key={MenuKeys.ToggleChartDescription}>\n          {props.isDescriptionExpanded\n            ? t('Hide chart description')\n            : t('Show chart description')}\n        </Menu.Item>\n      )}\n\n      {canExplore && (\n        <Menu.Item key={MenuKeys.ExploreChart}>\n          <Tooltip title={getSliceHeaderTooltip(props.slice.slice_name)}>\n            {t('Edit chart')}\n          </Tooltip>\n        </Menu.Item>\n      )}\n\n      {canEditCrossFilters && (\n        <Menu.Item key={MenuKeys.CrossFilterScoping}>\n          {t('Cross-filtering scoping')}\n        </Menu.Item>\n      )}\n\n      {(canExplore || canEditCrossFilters) && <Menu.Divider />}\n\n      {(canExplore || canViewQuery) && (\n        <Menu.Item key={MenuKeys.ViewQuery}>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n            }\n            modalTitle={t('View query')}\n            modalBody={<ViewQueryModal latestQueryFormData={props.formData} />}\n            draggable\n            resizable\n            responsive\n            ref={queryMenuRef}\n          />\n        </Menu.Item>\n      )}\n\n      {(canExplore || canViewTable) && (\n        <Menu.Item key={MenuKeys.ViewResults}>\n          <ViewResultsModalTrigger\n            canExplore={props.supersetCanExplore}\n            exploreUrl={props.exploreUrl}\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View as table')}</span>\n            }\n            setShowModal={setTableModalIsOpen}\n            showModal={tableModalIsOpen}\n            modalTitle={t('Chart Data: %s', slice.slice_name)}\n            modalBody={\n              <ResultsPaneOnDashboard\n                queryFormData={props.formData}\n                queryForce={false}\n                dataSize={20}\n                isRequest\n                isVisible\n              />\n            }\n          />\n        </Menu.Item>\n      )}\n\n      {isFeatureEnabled(FeatureFlag.DrillToDetail) && canDrillToDetail && (\n        <DrillDetailMenuItems\n          chartId={slice.slice_id}\n          formData={props.formData}\n          key={MenuKeys.DrillToDetail}\n          showModal={drillModalIsOpen}\n          setShowModal={setDrillModalIsOpen}\n          drillToDetailMenuRef={drillToDetailMenuRef}\n        />\n      )}\n\n      {(slice.description || canExplore) && <Menu.Divider />}\n\n      {supersetCanShare && (\n        <Menu.SubMenu\n          title={t('Share')}\n          key={MenuKeys.Share}\n          // reset to uncontrolled behaviour\n          onTitleMouseEnter={() => setOpenKeys(undefined)}\n        >\n          <ShareMenuItems\n            dashboardId={dashboardId}\n            dashboardComponentId={componentId}\n            copyMenuItemTitle={t('Copy permalink to clipboard')}\n            emailMenuItemTitle={t('Share chart by email')}\n            emailSubject={t('Superset chart')}\n            emailBody={t('Check out this chart: ')}\n            addSuccessToast={addSuccessToast}\n            addDangerToast={addDangerToast}\n            copyMenuItemRef={copyLinkMenuRef}\n            shareByEmailMenuItemRef={shareByEmailMenuRef}\n            selectedKeys={selectedKeys.filter(\n              key => key === MenuKeys.CopyLink || key === MenuKeys.ShareByEmail,\n            )}\n          />\n        </Menu.SubMenu>\n      )}\n\n      {props.supersetCanCSV && (\n        <Menu.SubMenu\n          title={t('Download')}\n          key={MenuKeys.Download}\n          onTitleMouseEnter={() => setOpenKeys(undefined)}\n        >\n          <Menu.Item\n            key={MenuKeys.ExportCsv}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to .CSV')}\n          </Menu.Item>\n          <Menu.Item\n            key={MenuKeys.ExportXlsx}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to Excel')}\n          </Menu.Item>\n\n          {isFeatureEnabled(FeatureFlag.AllowFullCsvExport) &&\n            props.supersetCanCSV &&\n            isTable && (\n              <>\n                <Menu.Item\n                  key={MenuKeys.ExportFullCsv}\n                  icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n                >\n                  {t('Export to full .CSV')}\n                </Menu.Item>\n                <Menu.Item\n                  key={MenuKeys.ExportFullXlsx}\n                  icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n                >\n                  {t('Export to full Excel')}\n                </Menu.Item>\n              </>\n            )}\n\n          <Menu.Item\n            key={MenuKeys.DownloadAsImage}\n            icon={<Icons.FileImageOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Download as image')}\n          </Menu.Item>\n        </Menu.SubMenu>\n      )}\n    </Menu>\n  );\n\n  return (\n    <>\n      {isFullSize && (\n        <Icons.FullscreenExitOutlined\n          style={{ fontSize: 22 }}\n          onClick={() => {\n            props.handleToggleFullSize();\n          }}\n        />\n      )}\n      <NoAnimationDropdown\n        overlay={menu}\n        overlayStyle={dropdownOverlayStyle}\n        trigger={['click']}\n        placement=\"bottomRight\"\n        visible={dropdownIsOpen}\n        onVisibleChange={status => toggleDropdown({ close: !status })}\n        onKeyDown={e =>\n          handleDropdownNavigation(\n            e,\n            dropdownIsOpen,\n            menu,\n            toggleDropdown,\n            setSelectedKeys,\n            setOpenKeys,\n          )\n        }\n      >\n        <span\n          css={() => css`\n            display: flex;\n            align-items: center;\n          `}\n          id={`slice_${slice.slice_id}-controls`}\n          role=\"button\"\n          aria-label=\"More Options\"\n          aria-haspopup=\"true\"\n          tabIndex={0}\n        >\n          <VerticalDotsTrigger />\n        </span>\n      </NoAnimationDropdown>\n      {canEditCrossFilters && scopingModal}\n    </>\n  );\n};\n\nexport default withRouter(SliceHeaderControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}