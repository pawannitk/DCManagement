{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { css, t, getChartMetadataRegistry, styled } from '@superset-ui/core';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport Modal from 'src/components/Modal';\nimport { noOp } from 'src/utils/common';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { FilterPlugins } from 'src/constants';\nimport VizTypeGallery, { MAX_ADVISABLE_VIZ_GALLERY_WIDTH } from './VizTypeGallery';\nimport { FastVizSwitcher } from './FastVizSwitcher';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst bootstrapData = getBootstrapData();\nconst denyList = (bootstrapData.common.conf.VIZ_TYPE_DENYLIST || []).concat(Object.values(FilterPlugins));\nconst metadataRegistry = getChartMetadataRegistry();\nexport const VIZ_TYPE_CONTROL_TEST_ID = 'viz-type-control';\nfunction VizSupportValidation({ vizType }) {\n  const state = usePluginContext();\n  if (state.loading || metadataRegistry.has(vizType)) {\n    return null;\n  }\n  return ___EmotionJSX(\"div\", { className: \"text-danger\", css: (theme) => css`\n        margin-top: ${theme.gridUnit}px;\n      ` },\n  ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\" }), ' ',\n  ___EmotionJSX(\"small\", null, t('This visualization type is not supported.'))\n  );\n}__signature__(VizSupportValidation, \"usePluginContext{state}\", () => [usePluginContext]);\nconst UnpaddedModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n/** Manages the viz type and the viz picker modal */\nconst VizTypeControl = ({ value: initialValue, onChange = noOp, isModalOpenInit }) => {\n  const [showModal, setShowModal] = useState(!!isModalOpenInit);\n  // a trick to force re-initialization of the gallery each time the modal opens,\n  // ensuring that the modal always opens to the correct category.\n  const [modalKey, setModalKey] = useState(0);\n  const [selectedViz, setSelectedViz] = useState(initialValue);\n  const openModal = useCallback(() => {\n    setShowModal(true);\n  }, []);\n  const onSubmit = useCallback(() => {\n    onChange(selectedViz);\n    setShowModal(false);\n  }, [selectedViz, onChange]);\n  const onCancel = useCallback(() => {\n    setShowModal(false);\n    setModalKey((key) => key + 1);\n    // make sure the modal re-opens to the last submitted viz\n    setSelectedViz(initialValue);\n  }, [initialValue]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", { css: (theme) => css`\n          min-width: ${theme.gridUnit * 72}px;\n          max-width: fit-content;\n        ` },\n  ___EmotionJSX(FastVizSwitcher, { onChange: onChange, currentSelection: initialValue }),\n  initialValue && ___EmotionJSX(VizSupportValidation, { vizType: initialValue })\n  ),\n  ___EmotionJSX(\"div\", { css: (theme) => css`\n          display: flex;\n          justify-content: flex-end;\n          margin-top: ${theme.gridUnit * 3}px;\n          color: ${theme.colors.grayscale.base};\n          text-decoration: underline;\n        ` },\n  ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: openModal },\n  t('View all charts')\n  )\n  ),\n  ___EmotionJSX(UnpaddedModal, { show: showModal, onHide: onCancel, title: t('Select a visualization type'), primaryButtonName: t('Select'), disablePrimaryButton: !selectedViz, onHandledPrimaryAction: onSubmit, maxWidth: `${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px`, responsive: true },\n\n  ___EmotionJSX(VizTypeGallery, { key: modalKey, selectedViz: selectedViz, onChange: setSelectedViz, onDoubleClick: onSubmit, denyList: denyList })\n  )\n  );\n};__signature__(VizTypeControl, \"useState{[showModal, setShowModal](!!isModalOpenInit)}\\nuseState{[modalKey, setModalKey](0)}\\nuseState{[selectedViz, setSelectedViz](initialValue)}\\nuseCallback{openModal}\\nuseCallback{onSubmit}\\nuseCallback{onCancel}\");const _default =\nVizTypeControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(denyList, \"denyList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(metadataRegistry, \"metadataRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VIZ_TYPE_CONTROL_TEST_ID, \"VIZ_TYPE_CONTROL_TEST_ID\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VizSupportValidation, \"VizSupportValidation\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(UnpaddedModal, \"UnpaddedModal\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(VizTypeControl, \"VizTypeControl\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useState","css","t","getChartMetadataRegistry","styled","usePluginContext","Modal","noOp","getBootstrapData","FilterPlugins","VizTypeGallery","MAX_ADVISABLE_VIZ_GALLERY_WIDTH","FastVizSwitcher","jsx","___EmotionJSX","bootstrapData","denyList","common","conf","VIZ_TYPE_DENYLIST","concat","Object","values","metadataRegistry","VIZ_TYPE_CONTROL_TEST_ID","VizSupportValidation","vizType","state","loading","has","className","theme","gridUnit","__signature__","UnpaddedModal","VizTypeControl","value","initialValue","onChange","isModalOpenInit","showModal","setShowModal","modalKey","setModalKey","selectedViz","setSelectedViz","openModal","onSubmit","onCancel","key","Fragment","currentSelection","colors","grayscale","base","role","tabIndex","onClick","show","onHide","title","primaryButtonName","disablePrimaryButton","onHandledPrimaryAction","maxWidth","responsive","onDoubleClick","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/VizTypeControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport {\n  css,\n  t,\n  getChartMetadataRegistry,\n  styled,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport Modal from 'src/components/Modal';\nimport { noOp } from 'src/utils/common';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { FilterPlugins } from 'src/constants';\nimport VizTypeGallery, {\n  MAX_ADVISABLE_VIZ_GALLERY_WIDTH,\n} from './VizTypeGallery';\nimport { FastVizSwitcher } from './FastVizSwitcher';\n\ninterface VizTypeControlProps {\n  description?: string;\n  label?: string;\n  name: string;\n  onChange: (vizType: string | null) => void;\n  value: string | null;\n  isModalOpenInit?: boolean;\n}\n\nconst bootstrapData = getBootstrapData();\nconst denyList: string[] = (\n  bootstrapData.common.conf.VIZ_TYPE_DENYLIST || []\n).concat(Object.values(FilterPlugins));\nconst metadataRegistry = getChartMetadataRegistry();\n\nexport const VIZ_TYPE_CONTROL_TEST_ID = 'viz-type-control';\n\nfunction VizSupportValidation({ vizType }: { vizType: string }) {\n  const state = usePluginContext();\n  if (state.loading || metadataRegistry.has(vizType)) {\n    return null;\n  }\n  return (\n    <div\n      className=\"text-danger\"\n      css={(theme: SupersetTheme) => css`\n        margin-top: ${theme.gridUnit}px;\n      `}\n    >\n      <i className=\"fa fa-exclamation-circle text-danger\" />{' '}\n      <small>{t('This visualization type is not supported.')}</small>\n    </div>\n  );\n}\n\nconst UnpaddedModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\n/** Manages the viz type and the viz picker modal */\nconst VizTypeControl = ({\n  value: initialValue,\n  onChange = noOp,\n  isModalOpenInit,\n}: VizTypeControlProps) => {\n  const [showModal, setShowModal] = useState(!!isModalOpenInit);\n  // a trick to force re-initialization of the gallery each time the modal opens,\n  // ensuring that the modal always opens to the correct category.\n  const [modalKey, setModalKey] = useState(0);\n  const [selectedViz, setSelectedViz] = useState<string | null>(initialValue);\n\n  const openModal = useCallback(() => {\n    setShowModal(true);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    onChange(selectedViz);\n    setShowModal(false);\n  }, [selectedViz, onChange]);\n\n  const onCancel = useCallback(() => {\n    setShowModal(false);\n    setModalKey(key => key + 1);\n    // make sure the modal re-opens to the last submitted viz\n    setSelectedViz(initialValue);\n  }, [initialValue]);\n\n  return (\n    <>\n      <div\n        css={(theme: SupersetTheme) => css`\n          min-width: ${theme.gridUnit * 72}px;\n          max-width: fit-content;\n        `}\n      >\n        <FastVizSwitcher onChange={onChange} currentSelection={initialValue} />\n        {initialValue && <VizSupportValidation vizType={initialValue} />}\n      </div>\n      <div\n        css={(theme: SupersetTheme) => css`\n          display: flex;\n          justify-content: flex-end;\n          margin-top: ${theme.gridUnit * 3}px;\n          color: ${theme.colors.grayscale.base};\n          text-decoration: underline;\n        `}\n      >\n        <span role=\"button\" tabIndex={0} onClick={openModal}>\n          {t('View all charts')}\n        </span>\n      </div>\n      <UnpaddedModal\n        show={showModal}\n        onHide={onCancel}\n        title={t('Select a visualization type')}\n        primaryButtonName={t('Select')}\n        disablePrimaryButton={!selectedViz}\n        onHandledPrimaryAction={onSubmit}\n        maxWidth={`${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px`}\n        responsive\n      >\n        {/* When the key increments, it forces react to re-init the gallery component */}\n        <VizTypeGallery\n          key={modalKey}\n          selectedViz={selectedViz}\n          onChange={setSelectedViz}\n          onDoubleClick={onSubmit}\n          denyList={denyList}\n        />\n      </UnpaddedModal>\n    </>\n  );\n};\n\nexport default VizTypeControl;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}