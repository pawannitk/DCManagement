{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, isDefined } from '@superset-ui/core';\nimport { isDataset, isQueryResponse } from '@superset-ui/chart-controls';\nexport function getTemporalColumns(datasource) {\n  const rv = {\n    temporalColumns: [],\n    defaultTemporalColumn: undefined\n  };\n  if (isDataset(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter((c) => c.is_dttm);\n  }\n  if (isQueryResponse(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter((c) => c.is_dttm);\n  }\n  if (isDataset(datasource)) {\n    rv.defaultTemporalColumn = datasource.main_dttm_col;\n  }\n  if (!isDefined(rv.defaultTemporalColumn)) {var _rv$temporalColumns$, _rv$temporalColumns$2, _rv$temporalColumns$3;\n    rv.defaultTemporalColumn = (_rv$temporalColumns$ = (_rv$temporalColumns$2 =\n    rv.temporalColumns[0]) == null ? void 0 : _rv$temporalColumns$2.column_name) != null ? _rv$temporalColumns$ : (_rv$temporalColumns$3 =\n    rv.temporalColumns[0]) == null ? void 0 : _rv$temporalColumns$3.name;\n  }\n  return rv;\n}\nexport function isTemporalColumn(columnName, datasource) {\n  const columns = getTemporalColumns(datasource).temporalColumns;\n  for (let i = 0; i < columns.length; i += 1) {\n    if (columns[i].column_name === columnName) {\n      return true;\n    }\n  }\n  return false;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTemporalColumns, \"getTemporalColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts\");reactHotLoader.register(isTemporalColumn, \"isTemporalColumn\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","isDefined","isDataset","isQueryResponse","getTemporalColumns","datasource","rv","temporalColumns","defaultTemporalColumn","undefined","columns","filter","c","is_dttm","main_dttm_col","_rv$temporalColumns$","_rv$temporalColumns$2","_rv$temporalColumns$3","column_name","name","isTemporalColumn","columnName","i","length","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/getTemporalColumns.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isDefined,\n  QueryColumn,\n  ValueOf,\n} from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ControlPanelState,\n  isDataset,\n  isQueryResponse,\n} from '@superset-ui/chart-controls';\n\nexport function getTemporalColumns(\n  datasource: ValueOf<Pick<ControlPanelState, 'datasource'>>,\n) {\n  const rv: {\n    temporalColumns: ColumnMeta[] | QueryColumn[];\n    defaultTemporalColumn: string | null | undefined;\n  } = {\n    temporalColumns: [],\n    defaultTemporalColumn: undefined,\n  };\n\n  if (isDataset(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter(\n      c => c.is_dttm,\n    );\n  }\n  if (isQueryResponse(datasource)) {\n    rv.temporalColumns = ensureIsArray(datasource.columns).filter(\n      c => c.is_dttm,\n    );\n  }\n\n  if (isDataset(datasource)) {\n    rv.defaultTemporalColumn = datasource.main_dttm_col;\n  }\n  if (!isDefined(rv.defaultTemporalColumn)) {\n    rv.defaultTemporalColumn =\n      (rv.temporalColumns[0] as ColumnMeta)?.column_name ??\n      (rv.temporalColumns[0] as QueryColumn)?.name;\n  }\n\n  return rv;\n}\n\nexport function isTemporalColumn(\n  columnName: string,\n  datasource: ValueOf<Pick<ControlPanelState, 'datasource'>>,\n): boolean {\n  const columns = getTemporalColumns(datasource).temporalColumns;\n  for (let i = 0; i < columns.length; i += 1) {\n    if (columns[i].column_name === columnName) {\n      return true;\n    }\n  }\n  return false;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aAAa,EACbC,SAAS,QAGJ,mBAAmB;AAC1B,SAGEC,SAAS,EACTC,eAAe,QACV,6BAA6B;AAEpC,OAAM,SAAUC,kBAAkBA,CAChCC,UAA0D;EAE1D,MAAMC,EAAE,GAGJ;IACFC,eAAe,EAAE,EAAE;IACnBC,qBAAqB,EAAEC;GACxB;EAED,IAAIP,SAAS,CAACG,UAAU,CAAC,EAAE;IACzBC,EAAE,CAACC,eAAe,GAAGP,aAAa,CAACK,UAAU,CAACK,OAAO,CAAC,CAACC,MAAM,CAC3D,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CACf;;EAEH,IAAIV,eAAe,CAACE,UAAU,CAAC,EAAE;IAC/BC,EAAE,CAACC,eAAe,GAAGP,aAAa,CAACK,UAAU,CAACK,OAAO,CAAC,CAACC,MAAM,CAC3D,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CACf;;EAGH,IAAIX,SAAS,CAACG,UAAU,CAAC,EAAE;IACzBC,EAAE,CAACE,qBAAqB,GAAGH,UAAU,CAACS,aAAa;;EAErD,IAAI,CAACb,SAAS,CAACK,EAAE,CAACE,qBAAqB,CAAC,EAAE,KAAAO,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA;IACxCX,EAAE,CAACE,qBAAqB,IAAAO,oBAAA,IAAAC,qBAAA;IACrBV,EAAE,CAACC,eAAe,CAAC,CAAC,CAAgB,qBAApCS,qBAAA,CAAsCE,WAAW,YAAAH,oBAAA,IAAAE,qBAAA;IACjDX,EAAE,CAACC,eAAe,CAAC,CAAC,CAAiB,qBAArCU,qBAAA,CAAuCE,IAAI;;EAGhD,OAAOb,EAAE;AACX;AAEA,OAAM,SAAUc,gBAAgBA,CAC9BC,UAAkB,EAClBhB,UAA0D;EAE1D,MAAMK,OAAO,GAAGN,kBAAkB,CAACC,UAAU,CAAC,CAACE,eAAe;EAC9D,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,OAAO,CAACa,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAC1C,IAAIZ,OAAO,CAACY,CAAC,CAAC,CAACJ,WAAW,KAAKG,UAAU,EAAE;MACzC,OAAO,IAAI;;;EAGf,OAAO,KAAK;AACd,CAAC,mBAAAG,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAjB,SAAA,MAAAe,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA7CevB,kBAAkB,sJAAAoB,cAAA,CAAAG,QAAA,CAkClBP,gBAAgB,4KAAAQ,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAnB,SAAA,CAAAmB,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}