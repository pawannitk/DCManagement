{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getLayer as deck_grid } from './Grid/Grid';\nimport { getLayer as deck_screengrid } from './Screengrid/Screengrid';\nimport { getLayer as deck_path } from './Path/Path';\nimport { getLayer as deck_hex } from './Hex/Hex';\nimport { getLayer as deck_scatter } from './Scatter/Scatter';\nimport { getLayer as deck_geojson } from './Geojson/Geojson';\nimport { getLayer as deck_arc } from './Arc/Arc';\nimport { getLayer as deck_polygon } from './Polygon/Polygon';\nimport { getLayer as deck_heatmap } from './Heatmap/Heatmap';\nimport { getLayer as deck_contour } from './Contour/Contour';\nconst layerGenerators = {\n  deck_grid,\n  deck_screengrid,\n  deck_path,\n  deck_hex,\n  deck_scatter,\n  deck_geojson,\n  deck_arc,\n  deck_polygon,\n  deck_heatmap,\n  deck_contour\n};const _default =\nlayerGenerators;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(layerGenerators, \"layerGenerators\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/index.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getLayer","deck_grid","deck_screengrid","deck_path","deck_hex","deck_scatter","deck_geojson","deck_arc","deck_polygon","deck_heatmap","deck_contour","layerGenerators","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getLayer as deck_grid } from './Grid/Grid';\nimport { getLayer as deck_screengrid } from './Screengrid/Screengrid';\nimport { getLayer as deck_path } from './Path/Path';\nimport { getLayer as deck_hex } from './Hex/Hex';\nimport { getLayer as deck_scatter } from './Scatter/Scatter';\nimport { getLayer as deck_geojson } from './Geojson/Geojson';\nimport { getLayer as deck_arc } from './Arc/Arc';\nimport { getLayer as deck_polygon } from './Polygon/Polygon';\nimport { getLayer as deck_heatmap } from './Heatmap/Heatmap';\nimport { getLayer as deck_contour } from './Contour/Contour';\n\nconst layerGenerators = {\n  deck_grid,\n  deck_screengrid,\n  deck_path,\n  deck_hex,\n  deck_scatter,\n  deck_geojson,\n  deck_arc,\n  deck_polygon,\n  deck_heatmap,\n  deck_contour,\n};\n\nexport default layerGenerators;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA;AACA,SAASA,QAAQ,IAAIC,SAAS,QAAQ,aAAa;AACnD,SAASD,QAAQ,IAAIE,eAAe,QAAQ,yBAAyB;AACrE,SAASF,QAAQ,IAAIG,SAAS,QAAQ,aAAa;AACnD,SAASH,QAAQ,IAAII,QAAQ,QAAQ,WAAW;AAChD,SAASJ,QAAQ,IAAIK,YAAY,QAAQ,mBAAmB;AAC5D,SAASL,QAAQ,IAAIM,YAAY,QAAQ,mBAAmB;AAC5D,SAASN,QAAQ,IAAIO,QAAQ,QAAQ,WAAW;AAChD,SAASP,QAAQ,IAAIQ,YAAY,QAAQ,mBAAmB;AAC5D,SAASR,QAAQ,IAAIS,YAAY,QAAQ,mBAAmB;AAC5D,SAAST,QAAQ,IAAIU,YAAY,QAAQ,mBAAmB;AAE5D,MAAMC,eAAe,GAAG;EACtBV,SAAS;EACTC,eAAe;EACfC,SAAS;EACTC,QAAQ;EACRC,YAAY;EACZC,YAAY;EACZC,QAAQ;EACRC,YAAY;EACZC,YAAY;EACZC;CACD,CAAC,MAAAE,QAAA;AAEaD,eAAe,CAA9B,eAAAC,QAAA,CAA+B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAbzBN,eAAe,sIAAAE,cAAA,CAAAI,QAAA,CAAAL,QAAA,sJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}