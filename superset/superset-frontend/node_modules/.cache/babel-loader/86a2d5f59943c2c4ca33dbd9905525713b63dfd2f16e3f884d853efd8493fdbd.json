{"ast":null,"code":"import _pick from \"lodash/pick\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\nimport { tableApiUtil } from 'src/hooks/apiResources/tables';\nimport { BYTES_PER_CHAR, KB_STORAGE, LOCALSTORAGE_MAX_QUERY_AGE_MS, LOCALSTORAGE_MAX_QUERY_RESULTS_KB } from '../constants';\nconst PERSISTENT_QUERY_EDITOR_KEYS = new Set([\n'version',\n'remoteId',\n'autorun',\n'dbId',\n'height',\n'id',\n'latestQueryId',\n'northPercent',\n'queryLimit',\n'schema',\n'selectedText',\n'southPercent',\n'sql',\n'templateParams',\n'name',\n'hideLeftBar']\n);\nfunction shouldEmptyQueryResults(query) {var _JSON$stringify;\n  const { startDttm, results } = query;\n  return Date.now() - startDttm > LOCALSTORAGE_MAX_QUERY_AGE_MS ||\n  (((_JSON$stringify = JSON.stringify(results)) == null ? void 0 : _JSON$stringify.length) || 0) * BYTES_PER_CHAR / KB_STORAGE >\n  LOCALSTORAGE_MAX_QUERY_RESULTS_KB;\n}\nexport function emptyTablePersistData(tables) {\n  return tables.\n  map((table) => _pick(table, [\n  'id',\n  'name',\n  'dbId',\n  'schema',\n  'dataPreviewQueryId',\n  'queryEditorId']\n  )).\n  filter(({ queryEditorId }) => Boolean(queryEditorId));\n}\nexport function emptyQueryResults(queries) {\n  return Object.keys(queries).reduce((accu, key) => {\n    const { results } = queries[key];\n    const query = {\n      ...queries[key],\n      results: shouldEmptyQueryResults(queries[key]) ? {} : results\n    };\n    const updatedQueries = {\n      ...accu,\n      [key]: query\n    };\n    return updatedQueries;\n  }, {});\n}\nexport function clearQueryEditors(queryEditors) {\n  return queryEditors.map((editor) =>\n  // only return selected keys\n  Object.keys(editor).\n  filter((key) => PERSISTENT_QUERY_EDITOR_KEYS.has(key)).\n  reduce((accumulator, key) => ({\n    ...accumulator,\n    [key]: editor[key]\n  }), {}));\n}\nexport function rehydratePersistedState(dispatch, state) {\n  // Rehydrate server side persisted table metadata\n  state.sqlLab.tables.forEach(({ name: table, catalog, schema, dbId, persistData }) => {\n    if (dbId && schema && table && persistData != null && persistData.columns) {\n      dispatch(tableApiUtil.upsertQueryData('tableMetadata', { dbId, catalog, schema, table }, persistData));\n      dispatch(tableApiUtil.upsertQueryData('tableExtendedMetadata', { dbId, catalog, schema, table }, {}));\n    }\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PERSISTENT_QUERY_EDITOR_KEYS, \"PERSISTENT_QUERY_EDITOR_KEYS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");reactHotLoader.register(shouldEmptyQueryResults, \"shouldEmptyQueryResults\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");reactHotLoader.register(emptyTablePersistData, \"emptyTablePersistData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");reactHotLoader.register(emptyQueryResults, \"emptyQueryResults\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");reactHotLoader.register(clearQueryEditors, \"clearQueryEditors\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");reactHotLoader.register(rehydratePersistedState, \"rehydratePersistedState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["tableApiUtil","BYTES_PER_CHAR","KB_STORAGE","LOCALSTORAGE_MAX_QUERY_AGE_MS","LOCALSTORAGE_MAX_QUERY_RESULTS_KB","PERSISTENT_QUERY_EDITOR_KEYS","Set","shouldEmptyQueryResults","query","_JSON$stringify","startDttm","results","Date","now","JSON","stringify","length","emptyTablePersistData","tables","map","table","_pick","filter","queryEditorId","Boolean","emptyQueryResults","queries","Object","keys","reduce","accu","key","updatedQueries","clearQueryEditors","queryEditors","editor","has","accumulator","rehydratePersistedState","dispatch","state","sqlLab","forEach","name","catalog","schema","dbId","persistData","columns","upsertQueryData","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/utils/reduxStateToLocalStorageHelper.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport type { QueryResponse } from '@superset-ui/core';\nimport type { QueryEditor, SqlLabRootState, Table } from 'src/SqlLab/types';\nimport type { ThunkDispatch } from 'redux-thunk';\nimport { pick } from 'lodash';\nimport { tableApiUtil } from 'src/hooks/apiResources/tables';\nimport {\n  BYTES_PER_CHAR,\n  KB_STORAGE,\n  LOCALSTORAGE_MAX_QUERY_AGE_MS,\n  LOCALSTORAGE_MAX_QUERY_RESULTS_KB,\n} from '../constants';\n\nconst PERSISTENT_QUERY_EDITOR_KEYS = new Set([\n  'version',\n  'remoteId',\n  'autorun',\n  'dbId',\n  'height',\n  'id',\n  'latestQueryId',\n  'northPercent',\n  'queryLimit',\n  'schema',\n  'selectedText',\n  'southPercent',\n  'sql',\n  'templateParams',\n  'name',\n  'hideLeftBar',\n]);\n\nfunction shouldEmptyQueryResults(query: QueryResponse) {\n  const { startDttm, results } = query;\n  return (\n    Date.now() - startDttm > LOCALSTORAGE_MAX_QUERY_AGE_MS ||\n    ((JSON.stringify(results)?.length || 0) * BYTES_PER_CHAR) / KB_STORAGE >\n      LOCALSTORAGE_MAX_QUERY_RESULTS_KB\n  );\n}\n\nexport function emptyTablePersistData(tables: Table[]) {\n  return tables\n    .map(table =>\n      pick(table, [\n        'id',\n        'name',\n        'dbId',\n        'schema',\n        'dataPreviewQueryId',\n        'queryEditorId',\n      ]),\n    )\n    .filter(({ queryEditorId }) => Boolean(queryEditorId));\n}\n\nexport function emptyQueryResults(\n  queries: SqlLabRootState['sqlLab']['queries'],\n) {\n  return Object.keys(queries).reduce((accu, key) => {\n    const { results } = queries[key];\n    const query = {\n      ...queries[key],\n      results: shouldEmptyQueryResults(queries[key]) ? {} : results,\n    };\n\n    const updatedQueries = {\n      ...accu,\n      [key]: query,\n    };\n    return updatedQueries;\n  }, {});\n}\n\nexport function clearQueryEditors(queryEditors: QueryEditor[]) {\n  return queryEditors.map(editor =>\n    // only return selected keys\n    Object.keys(editor)\n      .filter(key => PERSISTENT_QUERY_EDITOR_KEYS.has(key))\n      .reduce(\n        (accumulator, key) => ({\n          ...accumulator,\n          [key]: editor[key],\n        }),\n        {},\n      ),\n  );\n}\n\nexport function rehydratePersistedState(\n  dispatch: ThunkDispatch<SqlLabRootState, unknown, any>,\n  state: SqlLabRootState,\n) {\n  // Rehydrate server side persisted table metadata\n  state.sqlLab.tables.forEach(\n    ({ name: table, catalog, schema, dbId, persistData }) => {\n      if (dbId && schema && table && persistData?.columns) {\n        dispatch(\n          tableApiUtil.upsertQueryData(\n            'tableMetadata',\n            { dbId, catalog, schema, table },\n            persistData,\n          ),\n        );\n        dispatch(\n          tableApiUtil.upsertQueryData(\n            'tableExtendedMetadata',\n            { dbId, catalog, schema, table },\n            {},\n          ),\n        );\n      }\n    },\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}