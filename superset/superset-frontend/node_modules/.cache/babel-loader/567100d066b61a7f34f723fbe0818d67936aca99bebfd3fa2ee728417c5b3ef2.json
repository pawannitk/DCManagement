{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { styled, t, useTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledTruncatedList = styled.div`\n  & > span {\n    width: 100%;\n    display: flex;\n\n    .ant-tooltip-open {\n      display: inline;\n    }\n  }\n`;\nconst StyledVisibleItems = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: inline-block;\n  width: 100%;\n  vertical-align: bottom;\n`;\nconst StyledVisibleItem = styled.span`\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n`;\nconst StyledTooltipItem = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\nconst StyledPlus = styled.span`\n  ${({ theme }) => `\n  cursor: pointer;\n  color: ${theme.colors.primary.dark1};\n  font-weight: ${theme.typography.weights.normal};\n  `}\n`;\nexport default function TruncatedList({ items, renderVisibleItem = (item) => item, renderTooltipItem = (item) => item, getKey = (item) => item, maxLinks = 20 }) {\n  const [itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements] = useTruncation();\n  const nMoreItems = useMemo(() => items.length > maxLinks ? items.length - maxLinks : undefined, [items, maxLinks]);\n  const itemsNotInTooltip = useMemo(() => ___EmotionJSX(StyledVisibleItems, { ref: itemsNotInTooltipRef, \"data-test\": \"crosslinks\" },\n  items.map((item) => ___EmotionJSX(StyledVisibleItem, { key: getKey(item) },\n  renderVisibleItem(item)\n  ))\n  ), [getKey, items, renderVisibleItem]);\n  const itemsInTooltip = useMemo(() => items.\n  slice(0, maxLinks).\n  map((item) => ___EmotionJSX(StyledTooltipItem, { key: getKey(item) },\n  renderTooltipItem(item)\n  )), [getKey, items, maxLinks, renderTooltipItem]);\n  return ___EmotionJSX(StyledTruncatedList, null,\n  ___EmotionJSX(Tooltip, { placement: \"top\", title: elementsTruncated ? ___EmotionJSX(React.Fragment, null,\n    itemsInTooltip,\n    nMoreItems && ___EmotionJSX(\"span\", null, t('+ %s more', nMoreItems))\n    ) : null },\n  itemsNotInTooltip,\n  hasHiddenElements && ___EmotionJSX(StyledPlus, { ref: plusRef }, \"+\", elementsTruncated)\n  )\n  );\n}__signature__(TruncatedList, \"useTruncation{[itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements]}\\nuseMemo{nMoreItems}\\nuseMemo{itemsNotInTooltip}\\nuseMemo{itemsInTooltip}\", () => [useTruncation]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledTruncatedList, \"StyledTruncatedList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledVisibleItems, \"StyledVisibleItems\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledVisibleItem, \"StyledVisibleItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledTooltipItem, \"StyledTooltipItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledPlus, \"StyledPlus\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(TruncatedList, \"TruncatedList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","styled","t","useTruncation","Tooltip","jsx","___EmotionJSX","StyledTruncatedList","div","StyledVisibleItems","span","StyledVisibleItem","StyledTooltipItem","theme","colors","grayscale","light5","StyledPlus","primary","dark1","typography","weights","normal","TruncatedList","items","renderVisibleItem","item","renderTooltipItem","getKey","maxLinks","itemsNotInTooltipRef","plusRef","elementsTruncated","hasHiddenElements","nMoreItems","length","undefined","itemsNotInTooltip","ref","map","key","itemsInTooltip","slice","placement","title","Fragment","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TruncatedList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode, useMemo } from 'react';\nimport { styled, t, useTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';\n\nexport type TruncatedListProps<ListItemType> = {\n  /**\n   * Array of input items of type `ListItemType`.\n   */\n  items: ListItemType[];\n\n  /**\n   * Renderer for items not overflowed into the tooltip.\n   * Required if `ListItemType` is not renderable by React.\n   */\n  renderVisibleItem?: (item: ListItemType) => ReactNode;\n\n  /**\n   * Renderer for items that are overflowed into the tooltip.\n   * Required if `ListItemType` is not renderable by React.\n   */\n  renderTooltipItem?: (item: ListItemType) => ReactNode;\n\n  /**\n   * Returns the React key for an item.\n   */\n  getKey?: (item: ListItemType) => React.Key;\n\n  /**\n   * The max number of links that should appear in the tooltip.\n   */\n  maxLinks?: number;\n};\n\nconst StyledTruncatedList = styled.div`\n  & > span {\n    width: 100%;\n    display: flex;\n\n    .ant-tooltip-open {\n      display: inline;\n    }\n  }\n`;\n\nconst StyledVisibleItems = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: inline-block;\n  width: 100%;\n  vertical-align: bottom;\n`;\n\nconst StyledVisibleItem = styled.span`\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n`;\n\nconst StyledTooltipItem = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledPlus = styled.span`\n  ${({ theme }) => `\n  cursor: pointer;\n  color: ${theme.colors.primary.dark1};\n  font-weight: ${theme.typography.weights.normal};\n  `}\n`;\n\nexport default function TruncatedList<ListItemType>({\n  items,\n  renderVisibleItem = item => item,\n  renderTooltipItem = item => item,\n  getKey = item => item as unknown as React.Key,\n  maxLinks = 20,\n}: TruncatedListProps<ListItemType>) {\n  const [itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n\n  const nMoreItems = useMemo(\n    () => (items.length > maxLinks ? items.length - maxLinks : undefined),\n    [items, maxLinks],\n  );\n\n  const itemsNotInTooltip = useMemo(\n    () => (\n      <StyledVisibleItems ref={itemsNotInTooltipRef} data-test=\"crosslinks\">\n        {items.map(item => (\n          <StyledVisibleItem key={getKey(item)}>\n            {renderVisibleItem(item)}\n          </StyledVisibleItem>\n        ))}\n      </StyledVisibleItems>\n    ),\n    [getKey, items, renderVisibleItem],\n  );\n\n  const itemsInTooltip = useMemo(\n    () =>\n      items\n        .slice(0, maxLinks)\n        .map(item => (\n          <StyledTooltipItem key={getKey(item)}>\n            {renderTooltipItem(item)}\n          </StyledTooltipItem>\n        )),\n    [getKey, items, maxLinks, renderTooltipItem],\n  );\n\n  return (\n    <StyledTruncatedList>\n      <Tooltip\n        placement=\"top\"\n        title={\n          elementsTruncated ? (\n            <>\n              {itemsInTooltip}\n              {nMoreItems && <span>{t('+ %s more', nMoreItems)}</span>}\n            </>\n          ) : null\n        }\n      >\n        {itemsNotInTooltip}\n        {hasHiddenElements && (\n          <StyledPlus ref={plusRef}>+{elementsTruncated}</StyledPlus>\n        )}\n      </Tooltip>\n    </StyledTruncatedList>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAK,IAAeC,OAAO,QAAQ,OAAO;AACjD,SAASC,MAAM,EAAEC,CAAC,EAAEC,aAAa,QAAQ,mBAAmB;AAC5D,SAASC,OAAO,QAAQ,YAAY,CAAC,SAAAC,GAAA,IAAAC,aAAA;AA+BrC,MAAMC,mBAAmB,GAAGN,MAAM,CAACO,GAAG;;;;;;;;;CASrC;AAED,MAAMC,kBAAkB,GAAGR,MAAM,CAACS,IAAI;;;;;;;CAOrC;AAED,MAAMC,iBAAiB,GAAGV,MAAM,CAACS,IAAI;;;;CAIpC;AAED,MAAME,iBAAiB,GAAGX,MAAM,CAACO,GAAG;;aAEvB,CAAC,EAAEK,KAAK,EAAE,KAAKA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,MAAM;;;;CAIxD;AAED,MAAMC,UAAU,GAAGhB,MAAM,CAACS,IAAI;IAC1B,CAAC,EAAEG,KAAK,EAAE,KAAK;;WAERA,KAAK,CAACC,MAAM,CAACI,OAAO,CAACC,KAAK;iBACpBN,KAAK,CAACO,UAAU,CAACC,OAAO,CAACC,MAAM;GAC7C;CACF;AAED,eAAc,SAAUC,aAAaA,CAAe,EAClDC,KAAK,EACLC,iBAAiB,GAAGA,CAAAC,IAAI,KAAIA,IAAI,EAChCC,iBAAiB,GAAGA,CAAAD,IAAI,KAAIA,IAAI,EAChCE,MAAM,GAAGA,CAAAF,IAAI,KAAIA,IAA4B,EAC7CG,QAAQ,GAAG,EAAE,EACoB;EACjC,MAAM,CAACC,oBAAoB,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,iBAAiB,CAAC,GACzE9B,aAAa,EAAE;EAEjB,MAAM+B,UAAU,GAAGlC,OAAO,CACxB,MAAOwB,KAAK,CAACW,MAAM,GAAGN,QAAQ,GAAGL,KAAK,CAACW,MAAM,GAAGN,QAAQ,GAAGO,SAAU,EACrE,CAACZ,KAAK,EAAEK,QAAQ,CAAC,CAClB;EAED,MAAMQ,iBAAiB,GAAGrC,OAAO,CAC/B,MACEM,aAAA,CAACG,kBAAkB,IAAC6B,GAAG,EAAER,oBAAqB,EAAC,aAAU,YAAY;EAClEN,KAAK,CAACe,GAAG,CAAC,CAAAb,IAAI,KACbpB,aAAA,CAACK,iBAAiB,IAAC6B,GAAG,EAAEZ,MAAM,CAACF,IAAI,CAAE;EAClCD,iBAAiB,CAACC,IAAI;EACN,CACpB;EACiB,CACrB,EACD,CAACE,MAAM,EAAEJ,KAAK,EAAEC,iBAAiB,CAAC,CACnC;EAED,MAAMgB,cAAc,GAAGzC,OAAO,CAC5B,MACEwB,KAAK;EACFkB,KAAK,CAAC,CAAC,EAAEb,QAAQ,CAAC;EAClBU,GAAG,CAAC,CAAAb,IAAI,KACPpB,aAAA,CAACM,iBAAiB,IAAC4B,GAAG,EAAEZ,MAAM,CAACF,IAAI,CAAE;EAClCC,iBAAiB,CAACD,IAAI;EACN,CACpB,CAAC,EACN,CAACE,MAAM,EAAEJ,KAAK,EAAEK,QAAQ,EAAEF,iBAAiB,CAAC,CAC7C;EAED,OACErB,aAAA,CAACC,mBAAmB;EAClBD,aAAA,CAACF,OAAO,IACNuC,SAAS,EAAC,KAAK,EACfC,KAAK,EACHZ,iBAAiB,GACf1B,aAAA,CAAAP,KAAA,CAAA8C,QAAA;IACGJ,cAAc;IACdP,UAAU,IAAI5B,aAAA,eAAOJ,CAAC,CAAC,WAAW,EAAEgC,UAAU,CAAQ;IACzD,CAAG,GACD,IACL;EAEAG,iBAAiB;EACjBJ,iBAAiB,IAChB3B,aAAA,CAACW,UAAU,IAACqB,GAAG,EAAEP,OAAQ,IAAC,GAAC,EAACC,iBAA8B;EAErD;EACU,CAAC;AAE1B,CAACc,aAAA,CA5DuBvB,aAAa,2KAQjCpB,aAAa,sBAAA4C,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAb,SAAA,MAAAW,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAlDX3C,mBAAmB,0HAAAwC,cAAA,CAAAG,QAAA,CAWnBzC,kBAAkB,yHAAAsC,cAAA,CAAAG,QAAA,CASlBvC,iBAAiB,wHAAAoC,cAAA,CAAAG,QAAA,CAMjBtC,iBAAiB,wHAAAmC,cAAA,CAAAG,QAAA,CAQjBjC,UAAU,iHAAA8B,cAAA,CAAAG,QAAA,CAQQ3B,aAAa,4IAAA4B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAf,SAAA,CAAAe,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}