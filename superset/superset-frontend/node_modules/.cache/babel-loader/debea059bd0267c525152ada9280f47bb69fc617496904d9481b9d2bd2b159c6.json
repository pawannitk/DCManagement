{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ensureIsArray,\n  FeatureFlag,\n  isFeatureEnabled,\n  logging,\n  styled,\n  t } from\n'@superset-ui/core';\nimport { PLACEHOLDER_DATASOURCE } from 'src/dashboard/constants';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { isCurrentUserBot } from 'src/utils/isBot';\nimport { ChartSource } from 'src/types/ChartSource';\nimport { ResourceStatus } from 'src/hooks/apiResources/apiResources';\nimport ChartRenderer from './ChartRenderer';\nimport { ChartErrorMessage } from './ChartErrorMessage';\nimport { getChartRequiredFieldsMissingMessage } from '../../utils/getChartRequiredFieldsMissingMessage';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object,\n  // current chart is included by dashboard\n  dashboardId: PropTypes.number,\n  // original selected values for FilterBox viz\n  // so that FilterBox can pre-populate selected values\n  // only affect UI control\n  initialValues: PropTypes.object,\n  // formData contains chart's own filter parameter\n  // and merged with extra filter that current dashboard applying\n  formData: PropTypes.object.isRequired,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  setControlValue: PropTypes.func,\n  timeout: PropTypes.number,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  force: PropTypes.bool,\n  isFiltersInitialized: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartStackTrace: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  chartIsStale: PropTypes.bool,\n  errorMessage: PropTypes.node,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  onQuery: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  datasetsStatus: PropTypes.oneOf(['loading', 'error', 'complete']),\n  isInView: PropTypes.bool,\n  emitCrossFilters: PropTypes.bool\n};\n\nconst BLANK = {};\nconst NONEXISTENT_DATASET = t(\n  'The dataset associated with this chart no longer exists'\n);\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n  dashboardId: null,\n  chartStackTrace: null,\n  force: false,\n  isInView: true\n};\n\nconst Styles = styled.div`\n  min-height: ${(p) => p.height}px;\n  position: relative;\n  text-align: center;\n\n  .chart-tooltip {\n    opacity: 0.75;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n\n  .slice_container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    height: ${(p) => p.height}px;\n\n    .pivot_table tbody tr {\n      font-feature-settings: 'tnum' 1;\n    }\n\n    .alert {\n      margin: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nconst LoadingDiv = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 80%;\n  transform: translate(-50%, -50%);\n`;\n\nconst MessageSpan = styled.span`\n  display: block;\n  margin: ${({ theme }) => theme.gridUnit * 4}px auto;\n  width: fit-content;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleRenderContainerFailure =\n    this.handleRenderContainerFailure.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  runQuery() {\n    // Create chart with POST request\n    this.props.actions.postChartFormData(\n      this.props.formData,\n      Boolean(this.props.force || getUrlParam(URL_PARAMS.force)), // allow override via url params force=true\n      this.props.timeout,\n      this.props.chartId,\n      this.props.dashboardId,\n      this.props.ownState\n    );\n  }\n\n  handleRenderContainerFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n      error.toString(),\n      chartId,\n      info ? info.componentStack : null\n    );\n\n    actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      slice_id: chartId,\n      has_err: true,\n      error_details: error.toString(),\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime\n    });\n  }\n\n  renderErrorMessage(queryResponse) {var _queryResponse$errors;\n    const {\n      chartId,\n      chartAlert,\n      chartStackTrace,\n      datasource,\n      dashboardId,\n      height,\n      datasetsStatus\n    } = this.props;\n    const error = queryResponse == null ? void 0 : (_queryResponse$errors = queryResponse.errors) == null ? void 0 : _queryResponse$errors[0];\n    const message = chartAlert || (queryResponse == null ? void 0 : queryResponse.message);\n\n    // if datasource is still loading, don't render JS errors\n    if (\n    chartAlert !== undefined &&\n    chartAlert !== NONEXISTENT_DATASET &&\n    datasource === PLACEHOLDER_DATASOURCE &&\n    datasetsStatus !== ResourceStatus.Error)\n    {\n      return (\n        ___EmotionJSX(Styles, {\n          key: chartId,\n          \"data-ui-anchor\": \"chart\",\n          className: \"chart-container\",\n          \"data-test\": \"chart-container\",\n          height: height },\n\n        ___EmotionJSX(Loading, null)\n        ));\n\n    }\n\n    return (\n      ___EmotionJSX(ChartErrorMessage, {\n        key: chartId,\n        chartId: chartId,\n        error: error,\n        subtitle: ___EmotionJSX(MonospaceDiv, null, message),\n        copyText: message,\n        link: queryResponse ? queryResponse.link : null,\n        source: dashboardId ? ChartSource.Dashboard : ChartSource.Explore,\n        stackTrace: chartStackTrace }\n      ));\n\n  }\n\n  renderSpinner(databaseName) {\n    const message = databaseName ?\n    t('Waiting on %s', databaseName) :\n    t('Waiting on database...');\n\n    return (\n      ___EmotionJSX(LoadingDiv, null,\n      ___EmotionJSX(Loading, { position: \"inline-centered\" }),\n      ___EmotionJSX(MessageSpan, null, message)\n      ));\n\n  }\n\n  renderChartContainer() {\n    return (\n      ___EmotionJSX(\"div\", { className: \"slice_container\", \"data-test\": \"slice-container\" },\n      this.props.isInView ||\n      !isFeatureEnabled(FeatureFlag.DashboardVirtualization) ||\n      isCurrentUserBot() ?\n      ___EmotionJSX(ChartRenderer, _extends({},\n      this.props, {\n        source: this.props.dashboardId ? 'dashboard' : 'explore',\n        \"data-test\": this.props.vizType })\n      ) :\n\n      ___EmotionJSX(Loading, null)\n\n      ));\n\n  }\n\n  render() {var _datasource$database;\n    const {\n      height,\n      chartAlert,\n      chartStatus,\n      datasource,\n      errorMessage,\n      chartIsStale,\n      queriesResponse = [],\n      width\n    } = this.props;\n    const databaseName = datasource == null ? void 0 : (_datasource$database = datasource.database) == null ? void 0 : _datasource$database.name;\n\n    const isLoading = chartStatus === 'loading';\n    this.renderContainerStartTime = Logger.getTimestamp();\n    if (chartStatus === 'failed') {\n      return queriesResponse.map((item) => this.renderErrorMessage(item));\n    }\n\n    if (errorMessage && ensureIsArray(queriesResponse).length === 0) {\n      return (\n        ___EmotionJSX(EmptyStateBig, {\n          title: t('Add required control values to preview chart'),\n          description: getChartRequiredFieldsMissingMessage(true),\n          image: \"chart.svg\" }\n        ));\n\n    }\n\n    if (\n    !isLoading &&\n    !chartAlert &&\n    !errorMessage &&\n    chartIsStale &&\n    ensureIsArray(queriesResponse).length === 0)\n    {\n      return (\n        ___EmotionJSX(EmptyStateBig, {\n          title: t('Your chart is ready to go!'),\n          description:\n          ___EmotionJSX(\"span\", null,\n          t(\n            'Click on \"Create chart\" button in the control panel on the left to preview a visualization or'\n          ), ' ',\n          ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: this.props.onQuery },\n          t('click here')\n          ), \".\"\n\n          ),\n\n          image: \"chart.svg\" }\n        ));\n\n    }\n\n    return (\n      ___EmotionJSX(ErrorBoundary, {\n        onError: this.handleRenderContainerFailure,\n        showMessage: false },\n\n      ___EmotionJSX(Styles, {\n        \"data-ui-anchor\": \"chart\",\n        className: \"chart-container\",\n        \"data-test\": \"chart-container\",\n        height: height,\n        width: width },\n\n      isLoading ?\n      this.renderSpinner(databaseName) :\n      this.renderChartContainer()\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;const _default =\n\nChart;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(BLANK, \"BLANK\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(NONEXISTENT_DATASET, \"NONEXISTENT_DATASET\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(LoadingDiv, \"LoadingDiv\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(MessageSpan, \"MessageSpan\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(MonospaceDiv, \"MonospaceDiv\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(Chart, \"Chart\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PropTypes","React","ensureIsArray","FeatureFlag","isFeatureEnabled","logging","styled","t","PLACEHOLDER_DATASOURCE","Loading","EmptyStateBig","ErrorBoundary","Logger","LOG_ACTIONS_RENDER_CHART","URL_PARAMS","getUrlParam","isCurrentUserBot","ChartSource","ResourceStatus","ChartRenderer","ChartErrorMessage","getChartRequiredFieldsMissingMessage","jsx","___EmotionJSX","propTypes","annotationData","object","actions","chartId","number","isRequired","datasource","dashboardId","initialValues","formData","labelColors","sharedLabelColors","width","height","setControlValue","func","timeout","vizType","string","triggerRender","bool","force","isFiltersInitialized","chartAlert","chartStatus","chartStackTrace","queriesResponse","arrayOf","triggerQuery","chartIsStale","errorMessage","node","addFilter","onQuery","onFilterMenuOpen","onFilterMenuClose","ownState","postTransformProps","datasetsStatus","oneOf","isInView","emitCrossFilters","BLANK","NONEXISTENT_DATASET","defaultProps","Styles","div","p","theme","typography","sizes","s","gridUnit","LoadingDiv","MessageSpan","span","colors","grayscale","base","MonospaceDiv","families","monospace","Chart","PureComponent","constructor","props","handleRenderContainerFailure","bind","componentDidMount","runQuery","componentDidUpdate","postChartFormData","Boolean","error","info","warn","chartRenderingFailed","toString","componentStack","logEvent","slice_id","has_err","error_details","start_offset","renderStartTime","ts","Date","getTime","duration","getTimestamp","renderErrorMessage","queryResponse","_queryResponse$errors","errors","message","undefined","Error","key","className","subtitle","copyText","link","source","Dashboard","Explore","stackTrace","renderSpinner","databaseName","position","renderChartContainer","DashboardVirtualization","_extends","render","_datasource$database","database","name","isLoading","renderContainerStartTime","map","item","length","title","description","image","role","tabIndex","onClick","onError","showMessage","__reactstandin__regenerateByEval","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/Chart.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ensureIsArray,\n  FeatureFlag,\n  isFeatureEnabled,\n  logging,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { PLACEHOLDER_DATASOURCE } from 'src/dashboard/constants';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { isCurrentUserBot } from 'src/utils/isBot';\nimport { ChartSource } from 'src/types/ChartSource';\nimport { ResourceStatus } from 'src/hooks/apiResources/apiResources';\nimport ChartRenderer from './ChartRenderer';\nimport { ChartErrorMessage } from './ChartErrorMessage';\nimport { getChartRequiredFieldsMissingMessage } from '../../utils/getChartRequiredFieldsMissingMessage';\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object,\n  // current chart is included by dashboard\n  dashboardId: PropTypes.number,\n  // original selected values for FilterBox viz\n  // so that FilterBox can pre-populate selected values\n  // only affect UI control\n  initialValues: PropTypes.object,\n  // formData contains chart's own filter parameter\n  // and merged with extra filter that current dashboard applying\n  formData: PropTypes.object.isRequired,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  setControlValue: PropTypes.func,\n  timeout: PropTypes.number,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  force: PropTypes.bool,\n  isFiltersInitialized: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartStackTrace: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  chartIsStale: PropTypes.bool,\n  errorMessage: PropTypes.node,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  onQuery: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  datasetsStatus: PropTypes.oneOf(['loading', 'error', 'complete']),\n  isInView: PropTypes.bool,\n  emitCrossFilters: PropTypes.bool,\n};\n\nconst BLANK = {};\nconst NONEXISTENT_DATASET = t(\n  'The dataset associated with this chart no longer exists',\n);\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n  dashboardId: null,\n  chartStackTrace: null,\n  force: false,\n  isInView: true,\n};\n\nconst Styles = styled.div`\n  min-height: ${p => p.height}px;\n  position: relative;\n  text-align: center;\n\n  .chart-tooltip {\n    opacity: 0.75;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n\n  .slice_container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    height: ${p => p.height}px;\n\n    .pivot_table tbody tr {\n      font-feature-settings: 'tnum' 1;\n    }\n\n    .alert {\n      margin: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nconst LoadingDiv = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  width: 80%;\n  transform: translate(-50%, -50%);\n`;\n\nconst MessageSpan = styled.span`\n  display: block;\n  margin: ${({ theme }) => theme.gridUnit * 4}px auto;\n  width: fit-content;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleRenderContainerFailure =\n      this.handleRenderContainerFailure.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.triggerQuery) {\n      this.runQuery();\n    }\n  }\n\n  runQuery() {\n    // Create chart with POST request\n    this.props.actions.postChartFormData(\n      this.props.formData,\n      Boolean(this.props.force || getUrlParam(URL_PARAMS.force)), // allow override via url params force=true\n      this.props.timeout,\n      this.props.chartId,\n      this.props.dashboardId,\n      this.props.ownState,\n    );\n  }\n\n  handleRenderContainerFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n      error.toString(),\n      chartId,\n      info ? info.componentStack : null,\n    );\n\n    actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      slice_id: chartId,\n      has_err: true,\n      error_details: error.toString(),\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime,\n    });\n  }\n\n  renderErrorMessage(queryResponse) {\n    const {\n      chartId,\n      chartAlert,\n      chartStackTrace,\n      datasource,\n      dashboardId,\n      height,\n      datasetsStatus,\n    } = this.props;\n    const error = queryResponse?.errors?.[0];\n    const message = chartAlert || queryResponse?.message;\n\n    // if datasource is still loading, don't render JS errors\n    if (\n      chartAlert !== undefined &&\n      chartAlert !== NONEXISTENT_DATASET &&\n      datasource === PLACEHOLDER_DATASOURCE &&\n      datasetsStatus !== ResourceStatus.Error\n    ) {\n      return (\n        <Styles\n          key={chartId}\n          data-ui-anchor=\"chart\"\n          className=\"chart-container\"\n          data-test=\"chart-container\"\n          height={height}\n        >\n          <Loading />\n        </Styles>\n      );\n    }\n\n    return (\n      <ChartErrorMessage\n        key={chartId}\n        chartId={chartId}\n        error={error}\n        subtitle={<MonospaceDiv>{message}</MonospaceDiv>}\n        copyText={message}\n        link={queryResponse ? queryResponse.link : null}\n        source={dashboardId ? ChartSource.Dashboard : ChartSource.Explore}\n        stackTrace={chartStackTrace}\n      />\n    );\n  }\n\n  renderSpinner(databaseName) {\n    const message = databaseName\n      ? t('Waiting on %s', databaseName)\n      : t('Waiting on database...');\n\n    return (\n      <LoadingDiv>\n        <Loading position=\"inline-centered\" />\n        <MessageSpan>{message}</MessageSpan>\n      </LoadingDiv>\n    );\n  }\n\n  renderChartContainer() {\n    return (\n      <div className=\"slice_container\" data-test=\"slice-container\">\n        {this.props.isInView ||\n        !isFeatureEnabled(FeatureFlag.DashboardVirtualization) ||\n        isCurrentUserBot() ? (\n          <ChartRenderer\n            {...this.props}\n            source={this.props.dashboardId ? 'dashboard' : 'explore'}\n            data-test={this.props.vizType}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      height,\n      chartAlert,\n      chartStatus,\n      datasource,\n      errorMessage,\n      chartIsStale,\n      queriesResponse = [],\n      width,\n    } = this.props;\n    const databaseName = datasource?.database?.name;\n\n    const isLoading = chartStatus === 'loading';\n    this.renderContainerStartTime = Logger.getTimestamp();\n    if (chartStatus === 'failed') {\n      return queriesResponse.map(item => this.renderErrorMessage(item));\n    }\n\n    if (errorMessage && ensureIsArray(queriesResponse).length === 0) {\n      return (\n        <EmptyStateBig\n          title={t('Add required control values to preview chart')}\n          description={getChartRequiredFieldsMissingMessage(true)}\n          image=\"chart.svg\"\n        />\n      );\n    }\n\n    if (\n      !isLoading &&\n      !chartAlert &&\n      !errorMessage &&\n      chartIsStale &&\n      ensureIsArray(queriesResponse).length === 0\n    ) {\n      return (\n        <EmptyStateBig\n          title={t('Your chart is ready to go!')}\n          description={\n            <span>\n              {t(\n                'Click on \"Create chart\" button in the control panel on the left to preview a visualization or',\n              )}{' '}\n              <span role=\"button\" tabIndex={0} onClick={this.props.onQuery}>\n                {t('click here')}\n              </span>\n              .\n            </span>\n          }\n          image=\"chart.svg\"\n        />\n      );\n    }\n\n    return (\n      <ErrorBoundary\n        onError={this.handleRenderContainerFailure}\n        showMessage={false}\n      >\n        <Styles\n          data-ui-anchor=\"chart\"\n          className=\"chart-container\"\n          data-test=\"chart-container\"\n          height={height}\n          width={width}\n        >\n          {isLoading\n            ? this.renderSpinner(databaseName)\n            : this.renderChartContainer()}\n        </Styles>\n      </ErrorBoundary>\n    );\n  }\n}\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}