{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { columnChoices, formatSelectOptions, getStandardizedControls, sharedControls } from '@superset-ui/chart-controls';\nconst columnsConfig = {\n  ...sharedControls.columns,\n  label: t('Columns'),\n  description: t('Select the numeric columns to draw the histogram'),\n  mapStateToProps: (state, controlState) => ({\n    ...((sharedControls.columns.mapStateToProps == null ? void 0 : sharedControls.columns.mapStateToProps(state, controlState)) || {}),\n    choices: columnChoices(state.datasource)\n  }),\n  validators: [validateNonEmpty]\n};\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'all_columns_x',\n      config: columnsConfig\n    }],\n\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['groupby']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [\n    {\n      name: 'link_length',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        freeForm: true,\n        label: t('No of Bins'),\n        default: 5,\n        choices: formatSelectOptions([\n        '10',\n        '25',\n        '50',\n        '75',\n        '100',\n        '150',\n        '200',\n        '250']\n        ),\n        description: t('Select the number of bins for the histogram')\n      }\n    }],\n\n    [\n    {\n      name: 'x_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('X Axis Label'),\n        renderTrigger: true,\n        default: ''\n      }\n    }],\n\n    [\n    {\n      name: 'y_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('Y Axis Label'),\n        renderTrigger: true,\n        default: ''\n      }\n    }],\n\n    [\n    {\n      name: 'show_legend',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Legend'),\n        renderTrigger: true,\n        default: true,\n        description: t('Whether to display the legend (toggles)')\n      }\n    }],\n\n    [\n    {\n      name: 'normalized',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Normalized'),\n        renderTrigger: true,\n        description: t('Whether to normalize the histogram'),\n        default: false\n      }\n    }],\n\n    [\n    {\n      name: 'cumulative',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Cumulative'),\n        renderTrigger: true,\n        description: t('Whether to make the histogram cumulative'),\n        default: false\n      }\n    }]]\n\n\n  }],\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(columnsConfig, \"columnsConfig\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","validateNonEmpty","columnChoices","formatSelectOptions","getStandardizedControls","sharedControls","columnsConfig","columns","label","description","mapStateToProps","state","controlState","choices","datasource","validators","config","controlPanelSections","expanded","controlSetRows","name","type","renderTrigger","freeForm","default","formDataOverrides","formData","groupby","popAllColumns","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-histogram/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  columnChoices,\n  ControlPanelConfig,\n  ControlPanelState,\n  formatSelectOptions,\n  getStandardizedControls,\n  sharedControls,\n  ControlState,\n} from '@superset-ui/chart-controls';\n\nconst columnsConfig = {\n  ...sharedControls.columns,\n  label: t('Columns'),\n  description: t('Select the numeric columns to draw the histogram'),\n  mapStateToProps: (state: ControlPanelState, controlState: ControlState) => ({\n    ...(sharedControls.columns.mapStateToProps?.(state, controlState) || {}),\n    choices: columnChoices(state.datasource),\n  }),\n  validators: [validateNonEmpty],\n};\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'all_columns_x',\n            config: columnsConfig,\n          },\n        ],\n        ['adhoc_filters'],\n        ['row_limit'],\n        ['groupby'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [\n          {\n            name: 'link_length',\n            config: {\n              type: 'SelectControl',\n              renderTrigger: true,\n              freeForm: true,\n              label: t('No of Bins'),\n              default: 5,\n              choices: formatSelectOptions([\n                '10',\n                '25',\n                '50',\n                '75',\n                '100',\n                '150',\n                '200',\n                '250',\n              ]),\n              description: t('Select the number of bins for the histogram'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'x_axis_label',\n            config: {\n              type: 'TextControl',\n              label: t('X Axis Label'),\n              renderTrigger: true,\n              default: '',\n            },\n          },\n        ],\n        [\n          {\n            name: 'y_axis_label',\n            config: {\n              type: 'TextControl',\n              label: t('Y Axis Label'),\n              renderTrigger: true,\n              default: '',\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_legend',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Legend'),\n              renderTrigger: true,\n              default: true,\n              description: t('Whether to display the legend (toggles)'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'normalized',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Normalized'),\n              renderTrigger: true,\n              description: t('Whether to normalize the histogram'),\n              default: false,\n            },\n          },\n        ],\n        [\n          {\n            name: 'cumulative',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Cumulative'),\n              renderTrigger: true,\n              description: t('Whether to make the histogram cumulative'),\n              default: false,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}