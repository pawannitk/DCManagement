{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { utcFormat, timeFormat } from 'd3-time-format';\nimport { utcUtils, localTimeUtils } from '../utils/d3Time';\nimport createTimeFormatter from '../createTimeFormatter';\nexport default function createMultiTimeFormatter({\n  id,\n  label,\n  description,\n  formats = {},\n  useLocalTime = false\n}) {\n  const {\n    millisecond = '.%L',\n    second = ':%S',\n    minute = '%I:%M',\n    hour = '%I %p',\n    day = '%a %d',\n    week = '%b %d',\n    month = '%B',\n    year = '%Y'\n  } = formats;\n  const format = useLocalTime ? timeFormat : utcFormat;\n  const formatMillisecond = format(millisecond);\n  const formatSecond = format(second);\n  const formatMinute = format(minute);\n  const formatHour = format(hour);\n  const formatDay = format(day);\n  const formatFirstDayOfWeek = format(week);\n  const formatMonth = format(month);\n  const formatYear = format(year);\n  const {\n    hasMillisecond,\n    hasSecond,\n    hasMinute,\n    hasHour,\n    isNotFirstDayOfMonth,\n    isNotFirstDayOfWeek,\n    isNotFirstMonth\n  } = useLocalTime ? localTimeUtils : utcUtils;\n\n  function multiFormatFunc(date) {\n    if (hasMillisecond(date)) {\n      return formatMillisecond;\n    }\n\n    if (hasSecond(date)) {\n      return formatSecond;\n    }\n\n    if (hasMinute(date)) {\n      return formatMinute;\n    }\n\n    if (hasHour(date)) {\n      return formatHour;\n    }\n\n    if (isNotFirstDayOfMonth(date)) {\n      return isNotFirstDayOfWeek(date) ? formatDay : formatFirstDayOfWeek;\n    }\n\n    if (isNotFirstMonth(date)) {\n      return formatMonth;\n    }\n\n    return formatYear;\n  }\n\n  return createTimeFormatter((date) => multiFormatFunc(date)(date), {\n    id,\n    label,\n    description,\n    useLocalTime\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createMultiTimeFormatter, \"createMultiTimeFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/format/esm/time/factories/createMultiTimeFormatter.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["utcFormat","timeFormat","utcUtils","localTimeUtils","createTimeFormatter","createMultiTimeFormatter","id","label","description","formats","useLocalTime","millisecond","second","minute","hour","day","week","month","year","format","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatFirstDayOfWeek","formatMonth","formatYear","hasMillisecond","hasSecond","hasMinute","hasHour","isNotFirstDayOfMonth","isNotFirstDayOfWeek","isNotFirstMonth","multiFormatFunc","date","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/format/esm/time/factories/createMultiTimeFormatter.js"],"sourcesContent":["import { utcFormat, timeFormat } from 'd3-time-format';\nimport { utcUtils, localTimeUtils } from '../utils/d3Time';\nimport createTimeFormatter from '../createTimeFormatter';\nexport default function createMultiTimeFormatter({\n  id,\n  label,\n  description,\n  formats = {},\n  useLocalTime = false\n}) {\n  const {\n    millisecond = '.%L',\n    second = ':%S',\n    minute = '%I:%M',\n    hour = '%I %p',\n    day = '%a %d',\n    week = '%b %d',\n    month = '%B',\n    year = '%Y'\n  } = formats;\n  const format = useLocalTime ? timeFormat : utcFormat;\n  const formatMillisecond = format(millisecond);\n  const formatSecond = format(second);\n  const formatMinute = format(minute);\n  const formatHour = format(hour);\n  const formatDay = format(day);\n  const formatFirstDayOfWeek = format(week);\n  const formatMonth = format(month);\n  const formatYear = format(year);\n  const {\n    hasMillisecond,\n    hasSecond,\n    hasMinute,\n    hasHour,\n    isNotFirstDayOfMonth,\n    isNotFirstDayOfWeek,\n    isNotFirstMonth\n  } = useLocalTime ? localTimeUtils : utcUtils;\n\n  function multiFormatFunc(date) {\n    if (hasMillisecond(date)) {\n      return formatMillisecond;\n    }\n\n    if (hasSecond(date)) {\n      return formatSecond;\n    }\n\n    if (hasMinute(date)) {\n      return formatMinute;\n    }\n\n    if (hasHour(date)) {\n      return formatHour;\n    }\n\n    if (isNotFirstDayOfMonth(date)) {\n      return isNotFirstDayOfWeek(date) ? formatDay : formatFirstDayOfWeek;\n    }\n\n    if (isNotFirstMonth(date)) {\n      return formatMonth;\n    }\n\n    return formatYear;\n  }\n\n  return createTimeFormatter(date => multiFormatFunc(date)(date), {\n    id,\n    label,\n    description,\n    useLocalTime\n  });\n}"],"mappings":"uSAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACtD,SAASC,QAAQ,EAAEC,cAAc,QAAQ,iBAAiB;AAC1D,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,eAAe,SAASC,wBAAwBA,CAAC;EAC/CC,EAAE;EACFC,KAAK;EACLC,WAAW;EACXC,OAAO,GAAG,CAAC,CAAC;EACZC,YAAY,GAAG;AACjB,CAAC,EAAE;EACD,MAAM;IACJC,WAAW,GAAG,KAAK;IACnBC,MAAM,GAAG,KAAK;IACdC,MAAM,GAAG,OAAO;IAChBC,IAAI,GAAG,OAAO;IACdC,GAAG,GAAG,OAAO;IACbC,IAAI,GAAG,OAAO;IACdC,KAAK,GAAG,IAAI;IACZC,IAAI,GAAG;EACT,CAAC,GAAGT,OAAO;EACX,MAAMU,MAAM,GAAGT,YAAY,GAAGT,UAAU,GAAGD,SAAS;EACpD,MAAMoB,iBAAiB,GAAGD,MAAM,CAACR,WAAW,CAAC;EAC7C,MAAMU,YAAY,GAAGF,MAAM,CAACP,MAAM,CAAC;EACnC,MAAMU,YAAY,GAAGH,MAAM,CAACN,MAAM,CAAC;EACnC,MAAMU,UAAU,GAAGJ,MAAM,CAACL,IAAI,CAAC;EAC/B,MAAMU,SAAS,GAAGL,MAAM,CAACJ,GAAG,CAAC;EAC7B,MAAMU,oBAAoB,GAAGN,MAAM,CAACH,IAAI,CAAC;EACzC,MAAMU,WAAW,GAAGP,MAAM,CAACF,KAAK,CAAC;EACjC,MAAMU,UAAU,GAAGR,MAAM,CAACD,IAAI,CAAC;EAC/B,MAAM;IACJU,cAAc;IACdC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC,oBAAoB;IACpBC,mBAAmB;IACnBC;EACF,CAAC,GAAGxB,YAAY,GAAGP,cAAc,GAAGD,QAAQ;;EAE5C,SAASiC,eAAeA,CAACC,IAAI,EAAE;IAC7B,IAAIR,cAAc,CAACQ,IAAI,CAAC,EAAE;MACxB,OAAOhB,iBAAiB;IAC1B;;IAEA,IAAIS,SAAS,CAACO,IAAI,CAAC,EAAE;MACnB,OAAOf,YAAY;IACrB;;IAEA,IAAIS,SAAS,CAACM,IAAI,CAAC,EAAE;MACnB,OAAOd,YAAY;IACrB;;IAEA,IAAIS,OAAO,CAACK,IAAI,CAAC,EAAE;MACjB,OAAOb,UAAU;IACnB;;IAEA,IAAIS,oBAAoB,CAACI,IAAI,CAAC,EAAE;MAC9B,OAAOH,mBAAmB,CAACG,IAAI,CAAC,GAAGZ,SAAS,GAAGC,oBAAoB;IACrE;;IAEA,IAAIS,eAAe,CAACE,IAAI,CAAC,EAAE;MACzB,OAAOV,WAAW;IACpB;;IAEA,OAAOC,UAAU;EACnB;;EAEA,OAAOvB,mBAAmB,CAAC,CAAAgC,IAAI,KAAID,eAAe,CAACC,IAAI,CAAC,CAACA,IAAI,CAAC,EAAE;IAC9D9B,EAAE;IACFC,KAAK;IACLC,WAAW;IACXE;EACF,CAAC,CAAC;AACJ,CAAC,mBAAA2B,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAtEuBpC,wBAAwB,8LAAAqC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}