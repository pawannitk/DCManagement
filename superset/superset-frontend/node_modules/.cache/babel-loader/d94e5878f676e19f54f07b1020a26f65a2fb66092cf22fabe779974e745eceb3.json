{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const COLOR_SATURATION = [0.7, 0.4];\nexport const LABEL_FONTSIZE = 11;\nexport const BORDER_WIDTH = 2;\nexport const GAP_WIDTH = 2;\nexport const BORDER_COLOR = '#fff';\nexport const extractTreePathInfo = (treePathInfo) => {\n  const treePath = (treePathInfo != null ? treePathInfo : []).\n  map((pathInfo) => (pathInfo == null ? void 0 : pathInfo.name) || '').\n  filter((path) => path !== '');\n  // the 1st tree path is metric label\n  const metricLabel = treePath.shift() || '';\n  return { metricLabel, treePath };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(COLOR_SATURATION, \"COLOR_SATURATION\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(LABEL_FONTSIZE, \"LABEL_FONTSIZE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(BORDER_WIDTH, \"BORDER_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(GAP_WIDTH, \"GAP_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(BORDER_COLOR, \"BORDER_COLOR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");reactHotLoader.register(extractTreePathInfo, \"extractTreePathInfo\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["COLOR_SATURATION","LABEL_FONTSIZE","BORDER_WIDTH","GAP_WIDTH","BORDER_COLOR","extractTreePathInfo","treePathInfo","treePath","map","pathInfo","name","filter","path","metricLabel","shift","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/constants.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TreePathInfo } from '../types';\n\nexport const COLOR_SATURATION = [0.7, 0.4];\nexport const LABEL_FONTSIZE = 11;\nexport const BORDER_WIDTH = 2;\nexport const GAP_WIDTH = 2;\nexport const BORDER_COLOR = '#fff';\n\nexport const extractTreePathInfo = (\n  treePathInfo: TreePathInfo[] | undefined,\n) => {\n  const treePath = (treePathInfo ?? [])\n    .map(pathInfo => pathInfo?.name || '')\n    .filter(path => path !== '');\n\n  // the 1st tree path is metric label\n  const metricLabel = treePath.shift() || '';\n  return { metricLabel, treePath };\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,OAAO,MAAMA,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAC1C,OAAO,MAAMC,cAAc,GAAG,EAAE;AAChC,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC7B,OAAO,MAAMC,SAAS,GAAG,CAAC;AAC1B,OAAO,MAAMC,YAAY,GAAG,MAAM;AAElC,OAAO,MAAMC,mBAAmB,GAAGA,CACjCC,YAAwC,KACtC;EACF,MAAMC,QAAQ,GAAG,CAACD,YAAY,WAAZA,YAAY,GAAI,EAAE;EACjCE,GAAG,CAAC,CAAAC,QAAQ,KAAI,CAAAA,QAAQ,oBAARA,QAAQ,CAAEC,IAAI,KAAI,EAAE,CAAC;EACrCC,MAAM,CAAC,CAAAC,IAAI,KAAIA,IAAI,KAAK,EAAE,CAAC;EAE9B;EACA,MAAMC,WAAW,GAAGN,QAAQ,CAACO,KAAK,EAAE,IAAI,EAAE;EAC1C,OAAO,EAAED,WAAW,EAAEN,QAAQ,EAAE;AAClC,CAAC,CAAC,mBAAAQ,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAhBWnB,gBAAgB,sIAAAe,cAAA,CAAAI,QAAA,CAChBlB,cAAc,oIAAAc,cAAA,CAAAI,QAAA,CACdjB,YAAY,kIAAAa,cAAA,CAAAI,QAAA,CACZhB,SAAS,+HAAAY,cAAA,CAAAI,QAAA,CACTf,YAAY,kIAAAW,cAAA,CAAAI,QAAA,CAEZd,mBAAmB,iKAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}