{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport tinycolor from 'tinycolor2';\nconst rgbRegex = /^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/;\nexport function getContrastingColor(color, thresholds = 186) {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  if (color.length > 7) {\n    // rgb\n    const matchColor = rgbRegex.exec(color);\n    if (!matchColor) {\n      throw new Error(`Invalid color: ${color}`);\n    }\n    r = parseInt(matchColor[1], 10);\n    g = parseInt(matchColor[2], 10);\n    b = parseInt(matchColor[3], 10);\n  } else\n  {\n    // hex\n    let hex = color;\n    if (hex.startsWith('#')) {\n      hex = hex.substring(1);\n    }\n    // #FFF\n    if (hex.length === 3) {\n      hex = [hex[0], hex[0], hex[1], hex[1], hex[2], hex[2]].join('');\n    }\n    if (hex.length !== 6) {\n      throw new Error(`Invalid color: ${color}`);\n    }\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n  }\n  return r * 0.299 + g * 0.587 + b * 0.114 > thresholds ? '#000' : '#FFF';\n}\nexport function getAnalogousColors(colors, results) {\n  const generatedColors = [];\n  // This is to solve the problem that the first three values generated by tinycolor.analogous\n  // may have the same or very close colors.\n  const ext = 3;\n  const analogousColors = colors.map((color) => {\n    const result = tinycolor(color).analogous(results + ext);\n    return result.slice(ext);\n  });\n  // [[A, AA, AAA], [B, BB, BBB]] => [A, B, AA, BB, AAA, BBB]\n  while ((_analogousColors = analogousColors[analogousColors.length - 1]) != null && _analogousColors.length) {var _analogousColors;\n    analogousColors.forEach((colors) => {\n      const color = colors.shift();\n      generatedColors.push(color.toHexString());\n    });\n  }\n  return generatedColors;\n}\nexport function addAlpha(color, opacity) {\n  // opacity value should be between 0 and 1.\n  if (opacity > 1 || opacity < 0) {\n    throw new Error(`The opacity should between 0 and 1, but got: ${opacity}`);\n  }\n  // the alpha value is between 00 - FF\n  const alpha = `0${Math.round(opacity * 255).\n  toString(16).\n  toUpperCase()}`.slice(-2);\n  return `${color}${alpha}`;\n}\nexport function hexToRgb(h) {\n  let r = '0';\n  let g = '0';\n  let b = '0';\n  // 3 digits\n  if (h.length === 4) {\n    r = `0x${h[1]}${h[1]}`;\n    g = `0x${h[2]}${h[2]}`;\n    b = `0x${h[3]}${h[3]}`;\n    // 6 digits\n  } else\n  if (h.length === 7) {\n    r = `0x${h[1]}${h[2]}`;\n    g = `0x${h[3]}${h[4]}`;\n    b = `0x${h[5]}${h[6]}`;\n  }\n  return `rgb(${+r}, ${+g}, ${+b})`;\n}\nexport function rgbToHex(red, green, blue) {\n  let r = red.toString(16);\n  let g = green.toString(16);\n  let b = blue.toString(16);\n  if (r.length === 1)\n  r = `0${r}`;\n  if (g.length === 1)\n  g = `0${g}`;\n  if (b.length === 1)\n  b = `0${b}`;\n  return `#${r}${g}${b}`;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(rgbRegex, \"rgbRegex\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");reactHotLoader.register(getContrastingColor, \"getContrastingColor\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");reactHotLoader.register(getAnalogousColors, \"getAnalogousColors\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");reactHotLoader.register(addAlpha, \"addAlpha\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");reactHotLoader.register(hexToRgb, \"hexToRgb\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");reactHotLoader.register(rgbToHex, \"rgbToHex\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["tinycolor","rgbRegex","getContrastingColor","color","thresholds","r","g","b","length","matchColor","exec","Error","parseInt","hex","startsWith","substring","join","slice","getAnalogousColors","colors","results","generatedColors","ext","analogousColors","map","result","analogous","_analogousColors","forEach","shift","push","toHexString","addAlpha","opacity","alpha","Math","round","toString","toUpperCase","hexToRgb","h","rgbToHex","red","green","blue","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/utils.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport tinycolor from 'tinycolor2';\n\nconst rgbRegex = /^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/;\nexport function getContrastingColor(color: string, thresholds = 186) {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  if (color.length > 7) {\n    // rgb\n    const matchColor = rgbRegex.exec(color);\n    if (!matchColor) {\n      throw new Error(`Invalid color: ${color}`);\n    }\n    r = parseInt(matchColor[1], 10);\n    g = parseInt(matchColor[2], 10);\n    b = parseInt(matchColor[3], 10);\n  } else {\n    // hex\n    let hex = color;\n    if (hex.startsWith('#')) {\n      hex = hex.substring(1);\n    }\n    // #FFF\n    if (hex.length === 3) {\n      hex = [hex[0], hex[0], hex[1], hex[1], hex[2], hex[2]].join('');\n    }\n    if (hex.length !== 6) {\n      throw new Error(`Invalid color: ${color}`);\n    }\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > thresholds ? '#000' : '#FFF';\n}\n\nexport function getAnalogousColors(colors: string[], results: number) {\n  const generatedColors: string[] = [];\n  // This is to solve the problem that the first three values generated by tinycolor.analogous\n  // may have the same or very close colors.\n  const ext = 3;\n  const analogousColors = colors.map(color => {\n    const result = tinycolor(color).analogous(results + ext);\n    return result.slice(ext);\n  });\n\n  // [[A, AA, AAA], [B, BB, BBB]] => [A, B, AA, BB, AAA, BBB]\n  while (analogousColors[analogousColors.length - 1]?.length) {\n    analogousColors.forEach(colors => {\n      const color = colors.shift() as tinycolor.Instance;\n      generatedColors.push(color.toHexString());\n    });\n  }\n\n  return generatedColors;\n}\n\nexport function addAlpha(color: string, opacity: number): string {\n  // opacity value should be between 0 and 1.\n  if (opacity > 1 || opacity < 0) {\n    throw new Error(`The opacity should between 0 and 1, but got: ${opacity}`);\n  }\n  // the alpha value is between 00 - FF\n  const alpha = `0${Math.round(opacity * 255)\n    .toString(16)\n    .toUpperCase()}`.slice(-2);\n\n  return `${color}${alpha}`;\n}\n\nexport function hexToRgb(h: string) {\n  let r = '0';\n  let g = '0';\n  let b = '0';\n\n  // 3 digits\n  if (h.length === 4) {\n    r = `0x${h[1]}${h[1]}`;\n    g = `0x${h[2]}${h[2]}`;\n    b = `0x${h[3]}${h[3]}`;\n\n    // 6 digits\n  } else if (h.length === 7) {\n    r = `0x${h[1]}${h[2]}`;\n    g = `0x${h[3]}${h[4]}`;\n    b = `0x${h[5]}${h[6]}`;\n  }\n\n  return `rgb(${+r}, ${+g}, ${+b})`;\n}\n\nexport function rgbToHex(red: number, green: number, blue: number) {\n  let r = red.toString(16);\n  let g = green.toString(16);\n  let b = blue.toString(16);\n\n  if (r.length === 1) r = `0${r}`;\n  if (g.length === 1) g = `0${g}`;\n  if (b.length === 1) b = `0${b}`;\n\n  return `#${r}${g}${b}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}