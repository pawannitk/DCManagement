{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export function isSavedMetric(metric) {\n  return typeof metric === 'string';\n}\nexport function isAdhocMetricSimple(metric) {\n  return typeof metric !== 'string' && (metric == null ? void 0 : metric.expressionType) === 'SIMPLE';\n}\nexport function isAdhocMetricSQL(metric) {\n  return typeof metric !== 'string' && (metric == null ? void 0 : metric.expressionType) === 'SQL';\n}\nexport function isQueryFormMetric(metric) {\n  return isSavedMetric(metric) ||\n  isAdhocMetricSimple(metric) ||\n  isAdhocMetricSQL(metric);\n}const _default =\n{};export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isSavedMetric, \"isSavedMetric\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts\");reactHotLoader.register(isAdhocMetricSimple, \"isAdhocMetricSimple\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts\");reactHotLoader.register(isAdhocMetricSQL, \"isAdhocMetricSQL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts\");reactHotLoader.register(isQueryFormMetric, \"isQueryFormMetric\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isSavedMetric","metric","isAdhocMetricSimple","expressionType","isAdhocMetricSQL","isQueryFormMetric","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Metric.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Maybe, QueryFormMetric } from '../../types';\nimport { Column } from './Column';\n\nexport type Aggregate =\n  | 'AVG'\n  | 'COUNT'\n  | 'COUNT_DISTINCT'\n  | 'MAX'\n  | 'MIN'\n  | 'SUM';\n\nexport interface AdhocMetricBase {\n  hasCustomLabel?: boolean;\n  label?: string;\n  optionName?: string;\n}\n\nexport interface AdhocMetricSimple extends AdhocMetricBase {\n  expressionType: 'SIMPLE';\n  column: Omit<Column, 'column_name'> & {\n    column_name?: string;\n    columnName?: string;\n  };\n  aggregate: Aggregate;\n}\n\nexport interface AdhocMetricSQL extends AdhocMetricBase {\n  expressionType: 'SQL';\n  sqlExpression: string;\n}\n\nexport type AdhocMetric = AdhocMetricSimple | AdhocMetricSQL;\n\n/**\n * Select a predefined metric by its `metric_name`.\n */\nexport type SavedMetric = string;\n\n/**\n * Metric definition stored in datasource metadata.\n */\nexport interface Metric {\n  id?: number;\n  metric_name: string;\n  expression?: Maybe<string>;\n  certification_details?: Maybe<string>;\n  certified_by?: Maybe<string>;\n  d3format?: Maybe<string>;\n  currency?: Maybe<string>;\n  description?: Maybe<string>;\n  is_certified?: boolean;\n  verbose_name?: string;\n  warning_markdown?: Maybe<string>;\n  warning_text?: Maybe<string>;\n}\n\nexport function isSavedMetric(metric: any): metric is SavedMetric {\n  return typeof metric === 'string';\n}\n\nexport function isAdhocMetricSimple(metric: any): metric is AdhocMetricSimple {\n  return typeof metric !== 'string' && metric?.expressionType === 'SIMPLE';\n}\n\nexport function isAdhocMetricSQL(metric: any): metric is AdhocMetricSQL {\n  return typeof metric !== 'string' && metric?.expressionType === 'SQL';\n}\n\nexport function isQueryFormMetric(metric: any): metric is QueryFormMetric {\n  return (\n    isSavedMetric(metric) ||\n    isAdhocMetricSimple(metric) ||\n    isAdhocMetricSQL(metric)\n  );\n}\n\nexport default {};\n"],"mappings":"uSA2EA,OAAM,SAAUA,aAAaA,CAACC,MAAW;EACvC,OAAO,OAAOA,MAAM,KAAK,QAAQ;AACnC;AAEA,OAAM,SAAUC,mBAAmBA,CAACD,MAAW;EAC7C,OAAO,OAAOA,MAAM,KAAK,QAAQ,IAAI,CAAAA,MAAM,oBAANA,MAAM,CAAEE,cAAc,MAAK,QAAQ;AAC1E;AAEA,OAAM,SAAUC,gBAAgBA,CAACH,MAAW;EAC1C,OAAO,OAAOA,MAAM,KAAK,QAAQ,IAAI,CAAAA,MAAM,oBAANA,MAAM,CAAEE,cAAc,MAAK,KAAK;AACvE;AAEA,OAAM,SAAUE,iBAAiBA,CAACJ,MAAW;EAC3C,OACED,aAAa,CAACC,MAAM,CAAC;EACrBC,mBAAmB,CAACD,MAAM,CAAC;EAC3BG,gBAAgB,CAACH,MAAM,CAAC;AAE5B,CAAC,MAAAK,QAAA;AAEc,EAAE,CAAjB,eAAAA,QAAA,CAAkB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CApBFX,aAAa,iIAAAO,cAAA,CAAAI,QAAA,CAIbT,mBAAmB,uIAAAK,cAAA,CAAAI,QAAA,CAInBP,gBAAgB,oIAAAG,cAAA,CAAAI,QAAA,CAIhBN,iBAAiB,qIAAAE,cAAA,CAAAI,QAAA,CAAAL,QAAA,mJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}