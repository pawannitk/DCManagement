{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { t, isFeatureEnabled, FeatureFlag } from '@superset-ui/core';\nimport { AntdSwitch } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\n\nimport { infoTooltip, toggleStyle } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst SSHTunnelSwitch = ({ clearValidationErrors, changeMethods, db, dbModel }) => {var _dbModel$engine_infor, _db$parameters2, _db$parameters4;\n  const [isChecked, setChecked] = useState(false);\n  const sshTunnelEnabled = isFeatureEnabled(FeatureFlag.SshTunneling);\n  const disableSSHTunnelingForEngine = (dbModel == null ? void 0 : (_dbModel$engine_infor = dbModel.engine_information) == null ? void 0 : _dbModel$engine_infor.disable_ssh_tunneling) || false;\n  const isSSHTunnelEnabled = sshTunnelEnabled && !disableSSHTunnelingForEngine;\n  const handleOnChange = (changed) => {\n    setChecked(changed);\n    changeMethods.onParametersChange({\n      target: {\n        type: 'toggle',\n        name: 'ssh',\n        checked: true,\n        value: changed\n      }\n    });\n    clearValidationErrors();\n  };\n  useEffect(() => {var _db$parameters;\n    if (isSSHTunnelEnabled && (db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters.ssh) !== undefined) {\n      setChecked(db.parameters.ssh);\n    }\n  }, [db == null ? void 0 : (_db$parameters2 = db.parameters) == null ? void 0 : _db$parameters2.ssh, isSSHTunnelEnabled]);\n  useEffect(() => {var _db$parameters3;\n    if (isSSHTunnelEnabled &&\n    (db == null ? void 0 : (_db$parameters3 = db.parameters) == null ? void 0 : _db$parameters3.ssh) === undefined &&\n    !_isEmpty(db == null ? void 0 : db.ssh_tunnel)) {\n      // reflecting the state of the ssh tunnel on first load\n      changeMethods.onParametersChange({\n        target: {\n          type: 'toggle',\n          name: 'ssh',\n          checked: true,\n          value: true\n        }\n      });\n    }\n  }, [changeMethods, db == null ? void 0 : (_db$parameters4 = db.parameters) == null ? void 0 : _db$parameters4.ssh, db == null ? void 0 : db.ssh_tunnel, isSSHTunnelEnabled]);\n  return isSSHTunnelEnabled ? ___EmotionJSX(\"div\", { css: (theme) => infoTooltip(theme) },\n  ___EmotionJSX(AntdSwitch, { checked: isChecked, onChange: handleOnChange, \"data-test\": \"ssh-tunnel-switch\" }),\n  ___EmotionJSX(\"span\", { css: toggleStyle }, t('SSH Tunnel')),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('SSH Tunnel configuration parameters'), placement: \"right\", viewBox: \"0 -5 24 24\" })\n  ) : null;\n};__signature__(SSHTunnelSwitch, \"useState{[isChecked, setChecked](false)}\\nuseEffect{}\\nuseEffect{}\");const _default =\nSSHTunnelSwitch;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SSHTunnelSwitch, \"SSHTunnelSwitch\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/SSHTunnelSwitch.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/SSHTunnelSwitch.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useState","t","isFeatureEnabled","FeatureFlag","AntdSwitch","InfoTooltip","infoTooltip","toggleStyle","jsx","___EmotionJSX","SSHTunnelSwitch","clearValidationErrors","changeMethods","db","dbModel","_dbModel$engine_infor","_db$parameters2","_db$parameters4","isChecked","setChecked","sshTunnelEnabled","SshTunneling","disableSSHTunnelingForEngine","engine_information","disable_ssh_tunneling","isSSHTunnelEnabled","handleOnChange","changed","onParametersChange","target","type","name","checked","value","_db$parameters","parameters","ssh","undefined","_db$parameters3","_isEmpty","ssh_tunnel","css","theme","onChange","tooltip","placement","viewBox","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/SSHTunnelSwitch.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport {\n  t,\n  SupersetTheme,\n  isFeatureEnabled,\n  FeatureFlag,\n} from '@superset-ui/core';\nimport { AntdSwitch } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport { isEmpty } from 'lodash';\nimport { infoTooltip, toggleStyle } from './styles';\nimport { SwitchProps } from '../types';\n\nconst SSHTunnelSwitch = ({\n  clearValidationErrors,\n  changeMethods,\n  db,\n  dbModel,\n}: SwitchProps) => {\n  const [isChecked, setChecked] = useState(false);\n  const sshTunnelEnabled = isFeatureEnabled(FeatureFlag.SshTunneling);\n  const disableSSHTunnelingForEngine =\n    dbModel?.engine_information?.disable_ssh_tunneling || false;\n  const isSSHTunnelEnabled = sshTunnelEnabled && !disableSSHTunnelingForEngine;\n\n  const handleOnChange = (changed: boolean) => {\n    setChecked(changed);\n    changeMethods.onParametersChange({\n      target: {\n        type: 'toggle',\n        name: 'ssh',\n        checked: true,\n        value: changed,\n      },\n    });\n    clearValidationErrors();\n  };\n\n  useEffect(() => {\n    if (isSSHTunnelEnabled && db?.parameters?.ssh !== undefined) {\n      setChecked(db.parameters.ssh);\n    }\n  }, [db?.parameters?.ssh, isSSHTunnelEnabled]);\n\n  useEffect(() => {\n    if (\n      isSSHTunnelEnabled &&\n      db?.parameters?.ssh === undefined &&\n      !isEmpty(db?.ssh_tunnel)\n    ) {\n      // reflecting the state of the ssh tunnel on first load\n      changeMethods.onParametersChange({\n        target: {\n          type: 'toggle',\n          name: 'ssh',\n          checked: true,\n          value: true,\n        },\n      });\n    }\n  }, [changeMethods, db?.parameters?.ssh, db?.ssh_tunnel, isSSHTunnelEnabled]);\n\n  return isSSHTunnelEnabled ? (\n    <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n      <AntdSwitch\n        checked={isChecked}\n        onChange={handleOnChange}\n        data-test=\"ssh-tunnel-switch\"\n      />\n      <span css={toggleStyle}>{t('SSH Tunnel')}</span>\n      <InfoTooltip\n        tooltip={t('SSH Tunnel configuration parameters')}\n        placement=\"right\"\n        viewBox=\"0 -5 24 24\"\n      />\n    </div>\n  ) : null;\n};\n\nexport default SSHTunnelSwitch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}