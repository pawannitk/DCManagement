{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (form, filterId) => {var _form$getFieldValue, _formFilter$dataset;\n  const forceUpdate = useForceUpdate();\n  const formFilter = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null\n    });\n    forceUpdate();\n  }, [\n  form,\n  formFilter == null ? void 0 : formFilter.filterType,\n  formFilter == null ? void 0 : formFilter.column,\n  formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value,\n  JSON.stringify(formFilter == null ? void 0 : formFilter.adhoc_filters),\n  formFilter == null ? void 0 : formFilter.time_range,\n  forceUpdate,\n  filterId]\n  );\n};__signature__(useBackendFormUpdate, \"useForceUpdate{forceUpdate}\\nuseEffect{}\", () => [useForceUpdate]);\nexport const useDefaultValue = (formFilter, filterToEdit) => {var _formFilter$controlVa, _formFilter$controlVa2;\n  const enableEmptyFilter = !!(formFilter != null && (_formFilter$controlVa = formFilter.controlValues) != null && _formFilter$controlVa.enableEmptyFilter);\n  const defaultToFirstItem = !!(formFilter != null && (_formFilter$controlVa2 = formFilter.controlValues) != null && _formFilter$controlVa2.defaultToFirstItem);\n  const [hasDefaultValue, setHasPartialDefaultValue] = useState(false);\n  const [isRequired, setIsRequired] = useState(enableEmptyFilter);\n  const [defaultValueTooltip, setDefaultValueTooltip] = useState('');\n  const setHasDefaultValue = (value = false) => {\n    const required = enableEmptyFilter && !defaultToFirstItem;\n    setIsRequired(required);\n    setHasPartialDefaultValue(required ? true : value);\n  };\n  useEffect(() => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n    setHasDefaultValue(defaultToFirstItem ?\n    false :\n    !!(formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value));\n    // TODO: this logic should be unhardcoded\n  }, [defaultToFirstItem, enableEmptyFilter]);\n  useEffect(() => {var _filterToEdit$default, _filterToEdit$default2;\n    setHasDefaultValue(defaultToFirstItem ?\n    false :\n    !!(filterToEdit != null && (_filterToEdit$default = filterToEdit.defaultDataMask) != null && (_filterToEdit$default2 = _filterToEdit$default.filterState) != null && _filterToEdit$default2.value));\n  }, []);\n  useEffect(() => {\n    let tooltip = '';\n    if (defaultToFirstItem) {\n      tooltip = t('Default value set automatically when \"Select first filter value by default\" is checked');\n    } else\n    if (isRequired) {\n      tooltip = t('Default value must be set when \"Filter value is required\" is checked');\n    } else\n    if (hasDefaultValue) {\n      tooltip = t('Default value must be set when \"Filter has default value\" is checked');\n    }\n    setDefaultValueTooltip(tooltip);\n  }, [hasDefaultValue, isRequired, defaultToFirstItem]);\n  return [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue];\n};__signature__(useDefaultValue, \"useState{[hasDefaultValue, setHasPartialDefaultValue](false)}\\nuseState{[isRequired, setIsRequired](enableEmptyFilter)}\\nuseState{[defaultValueTooltip, setDefaultValueTooltip]('')}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useBackendFormUpdate, \"useBackendFormUpdate\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts\");reactHotLoader.register(useDefaultValue, \"useDefaultValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","t","setNativeFilterFieldValues","useForceUpdate","useBackendFormUpdate","form","filterId","_form$getFieldValue","_formFilter$dataset","forceUpdate","formFilter","getFieldValue","isDataDirty","defaultValueQueriesData","filterType","column","dataset","value","JSON","stringify","adhoc_filters","time_range","__signature__","useDefaultValue","filterToEdit","_formFilter$controlVa","_formFilter$controlVa2","enableEmptyFilter","controlValues","defaultToFirstItem","hasDefaultValue","setHasPartialDefaultValue","isRequired","setIsRequired","defaultValueTooltip","setDefaultValueTooltip","setHasDefaultValue","required","_formFilter$defaultDa","_formFilter$defaultDa2","defaultDataMask","filterState","_filterToEdit$default","_filterToEdit$default2","tooltip","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/state.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { FormInstance } from 'src/components';\nimport { Filter, t } from '@superset-ui/core';\nimport { NativeFiltersForm, NativeFiltersFormItem } from '../types';\nimport { setNativeFilterFieldValues, useForceUpdate } from './utils';\n\n// When some fields in form changed we need re-fetch data for Filter defaultValue\n// eslint-disable-next-line import/prefer-default-export\nexport const useBackendFormUpdate = (\n  form: FormInstance<NativeFiltersForm>,\n  filterId: string,\n) => {\n  const forceUpdate = useForceUpdate();\n  const formFilter = form.getFieldValue('filters')?.[filterId];\n  useEffect(() => {\n    setNativeFilterFieldValues(form, filterId, {\n      isDataDirty: true,\n      defaultValueQueriesData: null,\n    });\n    forceUpdate();\n  }, [\n    form,\n    formFilter?.filterType,\n    formFilter?.column,\n    formFilter?.dataset?.value,\n    JSON.stringify(formFilter?.adhoc_filters),\n    formFilter?.time_range,\n    forceUpdate,\n    filterId,\n  ]);\n};\n\nexport const useDefaultValue = (\n  formFilter?: NativeFiltersFormItem,\n  filterToEdit?: Filter,\n): [boolean, boolean, string, Function] => {\n  const enableEmptyFilter = !!formFilter?.controlValues?.enableEmptyFilter;\n  const defaultToFirstItem = !!formFilter?.controlValues?.defaultToFirstItem;\n\n  const [hasDefaultValue, setHasPartialDefaultValue] = useState(false);\n  const [isRequired, setIsRequired] = useState(enableEmptyFilter);\n  const [defaultValueTooltip, setDefaultValueTooltip] = useState('');\n\n  const setHasDefaultValue = (value = false) => {\n    const required = enableEmptyFilter && !defaultToFirstItem;\n    setIsRequired(required);\n    setHasPartialDefaultValue(required ? true : value);\n  };\n\n  useEffect(() => {\n    setHasDefaultValue(\n      defaultToFirstItem\n        ? false\n        : !!formFilter?.defaultDataMask?.filterState?.value,\n    );\n    // TODO: this logic should be unhardcoded\n  }, [defaultToFirstItem, enableEmptyFilter]);\n\n  useEffect(() => {\n    setHasDefaultValue(\n      defaultToFirstItem\n        ? false\n        : !!filterToEdit?.defaultDataMask?.filterState?.value,\n    );\n  }, []);\n\n  useEffect(() => {\n    let tooltip = '';\n    if (defaultToFirstItem) {\n      tooltip = t(\n        'Default value set automatically when \"Select first filter value by default\" is checked',\n      );\n    } else if (isRequired) {\n      tooltip = t(\n        'Default value must be set when \"Filter value is required\" is checked',\n      );\n    } else if (hasDefaultValue) {\n      tooltip = t(\n        'Default value must be set when \"Filter has default value\" is checked',\n      );\n    }\n    setDefaultValueTooltip(tooltip);\n  }, [hasDefaultValue, isRequired, defaultToFirstItem]);\n\n  return [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}