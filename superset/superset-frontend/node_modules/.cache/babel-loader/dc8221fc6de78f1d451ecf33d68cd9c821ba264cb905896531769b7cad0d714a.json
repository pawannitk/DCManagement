{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme } from\n'@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys } from\n'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => showSplite ? 'block' : 'none'};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1wbll7q\", styles: \"text-decoration:underline\" } : { name: \"1iriwhq-panelBody\", styles: \"text-decoration:underline;label:panelBody;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert\n}) => {var _metaDataRegistry$get;\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault) ?\n    INITIAL_SIZES :\n    getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES)\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault) ?\n    false :\n    getItem(LocalStorageKeys.IsDatapanelOpen, false)\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = (_metaDataRegistry$get = metaDataRegistry.get(vizType)) != null ? _metaDataRegistry$get : {};\n  const vizTypeNeedsDataset =\n  useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n  !chartAlert &&\n  chartIsStale &&\n  !vizTypeNeedsDataset &&\n  chart.chartStatus !== 'failed' &&\n  ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true\n          })\n        });\n      }\n    },\n    [slice]\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.ChartSplitSizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback((sizes) => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback((isOpen) => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n      100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      DEFAULT_SOUTH_PANE_HEIGHT_PERCENT];\n\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () =>\n    ___EmotionJSX(\"div\", {\n      css: css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `,\n      ref: chartPanelRef },\n\n    chartPanelWidth && chartPanelHeight &&\n    ___EmotionJSX(ChartContainer, {\n      width: Math.floor(chartPanelWidth),\n      height: chartPanelHeight,\n      ownState: ownState,\n      annotationData: chart.annotationData,\n      chartAlert: chart.chartAlert,\n      chartStackTrace: chart.chartStackTrace,\n      chartId: chart.id,\n      chartStatus: chart.chartStatus,\n      triggerRender: triggerRender,\n      force: force,\n      datasource: datasource,\n      errorMessage: errorMessage,\n      formData: formData,\n      latestQueryFormData: chart.latestQueryFormData,\n      onQuery: onQuery,\n      queriesResponse: chart.queriesResponse,\n      chartIsStale: chartIsStale,\n      setControlValue: actions.setControlValue,\n      timeout: timeout,\n      triggerQuery: chart.triggerQuery,\n      vizType: vizType }\n    )\n\n    ),\n\n    [\n    actions.setControlValue,\n    chart.annotationData,\n    chart.chartAlert,\n    chart.chartStackTrace,\n    chart.chartStatus,\n    chart.id,\n    chart.latestQueryFormData,\n    chart.queriesResponse,\n    chart.triggerQuery,\n    chartIsStale,\n    chartPanelHeight,\n    chartPanelRef,\n    chartPanelWidth,\n    datasource,\n    errorMessage,\n    force,\n    formData,\n    onQuery,\n    ownState,\n    timeout,\n    triggerRender,\n    vizType]\n\n  );\n\n  const panelBody = useMemo(\n    () =>\n    ___EmotionJSX(\"div\", {\n      className: \"panel-body\",\n      css: css`\n          display: flex;\n          flex-direction: column;\n        `,\n      ref: resizeObserverRef },\n\n    vizTypeNeedsDataset &&\n    ___EmotionJSX(Alert, {\n      message: t('Chart type requires a dataset'),\n      type: \"error\",\n      css: (theme) => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `,\n      description:\n      ___EmotionJSX(React.Fragment, null,\n      t(\n        'This chart type is not supported when using an unsaved query as a chart source. '\n      ),\n      ___EmotionJSX(\"span\", {\n        role: \"button\",\n        tabIndex: 0,\n        onClick: () => setShowDatasetModal(true),\n        css: _ref },\n\n      t('Create a dataset')\n      ),\n      t(' to visualize your data.')\n      ) }\n\n    ),\n\n    showAlertBanner &&\n    ___EmotionJSX(ExploreAlert, {\n      title:\n      errorMessage ?\n      t('Required control values have been removed') :\n      t('Your chart is not up to date'),\n\n      bodyText:\n      errorMessage ?\n      getChartRequiredFieldsMissingMessage(false) :\n\n      ___EmotionJSX(\"span\", null,\n      t(\n        'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or'\n      ), ' ',\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: onQuery },\n      t('click here')\n      ), \".\"\n\n      ),\n\n\n      type: \"warning\",\n      css: (theme) => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            ` }\n    ),\n\n    ___EmotionJSX(ChartPills, {\n      queriesResponse: chart.queriesResponse,\n      chartStatus: chart.chartStatus,\n      chartUpdateStartTime: chart.chartUpdateStartTime,\n      chartUpdateEndTime: chart.chartUpdateEndTime,\n      refreshCachedQuery: refreshCachedQuery,\n      rowLimit: formData == null ? void 0 : formData.row_limit }\n    ),\n    renderChart()\n    ),\n\n    [\n    resizeObserverRef,\n    showAlertBanner,\n    errorMessage,\n    onQuery,\n    chart.queriesResponse,\n    chart.chartStatus,\n    chart.chartUpdateStartTime,\n    chart.chartUpdateEndTime,\n    refreshCachedQuery,\n    formData == null ? void 0 : formData.row_limit,\n    renderChart]\n\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`\n    }),\n    [gutterMargin]\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      ___EmotionJSX(\"div\", { id: \"app\", \"data-test\": \"standalone-app\", ref: resizeObserverRef },\n      standaloneChartBody\n      ));\n\n  }\n\n  return (\n    ___EmotionJSX(Styles, {\n      className: \"panel panel-default chart-container\",\n      showSplite: showSplite },\n\n    ___EmotionJSX(Split, {\n      sizes: splitSizes,\n      minSize: MIN_SIZES,\n      direction: \"vertical\",\n      gutterSize: gutterHeight,\n      onDragEnd: onDragEnd,\n      elementStyle: elementStyle,\n      expandToMin: true },\n\n    panelBody,\n    ___EmotionJSX(DataTablesPane, {\n      ownState: ownState,\n      queryFormData: queryFormData,\n      datasource: datasource,\n      queryForce: force,\n      onCollapseChange: onCollapseChange,\n      chartStatus: chart.chartStatus,\n      errorMessage: errorMessage,\n      actions: actions }\n    )\n    ),\n    showDatasetModal &&\n    ___EmotionJSX(SaveDatasetModal, {\n      visible: showDatasetModal,\n      onHide: () => setShowDatasetModal(false),\n      buttonTextOnSave: t('Save'),\n      buttonTextOnOverwrite: t('Overwrite'),\n      datasource: getDatasourceAsSaveableDataset(datasource),\n      openWindow: false,\n      formData: formData }\n    )\n\n    ));\n\n};__signature__(ExploreChartPanel, \"useTheme{theme}\\nuseResizeDetectorByObserver{{\\n    ref: chartPanelRef,\\n    observerRef: resizeObserverRef,\\n    width: chartPanelWidth,\\n    height: chartPanelHeight,\\n  }}\\nuseState{[splitSizes, setSplitSizes](isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\\n      ? INITIAL_SIZES\\n      : getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES))}\\nuseState{[showSplite, setShowSplit](isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\\n      ? false\\n      : getItem(LocalStorageKeys.IsDatapanelOpen, false))}\\nuseState{[showDatasetModal, setShowDatasetModal](false)}\\nuseCallback{updateQueryContext}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{onDragEnd}\\nuseCallback{refreshCachedQuery}\\nuseCallback{onCollapseChange}\\nuseCallback{renderChart}\\nuseMemo{panelBody}\\nuseMemo{standaloneChartBody}\\nuseState{[queryFormData, setQueryFormData](chart.latestQueryFormData)}\\nuseEffect{}\\nuseCallback{elementStyle}\", () => [useTheme, useResizeDetectorByObserver]);\n\nExploreChartPanel.propTypes = propTypes;const _default =\n\nExploreChartPanel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(GUTTER_SIZE_FACTOR, \"GUTTER_SIZE_FACTOR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(INITIAL_SIZES, \"INITIAL_SIZES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(MIN_SIZES, \"MIN_SIZES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(DEFAULT_SOUTH_PANE_HEIGHT_PERCENT, \"DEFAULT_SOUTH_PANE_HEIGHT_PERCENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(ExploreChartPanel, \"ExploreChartPanel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","PropTypes","Split","css","DatasourceType","ensureIsArray","isFeatureEnabled","FeatureFlag","getChartMetadataRegistry","styled","SupersetClient","t","useTheme","chartPropShape","ChartContainer","getItem","setItem","LocalStorageKeys","Alert","SaveDatasetModal","getDatasourceAsSaveableDataset","buildV1ChartDataPayload","getChartRequiredFieldsMissingMessage","DataTablesPane","ChartPills","ExploreAlert","useResizeDetectorByObserver","jsx","___EmotionJSX","propTypes","actions","object","isRequired","onQuery","func","can_overwrite","bool","can_download","datasource","dashboardId","number","column_formats","containerId","string","isStarred","slice","sliceName","table_name","vizType","form_data","ownState","standalone","force","timeout","chartIsStale","chart","errorMessage","node","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","DEFAULT_SOUTH_PANE_HEIGHT_PERCENT","Styles","div","theme","colors","grayscale","light2","gridUnit","showSplite","_ref","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","ExploreChartPanel","formData","chartAlert","_metaDataRegistry$get","gutterMargin","gutterHeight","ref","chartPanelRef","observerRef","resizeObserverRef","width","chartPanelWidth","height","chartPanelHeight","splitSizes","setSplitSizes","DatapanelClosedByDefault","ChartSplitSizes","setShowSplit","IsDatapanelOpen","showDatasetModal","setShowDatasetModal","metaDataRegistry","useLegacyApi","get","vizTypeNeedsDataset","type","Table","showAlertBanner","chartStatus","queriesResponse","length","updateQueryContext","fetchChartData","query_context","queryContext","resultFormat","resultType","setDataMask","put","endpoint","slice_id","headers","body","JSON","stringify","query_context_generation","onDragEnd","sizes","refreshCachedQuery","setForceQuery","postChartFormData","id","undefined","updateQueryFormData","onCollapseChange","isOpen","renderChart","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","className","message","description","Fragment","role","tabIndex","onClick","title","bodyText","chartUpdateStartTime","chartUpdateEndTime","rowLimit","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","bodyClasses","document","split","includes","minSize","direction","expandToMin","queryForce","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","openWindow","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => (showSplite ? 'block' : 'none')};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\n      ? INITIAL_SIZES\n      : getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES),\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\n      ? false\n      : getItem(LocalStorageKeys.IsDatapanelOpen, false),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType) ?? {};\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.ChartSplitSizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        ref={resizeObserverRef}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      resizeObserverRef,\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      <div id=\"app\" data-test=\"standalone-app\" ref={resizeObserverRef}>\n        {standaloneChartBody}\n      </div>\n    );\n  }\n\n  return (\n    <Styles\n      className=\"panel panel-default chart-container\"\n      showSplite={showSplite}\n    >\n      <Split\n        sizes={splitSizes}\n        minSize={MIN_SIZES}\n        direction=\"vertical\"\n        gutterSize={gutterHeight}\n        onDragEnd={onDragEnd}\n        elementStyle={elementStyle}\n        expandToMin\n      >\n        {panelBody}\n        <DataTablesPane\n          ownState={ownState}\n          queryFormData={queryFormData}\n          datasource={datasource}\n          queryForce={force}\n          onCollapseChange={onCollapseChange}\n          chartStatus={chart.chartStatus}\n          errorMessage={errorMessage}\n          actions={actions}\n        />\n      </Split>\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}