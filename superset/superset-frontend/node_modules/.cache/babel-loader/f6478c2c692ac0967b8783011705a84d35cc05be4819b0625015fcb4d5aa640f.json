{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { Model, Texture2D, Framebuffer, isWebGL2 } from '@luma.gl/core';\nconst AGGREGATE_VS = \"#define SHADER_NAME data-filter-vertex-shader\\n\\n#ifdef FLOAT_TARGET\\n  attribute float filterIndices;\\n  attribute float filterPrevIndices;\\n#else\\n  attribute vec2 filterIndices;\\n  attribute vec2 filterPrevIndices;\\n#endif\\n\\nvarying vec4 vColor;\\nconst float component = 1.0 / 255.0;\\n\\nvoid main() {\\n  #ifdef FLOAT_TARGET\\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\\n  #else\\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\\n    float col = filterIndices.x;\\n    float row = filterIndices.y * 4.0;\\n    float channel = floor(row);\\n    row = fract(row);\\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\\n  #endif\\n  gl_PointSize = 1.0;\\n}\\n\";\nconst AGGREGATE_FS = \"#define SHADER_NAME data-filter-fragment-shader\\nprecision highp float;\\n\\nvarying vec4 vColor;\\n\\nvoid main() {\\n  if (dataFilter_value < 0.5) {\\n    discard;\\n  }\\n  gl_FragColor = vColor;\\n}\\n\";\nexport function supportsFloatTarget(gl) {\n  return Boolean(gl.getExtension('EXT_float_blend') && (gl.getExtension('EXT_color_buffer_float') || gl.getExtension('WEBGL_color_buffer_float')));\n}\nexport function getFramebuffer(gl, useFloatTarget) {\n  if (useFloatTarget) {\n    return new Framebuffer(gl, {\n      width: 1,\n      height: 1,\n      attachments: {\n        [36064]: new Texture2D(gl, {\n          format: isWebGL2(gl) ? 34836 : 6408,\n          type: 5126,\n          mipmaps: false\n        })\n      }\n    });\n  }\n\n  return new Framebuffer(gl, {\n    width: 256,\n    height: 64,\n    depth: false\n  });\n}\nexport function getModel(gl, shaderOptions, useFloatTarget) {\n  shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n\n  if (useFloatTarget) {\n    shaderOptions.defines.FLOAT_TARGET = 1;\n  }\n\n  return new Model(gl, {\n    id: 'data-filter-aggregation-model',\n    vertexCount: 1,\n    isInstanced: false,\n    drawMode: 0,\n    vs: AGGREGATE_VS,\n    fs: AGGREGATE_FS,\n    ...shaderOptions\n  });\n}\nexport const parameters = {\n  blend: true,\n  blendFunc: [1, 1, 1, 1],\n  blendEquation: [32774, 32774],\n  depthTest: false\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AGGREGATE_VS, \"AGGREGATE_VS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");reactHotLoader.register(AGGREGATE_FS, \"AGGREGATE_FS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");reactHotLoader.register(supportsFloatTarget, \"supportsFloatTarget\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");reactHotLoader.register(getFramebuffer, \"getFramebuffer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");reactHotLoader.register(getModel, \"getModel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");reactHotLoader.register(parameters, \"parameters\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/data-filter/aggregator.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Model","Texture2D","Framebuffer","isWebGL2","AGGREGATE_VS","AGGREGATE_FS","supportsFloatTarget","gl","Boolean","getExtension","getFramebuffer","useFloatTarget","width","height","attachments","format","type","mipmaps","depth","getModel","shaderOptions","defines","NON_INSTANCED_MODEL","FLOAT_TARGET","id","vertexCount","isInstanced","drawMode","vs","fs","parameters","blend","blendFunc","blendEquation","depthTest","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/data-filter/aggregator.ts"],"sourcesContent":["import {Model, Texture2D, Framebuffer, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst AGGREGATE_VS = `\\\n#define SHADER_NAME data-filter-vertex-shader\n\n#ifdef FLOAT_TARGET\n  attribute float filterIndices;\n  attribute float filterPrevIndices;\n#else\n  attribute vec2 filterIndices;\n  attribute vec2 filterPrevIndices;\n#endif\n\nvarying vec4 vColor;\nconst float component = 1.0 / 255.0;\n\nvoid main() {\n  #ifdef FLOAT_TARGET\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\n  #else\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\n    float col = filterIndices.x;\n    float row = filterIndices.y * 4.0;\n    float channel = floor(row);\n    row = fract(row);\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\n  #endif\n  gl_PointSize = 1.0;\n}\n`;\n\nconst AGGREGATE_FS = `\\\n#define SHADER_NAME data-filter-fragment-shader\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main() {\n  if (dataFilter_value < 0.5) {\n    discard;\n  }\n  gl_FragColor = vColor;\n}\n`;\n\nexport function supportsFloatTarget(gl: WebGLRenderingContext): boolean {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#Support_for_float_textures_doesnt_mean_you_can_render_into_them!\n  return Boolean(\n    gl.getExtension('EXT_float_blend') &&\n      // WebGL 2\n      (gl.getExtension('EXT_color_buffer_float') ||\n        // WebGL 1\n        gl.getExtension('WEBGL_color_buffer_float'))\n  );\n}\n\n// A 1x1 framebuffer object that encodes the total count of filtered items\nexport function getFramebuffer(gl: WebGLRenderingContext, useFloatTarget: boolean): Framebuffer {\n  if (useFloatTarget) {\n    return new Framebuffer(gl, {\n      width: 1,\n      height: 1,\n      attachments: {\n        [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT,\n          mipmaps: false\n        })\n      }\n    });\n  }\n  return new Framebuffer(gl, {\n    width: 256,\n    height: 64,\n    depth: false\n  });\n}\n\n// Increments the counter based on dataFilter_value\nexport function getModel(\n  gl: WebGLRenderingContext,\n  shaderOptions: any,\n  useFloatTarget: boolean\n): Model {\n  shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n  if (useFloatTarget) {\n    shaderOptions.defines.FLOAT_TARGET = 1;\n  }\n\n  return new Model(gl, {\n    id: 'data-filter-aggregation-model',\n    vertexCount: 1,\n    isInstanced: false,\n    drawMode: GL.POINTS,\n    vs: AGGREGATE_VS,\n    fs: AGGREGATE_FS,\n    ...shaderOptions\n  });\n}\n\nexport const parameters = {\n  blend: true,\n  blendFunc: [GL.ONE, GL.ONE, GL.ONE, GL.ONE],\n  blendEquation: [GL.FUNC_ADD, GL.FUNC_ADD],\n  depthTest: false\n};\n"],"mappings":"uSAAA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,QAAvC,QAAsD,eAAtD;AAGA,MAAMC,YAAY,89BAAlB;AAiCA,MAAMC,YAAY,wMAAlB;AAcA,OAAO,SAASC,mBAATA,CAA6BC,EAA7B,EAAiE;EAEtE,OAAOC,OAAO,CACZD,EAAE,CAACE,YAAH,CAAgB,iBAAhB,MAEGF,EAAE,CAACE,YAAH,CAAgB,wBAAhB,KAECF,EAAE,CAACE,YAAH,CAAgB,0BAAhB,CAJJ,CADY,CAAd;AAOD;AAGD,OAAO,SAASC,cAATA,CAAwBH,EAAxB,EAAmDI,cAAnD,EAAyF;EAC9F,IAAIA,cAAJ,EAAoB;IAClB,OAAO,IAAIT,WAAJ,CAAgBK,EAAhB,EAAoB;MACzBK,KAAK,EAAE,CADkB;MAEzBC,MAAM,EAAE,CAFiB;MAGzBC,WAAW,EAAE;QACX,SAAwB,IAAIb,SAAJ,CAAcM,EAAd,EAAkB;UACxCQ,MAAM,EAAEZ,QAAQ,CAACI,EAAD,CAAR,eADgC;UAExCS,IAAI,MAFoC;UAGxCC,OAAO,EAAE;QAH+B,CAAlB;MADb;IAHY,CAApB,CAAP;EAWD;;EACD,OAAO,IAAIf,WAAJ,CAAgBK,EAAhB,EAAoB;IACzBK,KAAK,EAAE,GADkB;IAEzBC,MAAM,EAAE,EAFiB;IAGzBK,KAAK,EAAE;EAHkB,CAApB,CAAP;AAKD;AAGD,OAAO,SAASC,QAATA,CACLZ,EADK,EAELa,aAFK,EAGLT,cAHK,EAIE;EACPS,aAAa,CAACC,OAAd,CAAsBC,mBAAtB,GAA4C,CAA5C;;EACA,IAAIX,cAAJ,EAAoB;IAClBS,aAAa,CAACC,OAAd,CAAsBE,YAAtB,GAAqC,CAArC;EACD;;EAED,OAAO,IAAIvB,KAAJ,CAAUO,EAAV,EAAc;IACnBiB,EAAE,EAAE,+BADe;IAEnBC,WAAW,EAAE,CAFM;IAGnBC,WAAW,EAAE,KAHM;IAInBC,QAAQ,GAJW;IAKnBC,EAAE,EAAExB,YALe;IAMnByB,EAAE,EAAExB,YANe;IAOnB,GAAGe;EAPgB,CAAd,CAAP;AASD;AAED,OAAO,MAAMU,UAAU,GAAG;EACxBC,KAAK,EAAE,IADiB;EAExBC,SAAS,EAAE,YAFa;EAGxBC,aAAa,EAAE,cAHS;EAIxBC,SAAS,EAAE;AAJa,CAAnB,oBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAtGDnC,YAAY,mLAAA+B,cAAA,CAAAI,QAAA,CAiCZlC,YAAY,mLAAA8B,cAAA,CAAAI,QAAA,CAcFjC,mBAAT,0LAAA6B,cAAA,CAAAI,QAAA,CAYS7B,cAAT,qLAAAyB,cAAA,CAAAI,QAAA,CAsBSpB,QAAT,+KAAAgB,cAAA,CAAAI,QAAA,CAqBMT,UAAU,yMAAAU,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}