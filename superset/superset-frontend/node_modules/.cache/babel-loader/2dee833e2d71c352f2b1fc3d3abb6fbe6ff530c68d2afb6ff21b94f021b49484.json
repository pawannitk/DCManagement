{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, D3_FORMAT_DOCS, D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { labelType, numberFormat, showLabels, showUpperLabels, dateFormat } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['groupby'],\n    ['metric'],\n    ['row_limit'],\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.')\n      }\n    }],\n\n    ['adhoc_filters']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [___EmotionJSX(ControlSubSectionHeader, null, t('Labels'))],\n    [\n    {\n      name: 'show_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Labels'),\n        renderTrigger: true,\n        default: showLabels,\n        description: t('Whether to display the labels.')\n      }\n    }],\n\n    [\n    {\n      name: 'show_upper_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Upper Labels'),\n        renderTrigger: true,\n        default: showUpperLabels,\n        description: t('Show labels when the node has children.')\n      }\n    }],\n\n    [\n    {\n      name: 'label_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Label Type'),\n        default: labelType,\n        renderTrigger: true,\n        choices: [\n        ['Key', t('Key')],\n        ['value', t('Value')],\n        ['key_value', t('Category and Value')]],\n\n        description: t('What should be shown on the label?')\n      }\n    }],\n\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: numberFormat,\n        choices: D3_FORMAT_OPTIONS,\n        description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`\n      }\n    }],\n\n    ['currency_format'],\n    [\n    {\n      name: 'date_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        default: dateFormat,\n        description: D3_FORMAT_DOCS\n      }\n    }]]\n\n\n  }],\n\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(labelType, \"labelType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(numberFormat, \"numberFormat\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(showLabels, \"showLabels\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(showUpperLabels, \"showUpperLabels\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(dateFormat, \"dateFormat\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","t","ControlSubSectionHeader","D3_FORMAT_DOCS","D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","getStandardizedControls","DEFAULT_FORM_DATA","jsx","___EmotionJSX","labelType","numberFormat","showLabels","showUpperLabels","dateFormat","config","controlPanelSections","label","expanded","controlSetRows","name","type","description","renderTrigger","default","choices","freeForm","formDataOverrides","formData","metric","shiftMetric","groupby","popAllColumns","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Treemap/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlSubSectionHeader,\n  D3_FORMAT_DOCS,\n  D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst { labelType, numberFormat, showLabels, showUpperLabels, dateFormat } =\n  DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['groupby'],\n        ['metric'],\n        ['row_limit'],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [<ControlSubSectionHeader>{t('Labels')}</ControlSubSectionHeader>],\n        [\n          {\n            name: 'show_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Labels'),\n              renderTrigger: true,\n              default: showLabels,\n              description: t('Whether to display the labels.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_upper_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Upper Labels'),\n              renderTrigger: true,\n              default: showUpperLabels,\n              description: t('Show labels when the node has children.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'label_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Label Type'),\n              default: labelType,\n              renderTrigger: true,\n              choices: [\n                ['Key', t('Key')],\n                ['value', t('Value')],\n                ['key_value', t('Category and Value')],\n              ],\n              description: t('What should be shown on the label?'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: numberFormat,\n              choices: D3_FORMAT_OPTIONS,\n              description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`,\n            },\n          },\n        ],\n        ['currency_format'],\n        [\n          {\n            name: 'date_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              default: dateFormat,\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n    groupby: getStandardizedControls().popAllColumns(),\n  }),\n};\n\nexport default config;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,CAAC,QAAQ,mBAAmB;AACrC,SAEEC,uBAAuB,EACvBC,cAAc,EACdC,wCAAwC,EACxCC,iBAAiB,EACjBC,sBAAsB,EACtBC,uBAAuB,QAClB,6BAA6B;AACpC,SAASC,iBAAiB,QAAQ,SAAS,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAE5C,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,UAAU,EAAEC,eAAe,EAAEC,UAAU,EAAE,GACxEP,iBAAiB;AAEnB,MAAMQ,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpB;IACEC,KAAK,EAAEjB,CAAC,CAAC,OAAO,CAAC;IACjBkB,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;IACd,CAAC,SAAS,CAAC;IACX,CAAC,QAAQ,CAAC;IACV,CAAC,WAAW,CAAC;IACb;IACE;MACEC,IAAI,EAAE,gBAAgB;MACtBL,MAAM,EAAE;QACNM,IAAI,EAAE,iBAAiB;QACvBJ,KAAK,EAAEjB,CAAC,CAAC,gBAAgB,CAAC;QAC1BsB,WAAW,EAAEtB,CAAC,CACZ,qEAAqE;;KAG1E,CACF;;IACD,CAAC,eAAe,CAAC;;GAEpB;EACD;IACEiB,KAAK,EAAEjB,CAAC,CAAC,eAAe,CAAC;IACzBkB,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;IACd,CAAC,cAAc,CAAC;IAChB,CAACV,aAAA,CAACR,uBAAuB,QAAED,CAAC,CAAC,QAAQ,CAA2B,CAAC,CAAC;IAClE;IACE;MACEoB,IAAI,EAAE,aAAa;MACnBL,MAAM,EAAE;QACNM,IAAI,EAAE,iBAAiB;QACvBJ,KAAK,EAAEjB,CAAC,CAAC,aAAa,CAAC;QACvBuB,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAEZ,UAAU;QACnBU,WAAW,EAAEtB,CAAC,CAAC,gCAAgC;;KAElD,CACF;;IACD;IACE;MACEoB,IAAI,EAAE,mBAAmB;MACzBL,MAAM,EAAE;QACNM,IAAI,EAAE,iBAAiB;QACvBJ,KAAK,EAAEjB,CAAC,CAAC,mBAAmB,CAAC;QAC7BuB,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAEX,eAAe;QACxBS,WAAW,EAAEtB,CAAC,CAAC,yCAAyC;;KAE3D,CACF;;IACD;IACE;MACEoB,IAAI,EAAE,YAAY;MAClBL,MAAM,EAAE;QACNM,IAAI,EAAE,eAAe;QACrBJ,KAAK,EAAEjB,CAAC,CAAC,YAAY,CAAC;QACtBwB,OAAO,EAAEd,SAAS;QAClBa,aAAa,EAAE,IAAI;QACnBE,OAAO,EAAE;QACP,CAAC,KAAK,EAAEzB,CAAC,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,OAAO,EAAEA,CAAC,CAAC,OAAO,CAAC,CAAC;QACrB,CAAC,WAAW,EAAEA,CAAC,CAAC,oBAAoB,CAAC,CAAC,CACvC;;QACDsB,WAAW,EAAEtB,CAAC,CAAC,oCAAoC;;KAEtD,CACF;;IACD;IACE;MACEoB,IAAI,EAAE,eAAe;MACrBL,MAAM,EAAE;QACNM,IAAI,EAAE,eAAe;QACrBK,QAAQ,EAAE,IAAI;QACdT,KAAK,EAAEjB,CAAC,CAAC,eAAe,CAAC;QACzBuB,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAEb,YAAY;QACrBc,OAAO,EAAErB,iBAAiB;QAC1BkB,WAAW,EAAE,GAAGpB,cAAc,IAAIC,wCAAwC;;KAE7E,CACF;;IACD,CAAC,iBAAiB,CAAC;IACnB;IACE;MACEiB,IAAI,EAAE,aAAa;MACnBL,MAAM,EAAE;QACNM,IAAI,EAAE,eAAe;QACrBK,QAAQ,EAAE,IAAI;QACdT,KAAK,EAAEjB,CAAC,CAAC,aAAa,CAAC;QACvBuB,aAAa,EAAE,IAAI;QACnBE,OAAO,EAAEpB,sBAAsB;QAC/BmB,OAAO,EAAEV,UAAU;QACnBQ,WAAW,EAAEpB;;KAEhB,CACF;;;GAEJ,CACF;;EACDyB,iBAAiB,EAAEA,CAAAC,QAAQ,MAAK;IAC9B,GAAGA,QAAQ;IACXC,MAAM,EAAEvB,uBAAuB,EAAE,CAACwB,WAAW,EAAE;IAC/CC,OAAO,EAAEzB,uBAAuB,EAAE,CAAC0B,aAAa;GACjD;CACF,CAAC,MAAAC,QAAA;AAEalB,MAAM,CAArB,eAAAkB,QAAA,CAAsB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAX,OAAA,GAAAY,SAAA,MAAAF,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAjHd3B,SAAS,mIAAAwB,cAAA,CAAAG,QAAA,CAAE1B,YAAY,sIAAAuB,cAAA,CAAAG,QAAA,CAAEzB,UAAU,oIAAAsB,cAAA,CAAAG,QAAA,CAAExB,eAAe,yIAAAqB,cAAA,CAAAG,QAAA,CAAEvB,UAAU,oIAAAoB,cAAA,CAAAG,QAAA,CAGlEtB,MAAM,gIAAAmB,cAAA,CAAAG,QAAA,CAAAJ,QAAA,yJAAAK,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}