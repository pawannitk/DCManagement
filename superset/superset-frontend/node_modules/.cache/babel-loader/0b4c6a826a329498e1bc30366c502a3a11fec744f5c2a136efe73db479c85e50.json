{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { QueryState, styled, SupersetClient, t, useTheme } from '@superset-ui/core';\nimport moment from 'moment';\nimport { createFetchRelated, createFetchDistinct, createErrorHandler, shortenSQL } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Label from 'src/components/Label';\nimport SubMenu from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';\nimport { addSuccessToast } from 'src/components/MessageToasts/actions';\nimport getOwnerName from 'src/utils/getOwnerName';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\nconst TopAlignedListView = styled(ListView)`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\nfunction QueryList({ addDangerToast }) {\n  const { state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData } = useListViewResource('query', t('Query history'), addDangerToast, false);\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] = useState();\n  const theme = useTheme();\n  const history = useHistory();\n  const handleQueryPreview = useCallback((id) => {\n    SupersetClient.get({\n      endpoint: `/api/v1/query/${id}`\n    }).then(({ json = {} }) => {\n      setQueryCurrentlyPreviewing({ ...json.result });\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue previewing the selected query. %s', errMsg))));\n  }, [addDangerToast]);\n  const menuData = {\n    activeChild: 'Query history',\n    ...commonMenuData\n  };\n  const initialSort = [{ id: QueryObjectColumns.StartTime, desc: true }];\n  const columns = useMemo(() => [\n  {\n    Cell: ({ row: { original: { status } } }) => {\n      const statusConfig = {\n        name: null,\n        label: ''\n      };\n      if (status === QueryState.Success) {\n        statusConfig.name = ___EmotionJSX(Icons.Check, { iconColor: theme.colors.success.base });\n        statusConfig.label = t('Success');\n      } else\n      if (status === QueryState.Failed ||\n      status === QueryState.Stopped) {\n        statusConfig.name = ___EmotionJSX(Icons.XSmall, { iconColor: status === QueryState.Failed ?\n          theme.colors.error.base :\n          theme.colors.grayscale.base });\n        statusConfig.label = t('Failed');\n      } else\n      if (status === QueryState.Running) {\n        statusConfig.name = ___EmotionJSX(Icons.Running, { iconColor: theme.colors.primary.base });\n        statusConfig.label = t('Running');\n      } else\n      if (status === QueryState.TimedOut) {\n        statusConfig.name = ___EmotionJSX(Icons.Offline, { iconColor: theme.colors.grayscale.light1 });\n        statusConfig.label = t('Offline');\n      } else\n      if (status === QueryState.Scheduled ||\n      status === QueryState.Pending) {\n        statusConfig.name = ___EmotionJSX(Icons.Queued, { iconColor: theme.colors.grayscale.base });\n        statusConfig.label = t('Scheduled');\n      }\n      return ___EmotionJSX(Tooltip, { title: statusConfig.label, placement: \"bottom\" },\n      ___EmotionJSX(\"span\", null, statusConfig.name)\n      );\n    },\n    accessor: QueryObjectColumns.Status,\n    size: 'xs',\n    disableSortBy: true\n  },\n  {\n    accessor: QueryObjectColumns.StartTime,\n    Header: t('Time'),\n    size: 'xl',\n    Cell: ({ row: { original: { start_time } } }) => {\n      const startMoment = moment.utc(start_time).local();\n      const formattedStartTimeData = startMoment.\n      format(DATETIME_WITH_TIME_ZONE).\n      split(' ');\n      const formattedStartTime = ___EmotionJSX(React.Fragment, null,\n      formattedStartTimeData[0], \" \", ___EmotionJSX(\"br\", null),\n      formattedStartTimeData[1]\n      );\n      return formattedStartTime;\n    }\n  },\n  {\n    Header: t('Duration'),\n    size: 'xl',\n    Cell: ({ row: { original: { status, start_time, end_time } } }) => {\n      const timerType = status === QueryState.Failed ? 'danger' : status;\n      const timerTime = end_time ?\n      moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS) :\n      '00:00:00.000';\n      return ___EmotionJSX(TimerLabel, { type: timerType, role: \"timer\" },\n      timerTime\n      );\n    }\n  },\n  {\n    accessor: QueryObjectColumns.TabName,\n    Header: t('Tab name'),\n    size: 'xl'\n  },\n  {\n    accessor: QueryObjectColumns.DatabaseName,\n    Header: t('Database'),\n    size: 'xl'\n  },\n  {\n    accessor: QueryObjectColumns.Database,\n    hidden: true\n  },\n  {\n    accessor: QueryObjectColumns.Schema,\n    Header: t('Schema'),\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original: { sql_tables: tables = [] } } }) => {\n      const names = tables.map((table) => table.table);\n      const main = names.length > 0 ? names.shift() : '';\n      if (names.length) {\n        return ___EmotionJSX(StyledTableLabel, null,\n        ___EmotionJSX(\"span\", null, main),\n        ___EmotionJSX(Popover, { placement: \"right\", title: t('TABLES'), trigger: \"click\", content: ___EmotionJSX(React.Fragment, null,\n          names.map((name) => ___EmotionJSX(StyledPopoverItem, { key: name }, name))\n          ) },\n        ___EmotionJSX(\"span\", { className: \"count\" }, \"(+\", names.length, \")\")\n        )\n        );\n      }\n      return main;\n    },\n    accessor: QueryObjectColumns.SqlTables,\n    Header: t('Tables'),\n    size: 'xl',\n    disableSortBy: true\n  },\n  {\n    accessor: QueryObjectColumns.UserFirstName,\n    Header: t('User'),\n    size: 'xl',\n    Cell: ({ row: { original: { user } } }) => getOwnerName(user)\n  },\n  {\n    accessor: QueryObjectColumns.User,\n    hidden: true\n  },\n  {\n    accessor: QueryObjectColumns.Rows,\n    Header: t('Rows'),\n    size: 'md'\n  },\n  {\n    accessor: QueryObjectColumns.Sql,\n    Header: t('SQL'),\n    Cell: ({ row: { original, id } }) => ___EmotionJSX(\"div\", { tabIndex: 0, role: \"button\", \"data-test\": `open-sql-preview-${id}`, onClick: () => setQueryCurrentlyPreviewing(original) },\n    ___EmotionJSX(StyledSyntaxHighlighter, { language: \"sql\", style: github },\n    shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)\n    )\n    )\n  },\n  {\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    Cell: ({ row: { original: { id } } }) => ___EmotionJSX(Tooltip, { title: t('Open query in SQL Lab'), placement: \"bottom\" },\n    ___EmotionJSX(Link, { to: `/sqllab?queryId=${id}` },\n    ___EmotionJSX(Icons.Full, { iconColor: theme.colors.grayscale.base })\n    )\n    )\n  }],\n  []);\n  const filters = useMemo(() => [\n  {\n    Header: t('Database'),\n    key: 'database',\n    id: 'database',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('query', 'database', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching database values: %s', errMsg)))),\n    paginate: true\n  },\n  {\n    Header: t('State'),\n    key: 'state',\n    id: 'status',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchDistinct('query', 'status', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching schema values: %s', errMsg)))),\n    paginate: true\n  },\n  {\n    Header: t('User'),\n    key: 'user',\n    id: 'user',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: 'All',\n    fetchSelects: createFetchRelated('query', 'user', createErrorHandler((errMsg) => addDangerToast(t('An error occurred while fetching user values: %s', errMsg)))),\n    paginate: true\n  },\n  {\n    Header: t('Time range'),\n    key: 'start_time',\n    id: 'start_time',\n    input: 'datetime_range',\n    operator: FilterOperator.Between\n  },\n  {\n    Header: t('Search by query text'),\n    key: 'sql',\n    id: 'sql',\n    input: 'search',\n    operator: FilterOperator.Contains\n  }],\n  [addDangerToast]);\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, menuData),\n  queryCurrentlyPreviewing && ___EmotionJSX(QueryPreviewModal, { onHide: () => setQueryCurrentlyPreviewing(undefined), query: queryCurrentlyPreviewing, queries: queries, fetchData: handleQueryPreview, openInSqlLab: (id) => history.push(`/sqllab?queryId=${id}`), show: true }),\n  ___EmotionJSX(TopAlignedListView, { className: \"query-history-list-view\", columns: columns, count: queryCount, data: queries, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, highlightRowId: queryCurrentlyPreviewing == null ? void 0 : queryCurrentlyPreviewing.id, refreshData: () => {}, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast })\n  );\n}__signature__(QueryList, \"useListViewResource{{ state: { loading, resourceCount: queryCount, resourceCollection: queries }, fetchData, }}\\nuseState{[queryCurrentlyPreviewing, setQueryCurrentlyPreviewing]}\\nuseTheme{theme}\\nuseHistory{history}\\nuseCallback{handleQueryPreview}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useTheme, useHistory]);const _default =\nwithToasts(QueryList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(SQL_PREVIEW_MAX_LINES, \"SQL_PREVIEW_MAX_LINES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(TopAlignedListView, \"TopAlignedListView\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledSyntaxHighlighter, \"StyledSyntaxHighlighter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledTableLabel, \"StyledTableLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(StyledPopoverItem, \"StyledPopoverItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(TimerLabel, \"TimerLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(QueryList, \"QueryList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","useState","useCallback","Link","useHistory","QueryState","styled","SupersetClient","t","useTheme","moment","createFetchRelated","createFetchDistinct","createErrorHandler","shortenSQL","withToasts","useListViewResource","Label","SubMenu","Popover","commonMenuData","ListView","FilterOperator","Tooltip","SyntaxHighlighter","sql","github","DATETIME_WITH_TIME_ZONE","TIME_WITH_MS","QueryObjectColumns","Icons","QueryPreviewModal","addSuccessToast","getOwnerName","jsx","___EmotionJSX","PAGE_SIZE","SQL_PREVIEW_MAX_LINES","TopAlignedListView","registerLanguage","StyledSyntaxHighlighter","theme","gridUnit","StyledTableLabel","div","colors","primary","base","StyledPopoverItem","grayscale","dark2","TimerLabel","typography","families","monospace","QueryList","addDangerToast","state","loading","resourceCount","queryCount","resourceCollection","queries","fetchData","queryCurrentlyPreviewing","setQueryCurrentlyPreviewing","history","handleQueryPreview","id","get","endpoint","then","json","result","errMsg","menuData","activeChild","initialSort","StartTime","desc","columns","Cell","row","original","status","statusConfig","name","label","Success","Check","iconColor","success","Failed","Stopped","XSmall","error","Running","TimedOut","Offline","light1","Scheduled","Pending","Queued","title","placement","accessor","Status","size","disableSortBy","Header","start_time","startMoment","utc","local","formattedStartTimeData","format","split","formattedStartTime","Fragment","end_time","timerType","timerTime","type","role","TabName","DatabaseName","Database","hidden","Schema","sql_tables","tables","names","map","table","main","length","shift","trigger","content","key","className","SqlTables","UserFirstName","user","User","Rows","Sql","tabIndex","onClick","language","style","to","Full","filters","input","operator","RelationOneMany","unfilteredLabel","fetchSelects","paginate","Equals","Between","Contains","onHide","undefined","query","openInSqlLab","push","show","count","data","pageSize","highlightRowId","refreshData","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/QueryHistoryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback, ReactElement } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  QueryState,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Label from 'src/components/Label';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';\nimport { addSuccessToast } from 'src/components/MessageToasts/actions';\nimport getOwnerName from 'src/utils/getOwnerName';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nfunction QueryList({ addDangerToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] =\n    useState<QueryObject>();\n\n  const theme = useTheme();\n  const history = useHistory();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.StartTime, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: {\n          row: {\n            original: {\n              status: QueryState;\n            };\n          };\n        }) => {\n          const statusConfig: {\n            name: ReactElement | null;\n            label: string;\n          } = {\n            name: null,\n            label: '',\n          };\n          if (status === QueryState.Success) {\n            statusConfig.name = (\n              <Icons.Check iconColor={theme.colors.success.base} />\n            );\n            statusConfig.label = t('Success');\n          } else if (\n            status === QueryState.Failed ||\n            status === QueryState.Stopped\n          ) {\n            statusConfig.name = (\n              <Icons.XSmall\n                iconColor={\n                  status === QueryState.Failed\n                    ? theme.colors.error.base\n                    : theme.colors.grayscale.base\n                }\n              />\n            );\n            statusConfig.label = t('Failed');\n          } else if (status === QueryState.Running) {\n            statusConfig.name = (\n              <Icons.Running iconColor={theme.colors.primary.base} />\n            );\n            statusConfig.label = t('Running');\n          } else if (status === QueryState.TimedOut) {\n            statusConfig.name = (\n              <Icons.Offline iconColor={theme.colors.grayscale.light1} />\n            );\n            statusConfig.label = t('Offline');\n          } else if (\n            status === QueryState.Scheduled ||\n            status === QueryState.Pending\n          ) {\n            statusConfig.name = (\n              <Icons.Queued iconColor={theme.colors.grayscale.base} />\n            );\n            statusConfig.label = t('Scheduled');\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>{statusConfig.name}</span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.Status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.StartTime,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n          return formattedStartTime;\n        },\n      },\n      {\n        Header: t('Duration'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { status, start_time, end_time },\n          },\n        }: any) => {\n          const timerType = status === QueryState.Failed ? 'danger' : status;\n          const timerTime = end_time\n            ? moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS)\n            : '00:00:00.000';\n          return (\n            <TimerLabel type={timerType} role=\"timer\">\n              {timerTime}\n            </TimerLabel>\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.TabName,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.DatabaseName,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.Database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.Schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.SqlTables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.UserFirstName,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => getOwnerName(user),\n      },\n      {\n        accessor: QueryObjectColumns.User,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.Rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.Sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <Link to={`/sqllab?queryId=${id}`}>\n              <Icons.Full iconColor={theme.colors.grayscale.base} />\n            </Link>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        key: 'state',\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        key: 'user',\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching user values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        key: 'start_time',\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.Between,\n      },\n      {\n        Header: t('Search by query text'),\n        key: 'sql',\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) => history.push(`/sqllab?queryId=${id}`)}\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n        refreshData={() => {}}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}