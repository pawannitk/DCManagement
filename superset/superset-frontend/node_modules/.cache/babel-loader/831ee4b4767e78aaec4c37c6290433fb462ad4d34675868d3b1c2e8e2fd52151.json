{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ExtensibleFunction } from '../models';\nclass TimeRangeFormatter extends ExtensibleFunction {\n\n\n\n\n\n  constructor(config) {\n    super((value) => this.format(value));this.id = void 0;this.label = void 0;this.description = void 0;this.formatFunc = void 0;this.useLocalTime = void 0;\n    const { id, label, description = '', formatFunc, useLocalTime = false } = config;\n    this.id = id;\n    this.label = label != null ? label : id;\n    this.description = description;\n    this.formatFunc = formatFunc;\n    this.useLocalTime = useLocalTime;\n  }\n  format(values) {\n    return this.formatFunc(values);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default = TimeRangeFormatter;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TimeRangeFormatter, \"TimeRangeFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeRangeFormatter.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeRangeFormatter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ExtensibleFunction","TimeRangeFormatter","constructor","config","value","format","id","label","description","formatFunc","useLocalTime","values","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeRangeFormatter.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ExtensibleFunction } from '../models';\nimport { TimeRangeFormatFunction } from './types';\n\n// Use type augmentation to indicate that\n// an instance of TimeFormatter is also a function\ninterface TimeRangeFormatter {\n  (value: (Date | number | null | undefined)[]): string;\n}\n\nclass TimeRangeFormatter extends ExtensibleFunction {\n  id: string;\n\n  label: string;\n\n  description: string;\n\n  formatFunc: TimeRangeFormatFunction;\n\n  useLocalTime: boolean;\n\n  constructor(config: {\n    id: string;\n    label?: string;\n    description?: string;\n    formatFunc: TimeRangeFormatFunction;\n    useLocalTime?: boolean;\n  }) {\n    super((value: (Date | number | null | undefined)[]) => this.format(value));\n\n    const {\n      id,\n      label,\n      description = '',\n      formatFunc,\n      useLocalTime = false,\n    } = config;\n\n    this.id = id;\n    this.label = label ?? id;\n    this.description = description;\n    this.formatFunc = formatFunc;\n    this.useLocalTime = useLocalTime;\n  }\n\n  format(values: (Date | number | null | undefined)[]) {\n    return this.formatFunc(values);\n  }\n}\n\nexport default TimeRangeFormatter;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,kBAAkB,QAAQ,WAAW;AAS9C,MAAMC,kBAAmB,SAAQD,kBAAkB;;;;;;EAWjDE,YAAYC,MAMX;IACC,KAAK,CAAC,CAACC,KAA2C,KAAK,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,KAjB7EE,EAAE,eAEFC,KAAK,eAELC,WAAW,eAEXC,UAAU,eAEVC,YAAY;IAWV,MAAM,EACJJ,EAAE,EACFC,KAAK,EACLC,WAAW,GAAG,EAAE,EAChBC,UAAU,EACVC,YAAY,GAAG,KAAK,EACrB,GAAGP,MAAM;IAEV,IAAI,CAACG,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGA,KAAK,WAALA,KAAK,GAAID,EAAE;IACxB,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAEAL,MAAMA,CAACM,MAA4C;IACjD,OAAO,IAAI,CAACF,UAAU,CAACE,MAAM,CAAC;EAChC,CAAC;EAAAC,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,MAAAE,QAAA,GAEcf,kBAAkB,CAAjC,eAAAe,QAAA,CAAkC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxC5BpB,kBAAmB,kJAAAgB,cAAA,CAAAI,QAAA,CAAAL,QAAA,+JAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}