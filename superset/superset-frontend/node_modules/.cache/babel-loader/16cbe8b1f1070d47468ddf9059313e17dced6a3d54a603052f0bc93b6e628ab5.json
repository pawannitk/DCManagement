{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport useAsyncState from '../utils/useAsyncState';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DefaultSearchInput({ count, value, onChange }) {\n  return ___EmotionJSX(\"span\", { className: \"dt-global-filter\" }, \"Search\",\n  ' ',\n  ___EmotionJSX(\"input\", { className: \"form-control input-sm\", placeholder: `${count} records...`, value: value, onChange: onChange })\n  );\n}const _default = /*#__PURE__*/\nReact.memo(__signature__(function GlobalFilter({ preGlobalFilteredRows, filterValue = '', searchInput, setGlobalFilter }) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useAsyncState(filterValue, (newValue) => {\n    setGlobalFilter(newValue || undefined);\n  }, 200);\n  const SearchInput = searchInput || DefaultSearchInput;\n  return ___EmotionJSX(SearchInput, { count: count, value: value, onChange: (e) => {\n      const target = e.target;\n      e.preventDefault();\n      setValue(target.value);\n    } });\n}, \"useAsyncState{[value, setValue]}\", () => [useAsyncState]));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultSearchInput, \"DefaultSearchInput\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/GlobalFilter.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/GlobalFilter.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useAsyncState","jsx","___EmotionJSX","DefaultSearchInput","count","value","onChange","className","placeholder","_default","memo","__signature__","GlobalFilter","preGlobalFilteredRows","filterValue","searchInput","setGlobalFilter","length","setValue","newValue","undefined","SearchInput","e","target","preventDefault","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/GlobalFilter.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ComponentType, ChangeEventHandler } from 'react';\nimport { Row, FilterValue } from 'react-table';\nimport useAsyncState from '../utils/useAsyncState';\n\nexport interface SearchInputProps {\n  count: number;\n  value: string;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n}\n\nexport interface GlobalFilterProps<D extends object> {\n  preGlobalFilteredRows: Row<D>[];\n  // filter value cannot be `undefined` otherwise React will report component\n  // control type undefined error\n  filterValue: string;\n  setGlobalFilter: (filterValue: FilterValue) => void;\n  searchInput?: ComponentType<SearchInputProps>;\n}\n\nfunction DefaultSearchInput({ count, value, onChange }: SearchInputProps) {\n  return (\n    <span className=\"dt-global-filter\">\n      Search{' '}\n      <input\n        className=\"form-control input-sm\"\n        placeholder={`${count} records...`}\n        value={value}\n        onChange={onChange}\n      />\n    </span>\n  );\n}\n\nexport default (React.memo as <T>(fn: T) => T)(function GlobalFilter<\n  D extends object,\n>({\n  preGlobalFilteredRows,\n  filterValue = '',\n  searchInput,\n  setGlobalFilter,\n}: GlobalFilterProps<D>) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useAsyncState(\n    filterValue,\n    (newValue: string) => {\n      setGlobalFilter(newValue || undefined);\n    },\n    200,\n  );\n\n  const SearchInput = searchInput || DefaultSearchInput;\n\n  return (\n    <SearchInput\n      count={count}\n      value={value}\n      onChange={e => {\n        const target = e.target as HTMLInputElement;\n        e.preventDefault();\n        setValue(target.value);\n      }}\n    />\n  );\n});\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAA4C,MAAM,OAAO;AAEhE,OAAOC,aAAa,MAAM,wBAAwB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAiBnD,SAASC,kBAAkBA,CAAC,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAoB;EACtE,OACEJ,aAAA,WAAMK,SAAS,EAAC,kBAAkB,IAChC,QAAM;EAAC,GAAG;EACVL,aAAA,YACEK,SAAS,EAAC,uBAAuB,EACjCC,WAAW,EAAE,GAAGJ,KAAK,aAAc,EACnCC,KAAK,EAAEA,KAAM,EACbC,QAAQ,EAAEA,QAAS;EAEjB,CAAC;AAEX,CAAC,MAAAG,QAAA;AAEeV,KAAK,CAACW,IAAwB,CAAAC,aAAA,CAAC,SAASC,YAAYA,CAElE,EACAC,qBAAqB,EACrBC,WAAW,GAAG,EAAE,EAChBC,WAAW,EACXC,eAAe,EACM;EACrB,MAAMZ,KAAK,GAAGS,qBAAqB,CAACI,MAAM;EAC1C,MAAM,CAACZ,KAAK,EAAEa,QAAQ,CAAC,GAAGlB,aAAa,CACrCc,WAAW,EACX,CAACK,QAAgB,KAAI;IACnBH,eAAe,CAACG,QAAQ,IAAIC,SAAS,CAAC;EACxC,CAAC,EACD,GAAG,CACJ;EAED,MAAMC,WAAW,GAAGN,WAAW,IAAIZ,kBAAkB;EAErD,OACED,aAAA,CAACmB,WAAW,IACVjB,KAAK,EAAEA,KAAM,EACbC,KAAK,EAAEA,KAAM,EACbC,QAAQ,EAAEA,CAAAgB,CAAC,KAAG;MACZ,MAAMC,MAAM,GAAGD,CAAC,CAACC,MAA0B;MAC3CD,CAAC,CAACE,cAAc,EAAE;MAClBN,QAAQ,CAACK,MAAM,CAAClB,KAAK,CAAC;IACxB,CAAE,GACF;AAEN,CAAC,6CArB2BL,aAAa,EAqBxC,CAAC,CA9BF,eAAAS,QAAA,CA8BG,mBAAAgB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAP,SAAA,MAAAK,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5CMzB,kBAAkB,uJAAAsB,cAAA,CAAAG,QAAA,CAAAnB,QAAA,oKAAAoB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAT,SAAA,CAAAS,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}