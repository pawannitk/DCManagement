{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nimport { isDataset, isQueryResponse } from '@superset-ui/chart-controls';\nexport function checkColumnType(columnName, datasource, columnTypes) {\n  if (isDataset(datasource)) {\n    return ensureIsArray(datasource.columns).some((c) => c.type_generic !== undefined &&\n    columnTypes.includes(c.type_generic) &&\n    columnName === c.column_name);\n  }\n  if (isQueryResponse(datasource)) {\n    return ensureIsArray(datasource.columns).\n    filter((c) => c.type_generic !== undefined && columnTypes.includes(c.type_generic)).\n    map((c) => c.column_name).\n    some((c) => columnName === c);\n  }\n  return false;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(checkColumnType, \"checkColumnType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/checkColumnType.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","isDataset","isQueryResponse","checkColumnType","columnName","datasource","columnTypes","columns","some","c","type_generic","undefined","includes","column_name","filter","map","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/checkColumnType.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, GenericDataType, ValueOf } from '@superset-ui/core';\nimport {\n  ControlPanelState,\n  isDataset,\n  isQueryResponse,\n} from '@superset-ui/chart-controls';\n\nexport function checkColumnType(\n  columnName: string,\n  datasource: ValueOf<Pick<ControlPanelState, 'datasource'>>,\n  columnTypes: GenericDataType[],\n): boolean {\n  if (isDataset(datasource)) {\n    return ensureIsArray(datasource.columns).some(\n      c =>\n        c.type_generic !== undefined &&\n        columnTypes.includes(c.type_generic) &&\n        columnName === c.column_name,\n    );\n  }\n  if (isQueryResponse(datasource)) {\n    return ensureIsArray(datasource.columns)\n      .filter(\n        c =>\n          c.type_generic !== undefined && columnTypes.includes(c.type_generic),\n      )\n      .map(c => c.column_name)\n      .some(c => columnName === c);\n  }\n  return false;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAa,QAAkC,mBAAmB;AAC3E,SAEEC,SAAS,EACTC,eAAe,QACV,6BAA6B;AAEpC,OAAM,SAAUC,eAAeA,CAC7BC,UAAkB,EAClBC,UAA0D,EAC1DC,WAA8B;EAE9B,IAAIL,SAAS,CAACI,UAAU,CAAC,EAAE;IACzB,OAAOL,aAAa,CAACK,UAAU,CAACE,OAAO,CAAC,CAACC,IAAI,CAC3C,CAAAC,CAAC,KACCA,CAAC,CAACC,YAAY,KAAKC,SAAS;IAC5BL,WAAW,CAACM,QAAQ,CAACH,CAAC,CAACC,YAAY,CAAC;IACpCN,UAAU,KAAKK,CAAC,CAACI,WAAW,CAC/B;;EAEH,IAAIX,eAAe,CAACG,UAAU,CAAC,EAAE;IAC/B,OAAOL,aAAa,CAACK,UAAU,CAACE,OAAO,CAAC;IACrCO,MAAM,CACL,CAAAL,CAAC,KACCA,CAAC,CAACC,YAAY,KAAKC,SAAS,IAAIL,WAAW,CAACM,QAAQ,CAACH,CAAC,CAACC,YAAY,CAAC,CACvE;IACAK,GAAG,CAAC,CAAAN,CAAC,KAAIA,CAAC,CAACI,WAAW,CAAC;IACvBL,IAAI,CAAC,CAAAC,CAAC,KAAIL,UAAU,KAAKK,CAAC,CAAC;;EAEhC,OAAO,KAAK;AACd,CAAC,mBAAAO,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAP,SAAA,MAAAK,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAvBehB,eAAe,wKAAAiB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAT,SAAA,CAAAS,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}