{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { AntdCheckbox } from 'src/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n\n  .checkbox {\n    margin-bottom: ${({ theme, checked }) => checked ? theme.gridUnit : 0}px;\n  }\n\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\nconst ChildrenContainer = styled.div`\n  margin-left: ${({ theme }) => theme.gridUnit * 6}px;\n`;\nconst CollapsibleControl = (props) => {\n  const { checked, disabled, title, tooltip, children, onChange = () => {}, initialValue = false } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n  return ___EmotionJSX(StyledContainer, { checked: isChecked },\n  ___EmotionJSX(AntdCheckbox, { className: \"checkbox\", checked: isChecked, disabled: disabled, onChange: (e) => {\n      const value = e.target.checked;\n      // external `checked` value has more priority then local state\n      if (checked === undefined) {\n        // uncontrolled mode\n        setIsChecked(value);\n      }\n      onChange(value);\n    } },\n  ___EmotionJSX(React.Fragment, null,\n  title, \"\\xA0\",\n  tooltip && ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: tooltip })\n  )\n  ),\n  isChecked && ___EmotionJSX(ChildrenContainer, null, children)\n  );\n};__signature__(CollapsibleControl, \"useState{[isChecked, setIsChecked](initialValue)}\\nuseEffect{}\");\nexport { CollapsibleControl };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");reactHotLoader.register(ChildrenContainer, \"ChildrenContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");reactHotLoader.register(CollapsibleControl, \"CollapsibleControl\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useState","styled","AntdCheckbox","InfoTooltipWithTrigger","jsx","___EmotionJSX","StyledContainer","div","theme","gridUnit","checked","ChildrenContainer","CollapsibleControl","props","disabled","title","tooltip","children","onChange","initialValue","isChecked","setIsChecked","undefined","className","e","value","target","Fragment","placement","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/CollapsibleControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { AntdCheckbox } from 'src/components';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\ninterface CollapsibleControlProps {\n  initialValue?: boolean;\n  disabled?: boolean;\n  checked?: boolean;\n  title: string;\n  tooltip?: string;\n  children: ReactNode;\n  onChange?: (checked: boolean) => void;\n}\n\nconst StyledContainer = styled.div<{ checked: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2 + 2}px;\n\n  .checkbox {\n    margin-bottom: ${({ theme, checked }) => (checked ? theme.gridUnit : 0)}px;\n  }\n\n  & > div {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\nconst ChildrenContainer = styled.div`\n  margin-left: ${({ theme }) => theme.gridUnit * 6}px;\n`;\n\nconst CollapsibleControl = (props: CollapsibleControlProps) => {\n  const {\n    checked,\n    disabled,\n    title,\n    tooltip,\n    children,\n    onChange = () => {},\n    initialValue = false,\n  } = props;\n  const [isChecked, setIsChecked] = useState(initialValue);\n\n  useEffect(() => {\n    // if external `checked` changed to `undefined`, it means that we work now in uncontrolled mode with local state\n    // and we need ignore external value\n    if (checked !== undefined) {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n\n  return (\n    <StyledContainer checked={isChecked}>\n      <AntdCheckbox\n        className=\"checkbox\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={e => {\n          const value = e.target.checked;\n          // external `checked` value has more priority then local state\n          if (checked === undefined) {\n            // uncontrolled mode\n            setIsChecked(value);\n          }\n          onChange(value);\n        }}\n      >\n        <>\n          {title}&nbsp;\n          {tooltip && (\n            <InfoTooltipWithTrigger placement=\"top\" tooltip={tooltip} />\n          )}\n        </>\n      </AntdCheckbox>\n      {isChecked && <ChildrenContainer>{children}</ChildrenContainer>}\n    </StyledContainer>\n  );\n};\n\nexport { CollapsibleControl, CollapsibleControlProps };\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAeC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,sBAAsB,QAAQ,6BAA6B,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAYrE,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAyB;;;;;gBAKxC,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,EAAE;iBACjC,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC,GAAG,CAAC;;;qBAGjC,CAAC,EAAED,KAAK,EAAEE,OAAO,EAAE,KAAMA,OAAO,GAAGF,KAAK,CAACC,QAAQ,GAAG,CAAE;;;;qBAItD,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;;CAErD;AAED,MAAME,iBAAiB,GAAGV,MAAM,CAACM,GAAG;iBACnB,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;CACjD;AAED,MAAMG,kBAAkB,GAAGA,CAACC,KAA8B,KAAI;EAC5D,MAAM,EACJH,OAAO,EACPI,QAAQ,EACRC,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,QAAQ,GAAGA,CAAA,KAAK,CAAE,CAAC,EACnBC,YAAY,GAAG,KAAK,EACrB,GAAGN,KAAK;EACT,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAACmB,YAAY,CAAC;EAExDpB,SAAS,CAAC,MAAK;IACb;IACA;IACA,IAAIW,OAAO,KAAKY,SAAS,EAAE;MACzBD,YAAY,CAACX,OAAO,CAAC;;EAEzB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,OACEL,aAAA,CAACC,eAAe,IAACI,OAAO,EAAEU,SAAU;EAClCf,aAAA,CAACH,YAAY,IACXqB,SAAS,EAAC,UAAU,EACpBb,OAAO,EAAEU,SAAU,EACnBN,QAAQ,EAAEA,QAAS,EACnBI,QAAQ,EAAEA,CAAAM,CAAC,KAAG;MACZ,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAAChB,OAAO;MAC9B;MACA,IAAIA,OAAO,KAAKY,SAAS,EAAE;QACzB;QACAD,YAAY,CAACI,KAAK,CAAC;;MAErBP,QAAQ,CAACO,KAAK,CAAC;IACjB,CAAE;EAEFpB,aAAA,CAAAP,KAAA,CAAA6B,QAAA;EACGZ,KAAK,EAAC,MACP;EAACC,OAAO,IACNX,aAAA,CAACF,sBAAsB,IAACyB,SAAS,EAAC,KAAK,EAACZ,OAAO,EAAEA,OAAQ;EAE7D;EACY,CACd;EAACI,SAAS,IAAIf,aAAA,CAACM,iBAAiB,QAAEM,QAA4B;EAC/C,CAAC;AAEtB,CAAC,CAACY,aAAA,CA9CIjB,kBAAkB;AAgDxB,SAASA,kBAAkB,GAA4B,mBAAAkB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAV,SAAA,MAAAQ,cAAA,WAAAA,cAAA,CAAAG,QAAA,CArEjD3B,eAAe,kLAAAwB,cAAA,CAAAG,QAAA,CAiBftB,iBAAiB,oLAAAmB,cAAA,CAAAG,QAAA,CAIjBrB,kBAAkB,6MAAAsB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAZ,SAAA,CAAAY,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}