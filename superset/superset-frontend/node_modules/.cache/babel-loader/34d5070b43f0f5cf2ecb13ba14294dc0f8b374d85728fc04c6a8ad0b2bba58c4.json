{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport moment from 'moment';\nimport { getTimeFormatter, getTimeFormatterForGranularity, smartDateFormatter } from '@superset-ui/core';\nexport const parseMetricValue = (metricValue) => {\n  if (typeof metricValue === 'string') {\n    const dateObject = moment.utc(metricValue, moment.ISO_8601, true);\n    if (dateObject.isValid()) {\n      return dateObject.valueOf();\n    }\n    return null;\n  }\n  return metricValue;\n};\nexport const getDateFormatter = (timeFormat, granularity, fallbackFormat) => timeFormat === smartDateFormatter.id ?\ngetTimeFormatterForGranularity(granularity) :\ngetTimeFormatter(timeFormat != null ? timeFormat : fallbackFormat);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(parseMetricValue, \"parseMetricValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/utils.ts\");reactHotLoader.register(getDateFormatter, \"getDateFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["moment","getTimeFormatter","getTimeFormatterForGranularity","smartDateFormatter","parseMetricValue","metricValue","dateObject","utc","ISO_8601","isValid","valueOf","getDateFormatter","timeFormat","granularity","fallbackFormat","id","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport moment from 'moment';\nimport {\n  getTimeFormatter,\n  getTimeFormatterForGranularity,\n  smartDateFormatter,\n  TimeGranularity,\n} from '@superset-ui/core';\n\nexport const parseMetricValue = (metricValue: number | string | null) => {\n  if (typeof metricValue === 'string') {\n    const dateObject = moment.utc(metricValue, moment.ISO_8601, true);\n    if (dateObject.isValid()) {\n      return dateObject.valueOf();\n    }\n    return null;\n  }\n  return metricValue;\n};\n\nexport const getDateFormatter = (\n  timeFormat: string,\n  granularity?: TimeGranularity,\n  fallbackFormat?: string | null,\n) =>\n  timeFormat === smartDateFormatter.id\n    ? getTimeFormatterForGranularity(granularity)\n    : getTimeFormatter(timeFormat ?? fallbackFormat);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SACEC,gBAAgB,EAChBC,8BAA8B,EAC9BC,kBAAkB,QAEb,mBAAmB;AAE1B,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,WAAmC,KAAI;EACtE,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACnC,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAG,CAACF,WAAW,EAAEL,MAAM,CAACQ,QAAQ,EAAE,IAAI,CAAC;IACjE,IAAIF,UAAU,CAACG,OAAO,EAAE,EAAE;MACxB,OAAOH,UAAU,CAACI,OAAO,EAAE;;IAE7B,OAAO,IAAI;;EAEb,OAAOL,WAAW;AACpB,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGA,CAC9BC,UAAkB,EAClBC,WAA6B,EAC7BC,cAA8B,KAE9BF,UAAU,KAAKT,kBAAkB,CAACY,EAAE;AAChCb,8BAA8B,CAACW,WAAW,CAAC;AAC3CZ,gBAAgB,CAACW,UAAU,WAAVA,UAAU,GAAIE,cAAc,CAAC,CAAC,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlBxChB,gBAAgB,oIAAAY,cAAA,CAAAI,QAAA,CAWhBT,gBAAgB,4JAAAU,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}