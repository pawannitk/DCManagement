{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport mexp from 'math-expression-evaluator';\nconst REPLACE_OPERATORS = [\n[new RegExp(/==/g), 'Eq'],\n[new RegExp(/>=/g), 'Gte'],\n[new RegExp(/<=/g), 'Lte'],\n[new RegExp(/>/g), 'Gt'],\n[new RegExp(/</g), 'Lt']];\n\nconst TOKENS = [\n{\n  type: 3,\n  token: 'x',\n  show: 'x',\n  value: 'x'\n},\n{\n  type: 2,\n  token: '&',\n  show: '&',\n  value: (a, b) => a & b\n},\n{\n  type: 2,\n  token: '|',\n  show: '|',\n  value: (a, b) => a | b\n},\n{\n  type: 2,\n  token: 'and',\n  show: 'and',\n  value: (a, b) => a && b\n},\n{\n  type: 2,\n  token: 'xor',\n  show: 'xor',\n  value: (a, b) => a ^ b\n},\n{\n  type: 2,\n  token: 'or',\n  show: 'or',\n  value: (a, b) => Number(a || b)\n},\n{\n  type: 2,\n  token: 'Eq',\n  show: 'Eq',\n  value: (a, b) => Number(a === b)\n},\n{\n  type: 2,\n  token: 'Lt',\n  show: 'Lt',\n  value: (a, b) => Number(a < b)\n},\n{\n  type: 2,\n  token: 'Lte',\n  show: 'Lte',\n  value: (a, b) => Number(a <= b)\n},\n{\n  type: 2,\n  token: 'Gt',\n  show: 'Gt',\n  value: (a, b) => Number(a > b)\n},\n{\n  type: 2,\n  token: 'Gte',\n  show: 'Gte',\n  value: (a, b) => Number(a >= b)\n}];\n\nexport function evalExpression(expression, value) {var _subExpressions$;\n  let parsedExpression = expression;\n  // replace `<` with `Lt` (and others) to avoid clashes with builtin function operators\n  // that are not needed in Superset.\n  REPLACE_OPERATORS.forEach(([key, value]) => {\n    parsedExpression = parsedExpression.replace(key, value);\n  });\n  const subExpressions = String(parsedExpression).split('=');\n  parsedExpression = (_subExpressions$ = subExpressions[1]) != null ? _subExpressions$ : subExpressions[0];\n  // we can ignore the type requirement on `TOKENS`, as value is always `number`\n  // and doesn't need to consider `number | undefined`.\n  // @ts-ignore\n  return Number(mexp.eval(parsedExpression, TOKENS, { x: value }));\n}\nexport function isValidExpression(expression) {\n  try {\n    evalExpression(expression, 0);\n  }\n  catch (err) {\n    return false;\n  }\n  return true;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(REPLACE_OPERATORS, \"REPLACE_OPERATORS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/math-expression/index.ts\");reactHotLoader.register(TOKENS, \"TOKENS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/math-expression/index.ts\");reactHotLoader.register(evalExpression, \"evalExpression\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/math-expression/index.ts\");reactHotLoader.register(isValidExpression, \"isValidExpression\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/math-expression/index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["mexp","REPLACE_OPERATORS","RegExp","TOKENS","type","token","show","value","a","b","Number","evalExpression","expression","_subExpressions$","parsedExpression","forEach","key","replace","subExpressions","String","split","eval","x","isValidExpression","err","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/math-expression/index.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport mexp from 'math-expression-evaluator';\n\nconst REPLACE_OPERATORS: [RegExp, string][] = [\n  [new RegExp(/==/g), 'Eq'],\n  [new RegExp(/>=/g), 'Gte'],\n  [new RegExp(/<=/g), 'Lte'],\n  [new RegExp(/>/g), 'Gt'],\n  [new RegExp(/</g), 'Lt'],\n];\n\nconst TOKENS = [\n  {\n    type: 3,\n    token: 'x',\n    show: 'x',\n    value: 'x',\n  },\n  {\n    type: 2,\n    token: '&',\n    show: '&',\n    value: (a: number, b: number): number => a & b,\n  },\n  {\n    type: 2,\n    token: '|',\n    show: '|',\n    value: (a: number, b: number): number => a | b,\n  },\n  {\n    type: 2,\n    token: 'and',\n    show: 'and',\n    value: (a: number, b: number): number => a && b,\n  },\n  {\n    type: 2,\n    token: 'xor',\n    show: 'xor',\n    value: (a: number, b: number): number => a ^ b,\n  },\n  {\n    type: 2,\n    token: 'or',\n    show: 'or',\n    value: (a: number, b: number): number => Number(a || b),\n  },\n  {\n    type: 2,\n    token: 'Eq',\n    show: 'Eq',\n    value: (a: number, b: number): number => Number(a === b),\n  },\n  {\n    type: 2,\n    token: 'Lt',\n    show: 'Lt',\n    value: (a: number, b: number): number => Number(a < b),\n  },\n  {\n    type: 2,\n    token: 'Lte',\n    show: 'Lte',\n    value: (a: number, b: number): number => Number(a <= b),\n  },\n  {\n    type: 2,\n    token: 'Gt',\n    show: 'Gt',\n    value: (a: number, b: number): number => Number(a > b),\n  },\n  {\n    type: 2,\n    token: 'Gte',\n    show: 'Gte',\n    value: (a: number, b: number): number => Number(a >= b),\n  },\n];\n\nexport function evalExpression(expression: string, value: number): number {\n  let parsedExpression = expression;\n  // replace `<` with `Lt` (and others) to avoid clashes with builtin function operators\n  // that are not needed in Superset.\n  REPLACE_OPERATORS.forEach(([key, value]) => {\n    parsedExpression = parsedExpression.replace(key, value);\n  });\n  const subExpressions = String(parsedExpression).split('=');\n  parsedExpression = subExpressions[1] ?? subExpressions[0];\n  // we can ignore the type requirement on `TOKENS`, as value is always `number`\n  // and doesn't need to consider `number | undefined`.\n  // @ts-ignore\n  return Number(mexp.eval(parsedExpression, TOKENS, { x: value }));\n}\n\nexport function isValidExpression(expression: string): boolean {\n  try {\n    evalExpression(expression, 0);\n  } catch (err) {\n    return false;\n  }\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}