{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { isFilterDivider } from '@superset-ui/core';\nimport FilterControl from './FilterControls/FilterControl';\nimport { useFilters } from './state';\nimport FilterDivider from './FilterControls/FilterDivider';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const useFilterControlFactory = (dataMaskSelected, onFilterSelectionChange) => {\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const filtersWithValues = useMemo(() => filterValues.map((filter) => ({\n    ...filter,\n    dataMask: dataMaskSelected[filter.id]\n  })), [filterValues, dataMaskSelected]);\n  const filterControlFactory = useCallback((index, filterBarOrientation, overflow) => {\n    const filter = filtersWithValues[index];\n    if (isFilterDivider(filter)) {\n      return ___EmotionJSX(FilterDivider, { title: filter.title, description: filter.description, orientation: filterBarOrientation, overflow: overflow });\n    }\n    return ___EmotionJSX(FilterControl, { dataMaskSelected: dataMaskSelected, filter: filter, onFilterSelectionChange: onFilterSelectionChange, inView: false, orientation: filterBarOrientation, overflow: overflow });\n  }, [filtersWithValues, dataMaskSelected, onFilterSelectionChange]);\n  return { filterControlFactory, filtersWithValues };\n};__signature__(useFilterControlFactory, \"useFilters{filters}\\nuseMemo{filterValues}\\nuseMemo{filtersWithValues}\\nuseCallback{filterControlFactory}\", () => [useFilters]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterControlFactory, \"useFilterControlFactory\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/useFilterControlFactory.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useMemo","isFilterDivider","FilterControl","useFilters","FilterDivider","jsx","___EmotionJSX","useFilterControlFactory","dataMaskSelected","onFilterSelectionChange","filters","filterValues","Object","values","filtersWithValues","map","filter","dataMask","id","filterControlFactory","index","filterBarOrientation","overflow","title","description","orientation","inView","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/useFilterControlFactory.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  DataMask,\n  DataMaskStateWithId,\n  Divider,\n  Filter,\n  isFilterDivider,\n} from '@superset-ui/core';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport FilterControl from './FilterControls/FilterControl';\nimport { useFilters } from './state';\nimport FilterDivider from './FilterControls/FilterDivider';\n\nexport const useFilterControlFactory = (\n  dataMaskSelected: DataMaskStateWithId,\n  onFilterSelectionChange: (filter: Filter, dataMask: DataMask) => void,\n) => {\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const filtersWithValues: (Filter | Divider)[] = useMemo(\n    () =>\n      filterValues.map(filter => ({\n        ...filter,\n        dataMask: dataMaskSelected[filter.id],\n      })),\n    [filterValues, dataMaskSelected],\n  );\n\n  const filterControlFactory = useCallback(\n    (\n      index: number,\n      filterBarOrientation: FilterBarOrientation,\n      overflow: boolean,\n    ) => {\n      const filter = filtersWithValues[index];\n      if (isFilterDivider(filter)) {\n        return (\n          <FilterDivider\n            title={filter.title}\n            description={filter.description}\n            orientation={filterBarOrientation}\n            overflow={overflow}\n          />\n        );\n      }\n      return (\n        <FilterControl\n          dataMaskSelected={dataMaskSelected}\n          filter={filter}\n          onFilterSelectionChange={onFilterSelectionChange}\n          inView={false}\n          orientation={filterBarOrientation}\n          overflow={overflow}\n        />\n      );\n    },\n    [filtersWithValues, dataMaskSelected, onFilterSelectionChange],\n  );\n\n  return { filterControlFactory, filtersWithValues };\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAKEC,eAAe,QACV,mBAAmB;AAE1B,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAOC,aAAa,MAAM,gCAAgC,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAE3D,OAAO,MAAMC,uBAAuB,GAAGA,CACrCC,gBAAqC,EACrCC,uBAAqE,KACnE;EACF,MAAMC,OAAO,GAAGP,UAAU,EAAE;EAC5B,MAAMQ,YAAY,GAAGX,OAAO,CAAC,MAAMY,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACrE,MAAMI,iBAAiB,GAAyBd,OAAO,CACrD,MACEW,YAAY,CAACI,GAAG,CAAC,CAAAC,MAAM,MAAK;IAC1B,GAAGA,MAAM;IACTC,QAAQ,EAAET,gBAAgB,CAACQ,MAAM,CAACE,EAAE;GACrC,CAAC,CAAC,EACL,CAACP,YAAY,EAAEH,gBAAgB,CAAC,CACjC;EAED,MAAMW,oBAAoB,GAAGpB,WAAW,CACtC,CACEqB,KAAa,EACbC,oBAA0C,EAC1CC,QAAiB,KACf;IACF,MAAMN,MAAM,GAAGF,iBAAiB,CAACM,KAAK,CAAC;IACvC,IAAInB,eAAe,CAACe,MAAM,CAAC,EAAE;MAC3B,OACEV,aAAA,CAACF,aAAa,IACZmB,KAAK,EAAEP,MAAM,CAACO,KAAM,EACpBC,WAAW,EAAER,MAAM,CAACQ,WAAY,EAChCC,WAAW,EAAEJ,oBAAqB,EAClCC,QAAQ,EAAEA,QAAS,GACnB;;IAGN,OACEhB,aAAA,CAACJ,aAAa,IACZM,gBAAgB,EAAEA,gBAAiB,EACnCQ,MAAM,EAAEA,MAAO,EACfP,uBAAuB,EAAEA,uBAAwB,EACjDiB,MAAM,EAAE,KAAM,EACdD,WAAW,EAAEJ,oBAAqB,EAClCC,QAAQ,EAAEA,QAAS,GACnB;EAEN,CAAC,EACD,CAACR,iBAAiB,EAAEN,gBAAgB,EAAEC,uBAAuB,CAAC,CAC/D;EAED,OAAO,EAAEU,oBAAoB,EAAEL,iBAAiB,EAAE;AACpD,CAAC,CAACa,aAAA,CA/CWpB,uBAAuB,sHAIlBJ,UAAU,sBAAAyB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAJfzB,uBAAuB,4LAAA0B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}