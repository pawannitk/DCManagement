{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getColumnLabel, getNumberFormatter, getTimeFormatter } from '@superset-ui/core';\nimport { formatSeriesName } from './series';\nconst getCrossFilterDataMask = (selectedValues, groupby, labelMap) => (value) => {\n  const selected = Object.values(selectedValues);\n  let values;\n  if (selected.includes(value)) {\n    values = selected.filter((v) => v !== value);\n  } else\n  {\n    values = [value];\n  }\n  const groupbyValues = values.map((value) => labelMap[value]);\n  return {\n    dataMask: {\n      extraFormData: {\n        filters: values.length === 0 ?\n        [] :\n        groupby.map((col, idx) => {\n          const val = groupbyValues.map((v) => v[idx]);\n          if (val === null || val === undefined)\n          return {\n            col,\n            op: 'IS NULL'\n          };\n          return {\n            col,\n            op: 'IN',\n            val: val\n          };\n        })\n      },\n      filterState: {\n        value: groupbyValues.length ? groupbyValues : null,\n        selectedValues: values.length ? values : null\n      }\n    },\n    isCurrentValueSelected: selected.includes(value)\n  };\n};\nexport const clickEventHandler = (getCrossFilterDataMask, setDataMask, emitCrossFilters) => ({ name }) => {var _getCrossFilterDataMa;\n  if (!emitCrossFilters) {\n    return;\n  }\n  const dataMask = (_getCrossFilterDataMa = getCrossFilterDataMask(name)) == null ? void 0 : _getCrossFilterDataMa.dataMask;\n  if (dataMask) {\n    setDataMask(dataMask);\n  }\n};\nexport const contextMenuEventHandler = (groupby, onContextMenu, labelMap, getCrossFilterDataMask, formData, coltypeMapping) => (e) => {\n  if (onContextMenu) {\n    e.event.stop();\n    const pointerEvent = e.event.event;\n    const drillFilters = [];\n    if (groupby.length > 0) {\n      const values = labelMap[e.name];\n      groupby.forEach((dimension, i) => {\n        drillFilters.push({\n          col: dimension,\n          op: '==',\n          val: values[i],\n          formattedVal: formatSeriesName(values[i], {\n            timeFormatter: getTimeFormatter(formData.dateFormat),\n            numberFormatter: getNumberFormatter(formData.numberFormat),\n            coltype: coltypeMapping == null ? void 0 : coltypeMapping[getColumnLabel(dimension)]\n          })\n        });\n      });\n    }\n    onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n      drillToDetail: drillFilters,\n      crossFilter: getCrossFilterDataMask(e.name),\n      drillBy: { filters: drillFilters, groupbyFieldName: 'groupby' }\n    });\n  }\n};\nexport const allEventHandlers = (transformedProps) => {\n  const { groupby, onContextMenu, setDataMask, labelMap, emitCrossFilters, selectedValues, coltypeMapping, formData } = transformedProps;\n  const eventHandlers = {\n    click: clickEventHandler(getCrossFilterDataMask(selectedValues, groupby, labelMap), setDataMask, emitCrossFilters),\n    contextmenu: contextMenuEventHandler(groupby, onContextMenu, labelMap, getCrossFilterDataMask(selectedValues, groupby, labelMap), formData, coltypeMapping)\n  };\n  return eventHandlers;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getCrossFilterDataMask, \"getCrossFilterDataMask\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts\");reactHotLoader.register(clickEventHandler, \"clickEventHandler\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts\");reactHotLoader.register(contextMenuEventHandler, \"contextMenuEventHandler\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts\");reactHotLoader.register(allEventHandlers, \"allEventHandlers\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getColumnLabel","getNumberFormatter","getTimeFormatter","formatSeriesName","getCrossFilterDataMask","selectedValues","groupby","labelMap","value","selected","Object","values","includes","filter","v","groupbyValues","map","dataMask","extraFormData","filters","length","col","idx","val","undefined","op","filterState","isCurrentValueSelected","clickEventHandler","setDataMask","emitCrossFilters","name","_getCrossFilterDataMa","contextMenuEventHandler","onContextMenu","formData","coltypeMapping","e","event","stop","pointerEvent","drillFilters","forEach","dimension","i","push","formattedVal","timeFormatter","dateFormat","numberFormatter","numberFormat","coltype","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName","allEventHandlers","transformedProps","eventHandlers","click","contextmenu","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  BinaryQueryObjectFilterClause,\n  ContextMenuFilters,\n  DataMask,\n  QueryFormColumn,\n  QueryFormData,\n  getColumnLabel,\n  getNumberFormatter,\n  getTimeFormatter,\n} from '@superset-ui/core';\n\nimport {\n  BaseTransformedProps,\n  CrossFilterTransformedProps,\n  EventHandlers,\n} from '../types';\nimport { formatSeriesName } from './series';\n\nexport type Event = {\n  name: string;\n  event: { stop: () => void; event: PointerEvent };\n};\n\nconst getCrossFilterDataMask =\n  (\n    selectedValues: Record<number, string>,\n    groupby: QueryFormColumn[],\n    labelMap: Record<string, string[]>,\n  ) =>\n  (value: string) => {\n    const selected = Object.values(selectedValues);\n    let values: string[];\n    if (selected.includes(value)) {\n      values = selected.filter(v => v !== value);\n    } else {\n      values = [value];\n    }\n\n    const groupbyValues = values.map(value => labelMap[value]);\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters:\n            values.length === 0\n              ? []\n              : groupby.map((col, idx) => {\n                  const val = groupbyValues.map(v => v[idx]);\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL' as const,\n                    };\n                  return {\n                    col,\n                    op: 'IN' as const,\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value: groupbyValues.length ? groupbyValues : null,\n          selectedValues: values.length ? values : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(value),\n    };\n  };\n\nexport const clickEventHandler =\n  (\n    getCrossFilterDataMask: (\n      value: string,\n    ) => ContextMenuFilters['crossFilter'],\n    setDataMask: (dataMask: DataMask) => void,\n    emitCrossFilters?: boolean,\n  ) =>\n  ({ name }: { name: string }) => {\n    if (!emitCrossFilters) {\n      return;\n    }\n    const dataMask = getCrossFilterDataMask(name)?.dataMask;\n    if (dataMask) {\n      setDataMask(dataMask);\n    }\n  };\n\nexport const contextMenuEventHandler =\n  (\n    groupby: (BaseTransformedProps<any> &\n      CrossFilterTransformedProps)['groupby'],\n    onContextMenu: BaseTransformedProps<any>['onContextMenu'],\n    labelMap: Record<string, string[]>,\n    getCrossFilterDataMask: (\n      value: string,\n    ) => ContextMenuFilters['crossFilter'],\n    formData: QueryFormData,\n    coltypeMapping?: Record<string, number>,\n  ) =>\n  (e: Event) => {\n    if (onContextMenu) {\n      e.event.stop();\n      const pointerEvent = e.event.event;\n      const drillFilters: BinaryQueryObjectFilterClause[] = [];\n      if (groupby.length > 0) {\n        const values = labelMap[e.name];\n        groupby.forEach((dimension, i) => {\n          drillFilters.push({\n            col: dimension,\n            op: '==',\n            val: values[i],\n            formattedVal: formatSeriesName(values[i], {\n              timeFormatter: getTimeFormatter(formData.dateFormat),\n              numberFormatter: getNumberFormatter(formData.numberFormat),\n              coltype: coltypeMapping?.[getColumnLabel(dimension)],\n            }),\n          });\n        });\n      }\n      onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n        drillToDetail: drillFilters,\n        crossFilter: getCrossFilterDataMask(e.name),\n        drillBy: { filters: drillFilters, groupbyFieldName: 'groupby' },\n      });\n    }\n  };\n\nexport const allEventHandlers = (\n  transformedProps: BaseTransformedProps<any> & CrossFilterTransformedProps,\n) => {\n  const {\n    groupby,\n    onContextMenu,\n    setDataMask,\n    labelMap,\n    emitCrossFilters,\n    selectedValues,\n    coltypeMapping,\n    formData,\n  } = transformedProps;\n  const eventHandlers: EventHandlers = {\n    click: clickEventHandler(\n      getCrossFilterDataMask(selectedValues, groupby, labelMap),\n      setDataMask,\n      emitCrossFilters,\n    ),\n    contextmenu: contextMenuEventHandler(\n      groupby,\n      onContextMenu,\n      labelMap,\n      getCrossFilterDataMask(selectedValues, groupby, labelMap),\n      formData,\n      coltypeMapping,\n    ),\n  };\n  return eventHandlers;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}