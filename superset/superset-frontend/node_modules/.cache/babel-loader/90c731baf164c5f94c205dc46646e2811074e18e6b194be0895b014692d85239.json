{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useCallback, useMemo, useRef, useState } from 'react';\nimport { css, t, isFeatureEnabled, FeatureFlag, isNativeFilterWithDataMask } from '@superset-ui/core';\nimport { createHtmlPortalNode, InPortal, OutPortal } from 'react-reverse-portal';\nimport { useSelector } from 'react-redux';\nimport { useDashboardHasTabs, useSelectFiltersInScope } from 'src/dashboard/components/nativeFilters/state';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport DropdownContainer from 'src/components/DropdownContainer';\nimport Icons from 'src/components/Icons';\nimport { FiltersOutOfScopeCollapsible } from '../FiltersOutOfScopeCollapsible';\nimport { useFilterControlFactory } from '../useFilterControlFactory';\nimport { FiltersDropdownContent } from '../FiltersDropdownContent';\nimport crossFiltersSelector from '../CrossFilters/selectors';\nimport CrossFilter from '../CrossFilters/CrossFilter';\nimport { useFilterOutlined } from '../useFilterOutlined';\nimport { useChartsVerboseMaps } from '../utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst FilterControls = ({ dataMaskSelected, onFilterSelectionChange }) => {\n  const filterBarOrientation = useSelector(({ dashboardInfo }) => isFeatureEnabled(FeatureFlag.HorizontalFilterBar) ?\n  dashboardInfo.filterBarOrientation :\n  FilterBarOrientation.Vertical);\n  const { outlinedFilterId, lastUpdated } = useFilterOutlined();\n  const [overflowedIds, setOverflowedIds] = useState([]);\n  const popoverRef = useRef(null);\n  const dataMask = useSelector((state) => state.dataMask);\n  const chartConfiguration = useSelector((state) => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.chart_configuration;});\n  const dashboardLayout = useSelector((state) => state.dashboardLayout.present);\n  const verboseMaps = useChartsVerboseMaps();\n  const isCrossFiltersEnabled = isFeatureEnabled(FeatureFlag.DashboardCrossFilters);\n  const selectedCrossFilters = useMemo(() => isCrossFiltersEnabled ?\n  crossFiltersSelector({\n    dataMask,\n    chartConfiguration,\n    dashboardLayout,\n    verboseMaps\n  }) :\n  [], [chartConfiguration, dashboardLayout, dataMask, isCrossFiltersEnabled]);\n  const { filterControlFactory, filtersWithValues } = useFilterControlFactory(dataMaskSelected, onFilterSelectionChange);\n  const portalNodes = useMemo(() => {\n    const nodes = new Array(filtersWithValues.length);\n    for (let i = 0; i < filtersWithValues.length; i += 1) {\n      nodes[i] = createHtmlPortalNode();\n    }\n    return nodes;\n  }, [filtersWithValues.length]);\n  const filterIds = new Set(filtersWithValues.map((item) => item.id));\n  const [filtersInScope, filtersOutOfScope] = useSelectFiltersInScope(filtersWithValues);\n  const hasRequiredFirst = useMemo(() => filtersWithValues.some((filter) => filter.requiredFirst), [filtersWithValues]);\n  const dashboardHasTabs = useDashboardHasTabs();\n  const showCollapsePanel = dashboardHasTabs && filtersWithValues.length > 0;\n  const renderer = useCallback(({ id }, index) => {\n    const filterIndex = filtersWithValues.findIndex((f) => f.id === id);\n    const key = index != null ? index : id;\n    return (\n      // Empty text node is to ensure there's always an element preceding\n      // the OutPortal, otherwise react-reverse-portal crashes\n      ___EmotionJSX(React.Fragment, { key: key },\n      '' /* eslint-disable-line react/jsx-curly-brace-presence */,\n      ___EmotionJSX(OutPortal, { node: portalNodes[filterIndex], inView: true })\n      ));\n  }, [filtersWithValues, portalNodes]);\n  const renderVerticalContent = () => ___EmotionJSX(React.Fragment, null,\n  filtersInScope.map(renderer),\n  showCollapsePanel && ___EmotionJSX(FiltersOutOfScopeCollapsible, { filtersOutOfScope: filtersOutOfScope, forceRender: hasRequiredFirst, hasTopMargin: filtersInScope.length > 0, renderer: renderer })\n  );\n  const overflowedFiltersInScope = useMemo(() => filtersInScope.filter(({ id }) => overflowedIds == null ? void 0 : overflowedIds.includes(id)), [filtersInScope, overflowedIds]);\n  const overflowedCrossFilters = useMemo(() => selectedCrossFilters.filter(({ emitterId, name }) => overflowedIds == null ? void 0 : overflowedIds.includes(`${name}${emitterId}`)), [overflowedIds, selectedCrossFilters]);\n  const activeOverflowedFiltersInScope = useMemo(() => {\n    const activeOverflowedFilters = overflowedFiltersInScope.filter((filter) => isNativeFilterWithDataMask(filter));\n    return [...activeOverflowedFilters, ...overflowedCrossFilters];\n  }, [overflowedCrossFilters, overflowedFiltersInScope]);\n  const rendererCrossFilter = useCallback((crossFilter, orientation, last) => ___EmotionJSX(CrossFilter, { filter: crossFilter, orientation: orientation, last: filtersInScope.length > 0 &&\n    `${last.name}${last.emitterId}` ===\n    `${crossFilter.name}${crossFilter.emitterId}` }), [filtersInScope.length]);\n  const items = useMemo(() => {\n    const crossFilters = selectedCrossFilters.map((c) => ({\n      // a combination of filter name and chart id to account\n      // for multiple cross filters from the same chart in the future\n      id: `${c.name}${c.emitterId}`,\n      element: rendererCrossFilter(c, FilterBarOrientation.Horizontal, selectedCrossFilters.at(-1))\n    }));\n    const nativeFiltersInScope = filtersInScope.map((filter, index) => ({\n      id: filter.id,\n      element: ___EmotionJSX(\"div\", { className: \"filter-item-wrapper\", css: css`\n            flex-shrink: 0;\n          ` },\n      renderer(filter, index)\n      )\n    }));\n    return [...crossFilters, ...nativeFiltersInScope];\n  }, [filtersInScope, renderer, rendererCrossFilter, selectedCrossFilters]);\n  const renderHorizontalContent = () => ___EmotionJSX(\"div\", { css: (theme) => css`\n        padding: 0 ${theme.gridUnit * 4}px;\n        min-width: 0;\n        flex: 1;\n      ` },\n  ___EmotionJSX(DropdownContainer, { items: items, dropdownTriggerIcon: ___EmotionJSX(Icons.FilterSmall, { css: css`\n              && {\n                margin-right: -4px;\n                display: flex;\n              }\n            ` }), dropdownTriggerText: t('More filters'), dropdownTriggerCount: activeOverflowedFiltersInScope.length, dropdownTriggerTooltip: activeOverflowedFiltersInScope.length === 0 ?\n    t('No applied filters') :\n    t('Applied filters: %s', activeOverflowedFiltersInScope.\n    map((filter) => filter.name).\n    join(', ')), dropdownContent: overflowedFiltersInScope.length ||\n    overflowedCrossFilters.length ||\n    filtersOutOfScope.length && showCollapsePanel ?\n    () => ___EmotionJSX(FiltersDropdownContent, { overflowedCrossFilters: overflowedCrossFilters, filtersInScope: overflowedFiltersInScope, filtersOutOfScope: filtersOutOfScope, renderer: renderer, rendererCrossFilter: rendererCrossFilter, showCollapsePanel: showCollapsePanel, forceRenderOutOfScope: hasRequiredFirst }) :\n    undefined, forceRender: hasRequiredFirst, ref: popoverRef, onOverflowingStateChange: ({ overflowed: nextOverflowedIds }) => {\n      if (nextOverflowedIds.length !== overflowedIds.length ||\n      overflowedIds.reduce((a, b, i) => a || b !== nextOverflowedIds[i], false)) {\n        setOverflowedIds(nextOverflowedIds);\n      }\n    } })\n  );\n  const overflowedByIndex = useMemo(() => {\n    const filtersOutOfScopeIds = new Set(filtersOutOfScope.map(({ id }) => id));\n    const overflowedFiltersInScopeIds = new Set(overflowedFiltersInScope.map(({ id }) => id));\n    return filtersWithValues.map((filter) => filtersOutOfScopeIds.has(filter.id) ||\n    overflowedFiltersInScopeIds.has(filter.id));\n  }, [filtersOutOfScope, filtersWithValues, overflowedFiltersInScope]);\n  useEffect(() => {\n    if (outlinedFilterId && overflowedIds.includes(outlinedFilterId)) {var _popoverRef$current;\n      popoverRef == null ? void 0 : (_popoverRef$current = popoverRef.current) == null ? void 0 : _popoverRef$current.open();\n    }\n  }, [outlinedFilterId, lastUpdated, popoverRef, overflowedIds]);\n  return ___EmotionJSX(React.Fragment, null,\n  portalNodes.\n  filter((node, index) => filterIds.has(filtersWithValues[index].id)).\n  map((node, index) => ___EmotionJSX(InPortal, { node: node, key: filtersWithValues[index].id },\n  filterControlFactory(index, filterBarOrientation, overflowedByIndex[index])\n  )),\n  filterBarOrientation === FilterBarOrientation.Vertical &&\n  renderVerticalContent(),\n  filterBarOrientation === FilterBarOrientation.Horizontal &&\n  renderHorizontalContent()\n  );\n};__signature__(FilterControls, \"useSelector{filterBarOrientation}\\nuseFilterOutlined{{ outlinedFilterId, lastUpdated }}\\nuseState{[overflowedIds, setOverflowedIds]([])}\\nuseRef{popoverRef}\\nuseSelector{dataMask}\\nuseSelector{chartConfiguration}\\nuseSelector{dashboardLayout}\\nuseChartsVerboseMaps{verboseMaps}\\nuseMemo{selectedCrossFilters}\\nuseFilterControlFactory{{ filterControlFactory, filtersWithValues }}\\nuseMemo{portalNodes}\\nuseSelectFiltersInScope{[filtersInScope, filtersOutOfScope]}\\nuseMemo{hasRequiredFirst}\\nuseDashboardHasTabs{dashboardHasTabs}\\nuseCallback{renderer}\\nuseMemo{overflowedFiltersInScope}\\nuseMemo{overflowedCrossFilters}\\nuseMemo{activeOverflowedFiltersInScope}\\nuseCallback{rendererCrossFilter}\\nuseMemo{items}\\nuseMemo{overflowedByIndex}\\nuseEffect{}\", () => [useSelector, useFilterOutlined, useSelector, useSelector, useSelector, useChartsVerboseMaps, useFilterControlFactory, useSelectFiltersInScope, useDashboardHasTabs]);const _default = /*#__PURE__*/\nReact.memo(FilterControls);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterControls, \"FilterControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/FilterControls.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/FilterControls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useCallback","useMemo","useRef","useState","css","t","isFeatureEnabled","FeatureFlag","isNativeFilterWithDataMask","createHtmlPortalNode","InPortal","OutPortal","useSelector","useDashboardHasTabs","useSelectFiltersInScope","FilterBarOrientation","DropdownContainer","Icons","FiltersOutOfScopeCollapsible","useFilterControlFactory","FiltersDropdownContent","crossFiltersSelector","CrossFilter","useFilterOutlined","useChartsVerboseMaps","jsx","___EmotionJSX","FilterControls","dataMaskSelected","onFilterSelectionChange","filterBarOrientation","dashboardInfo","HorizontalFilterBar","Vertical","outlinedFilterId","lastUpdated","overflowedIds","setOverflowedIds","popoverRef","dataMask","state","chartConfiguration","_state$dashboardInfo$","metadata","chart_configuration","dashboardLayout","present","verboseMaps","isCrossFiltersEnabled","DashboardCrossFilters","selectedCrossFilters","filterControlFactory","filtersWithValues","portalNodes","nodes","Array","length","i","filterIds","Set","map","item","id","filtersInScope","filtersOutOfScope","hasRequiredFirst","some","filter","requiredFirst","dashboardHasTabs","showCollapsePanel","renderer","index","filterIndex","findIndex","f","key","Fragment","node","inView","renderVerticalContent","forceRender","hasTopMargin","overflowedFiltersInScope","includes","overflowedCrossFilters","emitterId","name","activeOverflowedFiltersInScope","activeOverflowedFilters","rendererCrossFilter","crossFilter","orientation","last","items","crossFilters","c","element","Horizontal","at","nativeFiltersInScope","className","renderHorizontalContent","theme","gridUnit","dropdownTriggerIcon","FilterSmall","dropdownTriggerText","dropdownTriggerCount","dropdownTriggerTooltip","join","dropdownContent","forceRenderOutOfScope","undefined","ref","onOverflowingStateChange","overflowed","nextOverflowedIds","reduce","a","b","overflowedByIndex","filtersOutOfScopeIds","overflowedFiltersInScopeIds","has","_popoverRef$current","current","open","__signature__","_default","memo","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterControls/FilterControls.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FC,\n  useEffect,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  DataMask,\n  DataMaskStateWithId,\n  Filter,\n  Divider,\n  css,\n  SupersetTheme,\n  t,\n  isFeatureEnabled,\n  FeatureFlag,\n  isNativeFilterWithDataMask,\n  JsonObject,\n} from '@superset-ui/core';\nimport {\n  createHtmlPortalNode,\n  InPortal,\n  OutPortal,\n} from 'react-reverse-portal';\nimport { useSelector } from 'react-redux';\nimport {\n  useDashboardHasTabs,\n  useSelectFiltersInScope,\n} from 'src/dashboard/components/nativeFilters/state';\nimport {\n  DashboardLayout,\n  FilterBarOrientation,\n  RootState,\n} from 'src/dashboard/types';\nimport DropdownContainer, {\n  Ref as DropdownContainerRef,\n} from 'src/components/DropdownContainer';\nimport Icons from 'src/components/Icons';\nimport { FiltersOutOfScopeCollapsible } from '../FiltersOutOfScopeCollapsible';\nimport { useFilterControlFactory } from '../useFilterControlFactory';\nimport { FiltersDropdownContent } from '../FiltersDropdownContent';\nimport crossFiltersSelector from '../CrossFilters/selectors';\nimport CrossFilter from '../CrossFilters/CrossFilter';\nimport { useFilterOutlined } from '../useFilterOutlined';\nimport { useChartsVerboseMaps } from '../utils';\n\ntype FilterControlsProps = {\n  dataMaskSelected: DataMaskStateWithId;\n  onFilterSelectionChange: (filter: Filter, dataMask: DataMask) => void;\n};\n\nconst FilterControls: FC<FilterControlsProps> = ({\n  dataMaskSelected,\n  onFilterSelectionChange,\n}) => {\n  const filterBarOrientation = useSelector<RootState, FilterBarOrientation>(\n    ({ dashboardInfo }) =>\n      isFeatureEnabled(FeatureFlag.HorizontalFilterBar)\n        ? dashboardInfo.filterBarOrientation\n        : FilterBarOrientation.Vertical,\n  );\n\n  const { outlinedFilterId, lastUpdated } = useFilterOutlined();\n\n  const [overflowedIds, setOverflowedIds] = useState<string[]>([]);\n  const popoverRef = useRef<DropdownContainerRef>(null);\n\n  const dataMask = useSelector<RootState, DataMaskStateWithId>(\n    state => state.dataMask,\n  );\n  const chartConfiguration = useSelector<RootState, JsonObject>(\n    state => state.dashboardInfo.metadata?.chart_configuration,\n  );\n  const dashboardLayout = useSelector<RootState, DashboardLayout>(\n    state => state.dashboardLayout.present,\n  );\n  const verboseMaps = useChartsVerboseMaps();\n\n  const isCrossFiltersEnabled = isFeatureEnabled(\n    FeatureFlag.DashboardCrossFilters,\n  );\n  const selectedCrossFilters = useMemo(\n    () =>\n      isCrossFiltersEnabled\n        ? crossFiltersSelector({\n            dataMask,\n            chartConfiguration,\n            dashboardLayout,\n            verboseMaps,\n          })\n        : [],\n    [chartConfiguration, dashboardLayout, dataMask, isCrossFiltersEnabled],\n  );\n  const { filterControlFactory, filtersWithValues } = useFilterControlFactory(\n    dataMaskSelected,\n    onFilterSelectionChange,\n  );\n  const portalNodes = useMemo(() => {\n    const nodes = new Array(filtersWithValues.length);\n    for (let i = 0; i < filtersWithValues.length; i += 1) {\n      nodes[i] = createHtmlPortalNode();\n    }\n    return nodes;\n  }, [filtersWithValues.length]);\n\n  const filterIds = new Set(filtersWithValues.map(item => item.id));\n\n  const [filtersInScope, filtersOutOfScope] =\n    useSelectFiltersInScope(filtersWithValues);\n\n  const hasRequiredFirst = useMemo(\n    () => filtersWithValues.some(filter => filter.requiredFirst),\n    [filtersWithValues],\n  );\n\n  const dashboardHasTabs = useDashboardHasTabs();\n  const showCollapsePanel = dashboardHasTabs && filtersWithValues.length > 0;\n\n  const renderer = useCallback(\n    ({ id }: Filter | Divider, index: number | undefined) => {\n      const filterIndex = filtersWithValues.findIndex(f => f.id === id);\n      const key = index ?? id;\n      return (\n        // Empty text node is to ensure there's always an element preceding\n        // the OutPortal, otherwise react-reverse-portal crashes\n        <React.Fragment key={key}>\n          {'' /* eslint-disable-line react/jsx-curly-brace-presence */}\n          <OutPortal node={portalNodes[filterIndex]} inView />\n        </React.Fragment>\n      );\n    },\n    [filtersWithValues, portalNodes],\n  );\n\n  const renderVerticalContent = () => (\n    <>\n      {filtersInScope.map(renderer)}\n      {showCollapsePanel && (\n        <FiltersOutOfScopeCollapsible\n          filtersOutOfScope={filtersOutOfScope}\n          forceRender={hasRequiredFirst}\n          hasTopMargin={filtersInScope.length > 0}\n          renderer={renderer}\n        />\n      )}\n    </>\n  );\n\n  const overflowedFiltersInScope = useMemo(\n    () => filtersInScope.filter(({ id }) => overflowedIds?.includes(id)),\n    [filtersInScope, overflowedIds],\n  );\n\n  const overflowedCrossFilters = useMemo(\n    () =>\n      selectedCrossFilters.filter(\n        ({ emitterId, name }) => overflowedIds?.includes(`${name}${emitterId}`),\n      ),\n    [overflowedIds, selectedCrossFilters],\n  );\n\n  const activeOverflowedFiltersInScope = useMemo(() => {\n    const activeOverflowedFilters = overflowedFiltersInScope.filter(filter =>\n      isNativeFilterWithDataMask(filter),\n    );\n    return [...activeOverflowedFilters, ...overflowedCrossFilters];\n  }, [overflowedCrossFilters, overflowedFiltersInScope]);\n\n  const rendererCrossFilter = useCallback(\n    (crossFilter, orientation, last) => (\n      <CrossFilter\n        filter={crossFilter}\n        orientation={orientation}\n        last={\n          filtersInScope.length > 0 &&\n          `${last.name}${last.emitterId}` ===\n            `${crossFilter.name}${crossFilter.emitterId}`\n        }\n      />\n    ),\n    [filtersInScope.length],\n  );\n\n  const items = useMemo(() => {\n    const crossFilters = selectedCrossFilters.map(c => ({\n      // a combination of filter name and chart id to account\n      // for multiple cross filters from the same chart in the future\n      id: `${c.name}${c.emitterId}`,\n      element: rendererCrossFilter(\n        c,\n        FilterBarOrientation.Horizontal,\n        selectedCrossFilters.at(-1),\n      ),\n    }));\n    const nativeFiltersInScope = filtersInScope.map((filter, index) => ({\n      id: filter.id,\n      element: (\n        <div\n          className=\"filter-item-wrapper\"\n          css={css`\n            flex-shrink: 0;\n          `}\n        >\n          {renderer(filter, index)}\n        </div>\n      ),\n    }));\n    return [...crossFilters, ...nativeFiltersInScope];\n  }, [filtersInScope, renderer, rendererCrossFilter, selectedCrossFilters]);\n\n  const renderHorizontalContent = () => (\n    <div\n      css={(theme: SupersetTheme) => css`\n        padding: 0 ${theme.gridUnit * 4}px;\n        min-width: 0;\n        flex: 1;\n      `}\n    >\n      <DropdownContainer\n        items={items}\n        dropdownTriggerIcon={\n          <Icons.FilterSmall\n            css={css`\n              && {\n                margin-right: -4px;\n                display: flex;\n              }\n            `}\n          />\n        }\n        dropdownTriggerText={t('More filters')}\n        dropdownTriggerCount={activeOverflowedFiltersInScope.length}\n        dropdownTriggerTooltip={\n          activeOverflowedFiltersInScope.length === 0\n            ? t('No applied filters')\n            : t(\n                'Applied filters: %s',\n                activeOverflowedFiltersInScope\n                  .map(filter => filter.name)\n                  .join(', '),\n              )\n        }\n        dropdownContent={\n          overflowedFiltersInScope.length ||\n          overflowedCrossFilters.length ||\n          (filtersOutOfScope.length && showCollapsePanel)\n            ? () => (\n                <FiltersDropdownContent\n                  overflowedCrossFilters={overflowedCrossFilters}\n                  filtersInScope={overflowedFiltersInScope}\n                  filtersOutOfScope={filtersOutOfScope}\n                  renderer={renderer}\n                  rendererCrossFilter={rendererCrossFilter}\n                  showCollapsePanel={showCollapsePanel}\n                  forceRenderOutOfScope={hasRequiredFirst}\n                />\n              )\n            : undefined\n        }\n        forceRender={hasRequiredFirst}\n        ref={popoverRef}\n        onOverflowingStateChange={({ overflowed: nextOverflowedIds }) => {\n          if (\n            nextOverflowedIds.length !== overflowedIds.length ||\n            overflowedIds.reduce(\n              (a, b, i) => a || b !== nextOverflowedIds[i],\n              false,\n            )\n          ) {\n            setOverflowedIds(nextOverflowedIds);\n          }\n        }}\n      />\n    </div>\n  );\n\n  const overflowedByIndex = useMemo(() => {\n    const filtersOutOfScopeIds = new Set(filtersOutOfScope.map(({ id }) => id));\n    const overflowedFiltersInScopeIds = new Set(\n      overflowedFiltersInScope.map(({ id }) => id),\n    );\n\n    return filtersWithValues.map(\n      filter =>\n        filtersOutOfScopeIds.has(filter.id) ||\n        overflowedFiltersInScopeIds.has(filter.id),\n    );\n  }, [filtersOutOfScope, filtersWithValues, overflowedFiltersInScope]);\n\n  useEffect(() => {\n    if (outlinedFilterId && overflowedIds.includes(outlinedFilterId)) {\n      popoverRef?.current?.open();\n    }\n  }, [outlinedFilterId, lastUpdated, popoverRef, overflowedIds]);\n\n  return (\n    <>\n      {portalNodes\n        .filter((node, index) => filterIds.has(filtersWithValues[index].id))\n        .map((node, index) => (\n          <InPortal node={node} key={filtersWithValues[index].id}>\n            {filterControlFactory(\n              index,\n              filterBarOrientation,\n              overflowedByIndex[index],\n            )}\n          </InPortal>\n        ))}\n      {filterBarOrientation === FilterBarOrientation.Vertical &&\n        renderVerticalContent()}\n      {filterBarOrientation === FilterBarOrientation.Horizontal &&\n        renderHorizontalContent()}\n    </>\n  );\n};\n\nexport default React.memo(FilterControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}