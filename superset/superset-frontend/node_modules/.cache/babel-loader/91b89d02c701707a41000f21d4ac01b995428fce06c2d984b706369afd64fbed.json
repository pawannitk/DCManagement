{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, getClientErrorObject } from '@superset-ui/core';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { updateFormDataByDatasource } from './exploreActions';\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport function setDatasource(datasource) {\n  return { type: SET_DATASOURCE, datasource };\n}\nexport function changeDatasource(newDatasource) {\n  return function (dispatch, getState) {\n    const { explore: { datasource: prevDatasource } } = getState();\n    dispatch(setDatasource(newDatasource));\n    dispatch(updateFormDataByDatasource(prevDatasource, newDatasource));\n  };\n}\nexport function saveDataset({ schema, sql, database, templateParams, datasourceName, columns }) {\n  return async function (dispatch) {\n    // Create a dataset object\n    try {\n      const { json: { data } } = await SupersetClient.post({\n        endpoint: '/api/v1/dataset/',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          database: database == null ? void 0 : database.id,\n          table_name: datasourceName,\n          schema,\n          sql,\n          template_params: templateParams,\n          columns\n        })\n      });\n      // Update form_data to point to new dataset\n      dispatch(changeDatasource(data));\n      return data;\n    }\n    catch (error) {\n      getClientErrorObject(error).then((e) => {\n        dispatch(addDangerToast(e.error));\n      });\n      throw error;\n    }\n  };\n}\nexport const datasourcesActions = {\n  setDatasource,\n  changeDatasource,\n  saveDataset\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_DATASOURCE, \"SET_DATASOURCE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts\");reactHotLoader.register(setDatasource, \"setDatasource\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts\");reactHotLoader.register(changeDatasource, \"changeDatasource\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts\");reactHotLoader.register(saveDataset, \"saveDataset\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts\");reactHotLoader.register(datasourcesActions, \"datasourcesActions\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["SupersetClient","getClientErrorObject","addDangerToast","updateFormDataByDatasource","SET_DATASOURCE","setDatasource","datasource","type","changeDatasource","newDatasource","dispatch","getState","explore","prevDatasource","saveDataset","schema","sql","database","templateParams","datasourceName","columns","json","data","post","endpoint","headers","body","JSON","stringify","id","table_name","template_params","error","then","e","datasourcesActions","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/actions/datasourcesActions.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dispatch, AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Dataset } from '@superset-ui/chart-controls';\nimport { SupersetClient, getClientErrorObject } from '@superset-ui/core';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { updateFormDataByDatasource } from './exploreActions';\nimport { ExplorePageState } from '../types';\n\nexport const SET_DATASOURCE = 'SET_DATASOURCE';\nexport interface SetDatasource {\n  type: string;\n  datasource: Dataset;\n}\nexport function setDatasource(datasource: Dataset) {\n  return { type: SET_DATASOURCE, datasource };\n}\n\nexport function changeDatasource(newDatasource: Dataset) {\n  return function (dispatch: Dispatch, getState: () => ExplorePageState) {\n    const {\n      explore: { datasource: prevDatasource },\n    } = getState();\n    dispatch(setDatasource(newDatasource));\n    dispatch(updateFormDataByDatasource(prevDatasource, newDatasource));\n  };\n}\n\nexport function saveDataset({\n  schema,\n  sql,\n  database,\n  templateParams,\n  datasourceName,\n  columns,\n}: Omit<SqlLabPostRequest['data'], 'dbId'> & { database: { id: number } }) {\n  return async function (dispatch: ThunkDispatch<any, undefined, AnyAction>) {\n    // Create a dataset object\n    try {\n      const {\n        json: { data },\n      } = await SupersetClient.post({\n        endpoint: '/api/v1/dataset/',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          database: database?.id,\n          table_name: datasourceName,\n          schema,\n          sql,\n          template_params: templateParams,\n          columns,\n        }),\n      });\n      // Update form_data to point to new dataset\n      dispatch(changeDatasource(data));\n      return data;\n    } catch (error) {\n      getClientErrorObject(error).then(e => {\n        dispatch(addDangerToast(e.error));\n      });\n      throw error;\n    }\n  };\n}\n\nexport const datasourcesActions = {\n  setDatasource,\n  changeDatasource,\n  saveDataset,\n};\n\nexport type AnyDatasourcesAction = SetDatasource;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAsBA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,mBAAmB;AACxE,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,0BAA0B,QAAQ,kBAAkB;AAG7D,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAK9C,OAAM,SAAUC,aAAaA,CAACC,UAAmB;EAC/C,OAAO,EAAEC,IAAI,EAAEH,cAAc,EAAEE,UAAU,EAAE;AAC7C;AAEA,OAAM,SAAUE,gBAAgBA,CAACC,aAAsB;EACrD,OAAO,UAAUC,QAAkB,EAAEC,QAAgC;IACnE,MAAM,EACJC,OAAO,EAAE,EAAEN,UAAU,EAAEO,cAAc,EAAE,EACxC,GAAGF,QAAQ,EAAE;IACdD,QAAQ,CAACL,aAAa,CAACI,aAAa,CAAC,CAAC;IACtCC,QAAQ,CAACP,0BAA0B,CAACU,cAAc,EAAEJ,aAAa,CAAC,CAAC;EACrE,CAAC;AACH;AAEA,OAAM,SAAUK,WAAWA,CAAC,EAC1BC,MAAM,EACNC,GAAG,EACHC,QAAQ,EACRC,cAAc,EACdC,cAAc,EACdC,OAAO,EACgE;EACvE,OAAO,gBAAgBV,QAAkD;IACvE;IACA,IAAI;MACF,MAAM,EACJW,IAAI,EAAE,EAAEC,IAAI,EAAE,EACf,GAAG,MAAMtB,cAAc,CAACuB,IAAI,CAAC;QAC5BC,QAAQ,EAAE,kBAAkB;QAC5BC,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBX,QAAQ,EAAEA,QAAQ,oBAARA,QAAQ,CAAEY,EAAE;UACtBC,UAAU,EAAEX,cAAc;UAC1BJ,MAAM;UACNC,GAAG;UACHe,eAAe,EAAEb,cAAc;UAC/BE;SACD;OACF,CAAC;MACF;MACAV,QAAQ,CAACF,gBAAgB,CAACc,IAAI,CAAC,CAAC;MAChC,OAAOA,IAAI;;IACX,OAAOU,KAAK,EAAE;MACd/B,oBAAoB,CAAC+B,KAAK,CAAC,CAACC,IAAI,CAAC,CAAAC,CAAC,KAAG;QACnCxB,QAAQ,CAACR,cAAc,CAACgC,CAAC,CAACF,KAAK,CAAC,CAAC;MACnC,CAAC,CAAC;MACF,MAAMA,KAAK;;EAEf,CAAC;AACH;AAEA,OAAO,MAAMG,kBAAkB,GAAG;EAChC9B,aAAa;EACbG,gBAAgB;EAChBM;CACD,CAAC,mBAAAsB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA5DWpC,cAAc,wHAAAgC,cAAA,CAAAI,QAAA,CAKXnC,aAAa,uHAAA+B,cAAA,CAAAI,QAAA,CAIbhC,gBAAgB,0HAAA4B,cAAA,CAAAI,QAAA,CAUhB1B,WAAW,qHAAAsB,cAAA,CAAAI,QAAA,CAqCdL,kBAAkB,oJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}