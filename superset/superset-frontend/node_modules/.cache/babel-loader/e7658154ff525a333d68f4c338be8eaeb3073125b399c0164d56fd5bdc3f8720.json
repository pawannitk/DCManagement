{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const defaultViewport = {\n  bearing: 0,\n  latitude: 31.222656842808707,\n  longitude: 6.85236157047845,\n  pitch: 0,\n  zoom: 1\n};\nconst METER_TO_MILE = 1609.34;\nexport function unitToRadius(unit, num) {\n  if (unit === 'square_m') {\n    return Math.sqrt(num / Math.PI);\n  }\n  if (unit === 'radius_m') {\n    return num;\n  }\n  if (unit === 'radius_km') {\n    return num * 1000;\n  }\n  if (unit === 'radius_miles') {\n    return num * METER_TO_MILE;\n  }\n  if (unit === 'square_km') {\n    return Math.sqrt(num / Math.PI) * 1000;\n  }\n  if (unit === 'square_miles') {\n    return Math.sqrt(num / Math.PI) * METER_TO_MILE;\n  }\n  return null;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultViewport, \"defaultViewport\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/geo.ts\");reactHotLoader.register(METER_TO_MILE, \"METER_TO_MILE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/geo.ts\");reactHotLoader.register(unitToRadius, \"unitToRadius\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/geo.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["defaultViewport","bearing","latitude","longitude","pitch","zoom","METER_TO_MILE","unitToRadius","unit","num","Math","sqrt","PI","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/geo.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport type Unit =\n  | 'square_m'\n  | 'radius_m'\n  | 'radius_km'\n  | 'radius_miles'\n  | 'square_km'\n  | 'square_miles';\n\nexport const defaultViewport = {\n  bearing: 0,\n  latitude: 31.222656842808707,\n  longitude: 6.85236157047845,\n  pitch: 0,\n  zoom: 1,\n};\n\nconst METER_TO_MILE = 1609.34;\n\nexport function unitToRadius(unit: Unit, num: number) {\n  if (unit === 'square_m') {\n    return Math.sqrt(num / Math.PI);\n  }\n  if (unit === 'radius_m') {\n    return num;\n  }\n  if (unit === 'radius_km') {\n    return num * 1000;\n  }\n  if (unit === 'radius_miles') {\n    return num * METER_TO_MILE;\n  }\n  if (unit === 'square_km') {\n    return Math.sqrt(num / Math.PI) * 1000;\n  }\n  if (unit === 'square_miles') {\n    return Math.sqrt(num / Math.PI) * METER_TO_MILE;\n  }\n\n  return null;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AA2BA,OAAO,MAAMA,eAAe,GAAG;EAC7BC,OAAO,EAAE,CAAC;EACVC,QAAQ,EAAE,kBAAkB;EAC5BC,SAAS,EAAE,gBAAgB;EAC3BC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;CACP;AAED,MAAMC,aAAa,GAAG,OAAO;AAE7B,OAAM,SAAUC,YAAYA,CAACC,IAAU,EAAEC,GAAW;EAClD,IAAID,IAAI,KAAK,UAAU,EAAE;IACvB,OAAOE,IAAI,CAACC,IAAI,CAACF,GAAG,GAAGC,IAAI,CAACE,EAAE,CAAC;;EAEjC,IAAIJ,IAAI,KAAK,UAAU,EAAE;IACvB,OAAOC,GAAG;;EAEZ,IAAID,IAAI,KAAK,WAAW,EAAE;IACxB,OAAOC,GAAG,GAAG,IAAI;;EAEnB,IAAID,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAOC,GAAG,GAAGH,aAAa;;EAE5B,IAAIE,IAAI,KAAK,WAAW,EAAE;IACxB,OAAOE,IAAI,CAACC,IAAI,CAACF,GAAG,GAAGC,IAAI,CAACE,EAAE,CAAC,GAAG,IAAI;;EAExC,IAAIJ,IAAI,KAAK,cAAc,EAAE;IAC3B,OAAOE,IAAI,CAACC,IAAI,CAACF,GAAG,GAAGC,IAAI,CAACE,EAAE,CAAC,GAAGN,aAAa;;EAGjD,OAAO,IAAI;AACb,CAAC,mBAAAO,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA/BYjB,eAAe,mIAAAa,cAAA,CAAAI,QAAA,CAQtBX,aAAa,iIAAAO,cAAA,CAAAI,QAAA,CAEHV,YAAY,wJAAAW,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}