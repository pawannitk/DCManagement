{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\nimport { SyncRegistry } from '@encodable/registry';\nimport ColorNamespace from './ColorNamespace';\nexport const DEFAULT_NAMESPACE = 'DEFAULT_NAMESPACE';\nexport default class ColorNamespaceRegistry {\n  constructor({\n    name = 'ColorNamespaceRegistry',\n    globalId,\n    ...rest\n  } = {}) {\n    _defineProperty(this, \"namespaceStates\", void 0);\n\n    _defineProperty(this, \"namespaceInstances\", void 0);\n\n    // only make the state global is using globalId\n    this.namespaceStates = new SyncRegistry({\n      name,\n      globalId,\n      ...rest\n    }); // the instances are always local since these are wrappers\n\n    this.namespaceInstances = new SyncRegistry({\n      name,\n      ...rest\n    });\n\n    if (typeof this.namespaceStates.getDefaultKey() === 'undefined') {\n      this.setDefaultNamespace(DEFAULT_NAMESPACE);\n    }\n  }\n\n  getDefaultNamespace() {\n    var _this$namespaceStates;\n\n    return (_this$namespaceStates = this.namespaceStates.getDefaultKey()) != null ? _this$namespaceStates : DEFAULT_NAMESPACE;\n  }\n\n  setDefaultNamespace(namespace) {\n    this.namespaceStates.setDefaultKey(namespace);\n    this.namespaceInstances.setDefaultKey(namespace);\n    return this;\n  }\n\n  has(namespace) {\n    return this.namespaceStates.has(namespace);\n  }\n\n  get(namespace = this.getDefaultNamespace()) {\n    if (!this.namespaceStates.has(namespace)) {\n      const ns = new ColorNamespace(namespace);\n      this.namespaceStates.registerValue(namespace, ns.state);\n      this.namespaceInstances.registerValue(namespace, ns);\n      return ns;\n    }\n\n    if (this.namespaceInstances.has(namespace)) {\n      return this.namespaceInstances.get(namespace);\n    }\n\n    const ns = new ColorNamespace(this.namespaceStates.get(namespace));\n    this.namespaceInstances.registerValue(namespace, ns);\n    return ns;\n  }\n\n  keys() {\n    return this.namespaceStates.keys();\n  }\n\n  clear() {\n    this.namespaceStates.clear();\n    this.namespaceInstances.clear();\n    return this;\n  }\n\n  remove(namespace) {\n    this.namespaceStates.remove(namespace);\n    this.namespaceInstances.remove(namespace);\n    return this;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespaceRegistry.js\");reactHotLoader.register(DEFAULT_NAMESPACE, \"DEFAULT_NAMESPACE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespaceRegistry.js\");reactHotLoader.register(ColorNamespaceRegistry, \"ColorNamespaceRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespaceRegistry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SyncRegistry","ColorNamespace","DEFAULT_NAMESPACE","ColorNamespaceRegistry","constructor","name","globalId","rest","namespaceStates","namespaceInstances","getDefaultKey","setDefaultNamespace","getDefaultNamespace","_this$namespaceStates","namespace","setDefaultKey","has","get","ns","registerValue","state","keys","clear","remove","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scale/ColorNamespaceRegistry.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SyncRegistry } from '@encodable/registry';\nimport ColorNamespace from './ColorNamespace';\nexport const DEFAULT_NAMESPACE = 'DEFAULT_NAMESPACE';\nexport default class ColorNamespaceRegistry {\n  constructor({\n    name = 'ColorNamespaceRegistry',\n    globalId,\n    ...rest\n  } = {}) {\n    _defineProperty(this, \"namespaceStates\", void 0);\n\n    _defineProperty(this, \"namespaceInstances\", void 0);\n\n    // only make the state global is using globalId\n    this.namespaceStates = new SyncRegistry({\n      name,\n      globalId,\n      ...rest\n    }); // the instances are always local since these are wrappers\n\n    this.namespaceInstances = new SyncRegistry({\n      name,\n      ...rest\n    });\n\n    if (typeof this.namespaceStates.getDefaultKey() === 'undefined') {\n      this.setDefaultNamespace(DEFAULT_NAMESPACE);\n    }\n  }\n\n  getDefaultNamespace() {\n    var _this$namespaceStates;\n\n    return (_this$namespaceStates = this.namespaceStates.getDefaultKey()) != null ? _this$namespaceStates : DEFAULT_NAMESPACE;\n  }\n\n  setDefaultNamespace(namespace) {\n    this.namespaceStates.setDefaultKey(namespace);\n    this.namespaceInstances.setDefaultKey(namespace);\n    return this;\n  }\n\n  has(namespace) {\n    return this.namespaceStates.has(namespace);\n  }\n\n  get(namespace = this.getDefaultNamespace()) {\n    if (!this.namespaceStates.has(namespace)) {\n      const ns = new ColorNamespace(namespace);\n      this.namespaceStates.registerValue(namespace, ns.state);\n      this.namespaceInstances.registerValue(namespace, ns);\n      return ns;\n    }\n\n    if (this.namespaceInstances.has(namespace)) {\n      return this.namespaceInstances.get(namespace);\n    }\n\n    const ns = new ColorNamespace(this.namespaceStates.get(namespace));\n    this.namespaceInstances.registerValue(namespace, ns);\n    return ns;\n  }\n\n  keys() {\n    return this.namespaceStates.keys();\n  }\n\n  clear() {\n    this.namespaceStates.clear();\n    this.namespaceInstances.clear();\n    return this;\n  }\n\n  remove(namespace) {\n    this.namespaceStates.remove(namespace);\n    this.namespaceInstances.remove(namespace);\n    return this;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}