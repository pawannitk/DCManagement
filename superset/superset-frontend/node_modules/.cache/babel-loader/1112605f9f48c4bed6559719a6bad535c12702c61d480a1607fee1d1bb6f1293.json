{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export function memoize(compute) {\n  let cachedArgs = {};\n  let cachedResult;\n  return (args) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n\n    return cachedResult;\n  };\n}\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a)) {\n    const len = a.length;\n\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(memoize, \"memoize\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/memoize.js\");reactHotLoader.register(isEqual, \"isEqual\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/geo-layers/dist/esm/tileset-2d/memoize.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["memoize","compute","cachedArgs","cachedResult","args","key","isEqual","a","b","Array","isArray","len","length","i","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/tileset-2d/memoize.ts"],"sourcesContent":["// deck.gl, MIT license\n// @note - this is a duplicate of the deck.gl core export (because Tileset2D should be deck.gl independent)\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param compute - the function to be memoized\n */\nexport function memoize<In, Out>(compute: (args: In) => Out): (args: In) => Out {\n  let cachedArgs: any = {};\n  let cachedResult: Out;\n\n  return (args: In) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n"],"mappings":"uSAQA,OAAO,SAASA,OAATA,CAA0BC,OAA1B,EAAyE;EAC9E,IAAIC,UAAe,GAAG,EAAtB;EACA,IAAIC,YAAJ;EAEA,OAAQ,CAAAC,IAAD,KAAc;IACnB,KAAK,MAAMC,GAAX,IAAkBD,IAAlB,EAAwB;MACtB,IAAI,CAACE,OAAO,CAACF,IAAI,CAACC,GAAD,CAAL,EAAYH,UAAU,CAACG,GAAD,CAAtB,CAAZ,EAA0C;QACxCF,YAAY,GAAGF,OAAO,CAACG,IAAD,CAAtB;QACAF,UAAU,GAAGE,IAAb;QACA;MACD;IACF;;IACD,OAAOD,YAAP;EACD,CATD;AAUD;;AAED,SAASG,OAATA,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;EACrB,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;;EACD,IAAIC,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;IAGpB,MAAMI,GAAG,GAAGJ,CAAC,CAACK,MAAd;;IACA,IAAI,CAACJ,CAAD,IAAMA,CAAC,CAACI,MAAF,KAAaD,GAAvB,EAA4B;MAC1B,OAAO,KAAP;IACD;;IAED,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;MAC5B,IAAIN,CAAC,CAACM,CAAD,CAAD,KAASL,CAAC,CAACK,CAAD,CAAd,EAAmB;QACjB,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD,oBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CApCelB,OAAT,0KAAAc,cAAA,CAAAI,QAAA,CAgBEZ,OAAT,kMAAAa,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}