{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nimport { getDashboardFilterKey } from './getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from './constants';\nimport { DASHBOARD_ROOT_TYPE } from './componentTypes';\n\nexport default function getFilterFieldNodesTree({ dashboardFilters = {} }) {\n  const allFilters = Object.values(dashboardFilters).map((dashboardFilter) => {\n    const { chartId, filterName, columns, labels } = dashboardFilter;\n    const children = Object.keys(columns).map((column) => ({\n      value: getDashboardFilterKey({ chartId, column }),\n      label: labels[column] || column\n    }));\n    return {\n      value: chartId,\n      label: filterName,\n      children,\n      showCheckbox: true\n    };\n  });\n\n  return [\n  {\n    value: ALL_FILTERS_ROOT,\n    type: DASHBOARD_ROOT_TYPE,\n    label: t('All filters'),\n    children: allFilters\n  }];\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getFilterFieldNodesTree, \"getFilterFieldNodesTree\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","getDashboardFilterKey","ALL_FILTERS_ROOT","DASHBOARD_ROOT_TYPE","getFilterFieldNodesTree","dashboardFilters","allFilters","Object","values","map","dashboardFilter","chartId","filterName","columns","labels","children","keys","column","value","label","showCheckbox","type","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getFilterFieldNodesTree.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nimport { getDashboardFilterKey } from './getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from './constants';\nimport { DASHBOARD_ROOT_TYPE } from './componentTypes';\n\nexport default function getFilterFieldNodesTree({ dashboardFilters = {} }) {\n  const allFilters = Object.values(dashboardFilters).map(dashboardFilter => {\n    const { chartId, filterName, columns, labels } = dashboardFilter;\n    const children = Object.keys(columns).map(column => ({\n      value: getDashboardFilterKey({ chartId, column }),\n      label: labels[column] || column,\n    }));\n    return {\n      value: chartId,\n      label: filterName,\n      children,\n      showCheckbox: true,\n    };\n  });\n\n  return [\n    {\n      value: ALL_FILTERS_ROOT,\n      type: DASHBOARD_ROOT_TYPE,\n      label: t('All filters'),\n      children: allFilters,\n    },\n  ];\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,QAAQ,mBAAmB;;AAErC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,mBAAmB,QAAQ,kBAAkB;;AAEtD,eAAe,SAASC,uBAAuBA,CAAC,EAAEC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;EACzE,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACH,gBAAgB,CAAC,CAACI,GAAG,CAAC,CAAAC,eAAe,KAAI;IACxE,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC,CAAC,GAAGJ,eAAe;IAChE,MAAMK,QAAQ,GAAGR,MAAM,CAACS,IAAI,CAACH,OAAO,CAAC,CAACJ,GAAG,CAAC,CAAAQ,MAAM,MAAK;MACnDC,KAAK,EAAEjB,qBAAqB,CAAC,EAAEU,OAAO,EAAEM,MAAM,CAAC,CAAC,CAAC;MACjDE,KAAK,EAAEL,MAAM,CAACG,MAAM,CAAC,IAAIA;IAC3B,CAAC,CAAC,CAAC;IACH,OAAO;MACLC,KAAK,EAAEP,OAAO;MACdQ,KAAK,EAAEP,UAAU;MACjBG,QAAQ;MACRK,YAAY,EAAE;IAChB,CAAC;EACH,CAAC,CAAC;;EAEF,OAAO;EACL;IACEF,KAAK,EAAEhB,gBAAgB;IACvBmB,IAAI,EAAElB,mBAAmB;IACzBgB,KAAK,EAAEnB,CAAC,CAAC,aAAa,CAAC;IACvBe,QAAQ,EAAET;EACZ,CAAC,CACF;;AACH,CAAC,mBAAAgB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAvBuBtB,uBAAuB,6JAAAuB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}