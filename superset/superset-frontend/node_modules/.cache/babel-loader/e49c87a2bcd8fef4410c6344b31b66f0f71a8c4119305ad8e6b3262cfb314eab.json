{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/** List of operators that do not require another operand */\nconst UNARY_OPERATORS = ['IS NOT NULL', 'IS NULL'];\n/** List of operators that require another operand that is a single value */\nconst BINARY_OPERATORS = [\n'==',\n'!=',\n'>',\n'<',\n'>=',\n'<=',\n'ILIKE',\n'LIKE',\n'REGEX',\n'TEMPORAL_RANGE'];\n\n/** List of operators that require another operand that is a set */\nconst SET_OPERATORS = ['IN', 'NOT IN'];\n//---------------------------------------------------\n// Type guards\n//---------------------------------------------------\nconst unaryOperatorSet = new Set(UNARY_OPERATORS);\nexport function isUnaryOperator(operator) {\n  return unaryOperatorSet.has(operator);\n}\nconst binaryOperatorSet = new Set(BINARY_OPERATORS);\nexport function isBinaryOperator(operator) {\n  return binaryOperatorSet.has(operator);\n}\nconst setOperatorSet = new Set(SET_OPERATORS);\nexport function isSetOperator(operator) {\n  return setOperatorSet.has(operator);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(UNARY_OPERATORS, \"UNARY_OPERATORS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(BINARY_OPERATORS, \"BINARY_OPERATORS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(SET_OPERATORS, \"SET_OPERATORS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(unaryOperatorSet, \"unaryOperatorSet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(isUnaryOperator, \"isUnaryOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(binaryOperatorSet, \"binaryOperatorSet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(isBinaryOperator, \"isBinaryOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(setOperatorSet, \"setOperatorSet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");reactHotLoader.register(isSetOperator, \"isSetOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["UNARY_OPERATORS","BINARY_OPERATORS","SET_OPERATORS","unaryOperatorSet","Set","isUnaryOperator","operator","has","binaryOperatorSet","isBinaryOperator","setOperatorSet","isSetOperator","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/types/Operator.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** List of operators that do not require another operand */\nconst UNARY_OPERATORS = ['IS NOT NULL', 'IS NULL'] as const;\n\n/** List of operators that require another operand that is a single value */\nconst BINARY_OPERATORS = [\n  '==',\n  '!=',\n  '>',\n  '<',\n  '>=',\n  '<=',\n  'ILIKE',\n  'LIKE',\n  'REGEX',\n  'TEMPORAL_RANGE',\n] as const;\n\n/** List of operators that require another operand that is a set */\nconst SET_OPERATORS = ['IN', 'NOT IN'] as const;\n\n//---------------------------------------------------\n// Derived types\n//---------------------------------------------------\n\n/** An operator that does not require another operand */\nexport type UnaryOperator = (typeof UNARY_OPERATORS)[number];\n\n/** An operator that requires another operand that is a single value */\nexport type BinaryOperator = (typeof BINARY_OPERATORS)[number];\n\n/** An operator that require another operand that is a set */\nexport type SetOperator = (typeof SET_OPERATORS)[number];\n\n//---------------------------------------------------\n// Type guards\n//---------------------------------------------------\n\nconst unaryOperatorSet = new Set<string>(UNARY_OPERATORS);\n\nexport function isUnaryOperator(operator: string): operator is UnaryOperator {\n  return unaryOperatorSet.has(operator);\n}\n\nconst binaryOperatorSet = new Set<string>(BINARY_OPERATORS);\n\nexport function isBinaryOperator(operator: string): operator is BinaryOperator {\n  return binaryOperatorSet.has(operator);\n}\n\nconst setOperatorSet = new Set<string>(SET_OPERATORS);\n\nexport function isSetOperator(operator: string): operator is SetOperator {\n  return setOperatorSet.has(operator);\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;AACA,MAAMA,eAAe,GAAG,CAAC,aAAa,EAAE,SAAS,CAAU;AAE3D;AACA,MAAMC,gBAAgB,GAAG;AACvB,IAAI;AACJ,IAAI;AACJ,GAAG;AACH,GAAG;AACH,IAAI;AACJ,IAAI;AACJ,OAAO;AACP,MAAM;AACN,OAAO;AACP,gBAAgB,CACR;;AAEV;AACA,MAAMC,aAAa,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAU;AAe/C;AACA;AACA;AAEA,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAASJ,eAAe,CAAC;AAEzD,OAAM,SAAUK,eAAeA,CAACC,QAAgB;EAC9C,OAAOH,gBAAgB,CAACI,GAAG,CAACD,QAAQ,CAAC;AACvC;AAEA,MAAME,iBAAiB,GAAG,IAAIJ,GAAG,CAASH,gBAAgB,CAAC;AAE3D,OAAM,SAAUQ,gBAAgBA,CAACH,QAAgB;EAC/C,OAAOE,iBAAiB,CAACD,GAAG,CAACD,QAAQ,CAAC;AACxC;AAEA,MAAMI,cAAc,GAAG,IAAIN,GAAG,CAASF,aAAa,CAAC;AAErD,OAAM,SAAUS,aAAaA,CAACL,QAAgB;EAC5C,OAAOI,cAAc,CAACH,GAAG,CAACD,QAAQ,CAAC;AACrC,CAAC,mBAAAM,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CApDKhB,eAAe,qIAAAY,cAAA,CAAAI,QAAA,CAGff,gBAAgB,sIAAAW,cAAA,CAAAI,QAAA,CAchBd,aAAa,mIAAAU,cAAA,CAAAI,QAAA,CAmBbb,gBAAgB,sIAAAS,cAAA,CAAAI,QAAA,CAENX,eAAe,qIAAAO,cAAA,CAAAI,QAAA,CAIzBR,iBAAiB,uIAAAI,cAAA,CAAAI,QAAA,CAEPP,gBAAgB,sIAAAG,cAAA,CAAAI,QAAA,CAI1BN,cAAc,oIAAAE,cAAA,CAAAI,QAAA,CAEJL,aAAa,2JAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}