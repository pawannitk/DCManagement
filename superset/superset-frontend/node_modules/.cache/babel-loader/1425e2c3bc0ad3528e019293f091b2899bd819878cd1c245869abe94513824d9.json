{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export default function transformProps(chartProps) {\n  const { height, datasource, formData, queriesData } = chartProps;\n  const { columnCollection = [], groupby, metrics, url } = formData;\n  const { records, columns } = queriesData[0].data;\n  const isGroupBy = (groupby == null ? void 0 : groupby.length) > 0;\n  // When there is a \"group by\",\n  // each row in the table is a database column\n  // Otherwise each row in the table is a metric\n  let rows;\n  if (isGroupBy) {\n    rows = columns.map((column) => typeof column === 'object' ? column : { label: column });\n  } else\n  {\n    /* eslint-disable */\n    const metricMap = datasource.metrics.reduce((acc, current) => {\n      const map = acc;\n      map[current.metric_name] = current;\n      return map;\n    }, {});\n    /* eslint-disable */\n    rows = metrics.map((metric) => typeof metric === 'object' ? metric : metricMap[metric]);\n  }\n  // TODO: Better parse this from controls instead of mutative value here.\n  columnCollection.forEach((column) => {\n    const c = column;\n    if (typeof c.timeLag === 'string' && c.timeLag) {\n      c.timeLag = parseInt(c.timeLag, 10);\n    }\n  });\n  return {\n    height,\n    data: records,\n    columnConfigs: columnCollection,\n    rows,\n    rowType: isGroupBy ? 'column' : 'metric',\n    url\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/visualizations/TimeTable/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["transformProps","chartProps","height","datasource","formData","queriesData","columnCollection","groupby","metrics","url","records","columns","data","isGroupBy","length","rows","map","column","label","metricMap","reduce","acc","current","metric_name","metric","forEach","c","timeLag","parseInt","columnConfigs","rowType","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/visualizations/TimeTable/transformProps.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartProps, DataRecord, Metric } from '@superset-ui/core';\n\ninterface FormData {\n  groupby: string[];\n  metrics: Array<object>;\n  url: string;\n  columnCollection: Array<object> | [];\n}\n\ninterface QueryData {\n  data: {\n    records: DataRecord[];\n    columns: string[];\n  };\n}\n\nexport type TableChartProps = ChartProps & {\n  formData: FormData;\n  queriesData: QueryData[];\n};\n\ninterface ColumnData {\n  timeLag?: string | number;\n}\nexport default function transformProps(chartProps: TableChartProps) {\n  const { height, datasource, formData, queriesData } = chartProps;\n  const { columnCollection = [], groupby, metrics, url } = formData;\n  const { records, columns } = queriesData[0].data;\n  const isGroupBy = groupby?.length > 0;\n\n  // When there is a \"group by\",\n  // each row in the table is a database column\n  // Otherwise each row in the table is a metric\n  let rows;\n  if (isGroupBy) {\n    rows = columns.map(column =>\n      typeof column === 'object' ? column : { label: column },\n    );\n  } else {\n    /* eslint-disable */\n    const metricMap = datasource.metrics.reduce(\n      (acc, current) => {\n        const map = acc;\n        map[current.metric_name] = current;\n        return map;\n      },\n      {} as Record<string, Metric>,\n    );\n    /* eslint-disable */\n    rows = metrics.map(metric =>\n      typeof metric === 'object' ? metric : metricMap[metric],\n    );\n  }\n\n  // TODO: Better parse this from controls instead of mutative value here.\n  columnCollection.forEach(column => {\n    const c: ColumnData = column;\n    if (typeof c.timeLag === 'string' && c.timeLag) {\n      c.timeLag = parseInt(c.timeLag, 10);\n    }\n  });\n\n  return {\n    height,\n    data: records,\n    columnConfigs: columnCollection,\n    rows,\n    rowType: isGroupBy ? 'column' : 'metric',\n    url,\n  };\n}\n"],"mappings":"uSA0CA,eAAc,SAAUA,cAAcA,CAACC,UAA2B;EAChE,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAE,GAAGJ,UAAU;EAChE,MAAM,EAAEK,gBAAgB,GAAG,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,GAAG,EAAE,GAAGL,QAAQ;EACjE,MAAM,EAAEM,OAAO,EAAEC,OAAO,EAAE,GAAGN,WAAW,CAAC,CAAC,CAAC,CAACO,IAAI;EAChD,MAAMC,SAAS,GAAG,CAAAN,OAAO,oBAAPA,OAAO,CAAEO,MAAM,IAAG,CAAC;EAErC;EACA;EACA;EACA,IAAIC,IAAI;EACR,IAAIF,SAAS,EAAE;IACbE,IAAI,GAAGJ,OAAO,CAACK,GAAG,CAAC,CAAAC,MAAM,KACvB,OAAOA,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,EAAEC,KAAK,EAAED,MAAM,EAAE,CACxD;GACF;EAAM;IACL;IACA,MAAME,SAAS,GAAGhB,UAAU,CAACK,OAAO,CAACY,MAAM,CACzC,CAACC,GAAG,EAAEC,OAAO,KAAI;MACf,MAAMN,GAAG,GAAGK,GAAG;MACfL,GAAG,CAACM,OAAO,CAACC,WAAW,CAAC,GAAGD,OAAO;MAClC,OAAON,GAAG;IACZ,CAAC,EACD,EAA4B,CAC7B;IACD;IACAD,IAAI,GAAGP,OAAO,CAACQ,GAAG,CAAC,CAAAQ,MAAM,KACvB,OAAOA,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGL,SAAS,CAACK,MAAM,CAAC,CACxD;;EAGH;EACAlB,gBAAgB,CAACmB,OAAO,CAAC,CAAAR,MAAM,KAAG;IAChC,MAAMS,CAAC,GAAeT,MAAM;IAC5B,IAAI,OAAOS,CAAC,CAACC,OAAO,KAAK,QAAQ,IAAID,CAAC,CAACC,OAAO,EAAE;MAC9CD,CAAC,CAACC,OAAO,GAAGC,QAAQ,CAACF,CAAC,CAACC,OAAO,EAAE,EAAE,CAAC;;EAEvC,CAAC,CAAC;EAEF,OAAO;IACLzB,MAAM;IACNU,IAAI,EAAEF,OAAO;IACbmB,aAAa,EAAEvB,gBAAgB;IAC/BS,IAAI;IACJe,OAAO,EAAEjB,SAAS,GAAG,QAAQ,GAAG,QAAQ;IACxCJ;GACD;AACH,CAAC,mBAAAsB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA9CuBnC,cAAc,qJAAAoC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}