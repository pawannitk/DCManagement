{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, D3_FORMAT_DOCS, D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT, D3_FORMAT_OPTIONS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['columns'],\n    ['metric'],\n    ['secondary_metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    [\n    {\n      name: 'sort_by_metric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort by metric'),\n        description: t('Whether to sort results by the selected metric in descending order.')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    ['linear_color_scheme'],\n    [___EmotionJSX(ControlSubSectionHeader, null, t('Labels'))],\n    [\n    {\n      name: 'show_labels',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Labels'),\n        renderTrigger: true,\n        default: showLabels,\n        description: t('Whether to display the labels.')\n      }\n    }],\n\n    [\n    {\n      name: 'show_labels_threshold',\n      config: {\n        type: 'TextControl',\n        label: t('Percentage threshold'),\n        renderTrigger: true,\n        isFloat: true,\n        default: 5,\n        description: t('Minimum threshold in percentage points for showing labels.')\n      }\n    }],\n\n    [\n    {\n      name: 'show_total',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Total'),\n        default: false,\n        renderTrigger: true,\n        description: t('Whether to display the aggregate count')\n      }\n    }],\n\n    [\n    {\n      name: 'label_type',\n      config: {\n        type: 'SelectControl',\n        label: t('Label Type'),\n        default: labelType,\n        renderTrigger: true,\n        choices: [\n        ['key', t('Category Name')],\n        ['value', t('Value')],\n        ['key_value', t('Category and Value')]],\n\n        description: t('What should be shown on the label?')\n      }\n    }],\n\n    [\n    {\n      name: 'number_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Number format'),\n        renderTrigger: true,\n        default: numberFormat,\n        choices: D3_FORMAT_OPTIONS,\n        description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`\n      }\n    }],\n\n    ['currency_format'],\n    [\n    {\n      name: 'date_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        default: 'smart_date',\n        description: D3_FORMAT_DOCS\n      }\n    }]]\n\n\n  }],\n\n  controlOverrides: {\n    metric: {\n      label: t('Primary Metric'),\n      description: t('The primary metric is used to define the arc segment sizes')\n    },\n    secondary_metric: {\n      label: t('Secondary Metric'),\n      default: null,\n      description: t('[optional] this secondary metric is used to ' +\n      'define the color as a ratio against the primary metric. ' +\n      'When omitted, the color is categorical and based on labels')\n    },\n    color_scheme: {\n      description: t('When only a primary metric is provided, a categorical color scale is used.'),\n      visibility: ({ controls }) => {var _controls$secondary_m, _controls$secondary_m2;return Boolean(!(controls != null && (_controls$secondary_m = controls.secondary_metric) != null && _controls$secondary_m.value) ||\n        (controls == null ? void 0 : (_controls$secondary_m2 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m2.value) === (controls == null ? void 0 : controls.metric.value));}\n    },\n    linear_color_scheme: {\n      description: t('When a secondary metric is provided, a linear color scale is used.'),\n      visibility: ({ controls }) => {var _controls$secondary_m3, _controls$secondary_m4;return Boolean((controls == null ? void 0 : (_controls$secondary_m3 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m3.value) &&\n        (controls == null ? void 0 : (_controls$secondary_m4 = controls.secondary_metric) == null ? void 0 : _controls$secondary_m4.value) !== (controls == null ? void 0 : controls.metric.value));}\n    },\n    columns: {\n      label: t('Hierarchy'),\n      description: t(`Sets the hierarchy levels of the chart. Each level is\n        represented by one ring with the innermost circle as the top of the hierarchy.`)\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric(),\n    secondary_metric: getStandardizedControls().shiftMetric()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(labelType, \"labelType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(numberFormat, \"numberFormat\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(showLabels, \"showLabels\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","t","ControlSubSectionHeader","D3_FORMAT_DOCS","D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT","D3_FORMAT_OPTIONS","D3_TIME_FORMAT_OPTIONS","getStandardizedControls","DEFAULT_FORM_DATA","jsx","___EmotionJSX","labelType","numberFormat","showLabels","config","controlPanelSections","label","expanded","controlSetRows","name","type","description","renderTrigger","default","isFloat","choices","freeForm","controlOverrides","metric","secondary_metric","color_scheme","visibility","controls","_controls$secondary_m","_controls$secondary_m2","Boolean","value","linear_color_scheme","_controls$secondary_m3","_controls$secondary_m4","columns","formDataOverrides","formData","groupby","popAllColumns","shiftMetric","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Sunburst/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  ControlPanelsContainerProps,\n  ControlSubSectionHeader,\n  D3_FORMAT_DOCS,\n  D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT,\n  D3_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_OPTIONS,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst { labelType, numberFormat, showLabels } = DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['columns'],\n        ['metric'],\n        ['secondary_metric'],\n        ['adhoc_filters'],\n        ['row_limit'],\n        [\n          {\n            name: 'sort_by_metric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort by metric'),\n              description: t(\n                'Whether to sort results by the selected metric in descending order.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        ['linear_color_scheme'],\n        [<ControlSubSectionHeader>{t('Labels')}</ControlSubSectionHeader>],\n        [\n          {\n            name: 'show_labels',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Labels'),\n              renderTrigger: true,\n              default: showLabels,\n              description: t('Whether to display the labels.'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_labels_threshold',\n            config: {\n              type: 'TextControl',\n              label: t('Percentage threshold'),\n              renderTrigger: true,\n              isFloat: true,\n              default: 5,\n              description: t(\n                'Minimum threshold in percentage points for showing labels.',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'show_total',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show Total'),\n              default: false,\n              renderTrigger: true,\n              description: t('Whether to display the aggregate count'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'label_type',\n            config: {\n              type: 'SelectControl',\n              label: t('Label Type'),\n              default: labelType,\n              renderTrigger: true,\n              choices: [\n                ['key', t('Category Name')],\n                ['value', t('Value')],\n                ['key_value', t('Category and Value')],\n              ],\n              description: t('What should be shown on the label?'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'number_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Number format'),\n              renderTrigger: true,\n              default: numberFormat,\n              choices: D3_FORMAT_OPTIONS,\n              description: `${D3_FORMAT_DOCS} ${D3_NUMBER_FORMAT_DESCRIPTION_VALUES_TEXT}`,\n            },\n          },\n        ],\n        ['currency_format'],\n        [\n          {\n            name: 'date_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              default: 'smart_date',\n              description: D3_FORMAT_DOCS,\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    metric: {\n      label: t('Primary Metric'),\n      description: t(\n        'The primary metric is used to define the arc segment sizes',\n      ),\n    },\n    secondary_metric: {\n      label: t('Secondary Metric'),\n      default: null,\n      description: t(\n        '[optional] this secondary metric is used to ' +\n          'define the color as a ratio against the primary metric. ' +\n          'When omitted, the color is categorical and based on labels',\n      ),\n    },\n    color_scheme: {\n      description: t(\n        'When only a primary metric is provided, a categorical color scale is used.',\n      ),\n      visibility: ({ controls }: ControlPanelsContainerProps) =>\n        Boolean(\n          !controls?.secondary_metric?.value ||\n            controls?.secondary_metric?.value === controls?.metric.value,\n        ),\n    },\n    linear_color_scheme: {\n      description: t(\n        'When a secondary metric is provided, a linear color scale is used.',\n      ),\n      visibility: ({ controls }: ControlPanelsContainerProps) =>\n        Boolean(\n          controls?.secondary_metric?.value &&\n            controls?.secondary_metric?.value !== controls?.metric.value,\n        ),\n    },\n    columns: {\n      label: t('Hierarchy'),\n      description: t(`Sets the hierarchy levels of the chart. Each level is\n        represented by one ring with the innermost circle as the top of the hierarchy.`),\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    groupby: getStandardizedControls().popAllColumns(),\n    metric: getStandardizedControls().shiftMetric(),\n    secondary_metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}