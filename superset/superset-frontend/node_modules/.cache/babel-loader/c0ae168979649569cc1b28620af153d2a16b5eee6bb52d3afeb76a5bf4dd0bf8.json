{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { t, SupersetClient, makeApi, styled, getExtensionsRegistry } from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport SubMenu from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport { useListViewResource, useSingleViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertState } from 'src/features/alerts/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst PAGE_SIZE = 25;\nconst AlertStateLabel = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace')\n};\nconst deleteAlerts = makeApi({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/'\n});\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\nfunction AlertList({ addDangerToast, isReportEnabled = false, user, addSuccessToast }) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(() => [\n  {\n    id: 'type',\n    operator: FilterOperator.Equals,\n    value: isReportEnabled ? 'Report' : 'Alert'\n  }],\n  [isReportEnabled]);\n  const { state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched }, hasPerm, fetchData, setResourceCollection, refreshData, toggleBulkSelect } = useListViewResource('report', t('reports'), addDangerToast, true, undefined, initialFilters);\n  const { updateResource } = useSingleViewResource('report', t('reports'), addDangerToast);\n  const [alertModalOpen, setAlertModalOpen] = useState(false);\n  const [currentAlert, setCurrentAlert] = useState(null);\n  const [currentAlertDeleting, setCurrentAlertDeleting] = useState(null);\n  // Actions\n  function handleAlertEdit(alert) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n  const generateKey = () => `${new Date().getTime()}`;\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n  const handleAlertDelete = ({ id, name }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`\n    }).then(() => {\n      refreshData();\n      setCurrentAlertDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkAlertDelete = async (alertsToDelete) => {\n    try {\n      const { message } = await deleteAlerts(alertsToDelete.map(({ id }) => id));\n      refreshData();\n      addSuccessToast(message);\n    }\n    catch (e) {\n      createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected %s: %s', titlePlural, errMsg)))(e);\n    }\n  };\n  const initialSort = [{ id: 'name', desc: true }];\n  const toggleActive = useCallback((data, checked) => {\n    if (data != null && data.id) {\n      const update_id = data.id;\n      const original = [...alerts];\n      setResourceCollection(original.map((alert) => {\n        if ((alert == null ? void 0 : alert.id) === data.id) {\n          return {\n            ...alert,\n            active: checked\n          };\n        }\n        return alert;\n      }));\n      updateResource(update_id, { active: checked }, false, false).\n      then().\n      catch(() => setResourceCollection(original));\n    }\n  }, [alerts, setResourceCollection, updateResource]);\n  const columns = useMemo(() => [\n  {\n    Cell: ({ row: { original: { last_state: lastState } } }) => ___EmotionJSX(AlertStatusIcon, { state: lastState, isReportEnabled: isReportEnabled }),\n    accessor: 'last_state',\n    size: 'xs',\n    disableSortBy: true\n  },\n  {\n    Cell: ({ row: { original: { last_eval_dttm: lastEvalDttm } } }) => lastEvalDttm ?\n    moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE) :\n    '',\n    accessor: 'last_eval_dttm',\n    Header: t('Last run'),\n    size: 'lg'\n  },\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    size: 'xl'\n  },\n  {\n    Header: t('Schedule'),\n    accessor: 'crontab_humanized',\n    size: 'xl',\n    Cell: ({ row: { original: { crontab_humanized = '', timezone } } }) => ___EmotionJSX(Tooltip, { title: `${crontab_humanized} (${timezone})`, placement: \"topLeft\" },\n    ___EmotionJSX(\"span\", null, `${crontab_humanized} (${timezone})`)\n    )\n  },\n  {\n    Cell: ({ row: { original: { recipients } } }) => recipients.map((r) => ___EmotionJSX(RecipientIcon, { key: r.id, type: r.type })),\n    accessor: 'recipients',\n    Header: t('Notification method'),\n    disableSortBy: true,\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original: { owners = [] } } }) => ___EmotionJSX(FacePile, { users: owners }),\n    Header: t('Owners'),\n    id: 'owners',\n    disableSortBy: true,\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original: { changed_on_delta_humanized: changedOn, changed_by: changedBy } } }) => ___EmotionJSX(ModifiedInfo, { date: changedOn, user: changedBy }),\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const allowEdit = original.owners.map((o) => o.id).includes(user.userId) ||\n      isUserAdmin(user);\n      return ___EmotionJSX(Switch, { disabled: !allowEdit, \"data-test\": \"toggle-active\", checked: original.active, onClick: (checked) => toggleActive(original, checked), size: \"small\" });\n    },\n    Header: t('Active'),\n    accessor: 'active',\n    id: 'active',\n    size: 'xl'\n  },\n  {\n    Cell: __signature__(({ row: { original } }) => {\n      const history = useHistory();\n      const handleEdit = () => handleAlertEdit(original);\n      const handleDelete = () => setCurrentAlertDeleting(original);\n      const handleGotoExecutionLog = () => history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n      const allowEdit = original.owners.map((o) => o.id).includes(user.userId) ||\n      isUserAdmin(user);\n      const actions = [\n      canEdit ?\n      {\n        label: 'execution-log-action',\n        tooltip: t('Execution log'),\n        placement: 'bottom',\n        icon: 'Note',\n        onClick: handleGotoExecutionLog\n      } :\n      null,\n      canEdit ?\n      {\n        label: allowEdit ? 'edit-action' : 'preview-action',\n        tooltip: allowEdit ? t('Edit') : t('View'),\n        placement: 'bottom',\n        icon: allowEdit ? 'Edit' : 'Binoculars',\n        onClick: handleEdit\n      } :\n      null,\n      allowEdit && canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete\n      } :\n      null].\n      filter((item) => item !== null);\n      return ___EmotionJSX(ActionsBar, { actions: actions });\n    }, \"useHistory{history}\", () => [useHistory]),\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true,\n    size: 'xl'\n  },\n  {\n    accessor: QueryObjectColumns.ChangedBy,\n    hidden: true\n  }],\n  [canDelete, canEdit, isReportEnabled, toggleActive]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      }\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle'\n    });\n  }\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", title, ' '\n    ) : null\n  };\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'search',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Owner'),\n    key: 'owner',\n    id: 'owners',\n    input: 'select',\n    operator: FilterOperator.RelationManyMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('report', 'owners', createErrorHandler((errMsg) => t('An error occurred while fetching owners values: %s', errMsg)), user),\n    paginate: true\n  },\n  {\n    Header: t('Status'),\n    key: 'status',\n    id: 'last_state',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: 'Any',\n    selects: [\n    {\n      label: AlertStateLabel[AlertState.Success],\n      value: AlertState.Success\n    },\n    {\n      label: AlertStateLabel[AlertState.Working],\n      value: AlertState.Working\n    },\n    { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n    { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n    { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace }]\n\n  },\n  {\n    Header: t('Modified by'),\n    key: 'changed_by',\n    id: 'changed_by',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('report', 'changed_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true\n  }],\n  []);\n  const header = HeaderExtension ? ___EmotionJSX(StyledHeaderWithIcon, null,\n  ___EmotionJSX(\"div\", null, t('Alerts & reports')),\n  ___EmotionJSX(HeaderExtension, null)\n  ) : t('Alerts & reports');\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(SubMenu, { activeChild: pathName, name: header, tabs: [\n    {\n      name: 'Alerts',\n      label: t('Alerts'),\n      url: '/alert/list/',\n      usesRouter: true,\n      'data-test': 'alert-list'\n    },\n    {\n      name: 'Reports',\n      label: t('Reports'),\n      url: '/report/list/',\n      usesRouter: true,\n      'data-test': 'report-list'\n    }],\n    buttons: subMenuButtons },\n  ___EmotionJSX(RefreshContainer, null,\n  ___EmotionJSX(LastUpdated, { updatedAt: lastFetched, update: () => refreshData() })\n  )\n  ),\n  ___EmotionJSX(AlertReportModal, { alert: currentAlert, addDangerToast: addDangerToast, layer: currentAlert, onHide: () => {\n      setAlertModalOpen(false);\n      setCurrentAlert(null);\n      refreshData();\n    }, show: alertModalOpen, isReport: isReportEnabled, key: (currentAlert == null ? void 0 : currentAlert.id) || generateKey() }),\n  currentAlertDeleting && ___EmotionJSX(DeleteModal, { description: t('This action will permanently delete %s.', currentAlertDeleting.name), onConfirm: () => {\n      if (currentAlertDeleting) {\n        handleAlertDelete(currentAlertDeleting);\n      }\n    }, onHide: () => setCurrentAlertDeleting(null), open: true, title: t('Delete %s?', title) }),\n  ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected %s?', titlePlural), onConfirm: handleBulkAlertDelete },\n  (confirmDelete) => {\n    const bulkActions = canDelete ?\n    [\n    {\n      key: 'delete',\n      name: t('Delete'),\n      onSelect: confirmDelete,\n      type: 'danger'\n    }] :\n\n    [];\n    return ___EmotionJSX(ListView, { className: \"alerts-list-view\", columns: columns, count: alertsCount, data: alerts, emptyState: emptyState, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, refreshData: refreshData, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, pageSize: PAGE_SIZE });\n  }\n  )\n  );\n}__signature__(AlertList, \"useMemo{initialFilters}\\nuseListViewResource{{ state: { loading, resourceCount: alertsCount, resourceCollection: alerts, bulkSelectEnabled, lastFetched, }, hasPerm, fetchData, setResourceCollection, refreshData, toggleBulkSelect, }}\\nuseSingleViewResource{{ updateResource }}\\nuseState{[alertModalOpen, setAlertModalOpen](false)}\\nuseState{[currentAlert, setCurrentAlert](null)}\\nuseState{[currentAlertDeleting, setCurrentAlertDeleting](null)}\\nuseEffect{}\\nuseCallback{toggleActive}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useSingleViewResource]);const _default =\nwithToasts(AlertList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(AlertStateLabel, \"AlertStateLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(deleteAlerts, \"deleteAlerts\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(RefreshContainer, \"RefreshContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(StyledHeaderWithIcon, \"StyledHeaderWithIcon\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(HeaderExtension, \"HeaderExtension\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(AlertList, \"AlertList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useMemo","useEffect","useCallback","useHistory","t","SupersetClient","makeApi","styled","getExtensionsRegistry","moment","ActionsBar","FacePile","Tooltip","ListView","FilterOperator","SubMenu","Switch","DATETIME_WITH_TIME_ZONE","withToasts","AlertStatusIcon","RecipientIcon","ConfirmStatusChange","DeleteModal","LastUpdated","useListViewResource","useSingleViewResource","createErrorHandler","createFetchRelated","isUserAdmin","AlertReportModal","AlertState","ModifiedInfo","QueryObjectColumns","jsx","___EmotionJSX","extensionsRegistry","PAGE_SIZE","AlertStateLabel","Success","Working","Error","Noop","Grace","deleteAlerts","requestType","method","endpoint","RefreshContainer","div","theme","gridUnit","colors","grayscale","light5","StyledHeaderWithIcon","HeaderExtension","get","AlertList","addDangerToast","isReportEnabled","user","addSuccessToast","title","titlePlural","pathName","initialFilters","id","operator","Equals","value","state","loading","resourceCount","alertsCount","resourceCollection","alerts","bulkSelectEnabled","lastFetched","hasPerm","fetchData","setResourceCollection","refreshData","toggleBulkSelect","undefined","updateResource","alertModalOpen","setAlertModalOpen","currentAlert","setCurrentAlert","currentAlertDeleting","setCurrentAlertDeleting","handleAlertEdit","alert","generateKey","Date","getTime","canEdit","canDelete","canCreate","handleAlertDelete","name","delete","then","errMsg","handleBulkAlertDelete","alertsToDelete","message","map","e","initialSort","desc","toggleActive","data","checked","update_id","original","active","catch","columns","Cell","row","last_state","lastState","accessor","size","disableSortBy","last_eval_dttm","lastEvalDttm","utc","local","format","Header","crontab_humanized","timezone","placement","recipients","r","key","type","owners","users","changed_on_delta_humanized","changedOn","changed_by","changedBy","date","allowEdit","o","includes","userId","disabled","onClick","__signature__","history","handleEdit","handleDelete","handleGotoExecutionLog","push","toLowerCase","actions","label","tooltip","icon","filter","item","hidden","ChangedBy","subMenuButtons","Fragment","className","buttonStyle","emptyState","image","buttonAction","buttonText","filters","input","Contains","RelationManyMany","unfilteredLabel","fetchSelects","paginate","selects","RelationOneMany","header","activeChild","tabs","url","usesRouter","buttons","updatedAt","update","layer","onHide","show","isReport","description","onConfirm","open","confirmDelete","bulkActions","onSelect","count","disableBulkSelect","pageSize","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/pages/AlertReportList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  t,\n  SupersetClient,\n  makeApi,\n  styled,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport FacePile from 'src/components/FacePile';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport { Switch } from 'src/components/Switch';\nimport { DATETIME_WITH_TIME_ZONE } from 'src/constants';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport AlertStatusIcon from 'src/features/alerts/components/AlertStatusIcon';\nimport RecipientIcon from 'src/features/alerts/components/RecipientIcon';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport DeleteModal from 'src/components/DeleteModal';\nimport LastUpdated from 'src/components/LastUpdated';\nimport {\n  useListViewResource,\n  useSingleViewResource,\n} from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated } from 'src/views/CRUD/utils';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport Owner from 'src/types/Owner';\nimport AlertReportModal from 'src/features/alerts/AlertReportModal';\nimport { AlertObject, AlertState } from 'src/features/alerts/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst PAGE_SIZE = 25;\n\nconst AlertStateLabel: Record<AlertState, string> = {\n  [AlertState.Success]: t('Success'),\n  [AlertState.Working]: t('Working'),\n  [AlertState.Error]: t('Error'),\n  [AlertState.Noop]: t('Not triggered'),\n  [AlertState.Grace]: t('On Grace'),\n};\n\ninterface AlertListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  isReportEnabled: boolean;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\nconst deleteAlerts = makeApi<number[], { message: string }>({\n  requestType: 'rison',\n  method: 'DELETE',\n  endpoint: '/api/v1/report/',\n});\n\nconst RefreshContainer = styled.div`\n  width: 100%;\n  padding: 0 ${({ theme }) => theme.gridUnit * 4}px\n    ${({ theme }) => theme.gridUnit * 3}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n`;\n\nconst StyledHeaderWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst HeaderExtension = extensionsRegistry.get('alertsreports.header.icon');\n\nfunction AlertList({\n  addDangerToast,\n  isReportEnabled = false,\n  user,\n  addSuccessToast,\n}: AlertListProps) {\n  const title = isReportEnabled ? t('report') : t('alert');\n  const titlePlural = isReportEnabled ? t('reports') : t('alerts');\n  const pathName = isReportEnabled ? 'Reports' : 'Alerts';\n  const initialFilters = useMemo(\n    () => [\n      {\n        id: 'type',\n        operator: FilterOperator.Equals,\n        value: isReportEnabled ? 'Report' : 'Alert',\n      },\n    ],\n    [isReportEnabled],\n  );\n  const {\n    state: {\n      loading,\n      resourceCount: alertsCount,\n      resourceCollection: alerts,\n      bulkSelectEnabled,\n      lastFetched,\n    },\n    hasPerm,\n    fetchData,\n    setResourceCollection,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AlertObject>(\n    'report',\n    t('reports'),\n    addDangerToast,\n    true,\n    undefined,\n    initialFilters,\n  );\n\n  const { updateResource } = useSingleViewResource<Partial<AlertObject>>(\n    'report',\n    t('reports'),\n    addDangerToast,\n  );\n\n  const [alertModalOpen, setAlertModalOpen] = useState<boolean>(false);\n  const [currentAlert, setCurrentAlert] = useState<Partial<AlertObject> | null>(\n    null,\n  );\n  const [currentAlertDeleting, setCurrentAlertDeleting] =\n    useState<AlertObject | null>(null);\n\n  // Actions\n  function handleAlertEdit(alert: AlertObject | null) {\n    setCurrentAlert(alert);\n    setAlertModalOpen(true);\n  }\n\n  const generateKey = () => `${new Date().getTime()}`;\n\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canCreate = hasPerm('can_write');\n\n  useEffect(() => {\n    if (bulkSelectEnabled && canDelete) {\n      toggleBulkSelect();\n    }\n  }, [isReportEnabled]);\n\n  const handleAlertDelete = ({ id, name }: AlertObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/report/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setCurrentAlertDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkAlertDelete = async (alertsToDelete: AlertObject[]) => {\n    try {\n      const { message } = await deleteAlerts(\n        alertsToDelete.map(({ id }) => id),\n      );\n      refreshData();\n      addSuccessToast(message);\n    } catch (e) {\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'There was an issue deleting the selected %s: %s',\n            titlePlural,\n            errMsg,\n          ),\n        ),\n      )(e);\n    }\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n\n  const toggleActive = useCallback(\n    (data: AlertObject, checked: boolean) => {\n      if (data?.id) {\n        const update_id = data.id;\n        const original = [...alerts];\n\n        setResourceCollection(\n          original.map(alert => {\n            if (alert?.id === data.id) {\n              return {\n                ...alert,\n                active: checked,\n              };\n            }\n\n            return alert;\n          }),\n        );\n\n        updateResource(update_id, { active: checked }, false, false)\n          .then()\n          .catch(() => setResourceCollection(original));\n      }\n    },\n    [alerts, setResourceCollection, updateResource],\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { last_state: lastState },\n          },\n        }: any) => (\n          <AlertStatusIcon\n            state={lastState}\n            isReportEnabled={isReportEnabled}\n          />\n        ),\n        accessor: 'last_state',\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_eval_dttm: lastEvalDttm },\n          },\n        }: any) =>\n          lastEvalDttm\n            ? moment.utc(lastEvalDttm).local().format(DATETIME_WITH_TIME_ZONE)\n            : '',\n        accessor: 'last_eval_dttm',\n        Header: t('Last run'),\n        size: 'lg',\n      },\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        size: 'xl',\n      },\n      {\n        Header: t('Schedule'),\n        accessor: 'crontab_humanized',\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { crontab_humanized = '', timezone },\n          },\n        }: any) => (\n          <Tooltip\n            title={`${crontab_humanized} (${timezone})`}\n            placement=\"topLeft\"\n          >\n            <span>{`${crontab_humanized} (${timezone})`}</span>\n          </Tooltip>\n        ),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { recipients },\n          },\n        }: any) =>\n          recipients.map((r: any) => (\n            <RecipientIcon key={r.id} type={r.type} />\n          )),\n        accessor: 'recipients',\n        Header: t('Notification method'),\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        id: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          return (\n            <Switch\n              disabled={!allowEdit}\n              data-test=\"toggle-active\"\n              checked={original.active}\n              onClick={(checked: boolean) => toggleActive(original, checked)}\n              size=\"small\"\n            />\n          );\n        },\n        Header: t('Active'),\n        accessor: 'active',\n        id: 'active',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const history = useHistory();\n          const handleEdit = () => handleAlertEdit(original);\n          const handleDelete = () => setCurrentAlertDeleting(original);\n          const handleGotoExecutionLog = () =>\n            history.push(`/${original.type.toLowerCase()}/${original.id}/log`);\n\n          const allowEdit =\n            original.owners.map((o: Owner) => o.id).includes(user.userId) ||\n            isUserAdmin(user);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'execution-log-action',\n                  tooltip: t('Execution log'),\n                  placement: 'bottom',\n                  icon: 'Note',\n                  onClick: handleGotoExecutionLog,\n                }\n              : null,\n            canEdit\n              ? {\n                  label: allowEdit ? 'edit-action' : 'preview-action',\n                  tooltip: allowEdit ? t('Edit') : t('View'),\n                  placement: 'bottom',\n                  icon: allowEdit ? 'Edit' : 'Binoculars',\n                  onClick: handleEdit,\n                }\n              : null,\n            allowEdit && canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => item !== null);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, isReportEnabled, toggleActive],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {title}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAlertEdit(null);\n      },\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select-toggle',\n    });\n  }\n\n  const emptyState = {\n    title: t('No %s yet', titlePlural),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAlertEdit(null),\n    buttonText: canCreate ? (\n      <>\n        <i className=\"fa fa-plus\" /> {title}{' '}\n      </>\n    ) : null,\n  };\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'owners',\n          createErrorHandler(errMsg =>\n            t('An error occurred while fetching owners values: %s', errMsg),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Status'),\n        key: 'status',\n        id: 'last_state',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'Any',\n        selects: [\n          {\n            label: AlertStateLabel[AlertState.Success],\n            value: AlertState.Success,\n          },\n          {\n            label: AlertStateLabel[AlertState.Working],\n            value: AlertState.Working,\n          },\n          { label: AlertStateLabel[AlertState.Error], value: AlertState.Error },\n          { label: AlertStateLabel[AlertState.Noop], value: AlertState.Noop },\n          { label: AlertStateLabel[AlertState.Grace], value: AlertState.Grace },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'report',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  const header = HeaderExtension ? (\n    <StyledHeaderWithIcon>\n      <div>{t('Alerts & reports')}</div>\n      <HeaderExtension />\n    </StyledHeaderWithIcon>\n  ) : (\n    t('Alerts & reports')\n  );\n\n  return (\n    <>\n      <SubMenu\n        activeChild={pathName}\n        name={header}\n        tabs={[\n          {\n            name: 'Alerts',\n            label: t('Alerts'),\n            url: '/alert/list/',\n            usesRouter: true,\n            'data-test': 'alert-list',\n          },\n          {\n            name: 'Reports',\n            label: t('Reports'),\n            url: '/report/list/',\n            usesRouter: true,\n            'data-test': 'report-list',\n          },\n        ]}\n        buttons={subMenuButtons}\n      >\n        <RefreshContainer>\n          <LastUpdated updatedAt={lastFetched} update={() => refreshData()} />\n        </RefreshContainer>\n      </SubMenu>\n      <AlertReportModal\n        alert={currentAlert}\n        addDangerToast={addDangerToast}\n        layer={currentAlert}\n        onHide={() => {\n          setAlertModalOpen(false);\n          setCurrentAlert(null);\n          refreshData();\n        }}\n        show={alertModalOpen}\n        isReport={isReportEnabled}\n        key={currentAlert?.id || generateKey()}\n      />\n      {currentAlertDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentAlertDeleting.name,\n          )}\n          onConfirm={() => {\n            if (currentAlertDeleting) {\n              handleAlertDelete(currentAlertDeleting);\n            }\n          }}\n          onHide={() => setCurrentAlertDeleting(null)}\n          open\n          title={t('Delete %s?', title)}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t(\n          'Are you sure you want to delete the selected %s?',\n          titlePlural,\n        )}\n        onConfirm={handleBulkAlertDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n          return (\n            <ListView<AlertObject>\n              className=\"alerts-list-view\"\n              columns={columns}\n              count={alertsCount}\n              data={alerts}\n              emptyState={emptyState}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              pageSize={PAGE_SIZE}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AlertList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}