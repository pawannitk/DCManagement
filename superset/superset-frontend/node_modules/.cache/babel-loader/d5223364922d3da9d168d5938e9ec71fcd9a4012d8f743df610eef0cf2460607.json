{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import assert from './assert';\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nexport const config = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\nexport function configure(options) {\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\nexport function formatValue(value, {\n  precision = config.precision\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\nexport function clone(array) {\n  return 'clone' in array ? array.clone() : array.slice();\n}\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians, result) {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\nexport function cos(radians, result) {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\nexport function tan(radians, result) {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\nexport function asin(radians, result) {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\nexport function acos(radians, result) {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\nexport function atan(radians, result) {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\nexport function clamp(value, min, max) {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(epsilon, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    const array = value;\n    result = result || duplicateArray(array);\n\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RADIANS_TO_DEGREES, \"RADIANS_TO_DEGREES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(DEGREES_TO_RADIANS, \"DEGREES_TO_RADIANS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(configure, \"configure\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(formatValue, \"formatValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(isArray, \"isArray\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(clone, \"clone\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(toRadians, \"toRadians\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(toDegrees, \"toDegrees\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(radians, \"radians\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(degrees, \"degrees\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(sin, \"sin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(cos, \"cos\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(tan, \"tan\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(asin, \"asin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(acos, \"acos\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(atan, \"atan\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(clamp, \"clamp\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(lerp, \"lerp\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(equals, \"equals\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(exactEquals, \"exactEquals\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(withEpsilon, \"withEpsilon\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(round, \"round\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(duplicateArray, \"duplicateArray\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");reactHotLoader.register(map, \"map\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@math.gl/core/dist/esm/lib/common.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["assert","RADIANS_TO_DEGREES","Math","PI","DEGREES_TO_RADIANS","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","configure","options","key","formatValue","value","round","concat","parseFloat","toPrecision","isArray","Array","ArrayBuffer","isView","DataView","clone","array","slice","toRadians","degrees","radians","toDegrees","result","map","sin","angle","cos","tan","asin","acos","atan","clamp","min","max","lerp","a","b","t","ai","i","equals","epsilon","oldEpsilon","length","abs","exactEquals","constructor","withEpsilon","func","oldPrecision","duplicateArray","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/lib/common.ts"],"sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport assert from './assert';\n\nimport type MathArray from '../classes/base/math-array';\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\nexport const config: ConfigurationOptions = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\n\nexport function configure(options?: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n *\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  return array.clone ? array.clone() : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, result?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}