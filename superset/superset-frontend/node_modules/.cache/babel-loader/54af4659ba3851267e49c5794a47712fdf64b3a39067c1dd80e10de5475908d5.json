{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number\n};\n\nconst defaultProps = {\n  selectedChartId: null\n};\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId\n}) {\n  return (\n    ___EmotionJSX(CheckboxTree, {\n      showExpandAll: true,\n      expandOnClick: true,\n      showNodeIcon: false,\n      nodes: renderFilterScopeTreeNodes({ nodes, selectedChartId }),\n      checked: checked,\n      expanded: expanded,\n      onCheck: onCheck,\n      onExpand: onExpand,\n      onClick: NOOP,\n      icons: treeIcons }\n    ));\n\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(NOOP, \"NOOP\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");reactHotLoader.register(FilterScopeTree, \"FilterScopeTree\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","CheckboxTree","filterScopeSelectorTreeNodePropShape","renderFilterScopeTreeNodes","treeIcons","jsx","___EmotionJSX","propTypes","nodes","arrayOf","isRequired","checked","oneOfType","number","string","expanded","onCheck","func","onExpand","selectedChartId","defaultProps","NOOP","FilterScopeTree","showExpandAll","expandOnClick","showNodeIcon","onClick","icons","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeTree.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { filterScopeSelectorTreeNodePropShape } from 'src/dashboard/util/propShapes';\nimport renderFilterScopeTreeNodes from './renderFilterScopeTreeNodes';\nimport treeIcons from './treeIcons';\n\nconst propTypes = {\n  nodes: PropTypes.arrayOf(filterScopeSelectorTreeNodePropShape).isRequired,\n  checked: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  expanded: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  ).isRequired,\n  onCheck: PropTypes.func.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  selectedChartId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedChartId: null,\n};\n\nconst NOOP = () => {};\n\nexport default function FilterScopeTree({\n  nodes = [],\n  checked = [],\n  expanded = [],\n  onCheck,\n  onExpand,\n  selectedChartId,\n}) {\n  return (\n    <CheckboxTree\n      showExpandAll\n      expandOnClick\n      showNodeIcon={false}\n      nodes={renderFilterScopeTreeNodes({ nodes, selectedChartId })}\n      checked={checked}\n      expanded={expanded}\n      onCheck={onCheck}\n      onExpand={onExpand}\n      onClick={NOOP}\n      icons={treeIcons}\n    />\n  );\n}\n\nFilterScopeTree.propTypes = propTypes;\nFilterScopeTree.defaultProps = defaultProps;\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,oCAAoC,QAAQ,+BAA+B;AACpF,OAAOC,0BAA0B,MAAM,8BAA8B;AACrE,OAAOC,SAAS,MAAM,aAAa,CAAC,SAAAC,GAAA,IAAAC,aAAA;;AAEpC,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAER,SAAS,CAACS,OAAO,CAACP,oCAAoC,CAAC,CAACQ,UAAU;EACzEC,OAAO,EAAEX,SAAS,CAACS,OAAO;IACxBT,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACa,MAAM,EAAEb,SAAS,CAACc,MAAM,CAAC;EAC1D,CAAC,CAACJ,UAAU;EACZK,QAAQ,EAAEf,SAAS,CAACS,OAAO;IACzBT,SAAS,CAACY,SAAS,CAAC,CAACZ,SAAS,CAACa,MAAM,EAAEb,SAAS,CAACc,MAAM,CAAC;EAC1D,CAAC,CAACJ,UAAU;EACZM,OAAO,EAAEhB,SAAS,CAACiB,IAAI,CAACP,UAAU;EAClCQ,QAAQ,EAAElB,SAAS,CAACiB,IAAI,CAACP,UAAU;EACnCS,eAAe,EAAEnB,SAAS,CAACa;AAC7B,CAAC;;AAED,MAAMO,YAAY,GAAG;EACnBD,eAAe,EAAE;AACnB,CAAC;;AAED,MAAME,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;;AAErB,eAAe,SAASC,eAAeA,CAAC;EACtCd,KAAK,GAAG,EAAE;EACVG,OAAO,GAAG,EAAE;EACZI,QAAQ,GAAG,EAAE;EACbC,OAAO;EACPE,QAAQ;EACRC;AACF,CAAC,EAAE;EACD;IACEb,aAAA,CAACL,YAAY;MACXsB,aAAa;MACbC,aAAa;MACbC,YAAY,EAAE,KAAM;MACpBjB,KAAK,EAAEL,0BAA0B,CAAC,EAAEK,KAAK,EAAEW,eAAe,CAAC,CAAC,CAAE;MAC9DR,OAAO,EAAEA,OAAQ;MACjBI,QAAQ,EAAEA,QAAS;MACnBC,OAAO,EAAEA,OAAQ;MACjBE,QAAQ,EAAEA,QAAS;MACnBQ,OAAO,EAAEL,IAAK;MACdM,KAAK,EAAEvB,SAAU;IAClB,CAAC;;AAEN;;AAEAkB,eAAe,CAACf,SAAS,GAAGA,SAAS;AACrCe,eAAe,CAACF,YAAY,GAAGA,YAAY,CAAC,mBAAAQ,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA5CtCzB,SAAS,kIAAAqB,cAAA,CAAAI,QAAA,CAaTZ,YAAY,qIAAAQ,cAAA,CAAAI,QAAA,CAIZX,IAAI,6HAAAO,cAAA,CAAAI,QAAA,CAEcV,eAAe,gKAAAW,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}