{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getNumberFormatter,\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace } from\n'@superset-ui/core';\nimport countries, { countryOptions } from './countries';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country_id: PropTypes.string,\n      metric: PropTypes.number\n    })\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  country: PropTypes.string,\n  linearColorScheme: PropTypes.string,\n  mapBaseUrl: PropTypes.string,\n  numberFormat: PropTypes.string\n};\n\nconst maps = {};\n\nfunction CountryMap(element, props) {\n  const {\n    data,\n    width,\n    height,\n    country,\n    linearColorScheme,\n    numberFormat,\n    colorScheme,\n    sliceId\n  } = props;\n\n  const container = element;\n  const format = getNumberFormatter(numberFormat);\n  const linearColorScale = getSequentialSchemeRegistry().\n  get(linearColorScheme).\n  createLinearScale(d3Extent(data, (v) => v.metric));\n  const colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n  const colorMap = {};\n  data.forEach((d) => {\n    colorMap[d.country_id] = colorScheme ?\n    colorScale(d.country_id, sliceId) :\n    linearColorScale(d.metric);\n  });\n  const colorFn = (d) => colorMap[d.properties.ISO] || 'none';\n\n  const path = d3.geo.path();\n  const div = d3.select(container);\n  div.classed('superset-legacy-chart-country-map', true);\n  div.selectAll('*').remove();\n  container.style.height = `${height}px`;\n  container.style.width = `${width}px`;\n  const svg = div.\n  append('svg:svg').\n  attr('width', width).\n  attr('height', height).\n  attr('preserveAspectRatio', 'xMidYMid meet');\n  const backgroundRect = svg.\n  append('rect').\n  attr('class', 'background').\n  attr('width', width).\n  attr('height', height);\n  const g = svg.append('g');\n  const mapLayer = g.append('g').classed('map-layer', true);\n  const textLayer = g.\n  append('g').\n  classed('text-layer', true).\n  attr('transform', `translate(${width / 2}, 45)`);\n  const bigText = textLayer.append('text').classed('big-text', true);\n  const resultText = textLayer.\n  append('text').\n  classed('result-text', true).\n  attr('dy', '1em');\n\n  let centered;\n\n  const clicked = function clicked(d) {\n    const hasCenter = d && centered !== d;\n    let x;\n    let y;\n    let k;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    if (hasCenter) {\n      const centroid = path.centroid(d);\n      [x, y] = centroid;\n      k = 4;\n      centered = d;\n    } else {\n      x = halfWidth;\n      y = halfHeight;\n      k = 1;\n      centered = null;\n    }\n\n    g.transition().\n    duration(750).\n    attr(\n      'transform',\n      `translate(${halfWidth},${halfHeight})scale(${k})translate(${-x},${-y})`\n    );\n    textLayer.\n    style('opacity', 0).\n    attr(\n      'transform',\n      `translate(0,0)translate(${x},${hasCenter ? y - 5 : 45})`\n    ).\n    transition().\n    duration(750).\n    style('opacity', 1);\n    bigText.\n    transition().\n    duration(750).\n    style('font-size', hasCenter ? 6 : 16);\n    resultText.\n    transition().\n    duration(750).\n    style('font-size', hasCenter ? 16 : 24);\n  };\n\n  backgroundRect.on('click', clicked);\n\n  const selectAndDisplayNameOfRegion = function selectAndDisplayNameOfRegion(\n  feature)\n  {\n    let name = '';\n    if (feature && feature.properties) {\n      if (feature.properties.ID_2) {\n        name = feature.properties.NAME_2;\n      } else {\n        name = feature.properties.NAME_1;\n      }\n    }\n    bigText.text(name);\n  };\n\n  const updateMetrics = function updateMetrics(region) {\n    if (region.length > 0) {\n      resultText.text(format(region[0].metric));\n    }\n  };\n\n  const mouseenter = function mouseenter(d) {\n    // Darken color\n    let c = colorFn(d);\n    if (c !== 'none') {\n      c = d3.rgb(c).darker().toString();\n    }\n    d3.select(this).style('fill', c);\n    selectAndDisplayNameOfRegion(d);\n    const result = data.filter(\n      (region) => region.country_id === d.properties.ISO\n    );\n    updateMetrics(result);\n  };\n\n  const mouseout = function mouseout() {\n    d3.select(this).style('fill', colorFn);\n    bigText.text('');\n    resultText.text('');\n  };\n\n  function drawMap(mapData) {\n    const { features } = mapData;\n    const center = d3.geo.centroid(mapData);\n    const scale = 100;\n    const projection = d3.geo.\n    mercator().\n    scale(scale).\n    center(center).\n    translate([width / 2, height / 2]);\n    path.projection(projection);\n\n    // Compute scale that fits container.\n    const bounds = path.bounds(mapData);\n    const hscale = scale * width / (bounds[1][0] - bounds[0][0]);\n    const vscale = scale * height / (bounds[1][1] - bounds[0][1]);\n    const newScale = hscale < vscale ? hscale : vscale;\n\n    // Compute bounds and offset using the updated scale.\n    projection.scale(newScale);\n    const newBounds = path.bounds(mapData);\n    projection.translate([\n    width - (newBounds[0][0] + newBounds[1][0]) / 2,\n    height - (newBounds[0][1] + newBounds[1][1]) / 2]\n    );\n\n    // Draw each province as a path\n    mapLayer.\n    selectAll('path').\n    data(features).\n    enter().\n    append('path').\n    attr('d', path).\n    attr('class', 'region').\n    attr('vector-effect', 'non-scaling-stroke').\n    style('fill', colorFn).\n    on('mouseenter', mouseenter).\n    on('mouseout', mouseout).\n    on('click', clicked);\n  }\n\n  const map = maps[country];\n  if (map) {\n    drawMap(map);\n  } else {\n    const url = countries[country];\n    d3.json(url, (error, mapData) => {\n      if (error) {var _countryOptions$find;\n        const countryName =\n        ((_countryOptions$find = countryOptions.find((x) => x[0] === country)) == null ? void 0 : _countryOptions$find[1]) || country;\n        d3.select(element).html(\n          `<div class=\"alert alert-danger\">Could not load map data for ${countryName}</div>`\n        );\n      } else {\n        maps[country] = mapData;\n        drawMap(mapData);\n      }\n    });\n  }\n}\n\nCountryMap.displayName = 'CountryMap';\nCountryMap.propTypes = propTypes;const _default =\n\nCountryMap;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js\");reactHotLoader.register(maps, \"maps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js\");reactHotLoader.register(CountryMap, \"CountryMap\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["d3","PropTypes","extent","d3Extent","getNumberFormatter","getSequentialSchemeRegistry","CategoricalColorNamespace","countries","countryOptions","propTypes","data","arrayOf","shape","country_id","string","metric","number","width","height","country","linearColorScheme","mapBaseUrl","numberFormat","maps","CountryMap","element","props","colorScheme","sliceId","container","format","linearColorScale","get","createLinearScale","v","colorScale","getScale","colorMap","forEach","d","colorFn","properties","ISO","path","geo","div","select","classed","selectAll","remove","style","svg","append","attr","backgroundRect","g","mapLayer","textLayer","bigText","resultText","centered","clicked","hasCenter","x","y","k","halfWidth","halfHeight","centroid","transition","duration","on","selectAndDisplayNameOfRegion","feature","name","ID_2","NAME_2","NAME_1","text","updateMetrics","region","length","mouseenter","c","rgb","darker","toString","result","filter","mouseout","drawMap","mapData","features","center","scale","projection","mercator","translate","bounds","hscale","vscale","newScale","newBounds","enter","map","url","json","error","_countryOptions$find","countryName","find","html","displayName","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-country-map/src/CountryMap.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport {\n  getNumberFormatter,\n  getSequentialSchemeRegistry,\n  CategoricalColorNamespace,\n} from '@superset-ui/core';\nimport countries, { countryOptions } from './countries';\n\nconst propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country_id: PropTypes.string,\n      metric: PropTypes.number,\n    }),\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  country: PropTypes.string,\n  linearColorScheme: PropTypes.string,\n  mapBaseUrl: PropTypes.string,\n  numberFormat: PropTypes.string,\n};\n\nconst maps = {};\n\nfunction CountryMap(element, props) {\n  const {\n    data,\n    width,\n    height,\n    country,\n    linearColorScheme,\n    numberFormat,\n    colorScheme,\n    sliceId,\n  } = props;\n\n  const container = element;\n  const format = getNumberFormatter(numberFormat);\n  const linearColorScale = getSequentialSchemeRegistry()\n    .get(linearColorScheme)\n    .createLinearScale(d3Extent(data, v => v.metric));\n  const colorScale = CategoricalColorNamespace.getScale(colorScheme);\n\n  const colorMap = {};\n  data.forEach(d => {\n    colorMap[d.country_id] = colorScheme\n      ? colorScale(d.country_id, sliceId)\n      : linearColorScale(d.metric);\n  });\n  const colorFn = d => colorMap[d.properties.ISO] || 'none';\n\n  const path = d3.geo.path();\n  const div = d3.select(container);\n  div.classed('superset-legacy-chart-country-map', true);\n  div.selectAll('*').remove();\n  container.style.height = `${height}px`;\n  container.style.width = `${width}px`;\n  const svg = div\n    .append('svg:svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('preserveAspectRatio', 'xMidYMid meet');\n  const backgroundRect = svg\n    .append('rect')\n    .attr('class', 'background')\n    .attr('width', width)\n    .attr('height', height);\n  const g = svg.append('g');\n  const mapLayer = g.append('g').classed('map-layer', true);\n  const textLayer = g\n    .append('g')\n    .classed('text-layer', true)\n    .attr('transform', `translate(${width / 2}, 45)`);\n  const bigText = textLayer.append('text').classed('big-text', true);\n  const resultText = textLayer\n    .append('text')\n    .classed('result-text', true)\n    .attr('dy', '1em');\n\n  let centered;\n\n  const clicked = function clicked(d) {\n    const hasCenter = d && centered !== d;\n    let x;\n    let y;\n    let k;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    if (hasCenter) {\n      const centroid = path.centroid(d);\n      [x, y] = centroid;\n      k = 4;\n      centered = d;\n    } else {\n      x = halfWidth;\n      y = halfHeight;\n      k = 1;\n      centered = null;\n    }\n\n    g.transition()\n      .duration(750)\n      .attr(\n        'transform',\n        `translate(${halfWidth},${halfHeight})scale(${k})translate(${-x},${-y})`,\n      );\n    textLayer\n      .style('opacity', 0)\n      .attr(\n        'transform',\n        `translate(0,0)translate(${x},${hasCenter ? y - 5 : 45})`,\n      )\n      .transition()\n      .duration(750)\n      .style('opacity', 1);\n    bigText\n      .transition()\n      .duration(750)\n      .style('font-size', hasCenter ? 6 : 16);\n    resultText\n      .transition()\n      .duration(750)\n      .style('font-size', hasCenter ? 16 : 24);\n  };\n\n  backgroundRect.on('click', clicked);\n\n  const selectAndDisplayNameOfRegion = function selectAndDisplayNameOfRegion(\n    feature,\n  ) {\n    let name = '';\n    if (feature && feature.properties) {\n      if (feature.properties.ID_2) {\n        name = feature.properties.NAME_2;\n      } else {\n        name = feature.properties.NAME_1;\n      }\n    }\n    bigText.text(name);\n  };\n\n  const updateMetrics = function updateMetrics(region) {\n    if (region.length > 0) {\n      resultText.text(format(region[0].metric));\n    }\n  };\n\n  const mouseenter = function mouseenter(d) {\n    // Darken color\n    let c = colorFn(d);\n    if (c !== 'none') {\n      c = d3.rgb(c).darker().toString();\n    }\n    d3.select(this).style('fill', c);\n    selectAndDisplayNameOfRegion(d);\n    const result = data.filter(\n      region => region.country_id === d.properties.ISO,\n    );\n    updateMetrics(result);\n  };\n\n  const mouseout = function mouseout() {\n    d3.select(this).style('fill', colorFn);\n    bigText.text('');\n    resultText.text('');\n  };\n\n  function drawMap(mapData) {\n    const { features } = mapData;\n    const center = d3.geo.centroid(mapData);\n    const scale = 100;\n    const projection = d3.geo\n      .mercator()\n      .scale(scale)\n      .center(center)\n      .translate([width / 2, height / 2]);\n    path.projection(projection);\n\n    // Compute scale that fits container.\n    const bounds = path.bounds(mapData);\n    const hscale = (scale * width) / (bounds[1][0] - bounds[0][0]);\n    const vscale = (scale * height) / (bounds[1][1] - bounds[0][1]);\n    const newScale = hscale < vscale ? hscale : vscale;\n\n    // Compute bounds and offset using the updated scale.\n    projection.scale(newScale);\n    const newBounds = path.bounds(mapData);\n    projection.translate([\n      width - (newBounds[0][0] + newBounds[1][0]) / 2,\n      height - (newBounds[0][1] + newBounds[1][1]) / 2,\n    ]);\n\n    // Draw each province as a path\n    mapLayer\n      .selectAll('path')\n      .data(features)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .attr('class', 'region')\n      .attr('vector-effect', 'non-scaling-stroke')\n      .style('fill', colorFn)\n      .on('mouseenter', mouseenter)\n      .on('mouseout', mouseout)\n      .on('click', clicked);\n  }\n\n  const map = maps[country];\n  if (map) {\n    drawMap(map);\n  } else {\n    const url = countries[country];\n    d3.json(url, (error, mapData) => {\n      if (error) {\n        const countryName =\n          countryOptions.find(x => x[0] === country)?.[1] || country;\n        d3.select(element).html(\n          `<div class=\"alert alert-danger\">Could not load map data for ${countryName}</div>`,\n        );\n      } else {\n        maps[country] = mapData;\n        drawMap(mapData);\n      }\n    });\n  }\n}\n\nCountryMap.displayName = 'CountryMap';\nCountryMap.propTypes = propTypes;\n\nexport default CountryMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}