{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Dashboard from 'src/dashboard/components/Dashboard';\nimport { addSliceToDashboard, removeSliceFromDashboard } from 'src/dashboard/actions/dashboardState';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\nimport { triggerQuery } from 'src/components/Chart/chartAction';\nimport { logEvent } from 'src/logger/actions';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { getAllActiveFilters, getRelevantDataMask } from 'src/dashboard/util/activeAllDashboardFilters';\nimport { clearDataMaskState } from '../../dataMask/actions';\nfunction mapStateToProps(state) {var _dashboardInfo$common, _dashboardInfo$common2, _dashboardInfo$metada, _dashboardInfo$metada2;\n  const { datasources, sliceEntities, dataMask, dashboardInfo, dashboardState, dashboardLayout, impressionId, nativeFilters } = state;\n  return {\n    timeout: (_dashboardInfo$common = dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common2 = _dashboardInfo$common.conf) == null ? void 0 : _dashboardInfo$common2.SUPERSET_WEBSERVER_TIMEOUT,\n    userId: dashboardInfo.userId,\n    dashboardInfo,\n    dashboardState,\n    datasources,\n    // filters prop: a map structure for all the active filter's values and scope in this dashboard,\n    // for each filter field. map key is [chartId_column]\n    // When dashboard is first loaded into browser,\n    // its value is from preselect_filters that dashboard owner saved in dashboard's meta data\n    activeFilters: {\n      ...getActiveFilters(),\n      ...getAllActiveFilters({\n        // eslint-disable-next-line camelcase\n        chartConfiguration: (_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.chart_configuration,\n        nativeFilters: nativeFilters.filters,\n        dataMask,\n        allSliceIds: dashboardState.sliceIds\n      })\n    },\n    chartConfiguration: (_dashboardInfo$metada2 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada2.chart_configuration,\n    ownDataCharts: getRelevantDataMask(dataMask, 'ownState'),\n    slices: sliceEntities.slices,\n    layout: dashboardLayout.present,\n    impressionId\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      setDatasources,\n      clearDataMaskState,\n      addSliceToDashboard,\n      removeSliceFromDashboard,\n      triggerQuery,\n      logEvent\n    }, dispatch)\n  };\n}const _default =\nconnect(mapStateToProps, mapDispatchToProps)(Dashboard);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/Dashboard.ts\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/Dashboard.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/Dashboard.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["bindActionCreators","connect","Dashboard","addSliceToDashboard","removeSliceFromDashboard","setDatasources","triggerQuery","logEvent","getActiveFilters","getAllActiveFilters","getRelevantDataMask","clearDataMaskState","mapStateToProps","state","_dashboardInfo$common","_dashboardInfo$common2","_dashboardInfo$metada","_dashboardInfo$metada2","datasources","sliceEntities","dataMask","dashboardInfo","dashboardState","dashboardLayout","impressionId","nativeFilters","timeout","common","conf","SUPERSET_WEBSERVER_TIMEOUT","userId","activeFilters","chartConfiguration","metadata","chart_configuration","filters","allSliceIds","sliceIds","ownDataCharts","slices","layout","present","mapDispatchToProps","dispatch","actions","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/containers/Dashboard.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from 'src/dashboard/types';\nimport Dashboard from 'src/dashboard/components/Dashboard';\nimport {\n  addSliceToDashboard,\n  removeSliceFromDashboard,\n} from 'src/dashboard/actions/dashboardState';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\n\nimport { triggerQuery } from 'src/components/Chart/chartAction';\nimport { logEvent } from 'src/logger/actions';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getAllActiveFilters,\n  getRelevantDataMask,\n} from 'src/dashboard/util/activeAllDashboardFilters';\nimport { clearDataMaskState } from '../../dataMask/actions';\n\nfunction mapStateToProps(state: RootState) {\n  const {\n    datasources,\n    sliceEntities,\n    dataMask,\n    dashboardInfo,\n    dashboardState,\n    dashboardLayout,\n    impressionId,\n    nativeFilters,\n  } = state;\n\n  return {\n    timeout: dashboardInfo.common?.conf?.SUPERSET_WEBSERVER_TIMEOUT,\n    userId: dashboardInfo.userId,\n    dashboardInfo,\n    dashboardState,\n    datasources,\n    // filters prop: a map structure for all the active filter's values and scope in this dashboard,\n    // for each filter field. map key is [chartId_column]\n    // When dashboard is first loaded into browser,\n    // its value is from preselect_filters that dashboard owner saved in dashboard's meta data\n    activeFilters: {\n      ...getActiveFilters(),\n      ...getAllActiveFilters({\n        // eslint-disable-next-line camelcase\n        chartConfiguration: dashboardInfo.metadata?.chart_configuration,\n        nativeFilters: nativeFilters.filters,\n        dataMask,\n        allSliceIds: dashboardState.sliceIds,\n      }),\n    },\n    chartConfiguration: dashboardInfo.metadata?.chart_configuration,\n    ownDataCharts: getRelevantDataMask(dataMask, 'ownState'),\n    slices: sliceEntities.slices,\n    layout: dashboardLayout.present,\n    impressionId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        setDatasources,\n        clearDataMaskState,\n        addSliceToDashboard,\n        removeSliceFromDashboard,\n        triggerQuery,\n        logEvent,\n      },\n      dispatch,\n    ),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,kBAAkB,QAAkB,OAAO;AACpD,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,SACEC,mBAAmB,EACnBC,wBAAwB,QACnB,sCAAsC;AAC7C,SAASC,cAAc,QAAQ,mCAAmC;AAElE,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,gBAAgB,QAAQ,2CAA2C;AAC5E,SACEC,mBAAmB,EACnBC,mBAAmB,QACd,8CAA8C;AACrD,SAASC,kBAAkB,QAAQ,wBAAwB;AAE3D,SAASC,eAAeA,CAACC,KAAgB,OAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA;EACvC,MAAM,EACJC,WAAW,EACXC,aAAa,EACbC,QAAQ,EACRC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,YAAY,EACZC,aAAa,EACd,GAAGZ,KAAK;EAET,OAAO;IACLa,OAAO,GAAAZ,qBAAA,GAAEO,aAAa,CAACM,MAAM,sBAAAZ,sBAAA,GAApBD,qBAAA,CAAsBc,IAAI,qBAA1Bb,sBAAA,CAA4Bc,0BAA0B;IAC/DC,MAAM,EAAET,aAAa,CAACS,MAAM;IAC5BT,aAAa;IACbC,cAAc;IACdJ,WAAW;IACX;IACA;IACA;IACA;IACAa,aAAa,EAAE;MACb,GAAGvB,gBAAgB,EAAE;MACrB,GAAGC,mBAAmB,CAAC;QACrB;QACAuB,kBAAkB,GAAAhB,qBAAA,GAAEK,aAAa,CAACY,QAAQ,qBAAtBjB,qBAAA,CAAwBkB,mBAAmB;QAC/DT,aAAa,EAAEA,aAAa,CAACU,OAAO;QACpCf,QAAQ;QACRgB,WAAW,EAAEd,cAAc,CAACe;OAC7B;KACF;IACDL,kBAAkB,GAAAf,sBAAA,GAAEI,aAAa,CAACY,QAAQ,qBAAtBhB,sBAAA,CAAwBiB,mBAAmB;IAC/DI,aAAa,EAAE5B,mBAAmB,CAACU,QAAQ,EAAE,UAAU,CAAC;IACxDmB,MAAM,EAAEpB,aAAa,CAACoB,MAAM;IAC5BC,MAAM,EAAEjB,eAAe,CAACkB,OAAO;IAC/BjB;GACD;AACH;AAEA,SAASkB,kBAAkBA,CAACC,QAAkB;EAC5C,OAAO;IACLC,OAAO,EAAE5C,kBAAkB,CACzB;MACEK,cAAc;MACdM,kBAAkB;MAClBR,mBAAmB;MACnBC,wBAAwB;MACxBE,YAAY;MACZC;KACD,EACDoC,QAAQ;GAEX;AACH,CAAC,MAAAE,QAAA;AAEc5C,OAAO,CAACW,eAAe,EAAE8B,kBAAkB,CAAC,CAACxC,SAAS,CAAC,CAAtE,eAAA2C,QAAA,CAAuE,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxD9DtC,eAAe,qHAAAkC,cAAA,CAAAI,QAAA,CAwCfR,kBAAkB,wHAAAI,cAAA,CAAAI,QAAA,CAAAL,QAAA,qIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}