{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { PolygonLayer } from 'deck.gl/typed';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\nimport fitViewport from '../../utils/fitViewport';\nimport { DeckGLContainerStyledWrapper } from '../../DeckGLContainer';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DOUBLE_CLICK_THRESHOLD = 250; // milliseconds\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\nfunction setTooltipContent(formData) {\n  return (o) => {var _formData$metric, _o$object, _o$object2, _o$object3;\n    const metricLabel = (formData == null ? void 0 : (_formData$metric = formData.metric) == null ? void 0 : _formData$metric.label) || (formData == null ? void 0 : formData.metric);\n    return ___EmotionJSX(\"div\", { className: \"deckgl-tooltip\" },\n    ((_o$object = o.object) == null ? void 0 : _o$object.name) && ___EmotionJSX(TooltipRow\n    // eslint-disable-next-line prefer-template\n    , { label: t('name') + ': ', value: `${o.object.name}` }),\n    ((_o$object2 = o.object) == null ? void 0 : _o$object2[formData == null ? void 0 : formData.line_column]) && ___EmotionJSX(TooltipRow, { label: `${formData.line_column}: `, value: `${o.object[formData.line_column]}` }),\n    (formData == null ? void 0 : formData.metric) && ___EmotionJSX(TooltipRow, { label: `${metricLabel}: `, value: `${(_o$object3 = o.object) == null ? void 0 : _o$object3[metricLabel]}` })\n    );\n  };\n}\nexport function getLayer(formData, payload, onAddFilter, setTooltip, selected, onSelect) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = (d) => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler = fd.metric === null ?\n  () => [fc.r, fc.g, fc.b, 255 * fc.a] :\n  getBreakPointColorScaler(fd, data, accessor);\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = (d) => {\n    const baseColor = (baseColorScaler == null ? void 0 : baseColorScaler(d)) || [0, 0, 0, 0];\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n    return baseColor;\n  };\n  const tooltipContentGenerator = fd.line_column &&\n  fd.metric &&\n  ['json', 'geohash', 'zipcode'].includes(fd.line_type) ?\n  setTooltipContent(fd) :\n  () => null;\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    lineWidthUnits: fd.line_width_unit,\n    getElevation: (d) => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect)\n  });\n}\nconst DeckGLPolygon = (props) => {\n  const containerRef = useRef();\n  const getAdjustedViewport = useCallback(() => {\n    let viewport = { ...props.viewport };\n    if (props.formData.autozoom) {\n      const features = props.payload.data.features || [];\n      viewport = fitViewport(viewport, {\n        width: props.width,\n        height: props.height,\n        points: features.flatMap(getPointsFromPolygon)\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n    return viewport;\n  }, [props]);\n  const [lastClick, setLastClick] = useState(0);\n  const [viewport, setViewport] = useState(getAdjustedViewport());\n  const [stateFormData, setStateFormData] = useState(props.payload.form_data);\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    const { payload } = props;\n    if (payload.form_data !== stateFormData) {\n      setViewport(getAdjustedViewport());\n      setSelected([]);\n      setLastClick(0);\n      setStateFormData(payload.form_data);\n    }\n  }, [getAdjustedViewport, props, stateFormData, viewport]);\n  const setTooltip = useCallback((tooltip) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n  const onSelect = useCallback((polygon) => {\n    const { formData, onAddFilter } = props;\n    const now = new Date().getDate();\n    const doubleClick = now - lastClick <= DOUBLE_CLICK_THRESHOLD;\n    // toggle selected polygons\n    const selectedCopy = [...selected];\n    if (doubleClick) {\n      selectedCopy.splice(0, selectedCopy.length, polygon);\n    } else\n    if (formData.toggle_polygons) {\n      const i = selectedCopy.indexOf(polygon);\n      if (i === -1) {\n        selectedCopy.push(polygon);\n      } else\n      {\n        selectedCopy.splice(i, 1);\n      }\n    } else\n    {\n      selectedCopy.splice(0, 1, polygon);\n    }\n    setSelected(selectedCopy);\n    setLastClick(now);\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }, [lastClick, props, selected]);\n  const getLayers = useCallback(() => {\n    if (props.payload.data.features === undefined) {\n      return [];\n    }\n    const layer = getLayer(props.formData, props.payload, props.onAddFilter, setTooltip, selected, onSelect);\n    return [layer];\n  }, [\n  onSelect,\n  props.formData,\n  props.onAddFilter,\n  props.payload,\n  selected,\n  setTooltip]\n  );\n  const { payload, formData, setControlValue } = props;\n  const metricLabel = formData.metric ?\n  formData.metric.label || formData.metric :\n  null;\n  const accessor = (d) => d[metricLabel];\n  const buckets = getBuckets(formData, payload.data.features, accessor);\n  return ___EmotionJSX(\"div\", { style: { position: 'relative' } },\n  ___EmotionJSX(DeckGLContainerStyledWrapper, { ref: containerRef, viewport: viewport, layers: getLayers(), setControlValue: setControlValue, mapStyle: formData.mapbox_style, mapboxApiAccessToken: payload.data.mapboxApiKey, width: props.width, height: props.height }),\n\n  formData.metric !== null && ___EmotionJSX(Legend, { categories: buckets, position: formData.legend_position, format: formData.legend_format })\n  );\n};__signature__(DeckGLPolygon, \"useRef{containerRef}\\nuseCallback{getAdjustedViewport}\\nuseState{[lastClick, setLastClick](0)}\\nuseState{[viewport, setViewport](getAdjustedViewport())}\\nuseState{[stateFormData, setStateFormData](props.payload.form_data)}\\nuseState{[selected, setSelected]([])}\\nuseEffect{}\\nuseCallback{setTooltip}\\nuseCallback{onSelect}\\nuseCallback{getLayers}\");const _default = /*#__PURE__*/\nmemo(DeckGLPolygon);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DOUBLE_CLICK_THRESHOLD, \"DOUBLE_CLICK_THRESHOLD\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");reactHotLoader.register(getElevation, \"getElevation\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");reactHotLoader.register(setTooltipContent, \"setTooltipContent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");reactHotLoader.register(getLayer, \"getLayer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");reactHotLoader.register(DeckGLPolygon, \"DeckGLPolygon\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","memo","useCallback","useEffect","useRef","useState","t","PolygonLayer","Legend","TooltipRow","getBuckets","getBreakPointColorScaler","commonLayerProps","sandboxedEval","getPointsFromPolygon","fitViewport","DeckGLContainerStyledWrapper","jsx","___EmotionJSX","DOUBLE_CLICK_THRESHOLD","getElevation","d","colorScaler","elevation","setTooltipContent","formData","o","_formData$metric","_o$object","_o$object2","_o$object3","metricLabel","metric","label","className","object","name","value","line_column","getLayer","payload","onAddFilter","setTooltip","selected","onSelect","fd","fc","fill_color_picker","sc","stroke_color_picker","data","features","js_data_mutator","jsFnMutator","accessor","baseColorScaler","r","g","b","a","baseColor","length","includes","tooltipContentGenerator","line_type","id","slice_id","filled","stroked","getPolygon","getFillColor","getLineColor","getLineWidth","line_width","extruded","lineWidthUnits","line_width_unit","elevationScale","multiplier","fp64","DeckGLPolygon","props","containerRef","getAdjustedViewport","viewport","autozoom","width","height","points","flatMap","zoom","lastClick","setLastClick","setViewport","stateFormData","setStateFormData","form_data","setSelected","tooltip","current","polygon","now","Date","getDate","doubleClick","selectedCopy","splice","toggle_polygons","i","indexOf","push","table_filter","getLayers","undefined","layer","setControlValue","buckets","style","position","ref","layers","mapStyle","mapbox_style","mapboxApiAccessToken","mapboxApiKey","categories","legend_position","format","legend_format","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.tsx"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  HandlerFunction,\n  JsonObject,\n  JsonValue,\n  QueryFormData,\n  t,\n} from '@superset-ui/core';\n\nimport { PolygonLayer } from 'deck.gl/typed';\n\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\nimport fitViewport, { Viewport } from '../../utils/fitViewport';\nimport {\n  DeckGLContainerHandle,\n  DeckGLContainerStyledWrapper,\n} from '../../DeckGLContainer';\nimport { TooltipProps } from '../../components/Tooltip';\n\nconst DOUBLE_CLICK_THRESHOLD = 250; // milliseconds\n\nfunction getElevation(\n  d: JsonObject,\n  colorScaler: (d: JsonObject) => [number, number, number, number],\n) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData: PolygonFormData) {\n  return (o: JsonObject) => {\n    const metricLabel = formData?.metric?.label || formData?.metric;\n\n    return (\n      <div className=\"deckgl-tooltip\">\n        {o.object?.name && (\n          <TooltipRow\n            // eslint-disable-next-line prefer-template\n            label={t('name') + ': '}\n            value={`${o.object.name}`}\n          />\n        )}\n        {o.object?.[formData?.line_column] && (\n          <TooltipRow\n            label={`${formData.line_column}: `}\n            value={`${o.object[formData.line_column]}`}\n          />\n        )}\n        {formData?.metric && (\n          <TooltipRow\n            label={`${metricLabel}: `}\n            value={`${o.object?.[metricLabel]}`}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData: PolygonFormData,\n  payload: JsonObject,\n  onAddFilter: HandlerFunction,\n  setTooltip: (tooltip: TooltipProps['tooltip']) => void,\n  selected: JsonObject[],\n  onSelect: (value: JsonValue) => void,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = (d: JsonObject) => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n    fd.metric === null\n      ? () => [fc.r, fc.g, fc.b, 255 * fc.a]\n      : getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = (d: JsonObject): [number, number, number, number] => {\n    const baseColor = (baseColorScaler?.(d) as [\n      number,\n      number,\n      number,\n      number,\n    ]) || [0, 0, 0, 0];\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n    fd.line_column &&\n    fd.metric &&\n    ['json', 'geohash', 'zipcode'].includes(fd.line_type)\n      ? setTooltipContent(fd)\n      : () => null;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}` as const,\n    data,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    lineWidthUnits: fd.line_width_unit,\n    getElevation: d => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect),\n  });\n}\n\nexport type PolygonFormData = QueryFormData & {\n  break_points: string[];\n  num_buckets: string;\n  linear_color_scheme: string | string[];\n  opacity: number;\n};\nexport type DeckGLPolygonProps = {\n  formData: PolygonFormData;\n  payload: JsonObject;\n  setControlValue: (control: string, value: JsonValue) => void;\n  viewport: Viewport;\n  onAddFilter: HandlerFunction;\n  width: number;\n  height: number;\n};\n\nconst DeckGLPolygon = (props: DeckGLPolygonProps) => {\n  const containerRef = useRef<DeckGLContainerHandle>();\n\n  const getAdjustedViewport = useCallback(() => {\n    let viewport = { ...props.viewport };\n    if (props.formData.autozoom) {\n      const features = props.payload.data.features || [];\n      viewport = fitViewport(viewport, {\n        width: props.width,\n        height: props.height,\n        points: features.flatMap(getPointsFromPolygon),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n    return viewport;\n  }, [props]);\n\n  const [lastClick, setLastClick] = useState(0);\n  const [viewport, setViewport] = useState(getAdjustedViewport());\n  const [stateFormData, setStateFormData] = useState(props.payload.form_data);\n  const [selected, setSelected] = useState<JsonObject[]>([]);\n\n  useEffect(() => {\n    const { payload } = props;\n\n    if (payload.form_data !== stateFormData) {\n      setViewport(getAdjustedViewport());\n      setSelected([]);\n      setLastClick(0);\n      setStateFormData(payload.form_data);\n    }\n  }, [getAdjustedViewport, props, stateFormData, viewport]);\n\n  const setTooltip = useCallback((tooltip: TooltipProps['tooltip']) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n\n  const onSelect = useCallback(\n    (polygon: JsonObject) => {\n      const { formData, onAddFilter } = props;\n\n      const now = new Date().getDate();\n      const doubleClick = now - lastClick <= DOUBLE_CLICK_THRESHOLD;\n\n      // toggle selected polygons\n      const selectedCopy = [...selected];\n      if (doubleClick) {\n        selectedCopy.splice(0, selectedCopy.length, polygon);\n      } else if (formData.toggle_polygons) {\n        const i = selectedCopy.indexOf(polygon);\n        if (i === -1) {\n          selectedCopy.push(polygon);\n        } else {\n          selectedCopy.splice(i, 1);\n        }\n      } else {\n        selectedCopy.splice(0, 1, polygon);\n      }\n\n      setSelected(selectedCopy);\n      setLastClick(now);\n      if (formData.table_filter) {\n        onAddFilter(formData.line_column, selected, false, true);\n      }\n    },\n    [lastClick, props, selected],\n  );\n\n  const getLayers = useCallback(() => {\n    if (props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const layer = getLayer(\n      props.formData,\n      props.payload,\n      props.onAddFilter,\n      setTooltip,\n      selected,\n      onSelect,\n    );\n\n    return [layer];\n  }, [\n    onSelect,\n    props.formData,\n    props.onAddFilter,\n    props.payload,\n    selected,\n    setTooltip,\n  ]);\n\n  const { payload, formData, setControlValue } = props;\n\n  const metricLabel = formData.metric\n    ? formData.metric.label || formData.metric\n    : null;\n  const accessor = (d: JsonObject) => d[metricLabel];\n\n  const buckets = getBuckets(formData, payload.data.features, accessor);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <DeckGLContainerStyledWrapper\n        ref={containerRef}\n        viewport={viewport}\n        layers={getLayers()}\n        setControlValue={setControlValue}\n        mapStyle={formData.mapbox_style}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        width={props.width}\n        height={props.height}\n      />\n\n      {formData.metric !== null && (\n        <Legend\n          categories={buckets}\n          position={formData.legend_position}\n          format={formData.legend_format}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(DeckGLPolygon);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}