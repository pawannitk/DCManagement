{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getColumnLabel } from '@superset-ui/core';\nfunction getMetricLabel(metric) {\n  if (typeof metric === 'string' || typeof metric === 'undefined') {\n    return metric;\n  }\n  if (Array.isArray(metric)) {\n    return metric.length > 0 ? getMetricLabel(metric[0]) : undefined;\n  }\n  return metric.label;\n}\nexport default function transformProps(chartProps) {\n  const { width, height, formData, queriesData } = chartProps;\n  const { colorScheme, metric, rotation, series, sizeFrom = 0, sizeTo, sliceId } = formData;\n  const metricLabel = getMetricLabel(metric);\n  const seriesLabel = getColumnLabel(series);\n  const encoding = {\n    color: {\n      field: seriesLabel,\n      scale: {\n        scheme: colorScheme\n      },\n      type: 'nominal'\n    },\n    fontSize: typeof metricLabel === 'undefined' ?\n    undefined :\n    {\n      field: metricLabel,\n      scale: {\n        range: [sizeFrom, sizeTo],\n        zero: true\n      },\n      type: 'quantitative'\n    },\n    text: {\n      field: seriesLabel\n    }\n  };\n  return {\n    data: queriesData[0].data,\n    encoding,\n    height,\n    rotation,\n    width,\n    sliceId\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getMetricLabel, \"getMetricLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-word-cloud/src/legacyPlugin/transformProps.ts\");reactHotLoader.register(transformProps, \"transformProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-word-cloud/src/legacyPlugin/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getColumnLabel","getMetricLabel","metric","Array","isArray","length","undefined","label","transformProps","chartProps","width","height","formData","queriesData","colorScheme","rotation","series","sizeFrom","sizeTo","sliceId","metricLabel","seriesLabel","encoding","color","field","scale","scheme","type","fontSize","range","zero","text","data","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-word-cloud/src/legacyPlugin/transformProps.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ChartProps, getColumnLabel } from '@superset-ui/core';\nimport { WordCloudProps, WordCloudEncoding } from '../chart/WordCloud';\nimport { LegacyWordCloudFormData } from './types';\n\nfunction getMetricLabel(\n  metric: LegacyWordCloudFormData['metric'],\n): string | undefined {\n  if (typeof metric === 'string' || typeof metric === 'undefined') {\n    return metric;\n  }\n  if (Array.isArray(metric)) {\n    return metric.length > 0 ? getMetricLabel(metric[0]) : undefined;\n  }\n\n  return metric.label;\n}\n\nexport default function transformProps(chartProps: ChartProps): WordCloudProps {\n  const { width, height, formData, queriesData } = chartProps;\n  const {\n    colorScheme,\n    metric,\n    rotation,\n    series,\n    sizeFrom = 0,\n    sizeTo,\n    sliceId,\n  } = formData as LegacyWordCloudFormData;\n\n  const metricLabel = getMetricLabel(metric);\n  const seriesLabel = getColumnLabel(series);\n\n  const encoding: Partial<WordCloudEncoding> = {\n    color: {\n      field: seriesLabel,\n      scale: {\n        scheme: colorScheme,\n      },\n      type: 'nominal',\n    },\n    fontSize:\n      typeof metricLabel === 'undefined'\n        ? undefined\n        : {\n            field: metricLabel,\n            scale: {\n              range: [sizeFrom, sizeTo],\n              zero: true,\n            },\n            type: 'quantitative',\n          },\n    text: {\n      field: seriesLabel,\n    },\n  };\n\n  return {\n    data: queriesData[0].data,\n    encoding,\n    height,\n    rotation,\n    width,\n    sliceId,\n  };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAAqBA,cAAc,QAAQ,mBAAmB;AAI9D,SAASC,cAAcA,CACrBC,MAAyC;EAEzC,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;IAC/D,OAAOA,MAAM;;EAEf,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACzB,OAAOA,MAAM,CAACG,MAAM,GAAG,CAAC,GAAGJ,cAAc,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGI,SAAS;;EAGlE,OAAOJ,MAAM,CAACK,KAAK;AACrB;AAEA,eAAc,SAAUC,cAAcA,CAACC,UAAsB;EAC3D,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAE,GAAGJ,UAAU;EAC3D,MAAM,EACJK,WAAW,EACXZ,MAAM,EACNa,QAAQ,EACRC,MAAM,EACNC,QAAQ,GAAG,CAAC,EACZC,MAAM,EACNC,OAAO,EACR,GAAGP,QAAmC;EAEvC,MAAMQ,WAAW,GAAGnB,cAAc,CAACC,MAAM,CAAC;EAC1C,MAAMmB,WAAW,GAAGrB,cAAc,CAACgB,MAAM,CAAC;EAE1C,MAAMM,QAAQ,GAA+B;IAC3CC,KAAK,EAAE;MACLC,KAAK,EAAEH,WAAW;MAClBI,KAAK,EAAE;QACLC,MAAM,EAAEZ;OACT;MACDa,IAAI,EAAE;KACP;IACDC,QAAQ,EACN,OAAOR,WAAW,KAAK,WAAW;IAC9Bd,SAAS;IACT;MACEkB,KAAK,EAAEJ,WAAW;MAClBK,KAAK,EAAE;QACLI,KAAK,EAAE,CAACZ,QAAQ,EAAEC,MAAM,CAAC;QACzBY,IAAI,EAAE;OACP;MACDH,IAAI,EAAE;KACP;IACPI,IAAI,EAAE;MACJP,KAAK,EAAEH;;GAEV;EAED,OAAO;IACLW,IAAI,EAAEnB,WAAW,CAAC,CAAC,CAAC,CAACmB,IAAI;IACzBV,QAAQ;IACRX,MAAM;IACNI,QAAQ;IACRL,KAAK;IACLS;GACD;AACH,CAAC,mBAAAc,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAA7B,SAAA,MAAA2B,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5DQnC,cAAc,iJAAAgC,cAAA,CAAAG,QAAA,CAaC5B,cAAc,yKAAA6B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAA/B,SAAA,CAAA+B,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}