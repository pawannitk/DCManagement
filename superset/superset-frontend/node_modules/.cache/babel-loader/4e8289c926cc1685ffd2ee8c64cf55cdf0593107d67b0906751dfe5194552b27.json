{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { makeApi, styled, t, getExtensionsRegistry } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Modal from 'src/components/Modal';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport { Input } from 'src/components/Input';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { FormItem } from 'src/components/Form';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst stringToList = (stringyList) => stringyList.split(/(?:\\s|,)+/).filter((x) => x);\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\nexport const DashboardEmbedControls = ({ dashboardId, onHide }) => {var _extensionsRegistry$g;\n  const { addInfoToast, addDangerToast } = useToasts();\n  const [ready, setReady] = useState(true); // whether we have initialized yet\n  const [loading, setLoading] = useState(false); // whether we are currently doing an async thing\n  const [embedded, setEmbedded] = useState(null); // the embedded dashboard config\n  const [allowedDomains, setAllowedDomains] = useState('');\n  const endpoint = `/api/v1/dashboard/${dashboardId}/embedded`;\n  // whether saveable changes have been made to the config\n  const isDirty = !embedded ||\n  stringToList(allowedDomains).join() !== embedded.allowed_domains.join();\n  const enableEmbedded = useCallback(() => {\n    setLoading(true);\n    makeApi({\n      method: 'POST',\n      endpoint\n    })({\n      allowed_domains: stringToList(allowedDomains)\n    }).\n    then(({ result }) => {\n      setEmbedded(result);\n      setAllowedDomains(result.allowed_domains.join(', '));\n      addInfoToast(t('Changes saved.'));\n    }, (err) => {\n      console.error(err);\n      addDangerToast(t(t('Sorry, something went wrong. The changes could not be saved.')));\n    }).\n    finally(() => {\n      setLoading(false);\n    });\n  }, [endpoint, allowedDomains]);\n  const disableEmbedded = useCallback(() => {\n    Modal.confirm({\n      title: t('Disable embedding?'),\n      content: t('This will remove your current embed configuration.'),\n      okType: 'danger',\n      onOk: () => {\n        setLoading(true);\n        makeApi({ method: 'DELETE', endpoint })({}).\n        then(() => {\n          setEmbedded(null);\n          setAllowedDomains('');\n          addInfoToast(t('Embedding deactivated.'));\n          onHide();\n        }, (err) => {\n          console.error(err);\n          addDangerToast(t('Sorry, something went wrong. Embedding could not be deactivated.'));\n        }).\n        finally(() => {\n          setLoading(false);\n        });\n      }\n    });\n  }, [endpoint]);\n  useEffect(() => {\n    setReady(false);\n    makeApi({\n      method: 'GET',\n      endpoint\n    })({}).\n    catch((err) => {\n      if (err.status === 404) {\n        // 404 just means the dashboard isn't currently embedded\n        return { result: null };\n      }\n      addDangerToast(t('Sorry, something went wrong. Please try again.'));\n      throw err;\n    }).\n    then(({ result }) => {\n      setReady(true);\n      setEmbedded(result);\n      setAllowedDomains(result ? result.allowed_domains.join(', ') : '');\n    });\n  }, [dashboardId]);\n  if (!ready) {\n    return ___EmotionJSX(Loading, null);\n  }\n  const DocsConfigDetails = extensionsRegistry.get('embedded.documentation.configuration_details');\n  const docsDescription = extensionsRegistry.get('embedded.documentation.description');\n  const docsUrl = (_extensionsRegistry$g = extensionsRegistry.get('embedded.documentation.url')) != null ? _extensionsRegistry$g :\n  'https://www.npmjs.com/package/@superset-ui/embedded-sdk';\n  return ___EmotionJSX(React.Fragment, null,\n  embedded ? DocsConfigDetails ? ___EmotionJSX(DocsConfigDetails, { embeddedId: embedded.uuid }) : ___EmotionJSX(\"p\", null,\n  t('This dashboard is ready to embed. In your application, pass the following id to the SDK:'),\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(\"code\", null, embedded.uuid)\n  ) : ___EmotionJSX(\"p\", null,\n  t('Configure this dashboard to embed it into an external web application.')\n  ),\n  ___EmotionJSX(\"p\", null,\n  t('For further instructions, consult the'), ' ',\n  ___EmotionJSX(\"a\", { href: docsUrl, target: \"_blank\", rel: \"noreferrer\" },\n  docsDescription ?\n  docsDescription() :\n  t('Superset Embedded SDK documentation.')\n  )\n  ),\n  ___EmotionJSX(\"h3\", null, t('Settings')),\n  ___EmotionJSX(FormItem, null,\n  ___EmotionJSX(\"label\", { htmlFor: \"allowed-domains\" },\n  t('Allowed Domains (comma separated)'), ' ',\n  ___EmotionJSX(InfoTooltipWithTrigger, { tooltip: t('A list of domain names that can embed this dashboard. Leaving this field empty will allow embedding from any domain.') })\n  ),\n  ___EmotionJSX(Input, { name: \"allowed-domains\", id: \"allowed-domains\", value: allowedDomains, placeholder: \"superset.example.com\", onChange: (event) => setAllowedDomains(event.target.value) })\n  ),\n  ___EmotionJSX(ButtonRow, null,\n  embedded ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Button, { onClick: disableEmbedded, buttonStyle: \"secondary\", loading: loading },\n  t('Deactivate')\n  ),\n  ___EmotionJSX(Button, { onClick: enableEmbedded, buttonStyle: \"primary\", disabled: !isDirty, loading: loading },\n  t('Save changes')\n  )\n  ) : ___EmotionJSX(Button, { onClick: enableEmbedded, buttonStyle: \"primary\", loading: loading },\n  t('Enable embedding')\n  )\n  )\n  );\n};__signature__(DashboardEmbedControls, \"useToasts{{ addInfoToast, addDangerToast }}\\nuseState{[ready, setReady](true)}\\nuseState{[loading, setLoading](false)}\\nuseState{[embedded, setEmbedded](null)}\\nuseState{[allowedDomains, setAllowedDomains]('')}\\nuseCallback{enableEmbedded}\\nuseCallback{disableEmbedded}\\nuseEffect{}\", () => [useToasts]);\nconst DashboardEmbedModal = (props) => {\n  const { show, onHide } = props;\n  const DashboardEmbedModalExtension = extensionsRegistry.get('embedded.modal');\n  return DashboardEmbedModalExtension ? ___EmotionJSX(DashboardEmbedModalExtension, props) : ___EmotionJSX(Modal, { show: show, onHide: onHide, title: t('Embed'), hideFooter: true },\n  ___EmotionJSX(DashboardEmbedControls, props)\n  );\n};const _default =\nDashboardEmbedModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");reactHotLoader.register(stringToList, \"stringToList\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");reactHotLoader.register(ButtonRow, \"ButtonRow\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");reactHotLoader.register(DashboardEmbedControls, \"DashboardEmbedControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");reactHotLoader.register(DashboardEmbedModal, \"DashboardEmbedModal\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useEffect","useState","makeApi","styled","t","getExtensionsRegistry","InfoTooltipWithTrigger","Modal","Loading","Button","Input","useToasts","FormItem","jsx","___EmotionJSX","extensionsRegistry","stringToList","stringyList","split","filter","x","ButtonRow","div","DashboardEmbedControls","dashboardId","onHide","_extensionsRegistry$g","addInfoToast","addDangerToast","ready","setReady","loading","setLoading","embedded","setEmbedded","allowedDomains","setAllowedDomains","endpoint","isDirty","join","allowed_domains","enableEmbedded","method","then","result","err","console","error","finally","disableEmbedded","confirm","title","content","okType","onOk","catch","status","DocsConfigDetails","get","docsDescription","docsUrl","Fragment","embeddedId","uuid","href","target","rel","htmlFor","tooltip","name","id","value","placeholder","onChange","event","onClick","buttonStyle","disabled","__signature__","DashboardEmbedModal","props","show","DashboardEmbedModalExtension","hideFooter","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/EmbeddedModal/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  makeApi,\n  styled,\n  SupersetApiError,\n  t,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Modal from 'src/components/Modal';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport { Input } from 'src/components/Input';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { FormItem } from 'src/components/Form';\nimport { EmbeddedDashboard } from 'src/dashboard/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\ntype Props = {\n  dashboardId: string;\n  show: boolean;\n  onHide: () => void;\n};\n\ntype EmbeddedApiPayload = { allowed_domains: string[] };\n\nconst stringToList = (stringyList: string): string[] =>\n  stringyList.split(/(?:\\s|,)+/).filter(x => x);\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nexport const DashboardEmbedControls = ({ dashboardId, onHide }: Props) => {\n  const { addInfoToast, addDangerToast } = useToasts();\n  const [ready, setReady] = useState(true); // whether we have initialized yet\n  const [loading, setLoading] = useState(false); // whether we are currently doing an async thing\n  const [embedded, setEmbedded] = useState<EmbeddedDashboard | null>(null); // the embedded dashboard config\n  const [allowedDomains, setAllowedDomains] = useState<string>('');\n\n  const endpoint = `/api/v1/dashboard/${dashboardId}/embedded`;\n  // whether saveable changes have been made to the config\n  const isDirty =\n    !embedded ||\n    stringToList(allowedDomains).join() !== embedded.allowed_domains.join();\n\n  const enableEmbedded = useCallback(() => {\n    setLoading(true);\n    makeApi<EmbeddedApiPayload, { result: EmbeddedDashboard }>({\n      method: 'POST',\n      endpoint,\n    })({\n      allowed_domains: stringToList(allowedDomains),\n    })\n      .then(\n        ({ result }) => {\n          setEmbedded(result);\n          setAllowedDomains(result.allowed_domains.join(', '));\n          addInfoToast(t('Changes saved.'));\n        },\n        err => {\n          console.error(err);\n          addDangerToast(\n            t(\n              t('Sorry, something went wrong. The changes could not be saved.'),\n            ),\n          );\n        },\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [endpoint, allowedDomains]);\n\n  const disableEmbedded = useCallback(() => {\n    Modal.confirm({\n      title: t('Disable embedding?'),\n      content: t('This will remove your current embed configuration.'),\n      okType: 'danger',\n      onOk: () => {\n        setLoading(true);\n        makeApi<{}>({ method: 'DELETE', endpoint })({})\n          .then(\n            () => {\n              setEmbedded(null);\n              setAllowedDomains('');\n              addInfoToast(t('Embedding deactivated.'));\n              onHide();\n            },\n            err => {\n              console.error(err);\n              addDangerToast(\n                t(\n                  'Sorry, something went wrong. Embedding could not be deactivated.',\n                ),\n              );\n            },\n          )\n          .finally(() => {\n            setLoading(false);\n          });\n      },\n    });\n  }, [endpoint]);\n\n  useEffect(() => {\n    setReady(false);\n    makeApi<{}, { result: EmbeddedDashboard }>({\n      method: 'GET',\n      endpoint,\n    })({})\n      .catch(err => {\n        if ((err as SupersetApiError).status === 404) {\n          // 404 just means the dashboard isn't currently embedded\n          return { result: null };\n        }\n        addDangerToast(t('Sorry, something went wrong. Please try again.'));\n        throw err;\n      })\n      .then(({ result }) => {\n        setReady(true);\n        setEmbedded(result);\n        setAllowedDomains(result ? result.allowed_domains.join(', ') : '');\n      });\n  }, [dashboardId]);\n\n  if (!ready) {\n    return <Loading />;\n  }\n\n  const DocsConfigDetails = extensionsRegistry.get(\n    'embedded.documentation.configuration_details',\n  );\n  const docsDescription = extensionsRegistry.get(\n    'embedded.documentation.description',\n  );\n  const docsUrl =\n    extensionsRegistry.get('embedded.documentation.url') ??\n    'https://www.npmjs.com/package/@superset-ui/embedded-sdk';\n\n  return (\n    <>\n      {embedded ? (\n        DocsConfigDetails ? (\n          <DocsConfigDetails embeddedId={embedded.uuid} />\n        ) : (\n          <p>\n            {t(\n              'This dashboard is ready to embed. In your application, pass the following id to the SDK:',\n            )}\n            <br />\n            <code>{embedded.uuid}</code>\n          </p>\n        )\n      ) : (\n        <p>\n          {t(\n            'Configure this dashboard to embed it into an external web application.',\n          )}\n        </p>\n      )}\n      <p>\n        {t('For further instructions, consult the')}{' '}\n        <a href={docsUrl} target=\"_blank\" rel=\"noreferrer\">\n          {docsDescription\n            ? docsDescription()\n            : t('Superset Embedded SDK documentation.')}\n        </a>\n      </p>\n      <h3>{t('Settings')}</h3>\n      <FormItem>\n        <label htmlFor=\"allowed-domains\">\n          {t('Allowed Domains (comma separated)')}{' '}\n          <InfoTooltipWithTrigger\n            tooltip={t(\n              'A list of domain names that can embed this dashboard. Leaving this field empty will allow embedding from any domain.',\n            )}\n          />\n        </label>\n        <Input\n          name=\"allowed-domains\"\n          id=\"allowed-domains\"\n          value={allowedDomains}\n          placeholder=\"superset.example.com\"\n          onChange={event => setAllowedDomains(event.target.value)}\n        />\n      </FormItem>\n      <ButtonRow>\n        {embedded ? (\n          <>\n            <Button\n              onClick={disableEmbedded}\n              buttonStyle=\"secondary\"\n              loading={loading}\n            >\n              {t('Deactivate')}\n            </Button>\n            <Button\n              onClick={enableEmbedded}\n              buttonStyle=\"primary\"\n              disabled={!isDirty}\n              loading={loading}\n            >\n              {t('Save changes')}\n            </Button>\n          </>\n        ) : (\n          <Button\n            onClick={enableEmbedded}\n            buttonStyle=\"primary\"\n            loading={loading}\n          >\n            {t('Enable embedding')}\n          </Button>\n        )}\n      </ButtonRow>\n    </>\n  );\n};\n\nconst DashboardEmbedModal = (props: Props) => {\n  const { show, onHide } = props;\n  const DashboardEmbedModalExtension = extensionsRegistry.get('embedded.modal');\n\n  return DashboardEmbedModalExtension ? (\n    <DashboardEmbedModalExtension {...props} />\n  ) : (\n    <Modal show={show} onHide={onHide} title={t('Embed')} hideFooter>\n      <DashboardEmbedControls {...props} />\n    </Modal>\n  );\n};\n\nexport default DashboardEmbedModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}