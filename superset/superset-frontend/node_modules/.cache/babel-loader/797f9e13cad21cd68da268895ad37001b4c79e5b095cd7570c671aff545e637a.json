{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isFeatureEnabled, FeatureFlag, t, useTheme, SupersetClient } from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport FacePile from 'src/components/FacePile';\nimport FaveStar from 'src/components/FaveStar';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DashboardCard({ dashboard, hasPerm, bulkSelectEnabled, userId, openDashboardEditModal, favoriteStatus, saveFavoriteStatus, showThumbnails, handleBulkDashboardExport, onDelete }) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const theme = useTheme();\n  const [thumbnailUrl, setThumbnailUrl] = useState(null);\n  const [fetchingThumbnail, setFetchingThumbnail] = useState(false);\n  useEffect(() => {\n    // fetch thumbnail only if it's not already fetched\n    if (!fetchingThumbnail &&\n    dashboard.id && (\n    thumbnailUrl === undefined || thumbnailUrl === null) &&\n    isFeatureEnabled(FeatureFlag.Thumbnails)) {\n      // fetch thumbnail\n      if (dashboard.thumbnail_url) {\n        // set to empty string if null so that we don't\n        // keep fetching the thumbnail\n        setThumbnailUrl(dashboard.thumbnail_url || '');\n        return;\n      }\n      setFetchingThumbnail(true);\n      SupersetClient.get({\n        endpoint: `/api/v1/dashboard/${dashboard.id}`\n      }).then(({ json = {} }) => {\n        setThumbnailUrl(json.thumbnail_url || '');\n        setFetchingThumbnail(false);\n      });\n    }\n  }, [dashboard, thumbnailUrl]);\n  const menu = ___EmotionJSX(Menu, null,\n  canEdit && openDashboardEditModal && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: () => openDashboardEditModal == null ? void 0 : openDashboardEditModal(dashboard), \"data-test\": \"dashboard-card-option-edit-button\" },\n  ___EmotionJSX(Icons.EditAlt, { iconSize: \"l\", \"data-test\": \"edit-alt\" }), \" \", t('Edit')\n  )\n  ),\n  canExport && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, onClick: () => handleBulkDashboardExport([dashboard]), className: \"action-button\", \"data-test\": \"dashboard-card-option-export-button\" },\n  ___EmotionJSX(Icons.Share, { iconSize: \"l\" }), \" \", t('Export')\n  )\n  ),\n  canDelete && ___EmotionJSX(Menu.Item, null,\n  ___EmotionJSX(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: () => onDelete(dashboard), \"data-test\": \"dashboard-card-option-delete-button\" },\n  ___EmotionJSX(Icons.Trash, { iconSize: \"l\" }), \" \", t('Delete')\n  )\n  )\n  );\n  return ___EmotionJSX(CardStyles, { onClick: () => {\n      if (!bulkSelectEnabled) {\n        history.push(dashboard.url);\n      }\n    } },\n  ___EmotionJSX(ListViewCard, { loading: dashboard.loading || false, title: dashboard.dashboard_title, certifiedBy: dashboard.certified_by, certificationDetails: dashboard.certification_details, titleRight: ___EmotionJSX(Label, null, dashboard.published ? t('published') : t('draft')), cover: !isFeatureEnabled(FeatureFlag.Thumbnails) || !showThumbnails ? ___EmotionJSX(React.Fragment, null) : null, url: bulkSelectEnabled ? undefined : dashboard.url, linkComponent: Link, imgURL: dashboard.thumbnail_url, imgFallbackURL: \"/static/assets/images/dashboard-card-fallback.svg\", description: t('Modified %s', dashboard.changed_on_delta_humanized), coverLeft: ___EmotionJSX(FacePile, { users: dashboard.owners || [] }), actions: ___EmotionJSX(ListViewCard.Actions, { onClick: (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      } },\n    userId && ___EmotionJSX(FaveStar, { itemId: dashboard.id, saveFaveStar: saveFavoriteStatus, isStarred: favoriteStatus }),\n    ___EmotionJSX(AntdDropdown, { overlay: menu },\n    ___EmotionJSX(Icons.MoreVert, { iconColor: theme.colors.grayscale.base })\n    )\n    ) })\n  );\n}__signature__(DashboardCard, \"useHistory{history}\\nuseTheme{theme}\\nuseState{[thumbnailUrl, setThumbnailUrl](null)}\\nuseState{[fetchingThumbnail, setFetchingThumbnail](false)}\\nuseEffect{}\", () => [useHistory, useTheme]);const _default =\nDashboardCard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardCard, \"DashboardCard\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/dashboards/DashboardCard.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/dashboards/DashboardCard.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","isFeatureEnabled","FeatureFlag","t","useTheme","SupersetClient","CardStyles","AntdDropdown","Menu","ListViewCard","Icons","Label","FacePile","FaveStar","jsx","___EmotionJSX","DashboardCard","dashboard","hasPerm","bulkSelectEnabled","userId","openDashboardEditModal","favoriteStatus","saveFavoriteStatus","showThumbnails","handleBulkDashboardExport","onDelete","history","canEdit","canDelete","canExport","theme","thumbnailUrl","setThumbnailUrl","fetchingThumbnail","setFetchingThumbnail","id","undefined","Thumbnails","thumbnail_url","get","endpoint","then","json","menu","Item","role","tabIndex","className","onClick","EditAlt","iconSize","Share","Trash","push","url","loading","title","dashboard_title","certifiedBy","certified_by","certificationDetails","certification_details","titleRight","published","cover","Fragment","linkComponent","imgURL","imgFallbackURL","description","changed_on_delta_humanized","coverLeft","users","owners","actions","Actions","e","stopPropagation","preventDefault","itemId","saveFaveStar","isStarred","overlay","MoreVert","iconColor","colors","grayscale","base","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/dashboards/DashboardCard.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  useTheme,\n  SupersetClient,\n} from '@superset-ui/core';\nimport { CardStyles } from 'src/views/CRUD/utils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport FacePile from 'src/components/FacePile';\nimport FaveStar from 'src/components/FaveStar';\nimport { Dashboard } from 'src/views/CRUD/types';\n\ninterface DashboardCardProps {\n  isChart?: boolean;\n  dashboard: Dashboard;\n  hasPerm: (name: string) => boolean;\n  bulkSelectEnabled: boolean;\n  loading: boolean;\n  openDashboardEditModal?: (d: Dashboard) => void;\n  saveFavoriteStatus: (id: number, isStarred: boolean) => void;\n  favoriteStatus: boolean;\n  userId?: string | number;\n  showThumbnails?: boolean;\n  handleBulkDashboardExport: (dashboardsToExport: Dashboard[]) => void;\n  onDelete: (dashboard: Dashboard) => void;\n}\n\nfunction DashboardCard({\n  dashboard,\n  hasPerm,\n  bulkSelectEnabled,\n  userId,\n  openDashboardEditModal,\n  favoriteStatus,\n  saveFavoriteStatus,\n  showThumbnails,\n  handleBulkDashboardExport,\n  onDelete,\n}: DashboardCardProps) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const theme = useTheme();\n\n  const [thumbnailUrl, setThumbnailUrl] = useState<string | null>(null);\n  const [fetchingThumbnail, setFetchingThumbnail] = useState<boolean>(false);\n\n  useEffect(() => {\n    // fetch thumbnail only if it's not already fetched\n    if (\n      !fetchingThumbnail &&\n      dashboard.id &&\n      (thumbnailUrl === undefined || thumbnailUrl === null) &&\n      isFeatureEnabled(FeatureFlag.Thumbnails)\n    ) {\n      // fetch thumbnail\n      if (dashboard.thumbnail_url) {\n        // set to empty string if null so that we don't\n        // keep fetching the thumbnail\n        setThumbnailUrl(dashboard.thumbnail_url || '');\n        return;\n      }\n      setFetchingThumbnail(true);\n      SupersetClient.get({\n        endpoint: `/api/v1/dashboard/${dashboard.id}`,\n      }).then(({ json = {} }) => {\n        setThumbnailUrl(json.thumbnail_url || '');\n        setFetchingThumbnail(false);\n      });\n    }\n  }, [dashboard, thumbnailUrl]);\n\n  const menu = (\n    <Menu>\n      {canEdit && openDashboardEditModal && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => openDashboardEditModal?.(dashboard)}\n            data-test=\"dashboard-card-option-edit-button\"\n          >\n            <Icons.EditAlt iconSize=\"l\" data-test=\"edit-alt\" /> {t('Edit')}\n          </div>\n        </Menu.Item>\n      )}\n      {canExport && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleBulkDashboardExport([dashboard])}\n            className=\"action-button\"\n            data-test=\"dashboard-card-option-export-button\"\n          >\n            <Icons.Share iconSize=\"l\" /> {t('Export')}\n          </div>\n        </Menu.Item>\n      )}\n      {canDelete && (\n        <Menu.Item>\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={() => onDelete(dashboard)}\n            data-test=\"dashboard-card-option-delete-button\"\n          >\n            <Icons.Trash iconSize=\"l\" /> {t('Delete')}\n          </div>\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n  return (\n    <CardStyles\n      onClick={() => {\n        if (!bulkSelectEnabled) {\n          history.push(dashboard.url);\n        }\n      }}\n    >\n      <ListViewCard\n        loading={dashboard.loading || false}\n        title={dashboard.dashboard_title}\n        certifiedBy={dashboard.certified_by}\n        certificationDetails={dashboard.certification_details}\n        titleRight={\n          <Label>{dashboard.published ? t('published') : t('draft')}</Label>\n        }\n        cover={\n          !isFeatureEnabled(FeatureFlag.Thumbnails) || !showThumbnails ? (\n            <></>\n          ) : null\n        }\n        url={bulkSelectEnabled ? undefined : dashboard.url}\n        linkComponent={Link}\n        imgURL={dashboard.thumbnail_url}\n        imgFallbackURL=\"/static/assets/images/dashboard-card-fallback.svg\"\n        description={t('Modified %s', dashboard.changed_on_delta_humanized)}\n        coverLeft={<FacePile users={dashboard.owners || []} />}\n        actions={\n          <ListViewCard.Actions\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            {userId && (\n              <FaveStar\n                itemId={dashboard.id}\n                saveFaveStar={saveFavoriteStatus}\n                isStarred={favoriteStatus}\n              />\n            )}\n            <AntdDropdown overlay={menu}>\n              <Icons.MoreVert iconColor={theme.colors.grayscale.base} />\n            </AntdDropdown>\n          </ListViewCard.Actions>\n        }\n      />\n    </CardStyles>\n  );\n}\n\nexport default DashboardCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}