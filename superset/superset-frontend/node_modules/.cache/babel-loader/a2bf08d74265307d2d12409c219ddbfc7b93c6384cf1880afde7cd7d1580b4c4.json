{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isArray from \"lodash/isArray\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useMemo, useState } from 'react';\nimport { css, DatasourceType, styled, t } from '@superset-ui/core';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { matchSorter, rankings } from 'match-sorter';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport Control from 'src/explore/components/Control';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport DatasourcePanelItem, { ITEM_HEIGHT, DEFAULT_MAX_COLUMNS_LENGTH, DEFAULT_MAX_METRICS_LENGTH } from './DatasourcePanelItem';\nimport { DndItemType } from '../DndItemType';\nimport { DropzoneContext } from '../ExploreContainer';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${theme.gridUnit}px;\n      overflow: auto;\n      height: 100%;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\nconst BORDER_WIDTH = 2;\nconst sortCertifiedFirst = (slice) => slice.sort((a, b) => {var _b$is_certified, _a$is_certified;return ((_b$is_certified = b == null ? void 0 : b.is_certified) != null ? _b$is_certified : 0) - ((_a$is_certified = a == null ? void 0 : a.is_certified) != null ? _a$is_certified : 0);});\nexport default function DataSourcePanel({ datasource, formData, controls: { datasource: datasourceControl }, actions, width }) {\n  const [dropzones] = useContext(DropzoneContext);\n  const { columns: _columns, metrics } = datasource;\n  const allowedColumns = useMemo(() => {\n    const validators = Object.values(dropzones);\n    if (!_isArray(_columns))\n    return [];\n    return _columns.filter((column) => validators.some((validator) => validator({\n      value: column,\n      type: DndItemType.Column\n    })));\n  }, [dropzones, _columns]);\n  // display temporal column first\n  const columns = useMemo(() => [...allowedColumns].sort((col1, col2) => {\n    if (col1 != null && col1.is_dttm && !(col2 != null && col2.is_dttm)) {\n      return -1;\n    }\n    if (col2 != null && col2.is_dttm && !(col1 != null && col1.is_dttm)) {\n      return 1;\n    }\n    return 0;\n  }), [allowedColumns]);\n  const allowedMetrics = useMemo(() => {\n    const validators = Object.values(dropzones);\n    return metrics.filter((metric) => validators.some((validator) => validator({ value: metric, type: DndItemType.Metric })));\n  }, [dropzones, metrics]);\n  const hiddenColumnCount = _columns.length - allowedColumns.length;\n  const hiddenMetricCount = metrics.length - allowedMetrics.length;\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const [collapseMetrics, setCollapseMetrics] = useState(false);\n  const [collapseColumns, setCollapseColumns] = useState(false);\n  const searchKeyword = useDebounceValue(inputValue, FAST_DEBOUNCE);\n  const filteredColumns = useMemo(() => {\n    if (!searchKeyword) {\n      return columns != null ? columns : [];\n    }\n    return matchSorter(columns, searchKeyword, {\n      keys: [\n      {\n        key: 'verbose_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: 'column_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: (item) => {var _item$description, _item$expression;return [(_item$description = item == null ? void 0 : item.description) != null ? _item$description : '', (_item$expression = item == null ? void 0 : item.expression) != null ? _item$expression : ''].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n        threshold: rankings.CONTAINS,\n        maxRanking: rankings.CONTAINS\n      }],\n\n      keepDiacritics: true\n    });\n  }, [columns, searchKeyword]);\n  const filteredMetrics = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedMetrics != null ? allowedMetrics : [];\n    }\n    return matchSorter(allowedMetrics, searchKeyword, {\n      keys: [\n      {\n        key: 'verbose_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: 'metric_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: (item) => {var _item$description2, _item$expression2;return [(_item$description2 = item == null ? void 0 : item.description) != null ? _item$description2 : '', (_item$expression2 = item == null ? void 0 : item.expression) != null ? _item$expression2 : ''].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n        threshold: rankings.CONTAINS,\n        maxRanking: rankings.CONTAINS\n      }],\n\n      keepDiacritics: true,\n      baseSort: (a, b) => {var _b$item$is_certified, _b$item, _a$item$is_certified, _a$item, _a$rankedValue, _b$rankedValue;return Number((_b$item$is_certified = b == null ? void 0 : (_b$item = b.item) == null ? void 0 : _b$item.is_certified) != null ? _b$item$is_certified : 0) -\n        Number((_a$item$is_certified = a == null ? void 0 : (_a$item = a.item) == null ? void 0 : _a$item.is_certified) != null ? _a$item$is_certified : 0) ||\n        String((_a$rankedValue = a == null ? void 0 : a.rankedValue) != null ? _a$rankedValue : '').localeCompare((_b$rankedValue = b == null ? void 0 : b.rankedValue) != null ? _b$rankedValue : '');}\n    });\n  }, [allowedMetrics, searchKeyword]);\n  const metricSlice = useMemo(() => showAllMetrics ?\n  filteredMetrics :\n  filteredMetrics == null ? void 0 : filteredMetrics.slice == null ? void 0 : filteredMetrics.slice(0, DEFAULT_MAX_METRICS_LENGTH), [filteredMetrics, showAllMetrics]);\n  const columnSlice = useMemo(() => showAllColumns ?\n  sortCertifiedFirst(filteredColumns) :\n  sortCertifiedFirst(filteredColumns == null ? void 0 : filteredColumns.slice == null ? void 0 : filteredColumns.slice(0, DEFAULT_MAX_COLUMNS_LENGTH)), [filteredColumns, showAllColumns]);\n  const showInfoboxCheck = () => {\n    try {\n      if (sessionStorage.getItem('showInfobox') === 'false')\n      return false;\n    }\n    catch (error) {\n\n      // continue regardless of error\n    }return true;\n  };\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery\n  };\n  const datasourceIsSaveable = datasource.type && saveableDatasets[datasource.type];\n  const mainBody = useMemo(() => ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Input, { allowClear: true, onChange: (evt) => {\n      setInputValue(evt.target.value);\n    }, value: inputValue, className: \"form-control input-md\", placeholder: t('Search Metrics & Columns') }),\n  ___EmotionJSX(\"div\", { className: \"field-selections\", \"data-test\": \"fieldSelections\" },\n  datasourceIsSaveable && showInfoboxCheck() && ___EmotionJSX(StyledInfoboxWrapper, null,\n  ___EmotionJSX(Alert, { closable: true, onClose: () => {\n      try {\n        sessionStorage.setItem('showInfobox', 'false');\n      }\n      catch (error) {\n\n        // continue regardless of error\n      }}, type: \"info\", message: \"\", description: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: () => setShowSaveDatasetModal(true), className: \"add-dataset-alert-description\" },\n    t('Create a dataset')\n    ),\n    t(' to edit or add columns and metrics.')\n    ) })\n  ),\n  ___EmotionJSX(AutoSizer, null,\n  ({ height }) => ___EmotionJSX(List, { width: width - BORDER_WIDTH, height: height, itemSize: ITEM_HEIGHT, itemCount: (collapseMetrics ? 0 : metricSlice == null ? void 0 : metricSlice.length) + (\n    collapseColumns ? 0 : columnSlice.length) +\n    2 + ( // Each section header row\n    collapseMetrics ? 0 : 2) + (\n    collapseColumns ? 0 : 2), itemData: {\n      metricSlice,\n      columnSlice,\n      width,\n      totalMetrics: filteredMetrics.length,\n      totalColumns: filteredColumns.length,\n      showAllMetrics,\n      onShowAllMetricsChange: setShowAllMetrics,\n      showAllColumns,\n      onShowAllColumnsChange: setShowAllColumns,\n      collapseMetrics,\n      onCollapseMetricsChange: setCollapseMetrics,\n      collapseColumns,\n      onCollapseColumnsChange: setCollapseColumns,\n      hiddenMetricCount,\n      hiddenColumnCount\n    }, overscanCount: 5 },\n  DatasourcePanelItem\n  )\n  )\n  )\n  ),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [\n  columnSlice,\n  inputValue,\n  filteredColumns.length,\n  filteredMetrics.length,\n  metricSlice,\n  showAllColumns,\n  showAllMetrics,\n  collapseMetrics,\n  collapseColumns,\n  datasourceIsSaveable,\n  width]\n  );\n  return ___EmotionJSX(DatasourceContainer, null,\n  datasourceIsSaveable && showSaveDatasetModal && ___EmotionJSX(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save'), buttonTextOnOverwrite: t('Overwrite'), datasource: getDatasourceAsSaveableDataset(datasource), openWindow: false, formData: formData }),\n  ___EmotionJSX(Control, _extends({}, datasourceControl, { name: \"datasource\", actions: actions })),\n  datasource.id != null && mainBody\n  );\n}__signature__(DataSourcePanel, \"useContext{[dropzones]}\\nuseMemo{allowedColumns}\\nuseMemo{columns}\\nuseMemo{allowedMetrics}\\nuseState{[showSaveDatasetModal, setShowSaveDatasetModal](false)}\\nuseState{[inputValue, setInputValue]('')}\\nuseState{[showAllMetrics, setShowAllMetrics](false)}\\nuseState{[showAllColumns, setShowAllColumns](false)}\\nuseState{[collapseMetrics, setCollapseMetrics](false)}\\nuseState{[collapseColumns, setCollapseColumns](false)}\\nuseDebounceValue{searchKeyword}\\nuseMemo{filteredColumns}\\nuseMemo{filteredMetrics}\\nuseMemo{metricSlice}\\nuseMemo{columnSlice}\\nuseMemo{mainBody}\", () => [useDebounceValue]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(StyledInfoboxWrapper, \"StyledInfoboxWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(BORDER_WIDTH, \"BORDER_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(sortCertifiedFirst, \"sortCertifiedFirst\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DataSourcePanel, \"DataSourcePanel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useContext","useMemo","useState","css","DatasourceType","styled","t","AutoSizer","FixedSizeList","List","matchSorter","rankings","Alert","SaveDatasetModal","getDatasourceAsSaveableDataset","Input","FAST_DEBOUNCE","Control","useDebounceValue","DatasourcePanelItem","ITEM_HEIGHT","DEFAULT_MAX_COLUMNS_LENGTH","DEFAULT_MAX_METRICS_LENGTH","DndItemType","DropzoneContext","jsx","___EmotionJSX","DatasourceContainer","div","theme","colors","grayscale","light5","gridUnit","typography","sizes","s","light1","base","StyledInfoboxWrapper","BORDER_WIDTH","sortCertifiedFirst","slice","sort","a","b","_b$is_certified","_a$is_certified","is_certified","DataSourcePanel","datasource","formData","controls","datasourceControl","actions","width","dropzones","columns","_columns","metrics","allowedColumns","validators","Object","values","_isArray","filter","column","some","validator","value","type","Column","col1","col2","is_dttm","allowedMetrics","metric","Metric","hiddenColumnCount","length","hiddenMetricCount","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","showAllMetrics","setShowAllMetrics","showAllColumns","setShowAllColumns","collapseMetrics","setCollapseMetrics","collapseColumns","setCollapseColumns","searchKeyword","filteredColumns","keys","key","threshold","CONTAINS","item","_item$description","_item$expression","description","expression","map","x","replace","maxRanking","keepDiacritics","filteredMetrics","_item$description2","_item$expression2","baseSort","_b$item$is_certified","_b$item","_a$item$is_certified","_a$item","_a$rankedValue","_b$rankedValue","Number","String","rankedValue","localeCompare","metricSlice","columnSlice","showInfoboxCheck","sessionStorage","getItem","error","saveableDatasets","query","Query","saved_query","SavedQuery","datasourceIsSaveable","mainBody","Fragment","allowClear","onChange","evt","target","className","placeholder","closable","onClose","setItem","message","role","tabIndex","onClick","height","itemSize","itemCount","itemData","totalMetrics","totalColumns","onShowAllMetricsChange","onShowAllColumnsChange","onCollapseMetricsChange","onCollapseColumnsChange","overscanCount","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","openWindow","_extends","name","id","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useMemo, useState } from 'react';\nimport {\n  css,\n  DatasourceType,\n  Metric,\n  QueryFormData,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport { ControlConfig } from '@superset-ui/chart-controls';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { isArray } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport DatasourcePanelItem, {\n  ITEM_HEIGHT,\n  DataSourcePanelColumn,\n  DEFAULT_MAX_COLUMNS_LENGTH,\n  DEFAULT_MAX_METRICS_LENGTH,\n} from './DatasourcePanelItem';\nimport { DndItemType } from '../DndItemType';\nimport { DndItemValue } from './types';\nimport { DropzoneContext } from '../ExploreContainer';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: IDatasource;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DataSourcePanelColumn[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  width: number;\n  formData?: QueryFormData;\n}\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${theme.gridUnit}px;\n      overflow: auto;\n      height: 100%;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst BORDER_WIDTH = 2;\n\nconst sortCertifiedFirst = (slice: DataSourcePanelColumn[]) =>\n  slice.sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  width,\n}: Props) {\n  const [dropzones] = useContext(DropzoneContext);\n  const { columns: _columns, metrics } = datasource;\n\n  const allowedColumns = useMemo(() => {\n    const validators = Object.values(dropzones);\n    if (!isArray(_columns)) return [];\n    return _columns.filter(column =>\n      validators.some(validator =>\n        validator({\n          value: column as DndItemValue,\n          type: DndItemType.Column,\n        }),\n      ),\n    );\n  }, [dropzones, _columns]);\n\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [...allowedColumns].sort((col1, col2) => {\n        if (col1?.is_dttm && !col2?.is_dttm) {\n          return -1;\n        }\n        if (col2?.is_dttm && !col1?.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [allowedColumns],\n  );\n\n  const allowedMetrics = useMemo(() => {\n    const validators = Object.values(dropzones);\n    return metrics.filter(metric =>\n      validators.some(validator =>\n        validator({ value: metric, type: DndItemType.Metric }),\n      ),\n    );\n  }, [dropzones, metrics]);\n\n  const hiddenColumnCount = _columns.length - allowedColumns.length;\n  const hiddenMetricCount = metrics.length - allowedMetrics.length;\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const [collapseMetrics, setCollapseMetrics] = useState(false);\n  const [collapseColumns, setCollapseColumns] = useState(false);\n  const searchKeyword = useDebounceValue(inputValue, FAST_DEBOUNCE);\n\n  const filteredColumns = useMemo(() => {\n    if (!searchKeyword) {\n      return columns ?? [];\n    }\n    return matchSorter(columns, searchKeyword, {\n      keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: 'column_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: item =>\n            [item?.description ?? '', item?.expression ?? ''].map(\n              x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n            ),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS,\n        },\n      ],\n      keepDiacritics: true,\n    });\n  }, [columns, searchKeyword]);\n\n  const filteredMetrics = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedMetrics ?? [];\n    }\n    return matchSorter(allowedMetrics, searchKeyword, {\n      keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: 'metric_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: item =>\n            [item?.description ?? '', item?.expression ?? ''].map(\n              x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n            ),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS,\n        },\n      ],\n      keepDiacritics: true,\n      baseSort: (a, b) =>\n        Number(b?.item?.is_certified ?? 0) -\n          Number(a?.item?.is_certified ?? 0) ||\n        String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n    });\n  }, [allowedMetrics, searchKeyword]);\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? filteredMetrics\n        : filteredMetrics?.slice?.(0, DEFAULT_MAX_METRICS_LENGTH),\n    [filteredMetrics, showAllMetrics],\n  );\n\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(filteredColumns)\n        : sortCertifiedFirst(\n            filteredColumns?.slice?.(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [filteredColumns, showAllColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    try {\n      if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    } catch (error) {\n      // continue regardless of error\n    }\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type && saveableDatasets[datasource.type];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\" data-test=\"fieldSelections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => {\n                  try {\n                    sessionStorage.setItem('showInfobox', 'false');\n                  } catch (error) {\n                    // continue regardless of error\n                  }\n                }}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <AutoSizer>\n            {({ height }: { height: number }) => (\n              <List\n                width={width - BORDER_WIDTH}\n                height={height}\n                itemSize={ITEM_HEIGHT}\n                itemCount={\n                  (collapseMetrics ? 0 : metricSlice?.length) +\n                  (collapseColumns ? 0 : columnSlice.length) +\n                  2 + // Each section header row\n                  (collapseMetrics ? 0 : 2) +\n                  (collapseColumns ? 0 : 2)\n                }\n                itemData={{\n                  metricSlice,\n                  columnSlice,\n                  width,\n                  totalMetrics: filteredMetrics.length,\n                  totalColumns: filteredColumns.length,\n                  showAllMetrics,\n                  onShowAllMetricsChange: setShowAllMetrics,\n                  showAllColumns,\n                  onShowAllColumnsChange: setShowAllColumns,\n                  collapseMetrics,\n                  onCollapseMetricsChange: setCollapseMetrics,\n                  collapseColumns,\n                  onCollapseColumnsChange: setCollapseColumns,\n                  hiddenMetricCount,\n                  hiddenColumnCount,\n                }}\n                overscanCount={5}\n              >\n                {DatasourcePanelItem}\n              </List>\n            )}\n          </AutoSizer>\n        </div>\n      </>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      columnSlice,\n      inputValue,\n      filteredColumns.length,\n      filteredMetrics.length,\n      metricSlice,\n      showAllColumns,\n      showAllMetrics,\n      collapseMetrics,\n      collapseColumns,\n      datasourceIsSaveable,\n      width,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}