{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, NO_TIME_RANGE, t, validateNonEmpty } from '@superset-ui/core';\nimport { getTemporalColumns } from '../utils';\nconst getAxisLabel = (formData) => (formData == null ? void 0 : formData.orientation) === 'horizontal' ?\n{ label: t('Y-axis'), description: t('Dimension to use on y-axis.') } :\n{ label: t('X-axis'), description: t('Dimension to use on x-axis.') };\nexport const xAxisMixin = {\n  label: (state) => getAxisLabel(state == null ? void 0 : state.form_data).label,\n  multi: false,\n  description: (state) => getAxisLabel(state == null ? void 0 : state.form_data).description,\n  validators: [validateNonEmpty],\n  initialValue: (control, state) => {var _state$form_data, _state$form_data2;\n    if (state != null && (_state$form_data = state.form_data) != null && _state$form_data.granularity_sqla &&\n    !((_state$form_data2 = state.form_data) != null && _state$form_data2.x_axis) &&\n    !(control != null && control.value)) {\n      return state.form_data.granularity_sqla;\n    }\n    return undefined;\n  },\n  default: undefined\n};\nexport const temporalColumnMixin = {\n  isTemporal: true,\n  mapStateToProps: ({ datasource }) => {\n    const payload = getTemporalColumns(datasource);\n    return {\n      options: payload.temporalColumns,\n      default: payload.defaultTemporalColumn\n    };\n  }\n};\nexport const datePickerInAdhocFilterMixin = {\n  initialValue: (control, state) => {var _state$controls, _state$controls$time_, _state$form_data3, _state$form_data4;\n    // skip initialValue if\n    // 1) the time_range control is present (this is the case for legacy charts)\n    // 2) there was a time filter in adhoc filters\n    if (state != null && (_state$controls = state.controls) != null && (_state$controls$time_ = _state$controls.time_range) != null && _state$controls$time_.value ||\n    ensureIsArray(control.value).findIndex((flt) => (flt == null ? void 0 : flt.operator) === 'TEMPORAL_RANGE') > -1) {\n      return undefined;\n    }\n    // should migrate original granularity_sqla and time_range into adhoc filter\n    // 1) granularity_sqla and time_range are existed\n    if (state != null && (_state$form_data3 = state.form_data) != null && _state$form_data3.granularity_sqla && state != null && (_state$form_data4 = state.form_data) != null && _state$form_data4.time_range) {\n      return [\n      ...ensureIsArray(control.value),\n      {\n        clause: 'WHERE',\n        subject: state.form_data.granularity_sqla,\n        operator: 'TEMPORAL_RANGE',\n        comparator: state.form_data.time_range,\n        expressionType: 'SIMPLE'\n      }];\n\n    }\n    // should apply the default time filter into adhoc filter\n    // 1) temporal column is existed in current datasource\n    const temporalColumn = (state == null ? void 0 : state.datasource) &&\n    getTemporalColumns(state.datasource).defaultTemporalColumn;\n    if (temporalColumn) {var _state$common, _state$common$conf;\n      return [\n      ...ensureIsArray(control.value),\n      {\n        clause: 'WHERE',\n        subject: temporalColumn,\n        operator: 'TEMPORAL_RANGE',\n        comparator: (state == null ? void 0 : (_state$common = state.common) == null ? void 0 : (_state$common$conf = _state$common.conf) == null ? void 0 : _state$common$conf.DEFAULT_TIME_FILTER) || NO_TIME_RANGE,\n        expressionType: 'SIMPLE'\n      }];\n\n    }\n    return undefined;\n  }\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getAxisLabel, \"getAxisLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/mixins.tsx\");reactHotLoader.register(xAxisMixin, \"xAxisMixin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/mixins.tsx\");reactHotLoader.register(temporalColumnMixin, \"temporalColumnMixin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/mixins.tsx\");reactHotLoader.register(datePickerInAdhocFilterMixin, \"datePickerInAdhocFilterMixin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/mixins.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","NO_TIME_RANGE","t","validateNonEmpty","getTemporalColumns","getAxisLabel","formData","orientation","label","description","xAxisMixin","state","form_data","multi","validators","initialValue","control","_state$form_data","_state$form_data2","granularity_sqla","x_axis","value","undefined","default","temporalColumnMixin","isTemporal","mapStateToProps","datasource","payload","options","temporalColumns","defaultTemporalColumn","datePickerInAdhocFilterMixin","_state$controls","_state$controls$time_","_state$form_data3","_state$form_data4","controls","time_range","findIndex","flt","operator","clause","subject","comparator","expressionType","temporalColumn","_state$common","_state$common$conf","common","conf","DEFAULT_TIME_FILTER","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/mixins.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  NO_TIME_RANGE,\n  QueryFormData,\n  t,\n  validateNonEmpty,\n} from '@superset-ui/core';\nimport {\n  BaseControlConfig,\n  ControlPanelState,\n  ControlState,\n  ExtraControlProps,\n} from '../types';\nimport { getTemporalColumns } from '../utils';\n\nconst getAxisLabel = (\n  formData: QueryFormData,\n): Record<'label' | 'description', string> =>\n  formData?.orientation === 'horizontal'\n    ? { label: t('Y-axis'), description: t('Dimension to use on y-axis.') }\n    : { label: t('X-axis'), description: t('Dimension to use on x-axis.') };\n\nexport const xAxisMixin = {\n  label: (state: ControlPanelState) => getAxisLabel(state?.form_data).label,\n  multi: false,\n  description: (state: ControlPanelState) =>\n    getAxisLabel(state?.form_data).description,\n  validators: [validateNonEmpty],\n  initialValue: (control: ControlState, state: ControlPanelState | null) => {\n    if (\n      state?.form_data?.granularity_sqla &&\n      !state.form_data?.x_axis &&\n      !control?.value\n    ) {\n      return state.form_data.granularity_sqla;\n    }\n    return undefined;\n  },\n  default: undefined,\n};\n\nexport const temporalColumnMixin: Pick<BaseControlConfig, 'mapStateToProps'> &\n  Partial<ExtraControlProps> = {\n  isTemporal: true,\n  mapStateToProps: ({ datasource }) => {\n    const payload = getTemporalColumns(datasource);\n\n    return {\n      options: payload.temporalColumns,\n      default: payload.defaultTemporalColumn,\n    };\n  },\n};\n\nexport const datePickerInAdhocFilterMixin: Pick<\n  BaseControlConfig,\n  'initialValue'\n> = {\n  initialValue: (control: ControlState, state: ControlPanelState | null) => {\n    // skip initialValue if\n    // 1) the time_range control is present (this is the case for legacy charts)\n    // 2) there was a time filter in adhoc filters\n    if (\n      state?.controls?.time_range?.value ||\n      ensureIsArray(control.value).findIndex(\n        (flt: any) => flt?.operator === 'TEMPORAL_RANGE',\n      ) > -1\n    ) {\n      return undefined;\n    }\n\n    // should migrate original granularity_sqla and time_range into adhoc filter\n    // 1) granularity_sqla and time_range are existed\n    if (state?.form_data?.granularity_sqla && state?.form_data?.time_range) {\n      return [\n        ...ensureIsArray(control.value),\n        {\n          clause: 'WHERE',\n          subject: state.form_data.granularity_sqla,\n          operator: 'TEMPORAL_RANGE',\n          comparator: state.form_data.time_range,\n          expressionType: 'SIMPLE',\n        },\n      ];\n    }\n\n    // should apply the default time filter into adhoc filter\n    // 1) temporal column is existed in current datasource\n    const temporalColumn =\n      state?.datasource &&\n      getTemporalColumns(state.datasource).defaultTemporalColumn;\n    if (temporalColumn) {\n      return [\n        ...ensureIsArray(control.value),\n        {\n          clause: 'WHERE',\n          subject: temporalColumn,\n          operator: 'TEMPORAL_RANGE',\n          comparator: state?.common?.conf?.DEFAULT_TIME_FILTER || NO_TIME_RANGE,\n          expressionType: 'SIMPLE',\n        },\n      ];\n    }\n\n    return undefined;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}