{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension } from '@deck.gl/core';\nimport collision from './shader-module';\nimport CollisionFilterEffect from './collision-filter-effect';\nconst defaultProps = {\n  getCollisionPriority: {\n    type: 'accessor',\n    value: 0\n  },\n  collisionEnabled: true,\n  collisionGroup: {\n    type: 'string',\n    value: 'default'\n  },\n  collisionTestProps: {}\n};\nexport default class CollisionFilterExtension extends LayerExtension {\n  getShaders() {\n    return {\n      modules: [collision]\n    };\n  }\n\n  draw({\n    uniforms,\n    context,\n    moduleParameters\n  }) {\n    const {\n      collisionEnabled\n    } = this.props;\n    const {\n      collisionFBO,\n      drawToCollisionMap\n    } = moduleParameters;\n    const enabled = collisionEnabled && Boolean(collisionFBO);\n    uniforms.collision_enabled = enabled;\n\n    if (drawToCollisionMap) {\n      this.props = this.clone(this.props.collisionTestProps).props;\n    }\n  }\n\n  initializeState(context, extension) {\n    var _this$context$deck;\n\n    if (this.getAttributeManager() === null) {\n      return;\n    }\n\n    (_this$context$deck = this.context.deck) === null || _this$context$deck === void 0 ? void 0 : _this$context$deck._addDefaultEffect(new CollisionFilterEffect());\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      collisionPriorities: {\n        size: 1,\n        accessor: 'getCollisionPriority',\n        shaderAttributes: {\n          collisionPriorities: {\n            divisor: 0\n          },\n          instanceCollisionPriorities: {\n            divisor: 1\n          }\n        }\n      }\n    });\n  }\n\n  getNeedsPickingBuffer() {\n    return this.props.collisionEnabled;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\n_defineProperty(CollisionFilterExtension, \"defaultProps\", defaultProps);\n\n_defineProperty(CollisionFilterExtension, \"extensionName\", 'CollisionFilterExtension');;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/collision-filter/collision-filter-extension.js\");reactHotLoader.register(CollisionFilterExtension, \"CollisionFilterExtension\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/collision-filter/collision-filter-extension.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["LayerExtension","collision","CollisionFilterEffect","defaultProps","getCollisionPriority","type","value","collisionEnabled","collisionGroup","collisionTestProps","CollisionFilterExtension","getShaders","modules","draw","uniforms","context","moduleParameters","props","collisionFBO","drawToCollisionMap","enabled","Boolean","collision_enabled","clone","initializeState","extension","_this$context$deck","getAttributeManager","deck","_addDefaultEffect","attributeManager","add","collisionPriorities","size","accessor","shaderAttributes","divisor","instanceCollisionPriorities","getNeedsPickingBuffer","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","register","leaveModule","reactHotLoaderGlobal","undefined","module"],"sources":["../../../src/collision-filter/collision-filter-extension.ts"],"sourcesContent":["import {Accessor, Layer, LayerContext, LayerExtension} from '@deck.gl/core';\nimport collision from './shader-module';\nimport CollisionFilterEffect from './collision-filter-effect';\n\nconst defaultProps = {\n  getCollisionPriority: {type: 'accessor', value: 0},\n  collisionEnabled: true,\n  collisionGroup: {type: 'string', value: 'default'},\n  collisionTestProps: {}\n};\n\nexport type CollisionFilterExtensionProps<DataT = any> = {\n  /**\n   * Accessor for collision priority. Must return a number in the range -1000 -> 1000. Features with higher values are shown preferentially.\n   */\n  getCollisionPriority?: Accessor<DataT, number>;\n\n  /**\n   * Enable/disable collisions. If collisions are disabled, all objects are rendered.\n   * @default true\n   */\n  collisionEnabled: boolean;\n\n  /**\n   * Collision group this layer belongs to. If it is not set, the 'default' collision group is used\n   */\n  collisionGroup?: string;\n\n  /**\n   * Props to override when rendering collision map\n   */\n  collisionTestProps?: {};\n};\n\n/** Allows layers to hide overlapping objects. */\nexport default class CollisionFilterExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'CollisionFilterExtension';\n\n  getShaders(this: Layer<CollisionFilterExtensionProps>): any {\n    return {modules: [collision]};\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<CollisionFilterExtensionProps>, {uniforms, context, moduleParameters}: any) {\n    const {collisionEnabled} = this.props;\n    const {collisionFBO, drawToCollisionMap} = moduleParameters;\n    const enabled = collisionEnabled && Boolean(collisionFBO);\n    uniforms.collision_enabled = enabled;\n\n    if (drawToCollisionMap) {\n      // Override any props with those defined in collisionTestProps\n      // @ts-ignore\n      this.props = this.clone(this.props.collisionTestProps).props;\n    }\n  }\n\n  initializeState(\n    this: Layer<CollisionFilterExtensionProps>,\n    context: LayerContext,\n    extension: this\n  ) {\n    if (this.getAttributeManager() === null) {\n      return;\n    }\n    this.context.deck?._addDefaultEffect(new CollisionFilterEffect());\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.add({\n      collisionPriorities: {\n        size: 1,\n        accessor: 'getCollisionPriority',\n        shaderAttributes: {\n          collisionPriorities: {divisor: 0},\n          instanceCollisionPriorities: {divisor: 1}\n        }\n      }\n    });\n  }\n\n  getNeedsPickingBuffer(this: Layer<CollisionFilterExtensionProps>): boolean {\n    return this.props.collisionEnabled;\n  }\n}\n"],"mappings":";AAAA,SAAuCA,cAAvC,QAA4D,eAA5D;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AAEA,MAAMC,YAAY,GAAG;EACnBC,oBAAoB,EAAE;IAACC,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE;EAA1B,CADH;EAEnBC,gBAAgB,EAAE,IAFC;EAGnBC,cAAc,EAAE;IAACH,IAAI,EAAE,QAAP;IAAiBC,KAAK,EAAE;EAAxB,CAHG;EAInBG,kBAAkB,EAAE;AAJD,CAArB;AA+BA,eAAe,MAAMC,wBAAN,SAAuCV,cAAvC,CAAsD;EAInEW,UAAUA,CAAA,EAAkD;IAC1D,OAAO;MAACC,OAAO,EAAE,CAACX,SAAD;IAAV,CAAP;EACD;;EAGDY,IAAIA,CAA6C;IAACC,QAAD;IAAWC,OAAX;IAAoBC;EAApB,CAA7C,EAAyF;IAC3F,MAAM;MAACT;IAAD,IAAqB,KAAKU,KAAhC;IACA,MAAM;MAACC,YAAD;MAAeC;IAAf,IAAqCH,gBAA3C;IACA,MAAMI,OAAO,GAAGb,gBAAgB,IAAIc,OAAO,CAACH,YAAD,CAA3C;IACAJ,QAAQ,CAACQ,iBAAT,GAA6BF,OAA7B;;IAEA,IAAID,kBAAJ,EAAwB;MAGtB,KAAKF,KAAL,GAAa,KAAKM,KAAL,CAAW,KAAKN,KAAL,CAAWR,kBAAtB,EAA0CQ,KAAvD;IACD;EACF;;EAEDO,eAAeA,CAEbT,OAFa,EAGbU,SAHa,EAIb;IAAA,IAAAC,kBAAA;;IACA,IAAI,KAAKC,mBAAL,OAA+B,IAAnC,EAAyC;MACvC;IACD;;IACD,CAAAD,kBAAA,QAAKX,OAAL,CAAaa,IAAb,cAAAF,kBAAA,uBAAAA,kBAAA,CAAmBG,iBAAnB,CAAqC,IAAI3B,qBAAJ,EAArC;IACA,MAAM4B,gBAAgB,GAAG,KAAKH,mBAAL,EAAzB;IACAG,gBAAgB,CAAEC,GAAlB,CAAsB;MACpBC,mBAAmB,EAAE;QACnBC,IAAI,EAAE,CADa;QAEnBC,QAAQ,EAAE,sBAFS;QAGnBC,gBAAgB,EAAE;UAChBH,mBAAmB,EAAE;YAACI,OAAO,EAAE;UAAV,CADL;UAEhBC,2BAA2B,EAAE;YAACD,OAAO,EAAE;UAAV;QAFb;MAHC;IADD,CAAtB;EAUD;;EAEDE,qBAAqBA,CAAA,EAAsD;IACzE,OAAO,KAAKrB,KAAL,CAAWV,gBAAlB;EACD;EAAAgC,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,GA9CkE;;gBAAhD/B,wB,kBACGP,Y;;gBADHO,wB,mBAEI,0B,mLAjCnBP,YAAY,wMAAAwC,cAAA,CAAAC,QAAA,CA+BGlC,wBAAN,4OAAAmC,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}