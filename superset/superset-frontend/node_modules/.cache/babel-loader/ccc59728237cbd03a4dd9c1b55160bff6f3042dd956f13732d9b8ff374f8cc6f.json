{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport JSONbig from 'json-bigint';\nimport React from 'react';\nimport { JSONTree } from 'react-json-tree';\nimport { useJsonTreeTheme } from 'src/hooks/useJsonTreeTheme';\nimport Button from '../Button';\nimport CopyToClipboard from '../CopyToClipboard';\nimport ModalTrigger from '../ModalTrigger';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function safeJsonObjectParse(data) {\n  // First perform a cheap proxy to avoid calling JSON.parse on data that is clearly not a\n  // JSON object or array\n  if (typeof data !== 'string' ||\n  ['{', '['].indexOf(data.substring(0, 1)) === -1) {\n    return null;\n  }\n  // We know `data` is a string starting with '{' or '[', so try to parse it as a valid object\n  try {\n    const jsonData = JSONbig({ storeAsString: true }).parse(data);\n    if (jsonData && typeof jsonData === 'object') {\n      return jsonData;\n    }\n    return null;\n  }\n  catch (_) {\n    return null;\n  }\n}\nexport function convertBigIntStrToNumber(value) {\n  if (typeof value === 'string' && /^\"-?\\d+\"$/.test(value)) {\n    return value.substring(1, value.length - 1);\n  }\n  return value;\n}\nfunction renderBigIntStrToNumber(value) {\n  return ___EmotionJSX(React.Fragment, null, convertBigIntStrToNumber(value));\n}\nconst JsonModal = ({ modalTitle, jsonObject, jsonValue }) => {\n  const jsonTreeTheme = useJsonTreeTheme();\n  return ___EmotionJSX(ModalTrigger, { modalBody: ___EmotionJSX(JSONTree, { data: jsonObject, theme: jsonTreeTheme, valueRenderer: renderBigIntStrToNumber }), modalFooter: ___EmotionJSX(Button, null,\n    ___EmotionJSX(CopyToClipboard, { shouldShowText: false, text: jsonValue })\n    ), modalTitle: modalTitle, triggerNode: ___EmotionJSX(React.Fragment, null, jsonValue) });\n};__signature__(JsonModal, \"useJsonTreeTheme{jsonTreeTheme}\", () => [useJsonTreeTheme]);const _default =\nJsonModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(safeJsonObjectParse, \"safeJsonObjectParse\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx\");reactHotLoader.register(convertBigIntStrToNumber, \"convertBigIntStrToNumber\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx\");reactHotLoader.register(renderBigIntStrToNumber, \"renderBigIntStrToNumber\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx\");reactHotLoader.register(JsonModal, \"JsonModal\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["JSONbig","React","JSONTree","useJsonTreeTheme","Button","CopyToClipboard","ModalTrigger","jsx","___EmotionJSX","safeJsonObjectParse","data","indexOf","substring","jsonData","storeAsString","parse","_","convertBigIntStrToNumber","value","test","length","renderBigIntStrToNumber","Fragment","JsonModal","modalTitle","jsonObject","jsonValue","jsonTreeTheme","modalBody","theme","valueRenderer","modalFooter","shouldShowText","text","triggerNode","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/JsonModal/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport JSONbig from 'json-bigint';\nimport React from 'react';\nimport { JSONTree } from 'react-json-tree';\nimport { useJsonTreeTheme } from 'src/hooks/useJsonTreeTheme';\nimport Button from '../Button';\nimport CopyToClipboard from '../CopyToClipboard';\nimport ModalTrigger from '../ModalTrigger';\n\nexport function safeJsonObjectParse(\n  data: unknown,\n): null | unknown[] | Record<string, unknown> {\n  // First perform a cheap proxy to avoid calling JSON.parse on data that is clearly not a\n  // JSON object or array\n  if (\n    typeof data !== 'string' ||\n    ['{', '['].indexOf(data.substring(0, 1)) === -1\n  ) {\n    return null;\n  }\n\n  // We know `data` is a string starting with '{' or '[', so try to parse it as a valid object\n  try {\n    const jsonData = JSONbig({ storeAsString: true }).parse(data);\n    if (jsonData && typeof jsonData === 'object') {\n      return jsonData;\n    }\n    return null;\n  } catch (_) {\n    return null;\n  }\n}\n\nexport function convertBigIntStrToNumber(value: string | number) {\n  if (typeof value === 'string' && /^\"-?\\d+\"$/.test(value)) {\n    return value.substring(1, value.length - 1);\n  }\n  return value;\n}\n\nfunction renderBigIntStrToNumber(value: string | number) {\n  return <>{convertBigIntStrToNumber(value)}</>;\n}\n\ntype CellDataType = string | number | null;\n\nexport interface Props {\n  modalTitle: string;\n  jsonObject: Record<string, unknown> | unknown[];\n  jsonValue: CellDataType;\n}\n\nconst JsonModal: React.FC<Props> = ({ modalTitle, jsonObject, jsonValue }) => {\n  const jsonTreeTheme = useJsonTreeTheme();\n\n  return (\n    <ModalTrigger\n      modalBody={\n        <JSONTree\n          data={jsonObject}\n          theme={jsonTreeTheme}\n          valueRenderer={renderBigIntStrToNumber}\n        />\n      }\n      modalFooter={\n        <Button>\n          <CopyToClipboard shouldShowText={false} text={jsonValue} />\n        </Button>\n      }\n      modalTitle={modalTitle}\n      triggerNode={<>{jsonValue}</>}\n    />\n  );\n};\n\nexport default JsonModal;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,OAAO,MAAM,aAAa;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,YAAY,MAAM,iBAAiB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAE3C,OAAM,SAAUC,mBAAmBA,CACjCC,IAAa;EAEb;EACA;EACA,IACE,OAAOA,IAAI,KAAK,QAAQ;EACxB,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,OAAO,CAACD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAC/C;IACA,OAAO,IAAI;;EAGb;EACA,IAAI;IACF,MAAMC,QAAQ,GAAGb,OAAO,CAAC,EAAEc,aAAa,EAAE,IAAI,EAAE,CAAC,CAACC,KAAK,CAACL,IAAI,CAAC;IAC7D,IAAIG,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAC5C,OAAOA,QAAQ;;IAEjB,OAAO,IAAI;;EACX,OAAOG,CAAC,EAAE;IACV,OAAO,IAAI;;AAEf;AAEA,OAAM,SAAUC,wBAAwBA,CAACC,KAAsB;EAC7D,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,WAAW,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;IACxD,OAAOA,KAAK,CAACN,SAAS,CAAC,CAAC,EAAEM,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;;EAE7C,OAAOF,KAAK;AACd;AAEA,SAASG,uBAAuBA,CAACH,KAAsB;EACrD,OAAOV,aAAA,CAAAP,KAAA,CAAAqB,QAAA,QAAGL,wBAAwB,CAACC,KAAK,CAAE,CAAG;AAC/C;AAUA,MAAMK,SAAS,GAAoBA,CAAC,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAE,KAAI;EAC3E,MAAMC,aAAa,GAAGxB,gBAAgB,EAAE;EAExC,OACEK,aAAA,CAACF,YAAY,IACXsB,SAAS,EACPpB,aAAA,CAACN,QAAQ,IACPQ,IAAI,EAAEe,UAAW,EACjBI,KAAK,EAAEF,aAAc,EACrBG,aAAa,EAAET,uBAAwB,GAE1C,EACDU,WAAW,EACTvB,aAAA,CAACJ,MAAM;IACLI,aAAA,CAACH,eAAe,IAAC2B,cAAc,EAAE,KAAM,EAACC,IAAI,EAAEP,SAAU;IAClD,CACT,EACDF,UAAU,EAAEA,UAAW,EACvBU,WAAW,EAAE1B,aAAA,CAAAP,KAAA,CAAAqB,QAAA,QAAGI,SAAU,CAAI,GAC9B;AAEN,CAAC,CAACS,aAAA,CArBIZ,SAAS,4CACSpB,gBAAgB,SAAAiC,QAAA;AAsBzBb,SAAS,CAAxB,eAAAa,QAAA,CAAyB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlEThC,mBAAmB,sHAAA4B,cAAA,CAAAI,QAAA,CAwBnBxB,wBAAwB,2HAAAoB,cAAA,CAAAI,QAAA,CAO/BpB,uBAAuB,0HAAAgB,cAAA,CAAAI,QAAA,CAY1BlB,SAAS,4GAAAc,cAAA,CAAAI,QAAA,CAAAL,QAAA,kIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}