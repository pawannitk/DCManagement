{"ast":null,"code":"import _flatMapDeep from \"lodash/flatMapDeep\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport React from 'react';\nimport { ensureIsArray, GenericDataType } from '@superset-ui/core';\nimport { FILTER_SUPPORTED_TYPES } from './constants';\nconst FILTERS_FIELD_NAME = 'filters';\nexport const useForceUpdate = (isActive = true) => {\n  const [, updateState] = React.useState({});\n  return React.useCallback(() => {\n    if (isActive) {\n      updateState({});\n    }\n  }, [isActive]);\n};__signature__(useForceUpdate, \"useState{[, updateState]({})}\\nuseCallback{}\");\nexport const setNativeFilterFieldValues = (form, filterId, values) => {\n  const formFilters = form.getFieldValue(FILTERS_FIELD_NAME) || {};\n  form.setFields([\n  {\n    name: FILTERS_FIELD_NAME,\n    value: {\n      ...formFilters,\n      [filterId]: {\n        ...formFilters[filterId],\n        ...values\n      }\n    }\n  }]\n  );\n};\nexport const getControlItems = (controlConfig = {}) => {var _flatMapDeep$reduce, _flatMapDeep2;return (_flatMapDeep$reduce = (_flatMapDeep2 = _flatMapDeep(controlConfig.controlPanelSections)) == null ? void 0 : _flatMapDeep2.reduce((acc, { controlSetRows = [] }) => [\n  ...acc,\n  ..._flatMapDeep(controlSetRows)],\n  [])) != null ? _flatMapDeep$reduce : [];};\n// TODO: add column_types field to Dataset\n// We return true if column_types is undefined or empty as a precaution against backend failing to return column_types\nexport const hasTemporalColumns = (dataset) => {\n  const columnTypes = ensureIsArray(dataset == null ? void 0 : dataset.column_types);\n  return columnTypes.length === 0 || columnTypes.includes(GenericDataType.Temporal);\n};\nexport const doesColumnMatchFilterType = (filterType, column) => {var _FILTER_SUPPORTED_TYP;return !column.type_generic ||\n  !(filterType in FILTER_SUPPORTED_TYPES) || ((_FILTER_SUPPORTED_TYP =\n  FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP.includes(column.type_generic));};\nexport const mostUsedDataset = (datasets, charts) => {var _datasets$mostUsedDat;\n  const map = new Map();\n  let mostUsedDataset = '';\n  let maxCount = 0;\n  Object.values(charts).forEach((chart) => {\n    const { form_data: formData } = chart;\n    if (formData) {\n      const { datasource } = formData;\n      const count = (map.get(datasource) || 0) + 1;\n      map.set(datasource, count);\n      if (count > maxCount) {\n        maxCount = count;\n        mostUsedDataset = datasource;\n      }\n    }\n  });\n  return (_datasets$mostUsedDat = datasets[mostUsedDataset]) == null ? void 0 : _datasets$mostUsedDat.id;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FILTERS_FIELD_NAME, \"FILTERS_FIELD_NAME\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(useForceUpdate, \"useForceUpdate\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(setNativeFilterFieldValues, \"setNativeFilterFieldValues\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(getControlItems, \"getControlItems\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(hasTemporalColumns, \"hasTemporalColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(doesColumnMatchFilterType, \"doesColumnMatchFilterType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");reactHotLoader.register(mostUsedDataset, \"mostUsedDataset\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","React","ensureIsArray","GenericDataType","FILTER_SUPPORTED_TYPES","FILTERS_FIELD_NAME","useForceUpdate","isActive","updateState","useState","useCallback","setNativeFilterFieldValues","form","filterId","values","formFilters","getFieldValue","setFields","name","value","getControlItems","controlConfig","_flatMapDeep$reduce","_flatMapDeep2","_flatMapDeep","controlPanelSections","reduce","acc","controlSetRows","hasTemporalColumns","dataset","columnTypes","column_types","length","includes","Temporal","doesColumnMatchFilterType","filterType","column","_FILTER_SUPPORTED_TYP","type_generic","mostUsedDataset","datasets","charts","_datasets$mostUsedDat","map","Map","maxCount","Object","forEach","chart","form_data","formData","datasource","count","get","set","id","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { flatMapDeep } from 'lodash';\nimport { FormInstance } from 'src/components';\nimport React from 'react';\nimport { CustomControlItem, Dataset } from '@superset-ui/chart-controls';\nimport { Column, ensureIsArray, GenericDataType } from '@superset-ui/core';\nimport { DatasourcesState, ChartsState } from 'src/dashboard/types';\nimport { FILTER_SUPPORTED_TYPES } from './constants';\n\nconst FILTERS_FIELD_NAME = 'filters';\n\nexport const useForceUpdate = (isActive = true) => {\n  const [, updateState] = React.useState({});\n  return React.useCallback(() => {\n    if (isActive) {\n      updateState({});\n    }\n  }, [isActive]);\n};\n\nexport const setNativeFilterFieldValues = (\n  form: FormInstance,\n  filterId: string,\n  values: object,\n) => {\n  const formFilters = form.getFieldValue(FILTERS_FIELD_NAME) || {};\n  form.setFields([\n    {\n      name: FILTERS_FIELD_NAME,\n      value: {\n        ...formFilters,\n        [filterId]: {\n          ...formFilters[filterId],\n          ...values,\n        },\n      },\n    },\n  ]);\n};\n\nexport const getControlItems = (\n  controlConfig: { [key: string]: any } = {},\n): CustomControlItem[] =>\n  (flatMapDeep(controlConfig.controlPanelSections)?.reduce(\n    (acc: any, { controlSetRows = [] }: any) => [\n      ...acc,\n      ...flatMapDeep(controlSetRows),\n    ],\n    [],\n  ) as CustomControlItem[]) ?? [];\n\n// TODO: add column_types field to Dataset\n// We return true if column_types is undefined or empty as a precaution against backend failing to return column_types\nexport const hasTemporalColumns = (\n  dataset: Dataset & { column_types: GenericDataType[] },\n) => {\n  const columnTypes = ensureIsArray(dataset?.column_types);\n  return (\n    columnTypes.length === 0 || columnTypes.includes(GenericDataType.Temporal)\n  );\n};\n\nexport const doesColumnMatchFilterType = (filterType: string, column: Column) =>\n  !column.type_generic ||\n  !(filterType in FILTER_SUPPORTED_TYPES) ||\n  FILTER_SUPPORTED_TYPES[filterType]?.includes(column.type_generic);\n\nexport const mostUsedDataset = (\n  datasets: DatasourcesState,\n  charts: ChartsState,\n) => {\n  const map = new Map<string, number>();\n  let mostUsedDataset = '';\n  let maxCount = 0;\n\n  Object.values(charts).forEach(chart => {\n    const { form_data: formData } = chart;\n    if (formData) {\n      const { datasource } = formData;\n      const count = (map.get(datasource) || 0) + 1;\n      map.set(datasource, count);\n\n      if (count > maxCount) {\n        maxCount = count;\n        mostUsedDataset = datasource;\n      }\n    }\n  });\n\n  return datasets[mostUsedDataset]?.id;\n};\n"],"mappings":"+CAAA;;;;;;;;;;;;;;;;;GAAA,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAoBA,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAAiBC,aAAa,EAAEC,eAAe,QAAQ,mBAAmB;AAE1E,SAASC,sBAAsB,QAAQ,aAAa;AAEpD,MAAMC,kBAAkB,GAAG,SAAS;AAEpC,OAAO,MAAMC,cAAc,GAAGA,CAACC,QAAQ,GAAG,IAAI,KAAI;EAChD,MAAM,GAAGC,WAAW,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC1C,OAAOR,KAAK,CAACS,WAAW,CAAC,MAAK;IAC5B,IAAIH,QAAQ,EAAE;MACZC,WAAW,CAAC,EAAE,CAAC;;EAEnB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;AAChB,CAAC,CAACV,aAAA,CAPWS,cAAc;AAS3B,OAAO,MAAMK,0BAA0B,GAAGA,CACxCC,IAAkB,EAClBC,QAAgB,EAChBC,MAAc,KACZ;EACF,MAAMC,WAAW,GAAGH,IAAI,CAACI,aAAa,CAACX,kBAAkB,CAAC,IAAI,EAAE;EAChEO,IAAI,CAACK,SAAS,CAAC;EACb;IACEC,IAAI,EAAEb,kBAAkB;IACxBc,KAAK,EAAE;MACL,GAAGJ,WAAW;MACd,CAACF,QAAQ,GAAG;QACV,GAAGE,WAAW,CAACF,QAAQ,CAAC;QACxB,GAAGC;;;GAGR;EACF,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGA,CAC7BC,aAAA,GAAwC,EAAE,UAAAC,mBAAA,EAAAC,aAAA,SAAAD,mBAAA,IAAAC,aAAA,GAEzCC,YAAA,CAAYH,aAAa,CAACI,oBAAoB,CAAC,qBAA/CF,aAAA,CAAiDG,MAAM,CACtD,CAACC,GAAQ,EAAE,EAAEC,cAAc,GAAG,EAAE,EAAO,KAAK;EAC1C,GAAGD,GAAG;EACN,GAAGH,YAAA,CAAYI,cAAc,CAAC,CAC/B;EACD,EAAE,CACqB,YAAAN,mBAAA,GAAI,EAAE;AAEjC;AACA;AACA,OAAO,MAAMO,kBAAkB,GAAGA,CAChCC,OAAsD,KACpD;EACF,MAAMC,WAAW,GAAG7B,aAAa,CAAC4B,OAAO,oBAAPA,OAAO,CAAEE,YAAY,CAAC;EACxD,OACED,WAAW,CAACE,MAAM,KAAK,CAAC,IAAIF,WAAW,CAACG,QAAQ,CAAC/B,eAAe,CAACgC,QAAQ,CAAC;AAE9E,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,UAAkB,EAAEC,MAAc,UAAAC,qBAAA,QAC1E,CAACD,MAAM,CAACE,YAAY;EACpB,EAAEH,UAAU,IAAIjC,sBAAsB,CAAC,MAAAmC,qBAAA;EACvCnC,sBAAsB,CAACiC,UAAU,CAAC,qBAAlCE,qBAAA,CAAoCL,QAAQ,CAACI,MAAM,CAACE,YAAY,CAAC;AAEnE,OAAO,MAAMC,eAAe,GAAGA,CAC7BC,QAA0B,EAC1BC,MAAmB,KACjB,KAAAC,qBAAA;EACF,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAkB;EACrC,IAAIL,eAAe,GAAG,EAAE;EACxB,IAAIM,QAAQ,GAAG,CAAC;EAEhBC,MAAM,CAAClC,MAAM,CAAC6B,MAAM,CAAC,CAACM,OAAO,CAAC,CAAAC,KAAK,KAAG;IACpC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAE,GAAGF,KAAK;IACrC,IAAIE,QAAQ,EAAE;MACZ,MAAM,EAAEC,UAAU,EAAE,GAAGD,QAAQ;MAC/B,MAAME,KAAK,GAAG,CAACT,GAAG,CAACU,GAAG,CAACF,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;MAC5CR,GAAG,CAACW,GAAG,CAACH,UAAU,EAAEC,KAAK,CAAC;MAE1B,IAAIA,KAAK,GAAGP,QAAQ,EAAE;QACpBA,QAAQ,GAAGO,KAAK;QAChBb,eAAe,GAAGY,UAAU;;;EAGlC,CAAC,CAAC;EAEF,QAAAT,qBAAA,GAAOF,QAAQ,CAACD,eAAe,CAAC,qBAAzBG,qBAAA,CAA2Ba,EAAE;AACtC,CAAC,CAAC,mBAAAC,cAAA,UAAAhE,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAA+D,cAAA,WAAAA,cAAA,CAAAC,QAAA,CAjFItD,kBAAkB,uKAAAqD,cAAA,CAAAC,QAAA,CAEXrD,cAAc,mKAAAoD,cAAA,CAAAC,QAAA,CASdhD,0BAA0B,+KAAA+C,cAAA,CAAAC,QAAA,CAoB1BvC,eAAe,oKAAAsC,cAAA,CAAAC,QAAA,CAaf9B,kBAAkB,uKAAA6B,cAAA,CAAAC,QAAA,CASlBvB,yBAAyB,8KAAAsB,cAAA,CAAAC,QAAA,CAKzBlB,eAAe,4LAAAmB,WAAA,UAAAlE,oBAAA,mBAAAA,oBAAA,CAAAkE,WAAA,GAAAjE,SAAA,CAAAiE,WAAA,IAAAA,WAAA,CAAAhE,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}