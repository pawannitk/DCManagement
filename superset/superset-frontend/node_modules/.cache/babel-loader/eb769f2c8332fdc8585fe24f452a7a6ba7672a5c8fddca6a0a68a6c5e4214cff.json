{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { makeSingleton } from '../utils';\nimport TimeFormatterRegistry from './TimeFormatterRegistry';\nimport TimeFormatter from './TimeFormatter';\nimport TimeFormatsForGranularity from './TimeFormatsForGranularity';\nimport { LOCAL_PREFIX } from './TimeFormats';\nimport createTimeRangeFromGranularity from './utils/createTimeRangeFromGranularity';\nimport TimeRangeFormatter from './TimeRangeFormatter';\nconst getInstance = makeSingleton(TimeFormatterRegistry);const _default =\ngetInstance;export default _default;\nexport function getTimeRangeFormatter(formatId) {\n  return new TimeRangeFormatter({\n    id: formatId || 'undefined',\n    formatFunc: (range) => {\n      const format = getInstance().get(formatId);\n      const [start, end] = range.map((value) => format(value));\n      return start === end ? start : [start, end].join(' — ');\n    },\n    useLocalTime: formatId == null ? void 0 : formatId.startsWith(LOCAL_PREFIX)\n  });\n}\nexport function formatTimeRange(formatId, range) {\n  return getTimeRangeFormatter(formatId)(range);\n}\nexport function getTimeFormatter(formatId, granularity) {\n  if (granularity) {\n    const formatString = formatId || TimeFormatsForGranularity[granularity];\n    const timeRangeFormatter = getTimeRangeFormatter(formatString);\n    return new TimeFormatter({\n      id: [formatString, granularity].join('/'),\n      formatFunc: (value) => timeRangeFormatter.format(createTimeRangeFromGranularity(value, granularity, timeRangeFormatter.useLocalTime)),\n      useLocalTime: timeRangeFormatter.useLocalTime\n    });\n  }\n  return getInstance().get(formatId);\n}\n/**\n * Syntactic sugar for backward compatibility\n * TODO: will be deprecated in a future version\n * @param granularity\n */\nexport function getTimeFormatterForGranularity(granularity) {\n  return getTimeFormatter(undefined, granularity);\n}\nexport function formatTime(formatId, value, granularity) {\n  return getTimeFormatter(formatId, granularity)(value);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getInstance, \"getInstance\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(getTimeRangeFormatter, \"getTimeRangeFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(formatTimeRange, \"formatTimeRange\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(getTimeFormatter, \"getTimeFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(getTimeFormatterForGranularity, \"getTimeFormatterForGranularity\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(formatTime, \"formatTime\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["makeSingleton","TimeFormatterRegistry","TimeFormatter","TimeFormatsForGranularity","LOCAL_PREFIX","createTimeRangeFromGranularity","TimeRangeFormatter","getInstance","_default","getTimeRangeFormatter","formatId","id","formatFunc","range","format","get","start","end","map","value","join","useLocalTime","startsWith","formatTimeRange","getTimeFormatter","granularity","formatString","timeRangeFormatter","getTimeFormatterForGranularity","undefined","formatTime","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistrySingleton.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { makeSingleton } from '../utils';\nimport TimeFormatterRegistry from './TimeFormatterRegistry';\nimport TimeFormatter from './TimeFormatter';\nimport TimeFormatsForGranularity from './TimeFormatsForGranularity';\nimport { LOCAL_PREFIX } from './TimeFormats';\nimport { TimeGranularity } from './types';\nimport createTimeRangeFromGranularity from './utils/createTimeRangeFromGranularity';\nimport TimeRangeFormatter from './TimeRangeFormatter';\n\nconst getInstance = makeSingleton(TimeFormatterRegistry);\n\nexport default getInstance;\n\nexport function getTimeRangeFormatter(formatId?: string) {\n  return new TimeRangeFormatter({\n    id: formatId || 'undefined',\n    formatFunc: (range: (Date | number | null | undefined)[]) => {\n      const format = getInstance().get(formatId);\n      const [start, end] = range.map(value => format(value));\n      return start === end ? start : [start, end].join(' — ');\n    },\n    useLocalTime: formatId?.startsWith(LOCAL_PREFIX),\n  });\n}\n\nexport function formatTimeRange(\n  formatId: string | undefined,\n  range: (Date | null | undefined)[],\n) {\n  return getTimeRangeFormatter(formatId)(range);\n}\n\nexport function getTimeFormatter(\n  formatId?: string,\n  granularity?: TimeGranularity,\n) {\n  if (granularity) {\n    const formatString = formatId || TimeFormatsForGranularity[granularity];\n    const timeRangeFormatter = getTimeRangeFormatter(formatString);\n\n    return new TimeFormatter({\n      id: [formatString, granularity].join('/'),\n      formatFunc: (value: Date) =>\n        timeRangeFormatter.format(\n          createTimeRangeFromGranularity(\n            value,\n            granularity,\n            timeRangeFormatter.useLocalTime,\n          ),\n        ),\n      useLocalTime: timeRangeFormatter.useLocalTime,\n    });\n  }\n\n  return getInstance().get(formatId);\n}\n\n/**\n * Syntactic sugar for backward compatibility\n * TODO: will be deprecated in a future version\n * @param granularity\n */\nexport function getTimeFormatterForGranularity(granularity?: TimeGranularity) {\n  return getTimeFormatter(undefined, granularity);\n}\n\nexport function formatTime(\n  formatId: string | undefined,\n  value: Date | number | null | undefined,\n  granularity?: TimeGranularity,\n) {\n  return getTimeFormatter(formatId, granularity)(value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}