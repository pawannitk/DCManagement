{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { getExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport getEffectiveExtraFilters from './getEffectiveExtraFilters';\nimport { getAllActiveFilters } from '../activeAllDashboardFilters';\n// We cache formData objects so that our connected container components don't always trigger\n// render cascades. we cannot leverage the reselect library because our cache size is >1\nconst cachedFiltersByChart = {};\nconst cachedFormdataByChart = {};\n// this function merge chart's formData with dashboard filters value,\n// and generate a new formData which will be used in the new query.\n// filters param only contains those applicable to this chart.\nexport default function getFormDataWithExtraFilters({ chart, filters, nativeFilters, chartConfiguration, colorScheme, colorNamespace, sliceId, dataMask, extraControls, labelColors, sharedLabelColors, allSliceIds }) {\n  // if dashboard metadata + filters have not changed, use cache if possible\n  const cachedFormData = cachedFormdataByChart[sliceId];\n  if (cachedFiltersByChart[sliceId] === filters &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.color_scheme, colorScheme, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.color_namespace, colorNamespace, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.label_colors, labelColors, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.shared_label_colors, sharedLabelColors, {\n    ignoreUndefined: true\n  }) &&\n  !!cachedFormData &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.dataMask, dataMask, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.extraControls, extraControls, {\n    ignoreUndefined: true\n  })) {\n    return cachedFormData;\n  }\n  let extraData = {};\n  const activeFilters = getAllActiveFilters({\n    chartConfiguration,\n    dataMask,\n    nativeFilters,\n    allSliceIds\n  });\n  const filterIdsAppliedOnChart = Object.entries(activeFilters).\n  filter(([, { scope }]) => scope.includes(chart.id)).\n  map(([filterId]) => filterId);\n  if (filterIdsAppliedOnChart.length) {\n    extraData = {\n      extra_form_data: getExtraFormData(dataMask, filterIdsAppliedOnChart)\n    };\n  }\n  const formData = {\n    ...chart.form_data,\n    label_colors: labelColors,\n    shared_label_colors: sharedLabelColors,\n    ...(colorScheme && { color_scheme: colorScheme }),\n    extra_filters: getEffectiveExtraFilters(filters),\n    ...extraData,\n    ...extraControls\n  };\n  cachedFiltersByChart[sliceId] = filters;\n  cachedFormdataByChart[sliceId] = { ...formData, dataMask, extraControls };\n  return formData;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(cachedFiltersByChart, \"cachedFiltersByChart\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");reactHotLoader.register(cachedFormdataByChart, \"cachedFormdataByChart\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");reactHotLoader.register(getFormDataWithExtraFilters, \"getFormDataWithExtraFilters\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getExtraFormData","areObjectsEqual","getEffectiveExtraFilters","getAllActiveFilters","cachedFiltersByChart","cachedFormdataByChart","getFormDataWithExtraFilters","chart","filters","nativeFilters","chartConfiguration","colorScheme","colorNamespace","sliceId","dataMask","extraControls","labelColors","sharedLabelColors","allSliceIds","cachedFormData","color_scheme","ignoreUndefined","color_namespace","label_colors","shared_label_colors","extraData","activeFilters","filterIdsAppliedOnChart","Object","entries","filter","scope","includes","id","map","filterId","length","extra_form_data","formData","form_data","extra_filters","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataMaskStateWithId,\n  DataRecordFilters,\n  JsonObject,\n  PartialFilters,\n} from '@superset-ui/core';\nimport { ChartConfiguration, ChartQueryPayload } from 'src/dashboard/types';\nimport { getExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport getEffectiveExtraFilters from './getEffectiveExtraFilters';\nimport { getAllActiveFilters } from '../activeAllDashboardFilters';\n\n// We cache formData objects so that our connected container components don't always trigger\n// render cascades. we cannot leverage the reselect library because our cache size is >1\nconst cachedFiltersByChart = {};\nconst cachedFormdataByChart = {};\n\nexport interface GetFormDataWithExtraFiltersArguments {\n  chartConfiguration: ChartConfiguration;\n  chart: ChartQueryPayload;\n  filters: DataRecordFilters;\n  colorScheme?: string;\n  colorNamespace?: string;\n  sliceId: number;\n  dataMask: DataMaskStateWithId;\n  nativeFilters: PartialFilters;\n  extraControls: Record<string, string | boolean | null>;\n  labelColors?: Record<string, string>;\n  sharedLabelColors?: Record<string, string>;\n  allSliceIds: number[];\n}\n\n// this function merge chart's formData with dashboard filters value,\n// and generate a new formData which will be used in the new query.\n// filters param only contains those applicable to this chart.\nexport default function getFormDataWithExtraFilters({\n  chart,\n  filters,\n  nativeFilters,\n  chartConfiguration,\n  colorScheme,\n  colorNamespace,\n  sliceId,\n  dataMask,\n  extraControls,\n  labelColors,\n  sharedLabelColors,\n  allSliceIds,\n}: GetFormDataWithExtraFiltersArguments) {\n  // if dashboard metadata + filters have not changed, use cache if possible\n  const cachedFormData = cachedFormdataByChart[sliceId];\n  if (\n    cachedFiltersByChart[sliceId] === filters &&\n    areObjectsEqual(cachedFormData?.color_scheme, colorScheme, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.color_namespace, colorNamespace, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.label_colors, labelColors, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.shared_label_colors, sharedLabelColors, {\n      ignoreUndefined: true,\n    }) &&\n    !!cachedFormData &&\n    areObjectsEqual(cachedFormData?.dataMask, dataMask, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.extraControls, extraControls, {\n      ignoreUndefined: true,\n    })\n  ) {\n    return cachedFormData;\n  }\n\n  let extraData: { extra_form_data?: JsonObject } = {};\n  const activeFilters = getAllActiveFilters({\n    chartConfiguration,\n    dataMask,\n    nativeFilters,\n    allSliceIds,\n  });\n  const filterIdsAppliedOnChart = Object.entries(activeFilters)\n    .filter(([, { scope }]) => scope.includes(chart.id))\n    .map(([filterId]) => filterId);\n  if (filterIdsAppliedOnChart.length) {\n    extraData = {\n      extra_form_data: getExtraFormData(dataMask, filterIdsAppliedOnChart),\n    };\n  }\n\n  const formData = {\n    ...chart.form_data,\n    label_colors: labelColors,\n    shared_label_colors: sharedLabelColors,\n    ...(colorScheme && { color_scheme: colorScheme }),\n    extra_filters: getEffectiveExtraFilters(filters),\n    ...extraData,\n    ...extraControls,\n  };\n\n  cachedFiltersByChart[sliceId] = filters;\n  cachedFormdataByChart[sliceId] = { ...formData, dataMask, extraControls };\n\n  return formData;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}