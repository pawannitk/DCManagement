{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nimport { LocalStorageKeys, setItem, getItem } from 'src/utils/localStorageHelpers';\nexport const getTimeColumns = (datasourceId) => {\n  const colsMap = getItem(LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns, {});\n  if (datasourceId === undefined) {\n    return [];\n  }\n  return ensureIsArray(colsMap[datasourceId]);\n};\nexport const setTimeColumns = (datasourceId, columns) => {\n  const colsMap = getItem(LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns, {});\n  setItem(LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns, {\n    ...colsMap,\n    [datasourceId]: columns\n  });\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTimeColumns, \"getTimeColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts\");reactHotLoader.register(setTimeColumns, \"setTimeColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","LocalStorageKeys","setItem","getItem","getTimeColumns","datasourceId","colsMap","ExploreDataTableOriginalFormattedTimeColumns","undefined","setTimeColumns","columns","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTableControl/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray } from '@superset-ui/core';\nimport {\n  LocalStorageKeys,\n  setItem,\n  getItem,\n} from 'src/utils/localStorageHelpers';\n\nexport const getTimeColumns = (datasourceId?: string): string[] => {\n  const colsMap = getItem(\n    LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns,\n    {},\n  );\n  if (datasourceId === undefined) {\n    return [];\n  }\n  return ensureIsArray(colsMap[datasourceId]);\n};\n\nexport const setTimeColumns = (datasourceId: string, columns: string[]) => {\n  const colsMap = getItem(\n    LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns,\n    {},\n  );\n  setItem(LocalStorageKeys.ExploreDataTableOriginalFormattedTimeColumns, {\n    ...colsMap,\n    [datasourceId]: columns,\n  });\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAa,QAAQ,mBAAmB;AACjD,SACEC,gBAAgB,EAChBC,OAAO,EACPC,OAAO,QACF,+BAA+B;AAEtC,OAAO,MAAMC,cAAc,GAAGA,CAACC,YAAqB,KAAc;EAChE,MAAMC,OAAO,GAAGH,OAAO,CACrBF,gBAAgB,CAACM,4CAA4C,EAC7D,EAAE,CACH;EACD,IAAIF,YAAY,KAAKG,SAAS,EAAE;IAC9B,OAAO,EAAE;;EAEX,OAAOR,aAAa,CAACM,OAAO,CAACD,YAAY,CAAC,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGA,CAACJ,YAAoB,EAAEK,OAAiB,KAAI;EACxE,MAAMJ,OAAO,GAAGH,OAAO,CACrBF,gBAAgB,CAACM,4CAA4C,EAC7D,EAAE,CACH;EACDL,OAAO,CAACD,gBAAgB,CAACM,4CAA4C,EAAE;IACrE,GAAGD,OAAO;IACV,CAACD,YAAY,GAAGK;GACjB,CAAC;AACJ,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAL,SAAA,MAAAG,cAAA,WAAAA,cAAA,CAAAG,QAAA,CApBWV,cAAc,+HAAAO,cAAA,CAAAG,QAAA,CAWdL,cAAc,uJAAAM,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAP,SAAA,CAAAO,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}