{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { getStandardizedControls, sharedControls, sections } from '@superset-ui/chart-controls';\nimport { headerFontSize, subheaderFontSize } from '../sharedControls';\nimport { ColorSchemeEnum } from './types';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['metric'],\n    ['adhoc_filters'],\n    [\n    {\n      name: 'row_limit',\n      config: sharedControls.row_limit\n    }]]\n\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['y_axis_format'],\n    [\n    {\n      name: 'percentDifferenceFormat',\n      config: {\n        ...sharedControls.y_axis_format,\n        label: t('Percent Difference format')\n      }\n    }],\n\n    ['currency_format'],\n    [\n    {\n      ...headerFontSize,\n      config: { ...headerFontSize.config, default: 0.2 }\n    }],\n\n    [\n    {\n      ...subheaderFontSize,\n      config: {\n        ...subheaderFontSize.config,\n        default: 0.125,\n        label: t('Comparison font size')\n      }\n    }],\n\n    [\n    {\n      name: 'comparison_color_enabled',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Add color for positive/negative change'),\n        renderTrigger: true,\n        default: false,\n        description: t('Add color for positive/negative change')\n      }\n    }],\n\n    [\n    {\n      name: 'comparison_color_scheme',\n      config: {\n        type: 'SelectControl',\n        label: t('color scheme for comparison'),\n        default: ColorSchemeEnum.Green,\n        renderTrigger: true,\n        choices: [\n        [ColorSchemeEnum.Green, 'Green for increase, red for decrease'],\n        [ColorSchemeEnum.Red, 'Red for increase, green for decrease']],\n\n        visibility: ({ controls }) => {var _controls$comparison_;return (controls == null ? void 0 : (_controls$comparison_ = controls.comparison_color_enabled) == null ? void 0 : _controls$comparison_.value) === true;},\n        description: t('Adds color to the chart symbols based on the positive or ' +\n        'negative change from the comparison value.')\n      }\n    }]]\n\n\n  },\n  sections.timeComparisonControls({\n    multi: false,\n    showCalculationType: false,\n    showFullChoices: false\n  })],\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format')\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","getStandardizedControls","sharedControls","sections","headerFontSize","subheaderFontSize","ColorSchemeEnum","config","controlPanelSections","label","expanded","controlSetRows","name","row_limit","y_axis_format","default","type","renderTrigger","description","Green","choices","Red","visibility","controls","_controls$comparison_","comparison_color_enabled","value","timeComparisonControls","multi","showCalculationType","showFullChoices","controlOverrides","formDataOverrides","formData","metric","shiftMetric","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n  sharedControls,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { headerFontSize, subheaderFontSize } from '../sharedControls';\nimport { ColorSchemeEnum } from './types';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['metric'],\n        ['adhoc_filters'],\n        [\n          {\n            name: 'row_limit',\n            config: sharedControls.row_limit,\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['y_axis_format'],\n        [\n          {\n            name: 'percentDifferenceFormat',\n            config: {\n              ...sharedControls.y_axis_format,\n              label: t('Percent Difference format'),\n            },\n          },\n        ],\n        ['currency_format'],\n        [\n          {\n            ...headerFontSize,\n            config: { ...headerFontSize.config, default: 0.2 },\n          },\n        ],\n        [\n          {\n            ...subheaderFontSize,\n            config: {\n              ...subheaderFontSize.config,\n              default: 0.125,\n              label: t('Comparison font size'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'comparison_color_enabled',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Add color for positive/negative change'),\n              renderTrigger: true,\n              default: false,\n              description: t('Add color for positive/negative change'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'comparison_color_scheme',\n            config: {\n              type: 'SelectControl',\n              label: t('color scheme for comparison'),\n              default: ColorSchemeEnum.Green,\n              renderTrigger: true,\n              choices: [\n                [ColorSchemeEnum.Green, 'Green for increase, red for decrease'],\n                [ColorSchemeEnum.Red, 'Red for increase, green for decrease'],\n              ],\n              visibility: ({ controls }) =>\n                controls?.comparison_color_enabled?.value === true,\n              description: t(\n                'Adds color to the chart symbols based on the positive or ' +\n                  'negative change from the comparison value.',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n    sections.timeComparisonControls({\n      multi: false,\n      showCalculationType: false,\n      showFullChoices: false,\n    }),\n  ],\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format'),\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}