{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { utcFormat, timeFormat, timeFormatLocale } from 'd3-time-format';\nimport { isRequired } from '../../utils';\nimport TimeFormatter from '../TimeFormatter';\nimport { LOCAL_PREFIX } from '../TimeFormats';\nexport default function createD3TimeFormatter(config) {\n  const { description, formatString = isRequired('formatString'), label, locale, useLocalTime = false } = config;\n  const id = useLocalTime ? `${LOCAL_PREFIX}${formatString}` : formatString;\n  let formatFunc;\n  if (typeof locale === 'undefined') {\n    const format = useLocalTime ? timeFormat : utcFormat;\n    formatFunc = format(formatString);\n  } else\n  {\n    const localeObject = timeFormatLocale(locale);\n    formatFunc = useLocalTime ?\n    localeObject.format(formatString) :\n    localeObject.utcFormat(formatString);\n  }\n  return new TimeFormatter({\n    description,\n    formatFunc,\n    id,\n    label,\n    useLocalTime\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createD3TimeFormatter, \"createD3TimeFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/factories/createD3TimeFormatter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["utcFormat","timeFormat","timeFormatLocale","isRequired","TimeFormatter","LOCAL_PREFIX","createD3TimeFormatter","config","description","formatString","label","locale","useLocalTime","id","formatFunc","format","localeObject","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/factories/createD3TimeFormatter.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  utcFormat,\n  timeFormat,\n  timeFormatLocale,\n  TimeLocaleDefinition,\n} from 'd3-time-format';\nimport { isRequired } from '../../utils';\nimport TimeFormatter from '../TimeFormatter';\nimport { LOCAL_PREFIX } from '../TimeFormats';\n\nexport default function createD3TimeFormatter(config: {\n  description?: string;\n  formatString: string;\n  label?: string;\n  locale?: TimeLocaleDefinition;\n  useLocalTime?: boolean;\n}) {\n  const {\n    description,\n    formatString = isRequired('formatString'),\n    label,\n    locale,\n    useLocalTime = false,\n  } = config;\n\n  const id = useLocalTime ? `${LOCAL_PREFIX}${formatString}` : formatString;\n  let formatFunc;\n\n  if (typeof locale === 'undefined') {\n    const format = useLocalTime ? timeFormat : utcFormat;\n    formatFunc = format(formatString);\n  } else {\n    const localeObject = timeFormatLocale(locale);\n    formatFunc = useLocalTime\n      ? localeObject.format(formatString)\n      : localeObject.utcFormat(formatString);\n  }\n\n  return new TimeFormatter({\n    description,\n    formatFunc,\n    id,\n    label,\n    useLocalTime,\n  });\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,SAAS,EACTC,UAAU,EACVC,gBAAgB,QAEX,gBAAgB;AACvB,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,eAAc,SAAUC,qBAAqBA,CAACC,MAM7C;EACC,MAAM,EACJC,WAAW,EACXC,YAAY,GAAGN,UAAU,CAAC,cAAc,CAAC,EACzCO,KAAK,EACLC,MAAM,EACNC,YAAY,GAAG,KAAK,EACrB,GAAGL,MAAM;EAEV,MAAMM,EAAE,GAAGD,YAAY,GAAG,GAAGP,YAAY,GAAGI,YAAY,EAAE,GAAGA,YAAY;EACzE,IAAIK,UAAU;EAEd,IAAI,OAAOH,MAAM,KAAK,WAAW,EAAE;IACjC,MAAMI,MAAM,GAAGH,YAAY,GAAGX,UAAU,GAAGD,SAAS;IACpDc,UAAU,GAAGC,MAAM,CAACN,YAAY,CAAC;GAClC;EAAM;IACL,MAAMO,YAAY,GAAGd,gBAAgB,CAACS,MAAM,CAAC;IAC7CG,UAAU,GAAGF,YAAY;IACrBI,YAAY,CAACD,MAAM,CAACN,YAAY,CAAC;IACjCO,YAAY,CAAChB,SAAS,CAACS,YAAY,CAAC;;EAG1C,OAAO,IAAIL,aAAa,CAAC;IACvBI,WAAW;IACXM,UAAU;IACVD,EAAE;IACFH,KAAK;IACLE;GACD,CAAC;AACJ,CAAC,mBAAAK,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAnCuBf,qBAAqB,0LAAAgB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}