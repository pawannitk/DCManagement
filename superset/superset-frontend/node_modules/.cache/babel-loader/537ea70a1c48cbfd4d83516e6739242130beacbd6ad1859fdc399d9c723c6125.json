{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n/**\n * Renders a telemetry pixel component to capture anonymous, aggregated telemetry via Scarf.\n * This can be disabled by setting the SCARF_ANALYTICS environment variable to false.\n *\n * @component\n * @param {TelemetryPixelProps} props - The props for the TelemetryPixel component.\n * @param {string} props.version - The version of  Superset that's currently in use.\n * @param {string} props.sha - The SHA of Superset that's currently in use.\n * @param {string} props.build - The build of Superset that's currently in use.\n * @returns {JSX.Element | null} The rendered TelemetryPixel component.\n */import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst PIXEL_ID = '0d3461e1-abb1-4691-a0aa-5ed50de66af0';\nconst TelemetryPixel = ({ version = 'unknownVersion', sha = 'unknownSHA', build = 'unknownBuild' }) => {\n  const pixelPath = `https://apachesuperset.gateway.scarf.sh/pixel/${PIXEL_ID}/${version}/${sha}/${build}`;\n  return process.env.SCARF_ANALYTICS === 'false' ? null : ___EmotionJSX(\"img\", {\n    // @ts-ignore\n    referrerPolicy: \"no-referrer-when-downgrade\", src: pixelPath, width: 0, height: 0, alt: \"\" });\n};const _default =\nTelemetryPixel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PIXEL_ID, \"PIXEL_ID\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TelemetryPixel/index.tsx\");reactHotLoader.register(TelemetryPixel, \"TelemetryPixel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TelemetryPixel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TelemetryPixel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","jsx","___EmotionJSX","PIXEL_ID","TelemetryPixel","version","sha","build","pixelPath","process","env","SCARF_ANALYTICS","referrerPolicy","src","width","height","alt","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TelemetryPixel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\ninterface TelemetryPixelProps {\n  version?: string;\n  sha?: string;\n  build?: string;\n}\n\n/**\n * Renders a telemetry pixel component to capture anonymous, aggregated telemetry via Scarf.\n * This can be disabled by setting the SCARF_ANALYTICS environment variable to false.\n *\n * @component\n * @param {TelemetryPixelProps} props - The props for the TelemetryPixel component.\n * @param {string} props.version - The version of  Superset that's currently in use.\n * @param {string} props.sha - The SHA of Superset that's currently in use.\n * @param {string} props.build - The build of Superset that's currently in use.\n * @returns {JSX.Element | null} The rendered TelemetryPixel component.\n */\n\nconst PIXEL_ID = '0d3461e1-abb1-4691-a0aa-5ed50de66af0';\n\nconst TelemetryPixel = ({\n  version = 'unknownVersion',\n  sha = 'unknownSHA',\n  build = 'unknownBuild',\n}: TelemetryPixelProps): React.ReactElement | null => {\n  const pixelPath = `https://apachesuperset.gateway.scarf.sh/pixel/${PIXEL_ID}/${version}/${sha}/${build}`;\n  return process.env.SCARF_ANALYTICS === 'false' ? null : (\n    <img\n      // @ts-ignore\n      referrerPolicy=\"no-referrer-when-downgrade\"\n      src={pixelPath}\n      width={0}\n      height={0}\n      alt=\"\"\n    />\n  );\n};\nexport default TelemetryPixel;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,KAAK,MAAM,OAAO;AAQzB;;;;;;;;;;GAAA,SAAAC,GAAA,IAAAC,aAAA;AAYA,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,MAAMC,cAAc,GAAGA,CAAC,EACtBC,OAAO,GAAG,gBAAgB,EAC1BC,GAAG,GAAG,YAAY,EAClBC,KAAK,GAAG,cAAc,EACF,KAA+B;EACnD,MAAMC,SAAS,GAAG,iDAAiDL,QAAQ,IAAIE,OAAO,IAAIC,GAAG,IAAIC,KAAK,EAAE;EACxG,OAAOE,OAAO,CAACC,GAAG,CAACC,eAAe,KAAK,OAAO,GAAG,IAAI,GACnDT,aAAA;IACE;IACAU,cAAc,EAAC,4BAA4B,EAC3CC,GAAG,EAAEL,SAAU,EACfM,KAAK,EAAE,CAAE,EACTC,MAAM,EAAE,CAAE,EACVC,GAAG,EAAC,EAAE,GAET;AACH,CAAC,CAAC,MAAAC,QAAA;AACab,cAAc,CAA7B,eAAAa,QAAA,CAA8B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAnBxBnB,QAAQ,gHAAAe,cAAA,CAAAI,QAAA,CAERlB,cAAc,sHAAAc,cAAA,CAAAI,QAAA,CAAAL,QAAA,uIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}