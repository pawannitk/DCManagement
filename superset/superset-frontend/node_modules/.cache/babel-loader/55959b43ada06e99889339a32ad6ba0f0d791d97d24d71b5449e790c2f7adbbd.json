{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryModeLabel } from '@superset-ui/chart-controls';\nimport { QueryMode, t } from '@superset-ui/core';\nimport { getQueryMode } from './shared';\nconst queryMode = {\n  type: 'RadioButtonControl',\n  label: t('Query mode'),\n  default: null,\n  options: [\n  [QueryMode.Aggregate, QueryModeLabel[QueryMode.Aggregate]],\n  [QueryMode.Raw, QueryModeLabel[QueryMode.Raw]]],\n\n  mapStateToProps: ({ controls }) => ({ value: getQueryMode(controls) }),\n  rerender: ['all_columns', 'groupby', 'metrics', 'percent_metrics']\n};\nexport const queryModeControlSetItem = {\n  name: 'query_mode',\n  config: queryMode\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(queryMode, \"queryMode\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/queryMode.tsx\");reactHotLoader.register(queryModeControlSetItem, \"queryModeControlSetItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/queryMode.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["QueryModeLabel","QueryMode","t","getQueryMode","queryMode","type","label","default","options","Aggregate","Raw","mapStateToProps","controls","value","rerender","queryModeControlSetItem","name","config","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/queryMode.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ControlConfig,\n  ControlSetItem,\n  QueryModeLabel,\n} from '@superset-ui/chart-controls';\nimport { QueryMode, t } from '@superset-ui/core';\nimport { getQueryMode } from './shared';\n\nconst queryMode: ControlConfig<'RadioButtonControl'> = {\n  type: 'RadioButtonControl',\n  label: t('Query mode'),\n  default: null,\n  options: [\n    [QueryMode.Aggregate, QueryModeLabel[QueryMode.Aggregate]],\n    [QueryMode.Raw, QueryModeLabel[QueryMode.Raw]],\n  ],\n  mapStateToProps: ({ controls }) => ({ value: getQueryMode(controls) }),\n  rerender: ['all_columns', 'groupby', 'metrics', 'percent_metrics'],\n};\n\nexport const queryModeControlSetItem: ControlSetItem = {\n  name: 'query_mode',\n  config: queryMode,\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAGEA,cAAc,QACT,6BAA6B;AACpC,SAASC,SAAS,EAAEC,CAAC,QAAQ,mBAAmB;AAChD,SAASC,YAAY,QAAQ,UAAU;AAEvC,MAAMC,SAAS,GAAwC;EACrDC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAEJ,CAAC,CAAC,YAAY,CAAC;EACtBK,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;EACP,CAACP,SAAS,CAACQ,SAAS,EAAET,cAAc,CAACC,SAAS,CAACQ,SAAS,CAAC,CAAC;EAC1D,CAACR,SAAS,CAACS,GAAG,EAAEV,cAAc,CAACC,SAAS,CAACS,GAAG,CAAC,CAAC,CAC/C;;EACDC,eAAe,EAAEA,CAAC,EAAEC,QAAQ,EAAE,MAAM,EAAEC,KAAK,EAAEV,YAAY,CAACS,QAAQ,CAAC,EAAE,CAAC;EACtEE,QAAQ,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB;CAClE;AAED,OAAO,MAAMC,uBAAuB,GAAmB;EACrDC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAEb;CACT,CAAC,mBAAAc,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAZ,OAAA,GAAAa,SAAA,MAAAF,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAfIjB,SAAS,2IAAAc,cAAA,CAAAG,QAAA,CAYFN,uBAAuB,iLAAAO,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}