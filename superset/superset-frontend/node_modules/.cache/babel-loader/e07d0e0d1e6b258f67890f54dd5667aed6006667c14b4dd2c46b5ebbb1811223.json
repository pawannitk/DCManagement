{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isRequired, Plugin } from '../..';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport getChartBuildQueryRegistry from '../registries/ChartBuildQueryRegistrySingleton';\nimport getChartComponentRegistry from '../registries/ChartComponentRegistrySingleton';\nimport getChartControlPanelRegistry from '../registries/ChartControlPanelRegistrySingleton';\nimport getChartTransformPropsRegistry from '../registries/ChartTransformPropsRegistrySingleton';\nfunction IDENTITY(x) {\n  return x;\n}\nconst EMPTY = {};\n/**\n * Loaders of the form `() => import('foo')` may return esmodules\n * which require the value to be extracted as `module.default`\n * */\nfunction sanitizeLoader(loader) {\n  return () => {\n    const loaded = loader();\n    return loaded instanceof Promise ?\n    loaded.then((module) => 'default' in module && module.default || module) :\n    loaded;\n  };\n}\nexport default class ChartPlugin extends Plugin {\n\n\n\n\n\n  constructor(config) {\n    super();this.controlPanel = void 0;this.metadata = void 0;this.loadBuildQuery = void 0;this.loadTransformProps = void 0;this.loadChart = void 0;\n    const { metadata, buildQuery, loadBuildQuery, transformProps = IDENTITY, loadTransformProps, Chart, loadChart, controlPanel = EMPTY } = config;\n    this.controlPanel = controlPanel;\n    this.metadata = metadata;\n    this.loadBuildQuery =\n    loadBuildQuery && sanitizeLoader(loadBuildQuery) ||\n    buildQuery && sanitizeLoader(() => buildQuery) ||\n    undefined;\n    this.loadTransformProps = sanitizeLoader(loadTransformProps != null ? loadTransformProps : () => transformProps);\n    if (loadChart) {\n      this.loadChart = sanitizeLoader(loadChart);\n    } else\n    if (Chart) {\n      this.loadChart = () => Chart;\n    } else\n    {\n      throw new Error('Chart or loadChart is required');\n    }\n  }\n  register() {\n    const key = this.config.key || isRequired('config.key');\n    getChartMetadataRegistry().registerValue(key, this.metadata);\n    getChartComponentRegistry().registerLoader(key, this.loadChart);\n    getChartControlPanelRegistry().registerValue(key, this.controlPanel);\n    getChartTransformPropsRegistry().registerLoader(key, this.loadTransformProps);\n    if (this.loadBuildQuery) {\n      getChartBuildQueryRegistry().registerLoader(key, this.loadBuildQuery);\n    }\n    return this;\n  }\n  unregister() {\n    const key = this.config.key || isRequired('config.key');\n    getChartMetadataRegistry().remove(key);\n    getChartComponentRegistry().remove(key);\n    getChartControlPanelRegistry().remove(key);\n    getChartTransformPropsRegistry().remove(key);\n    getChartBuildQueryRegistry().remove(key);\n    return this;\n  }\n  configure(config, replace) {\n    super.configure(config, replace);\n    return this;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(IDENTITY, \"IDENTITY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartPlugin.ts\");reactHotLoader.register(EMPTY, \"EMPTY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartPlugin.ts\");reactHotLoader.register(sanitizeLoader, \"sanitizeLoader\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartPlugin.ts\");reactHotLoader.register(ChartPlugin, \"ChartPlugin\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartPlugin.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isRequired","Plugin","getChartMetadataRegistry","getChartBuildQueryRegistry","getChartComponentRegistry","getChartControlPanelRegistry","getChartTransformPropsRegistry","IDENTITY","x","EMPTY","sanitizeLoader","loader","loaded","Promise","then","module","default","ChartPlugin","constructor","config","controlPanel","metadata","loadBuildQuery","loadTransformProps","loadChart","buildQuery","transformProps","Chart","undefined","Error","register","key","registerValue","registerLoader","unregister","remove","configure","replace","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartPlugin.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ComponentType } from 'react';\nimport { isRequired, Plugin, QueryFormData } from '../..';\nimport ChartMetadata from './ChartMetadata';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport getChartBuildQueryRegistry from '../registries/ChartBuildQueryRegistrySingleton';\nimport getChartComponentRegistry from '../registries/ChartComponentRegistrySingleton';\nimport getChartControlPanelRegistry from '../registries/ChartControlPanelRegistrySingleton';\nimport getChartTransformPropsRegistry from '../registries/ChartTransformPropsRegistrySingleton';\nimport { BuildQueryFunction, TransformProps } from '../types/TransformFunction';\nimport { ChartControlPanel } from './ChartControlPanel';\nimport { ChartProps } from '..';\n\nfunction IDENTITY<T>(x: T) {\n  return x;\n}\n\nconst EMPTY = {};\n\nexport type PromiseOrValue<T> = Promise<T> | T;\nexport type PromiseOrValueLoader<T> = () => PromiseOrValue<T>;\nexport type ChartType = ComponentType<any>;\ntype ValueOrModuleWithValue<T> = T | { default: T };\n\ninterface ChartPluginConfig<\n  FormData extends QueryFormData = QueryFormData,\n  Props extends ChartProps = ChartProps,\n> {\n  metadata: ChartMetadata;\n  /** Use buildQuery for immediate value. For lazy-loading, use loadBuildQuery. */\n  buildQuery?: BuildQueryFunction<FormData>;\n  /** Use loadBuildQuery for dynamic import (lazy-loading) */\n  loadBuildQuery?: PromiseOrValueLoader<\n    ValueOrModuleWithValue<BuildQueryFunction<FormData>>\n  >;\n  /** Use transformProps for immediate value. For lazy-loading, use loadTransformProps.  */\n  transformProps?: TransformProps<Props>;\n  /** Use loadTransformProps for dynamic import (lazy-loading) */\n  loadTransformProps?: PromiseOrValueLoader<\n    ValueOrModuleWithValue<TransformProps<Props>>\n  >;\n  /** Use Chart for immediate value. For lazy-loading, use loadChart. */\n  Chart?: ChartType;\n  /** Use loadChart for dynamic import (lazy-loading) */\n  loadChart?: PromiseOrValueLoader<ValueOrModuleWithValue<ChartType>>;\n  /** Control panel configuration object */\n  controlPanel?: ChartControlPanel;\n}\n\n/**\n * Loaders of the form `() => import('foo')` may return esmodules\n * which require the value to be extracted as `module.default`\n * */\nfunction sanitizeLoader<T extends object>(\n  loader: PromiseOrValueLoader<ValueOrModuleWithValue<T>>,\n): PromiseOrValueLoader<T> {\n  return () => {\n    const loaded = loader();\n\n    return loaded instanceof Promise\n      ? (loaded.then(\n          module => ('default' in module && module.default) || module,\n        ) as Promise<T>)\n      : (loaded as T);\n  };\n}\n\nexport default class ChartPlugin<\n  FormData extends QueryFormData = QueryFormData,\n  Props extends ChartProps = ChartProps,\n> extends Plugin {\n  controlPanel: ChartControlPanel;\n\n  metadata: ChartMetadata;\n\n  loadBuildQuery?: PromiseOrValueLoader<BuildQueryFunction<FormData>>;\n\n  loadTransformProps: PromiseOrValueLoader<TransformProps<Props>>;\n\n  loadChart: PromiseOrValueLoader<ChartType>;\n\n  constructor(config: ChartPluginConfig<FormData, Props>) {\n    super();\n    const {\n      metadata,\n      buildQuery,\n      loadBuildQuery,\n      transformProps = IDENTITY,\n      loadTransformProps,\n      Chart,\n      loadChart,\n      controlPanel = EMPTY,\n    } = config;\n    this.controlPanel = controlPanel;\n    this.metadata = metadata;\n    this.loadBuildQuery =\n      (loadBuildQuery && sanitizeLoader(loadBuildQuery)) ||\n      (buildQuery && sanitizeLoader(() => buildQuery)) ||\n      undefined;\n    this.loadTransformProps = sanitizeLoader(\n      loadTransformProps ?? (() => transformProps),\n    );\n\n    if (loadChart) {\n      this.loadChart = sanitizeLoader<ChartType>(loadChart);\n    } else if (Chart) {\n      this.loadChart = () => Chart;\n    } else {\n      throw new Error('Chart or loadChart is required');\n    }\n  }\n\n  register() {\n    const key: string = this.config.key || isRequired('config.key');\n    getChartMetadataRegistry().registerValue(key, this.metadata);\n    getChartComponentRegistry().registerLoader(key, this.loadChart);\n    getChartControlPanelRegistry().registerValue(key, this.controlPanel);\n    getChartTransformPropsRegistry().registerLoader(\n      key,\n      this.loadTransformProps,\n    );\n    if (this.loadBuildQuery) {\n      getChartBuildQueryRegistry().registerLoader(key, this.loadBuildQuery);\n    }\n    return this;\n  }\n\n  unregister() {\n    const key: string = this.config.key || isRequired('config.key');\n    getChartMetadataRegistry().remove(key);\n    getChartComponentRegistry().remove(key);\n    getChartControlPanelRegistry().remove(key);\n    getChartTransformPropsRegistry().remove(key);\n    getChartBuildQueryRegistry().remove(key);\n    return this;\n  }\n\n  configure(config: { [key: string]: unknown }, replace?: boolean) {\n    super.configure(config, replace);\n\n    return this;\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAoBA,SAASA,UAAU,EAAEC,MAAM,QAAuB,OAAO;AAEzD,OAAOC,wBAAwB,MAAM,8CAA8C;AACnF,OAAOC,0BAA0B,MAAM,gDAAgD;AACvF,OAAOC,yBAAyB,MAAM,+CAA+C;AACrF,OAAOC,4BAA4B,MAAM,kDAAkD;AAC3F,OAAOC,8BAA8B,MAAM,oDAAoD;AAK/F,SAASC,QAAQA,CAAIC,CAAI;EACvB,OAAOA,CAAC;AACV;AAEA,MAAMC,KAAK,GAAG,EAAE;AAgChB;;;;AAIA,SAASC,cAAcA,CACrBC,MAAuD;EAEvD,OAAO,MAAK;IACV,MAAMC,MAAM,GAAGD,MAAM,EAAE;IAEvB,OAAOC,MAAM,YAAYC,OAAO;IAC3BD,MAAM,CAACE,IAAI,CACV,CAAAC,MAAM,KAAK,SAAS,IAAIA,MAAM,IAAIA,MAAM,CAACC,OAAO,IAAKD,MAAM,CAC7C;IACfH,MAAY;EACnB,CAAC;AACH;AAEA,eAAc,MAAOK,WAGnB,SAAQhB,MAAM;;;;;;EAWdiB,YAAYC,MAA0C;IACpD,KAAK,EAAE,CAAC,KAXVC,YAAY,eAEZC,QAAQ,eAERC,cAAc,eAEdC,kBAAkB,eAElBC,SAAS;IAIP,MAAM,EACJH,QAAQ,EACRI,UAAU,EACVH,cAAc,EACdI,cAAc,GAAGnB,QAAQ,EACzBgB,kBAAkB,EAClBI,KAAK,EACLH,SAAS,EACTJ,YAAY,GAAGX,KAAK,EACrB,GAAGU,MAAM;IACV,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,cAAc;IAChBA,cAAc,IAAIZ,cAAc,CAACY,cAAc,CAAC;IAChDG,UAAU,IAAIf,cAAc,CAAC,MAAMe,UAAU,CAAE;IAChDG,SAAS;IACX,IAAI,CAACL,kBAAkB,GAAGb,cAAc,CACtCa,kBAAkB,WAAlBA,kBAAkB,GAAK,MAAMG,cAAe,CAC7C;IAED,IAAIF,SAAS,EAAE;MACb,IAAI,CAACA,SAAS,GAAGd,cAAc,CAAYc,SAAS,CAAC;KACtD;IAAM,IAAIG,KAAK,EAAE;MAChB,IAAI,CAACH,SAAS,GAAG,MAAMG,KAAK;KAC7B;IAAM;MACL,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;;EAErD;EAEAC,QAAQA,CAAA;IACN,MAAMC,GAAG,GAAW,IAAI,CAACZ,MAAM,CAACY,GAAG,IAAI/B,UAAU,CAAC,YAAY,CAAC;IAC/DE,wBAAwB,EAAE,CAAC8B,aAAa,CAACD,GAAG,EAAE,IAAI,CAACV,QAAQ,CAAC;IAC5DjB,yBAAyB,EAAE,CAAC6B,cAAc,CAACF,GAAG,EAAE,IAAI,CAACP,SAAS,CAAC;IAC/DnB,4BAA4B,EAAE,CAAC2B,aAAa,CAACD,GAAG,EAAE,IAAI,CAACX,YAAY,CAAC;IACpEd,8BAA8B,EAAE,CAAC2B,cAAc,CAC7CF,GAAG,EACH,IAAI,CAACR,kBAAkB,CACxB;IACD,IAAI,IAAI,CAACD,cAAc,EAAE;MACvBnB,0BAA0B,EAAE,CAAC8B,cAAc,CAACF,GAAG,EAAE,IAAI,CAACT,cAAc,CAAC;;IAEvE,OAAO,IAAI;EACb;EAEAY,UAAUA,CAAA;IACR,MAAMH,GAAG,GAAW,IAAI,CAACZ,MAAM,CAACY,GAAG,IAAI/B,UAAU,CAAC,YAAY,CAAC;IAC/DE,wBAAwB,EAAE,CAACiC,MAAM,CAACJ,GAAG,CAAC;IACtC3B,yBAAyB,EAAE,CAAC+B,MAAM,CAACJ,GAAG,CAAC;IACvC1B,4BAA4B,EAAE,CAAC8B,MAAM,CAACJ,GAAG,CAAC;IAC1CzB,8BAA8B,EAAE,CAAC6B,MAAM,CAACJ,GAAG,CAAC;IAC5C5B,0BAA0B,EAAE,CAACgC,MAAM,CAACJ,GAAG,CAAC;IACxC,OAAO,IAAI;EACb;EAEAK,SAASA,CAACjB,MAAkC,EAAEkB,OAAiB;IAC7D,KAAK,CAACD,SAAS,CAACjB,MAAM,EAAEkB,OAAO,CAAC;IAEhC,OAAO,IAAI;EACb,CAAC;EAAAC,iCAAAP,GAAA,EAAAQ,IAAA;IAAA,KAAAR,GAAA,IAAAS,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAA1B,OAAA,GAAAY,SAAA,MAAAa,cAAA,WAAAA,cAAA,CAAAX,QAAA,CAjIQvB,QAAQ,kIAAAkC,cAAA,CAAAX,QAAA,CAIXrB,KAAK,+HAAAgC,cAAA,CAAAX,QAAA,CAoCFpB,cAAc,wIAAA+B,cAAA,CAAAX,QAAA,CAcFb,WAGnB,6JAAA0B,WAAA,UAAAD,oBAAA,mBAAAA,oBAAA,CAAAC,WAAA,GAAAf,SAAA,CAAAe,WAAA,IAAAA,WAAA,CAAA5B,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}