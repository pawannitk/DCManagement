{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\nimport { useChartIds } from 'src/dashboard/util/charts/useChartIds';\nconst extractTabLabel = (tab) => {var _tab$meta, _tab$meta2;return (tab == null ? void 0 : (_tab$meta = tab.meta) == null ? void 0 : _tab$meta.text) || (tab == null ? void 0 : (_tab$meta2 = tab.meta) == null ? void 0 : _tab$meta2.defaultText) || '';};\nconst extractChartLabel = (chart) => {var _chart$meta, _chart$meta2;return (chart == null ? void 0 : (_chart$meta = chart.meta) == null ? void 0 : _chart$meta.sliceNameOverride) || (chart == null ? void 0 : (_chart$meta2 = chart.meta) == null ? void 0 : _chart$meta2.sliceName) || (chart == null ? void 0 : chart.id) || '';};\nexport const useFilterScope = (filter) => {\n  const layout = useSelector((state) => state.dashboardLayout.present);\n  const chartIds = useChartIds();\n  return useMemo(() => {var _topLevelTabs;\n    let topLevelTabs;\n    const topElementId = layout[DASHBOARD_ROOT_ID].children[0];\n    if (topElementId.startsWith('TABS-')) {\n      topLevelTabs = layout[topElementId].children;\n    }\n    // no charts in scope\n    if (filter.scope.rootPath.length === 0) {\n      return undefined;\n    }\n    // all charts in scope\n    // no charts excluded and no top level tabs\n    // OR no charts excluded and every top level tab is in rootPath\n    if (filter.scope.excluded.length === 0 && (\n    filter.scope.rootPath[0] === DASHBOARD_ROOT_ID || (_topLevelTabs =\n    topLevelTabs) != null && _topLevelTabs.every((topLevelTab) => filter.scope.rootPath.includes(topLevelTab)))) {\n      return { all: [t('All charts')] };\n    }\n    // no charts excluded and not every top level tab in scope\n    // returns \"TAB1, TAB2\"\n    if (filter.scope.excluded.length === 0 && topLevelTabs) {\n      return {\n        tabs: filter.scope.rootPath.\n        map((tabId) => extractTabLabel(layout[tabId])).\n        filter(Boolean)\n      };\n    }\n    const layoutCharts = Object.values(layout).filter((layoutElement) => layoutElement.type === CHART_TYPE);\n    // no top level tabs, charts excluded\n    // returns \"CHART1, CHART2\"\n    if (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID) {\n      return {\n        charts: chartIds.\n        filter((chartId) => !filter.scope.excluded.includes(chartId)).\n        map((chartId) => {\n          const layoutElement = layoutCharts.find((layoutChart) => layoutChart.meta.chartId === chartId);\n          return extractChartLabel(layoutElement);\n        }).\n        filter(Boolean)\n      };\n    }\n    // top level tabs, charts excluded\n    // returns \"TAB1, TAB2, CHART1\"\n    if (topLevelTabs) {\n      // We start assuming that all charts are in scope for all tabs in the root path\n      const topLevelTabsInFullScope = [...filter.scope.rootPath];\n      const layoutChartElementsInTabsInScope = layoutCharts.filter((element) => element.parents.some((parent) => topLevelTabsInFullScope.includes(parent)));\n      // Exclude the tabs that contain excluded charts\n      filter.scope.excluded.forEach((chartId) => {\n        const excludedIndex = topLevelTabsInFullScope.findIndex((tabId) => {var _layoutChartElementsI;return (_layoutChartElementsI = layoutChartElementsInTabsInScope.\n          find((chart) => chart.meta.chartId === chartId)) == null ? void 0 : _layoutChartElementsI.\n          parents.includes(tabId);});\n        if (excludedIndex > -1) {\n          topLevelTabsInFullScope.splice(excludedIndex, 1);\n        }\n      });\n      // Handle charts that are in scope but belong to excluded tabs.\n      const chartsInExcludedTabs = chartIds.\n      filter((chartId) => !filter.scope.excluded.includes(chartId)).\n      reduce((acc, chartId) => {\n        const layoutChartElementInExcludedTab = layoutChartElementsInTabsInScope.find((element) => element.meta.chartId === chartId &&\n        element.parents.every((parent) => !topLevelTabsInFullScope.includes(parent)));\n        if (layoutChartElementInExcludedTab) {\n          acc.push(layoutChartElementInExcludedTab);\n        }\n        return acc;\n      }, []);\n      // Join tab names and chart names\n      return {\n        tabs: topLevelTabsInFullScope.\n        map((tabId) => extractTabLabel(layout[tabId])).\n        filter(Boolean),\n        charts: chartsInExcludedTabs.map(extractChartLabel).filter(Boolean)\n      };\n    }\n    return undefined;\n  }, [chartIds, filter.scope.excluded, filter.scope.rootPath, layout]);\n};__signature__(useFilterScope, \"useSelector{layout}\\nuseChartIds{chartIds}\\nuseMemo{}\", () => [useSelector, useChartIds]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractTabLabel, \"extractTabLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");reactHotLoader.register(extractChartLabel, \"extractChartLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");reactHotLoader.register(useFilterScope, \"useFilterScope\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useSelector","t","DASHBOARD_ROOT_ID","CHART_TYPE","useChartIds","extractTabLabel","tab","_tab$meta","_tab$meta2","meta","text","defaultText","extractChartLabel","chart","_chart$meta","_chart$meta2","sliceNameOverride","sliceName","id","useFilterScope","filter","layout","state","dashboardLayout","present","chartIds","_topLevelTabs","topLevelTabs","topElementId","children","startsWith","scope","rootPath","length","undefined","excluded","every","topLevelTab","includes","all","tabs","map","tabId","Boolean","layoutCharts","Object","values","layoutElement","type","charts","chartId","find","layoutChart","topLevelTabsInFullScope","layoutChartElementsInTabsInScope","element","parents","some","parent","forEach","excludedIndex","findIndex","_layoutChartElementsI","splice","chartsInExcludedTabs","reduce","acc","layoutChartElementInExcludedTab","push","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/useFilterScope.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Filter, t } from '@superset-ui/core';\nimport { Layout, LayoutItem, RootState } from 'src/dashboard/types';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { CHART_TYPE } from 'src/dashboard/util/componentTypes';\nimport { useChartIds } from 'src/dashboard/util/charts/useChartIds';\n\nconst extractTabLabel = (tab?: LayoutItem) =>\n  tab?.meta?.text || tab?.meta?.defaultText || '';\nconst extractChartLabel = (chart?: LayoutItem) =>\n  chart?.meta?.sliceNameOverride || chart?.meta?.sliceName || chart?.id || '';\n\nexport const useFilterScope = (filter: Filter) => {\n  const layout = useSelector<RootState, Layout>(\n    state => state.dashboardLayout.present,\n  );\n  const chartIds = useChartIds();\n\n  return useMemo(() => {\n    let topLevelTabs: string[] | undefined;\n    const topElementId = layout[DASHBOARD_ROOT_ID].children[0];\n    if (topElementId.startsWith('TABS-')) {\n      topLevelTabs = layout[topElementId].children;\n    }\n\n    // no charts in scope\n    if (filter.scope.rootPath.length === 0) {\n      return undefined;\n    }\n\n    // all charts in scope\n    // no charts excluded and no top level tabs\n    // OR no charts excluded and every top level tab is in rootPath\n    if (\n      filter.scope.excluded.length === 0 &&\n      (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID ||\n        topLevelTabs?.every(topLevelTab =>\n          filter.scope.rootPath.includes(topLevelTab),\n        ))\n    ) {\n      return { all: [t('All charts')] };\n    }\n\n    // no charts excluded and not every top level tab in scope\n    // returns \"TAB1, TAB2\"\n    if (filter.scope.excluded.length === 0 && topLevelTabs) {\n      return {\n        tabs: filter.scope.rootPath\n          .map(tabId => extractTabLabel(layout[tabId]))\n          .filter(Boolean),\n      };\n    }\n\n    const layoutCharts = Object.values(layout).filter(\n      layoutElement => layoutElement.type === CHART_TYPE,\n    );\n\n    // no top level tabs, charts excluded\n    // returns \"CHART1, CHART2\"\n    if (filter.scope.rootPath[0] === DASHBOARD_ROOT_ID) {\n      return {\n        charts: chartIds\n          .filter(chartId => !filter.scope.excluded.includes(chartId))\n          .map(chartId => {\n            const layoutElement = layoutCharts.find(\n              layoutChart => layoutChart.meta.chartId === chartId,\n            );\n            return extractChartLabel(layoutElement);\n          })\n          .filter(Boolean),\n      };\n    }\n\n    // top level tabs, charts excluded\n    // returns \"TAB1, TAB2, CHART1\"\n    if (topLevelTabs) {\n      // We start assuming that all charts are in scope for all tabs in the root path\n      const topLevelTabsInFullScope = [...filter.scope.rootPath];\n      const layoutChartElementsInTabsInScope = layoutCharts.filter(element =>\n        element.parents.some(parent =>\n          topLevelTabsInFullScope.includes(parent),\n        ),\n      );\n      // Exclude the tabs that contain excluded charts\n      filter.scope.excluded.forEach(chartId => {\n        const excludedIndex = topLevelTabsInFullScope.findIndex(\n          tabId =>\n            layoutChartElementsInTabsInScope\n              .find(chart => chart.meta.chartId === chartId)\n              ?.parents.includes(tabId),\n        );\n        if (excludedIndex > -1) {\n          topLevelTabsInFullScope.splice(excludedIndex, 1);\n        }\n      });\n      // Handle charts that are in scope but belong to excluded tabs.\n      const chartsInExcludedTabs = chartIds\n        .filter(chartId => !filter.scope.excluded.includes(chartId))\n        .reduce((acc: LayoutItem[], chartId) => {\n          const layoutChartElementInExcludedTab =\n            layoutChartElementsInTabsInScope.find(\n              element =>\n                element.meta.chartId === chartId &&\n                element.parents.every(\n                  parent => !topLevelTabsInFullScope.includes(parent),\n                ),\n            );\n          if (layoutChartElementInExcludedTab) {\n            acc.push(layoutChartElementInExcludedTab);\n          }\n          return acc;\n        }, []);\n      // Join tab names and chart names\n      return {\n        tabs: topLevelTabsInFullScope\n          .map(tabId => extractTabLabel(layout[tabId]))\n          .filter(Boolean),\n        charts: chartsInExcludedTabs.map(extractChartLabel).filter(Boolean),\n      };\n    }\n\n    return undefined;\n  }, [chartIds, filter.scope.excluded, filter.scope.rootPath, layout]);\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAiBC,CAAC,QAAQ,mBAAmB;AAE7C,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,WAAW,QAAQ,uCAAuC;AAEnE,MAAMC,eAAe,GAAGA,CAACC,GAAgB,UAAAC,SAAA,EAAAC,UAAA,QACvC,CAAAF,GAAG,qBAAAC,SAAA,GAAHD,GAAG,CAAEG,IAAI,qBAATF,SAAA,CAAWG,IAAI,MAAIJ,GAAG,qBAAAE,UAAA,GAAHF,GAAG,CAAEG,IAAI,qBAATD,UAAA,CAAWG,WAAW,KAAI,EAAE;AACjD,MAAMC,iBAAiB,GAAGA,CAACC,KAAkB,UAAAC,WAAA,EAAAC,YAAA,QAC3C,CAAAF,KAAK,qBAAAC,WAAA,GAALD,KAAK,CAAEJ,IAAI,qBAAXK,WAAA,CAAaE,iBAAiB,MAAIH,KAAK,qBAAAE,YAAA,GAALF,KAAK,CAAEJ,IAAI,qBAAXM,YAAA,CAAaE,SAAS,MAAIJ,KAAK,oBAALA,KAAK,CAAEK,EAAE,KAAI,EAAE;AAE7E,OAAO,MAAMC,cAAc,GAAGA,CAACC,MAAc,KAAI;EAC/C,MAAMC,MAAM,GAAGrB,WAAW,CACxB,CAAAsB,KAAK,KAAIA,KAAK,CAACC,eAAe,CAACC,OAAO,CACvC;EACD,MAAMC,QAAQ,GAAGrB,WAAW,EAAE;EAE9B,OAAOL,OAAO,CAAC,MAAK,KAAA2B,aAAA;IAClB,IAAIC,YAAkC;IACtC,MAAMC,YAAY,GAAGP,MAAM,CAACnB,iBAAiB,CAAC,CAAC2B,QAAQ,CAAC,CAAC,CAAC;IAC1D,IAAID,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE;MACpCH,YAAY,GAAGN,MAAM,CAACO,YAAY,CAAC,CAACC,QAAQ;;IAG9C;IACA,IAAIT,MAAM,CAACW,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACtC,OAAOC,SAAS;;IAGlB;IACA;IACA;IACA,IACEd,MAAM,CAACW,KAAK,CAACI,QAAQ,CAACF,MAAM,KAAK,CAAC;IACjCb,MAAM,CAACW,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,KAAK9B,iBAAiB,KAAAwB,aAAA;IAC7CC,YAAY,aAAZD,aAAA,CAAcU,KAAK,CAAC,CAAAC,WAAW,KAC7BjB,MAAM,CAACW,KAAK,CAACC,QAAQ,CAACM,QAAQ,CAACD,WAAW,CAAC,CAC5C,CAAC,EACJ;MACA,OAAO,EAAEE,GAAG,EAAE,CAACtC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE;;IAGnC;IACA;IACA,IAAImB,MAAM,CAACW,KAAK,CAACI,QAAQ,CAACF,MAAM,KAAK,CAAC,IAAIN,YAAY,EAAE;MACtD,OAAO;QACLa,IAAI,EAAEpB,MAAM,CAACW,KAAK,CAACC,QAAQ;QACxBS,GAAG,CAAC,CAAAC,KAAK,KAAIrC,eAAe,CAACgB,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC;QAC5CtB,MAAM,CAACuB,OAAO;OAClB;;IAGH,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACzB,MAAM,CAAC,CAACD,MAAM,CAC/C,CAAA2B,aAAa,KAAIA,aAAa,CAACC,IAAI,KAAK7C,UAAU,CACnD;IAED;IACA;IACA,IAAIiB,MAAM,CAACW,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,KAAK9B,iBAAiB,EAAE;MAClD,OAAO;QACL+C,MAAM,EAAExB,QAAQ;QACbL,MAAM,CAAC,CAAA8B,OAAO,KAAI,CAAC9B,MAAM,CAACW,KAAK,CAACI,QAAQ,CAACG,QAAQ,CAACY,OAAO,CAAC,CAAC;QAC3DT,GAAG,CAAC,CAAAS,OAAO,KAAG;UACb,MAAMH,aAAa,GAAGH,YAAY,CAACO,IAAI,CACrC,CAAAC,WAAW,KAAIA,WAAW,CAAC3C,IAAI,CAACyC,OAAO,KAAKA,OAAO,CACpD;UACD,OAAOtC,iBAAiB,CAACmC,aAAa,CAAC;QACzC,CAAC,CAAC;QACD3B,MAAM,CAACuB,OAAO;OAClB;;IAGH;IACA;IACA,IAAIhB,YAAY,EAAE;MAChB;MACA,MAAM0B,uBAAuB,GAAG,CAAC,GAAGjC,MAAM,CAACW,KAAK,CAACC,QAAQ,CAAC;MAC1D,MAAMsB,gCAAgC,GAAGV,YAAY,CAACxB,MAAM,CAAC,CAAAmC,OAAO,KAClEA,OAAO,CAACC,OAAO,CAACC,IAAI,CAAC,CAAAC,MAAM,KACzBL,uBAAuB,CAACf,QAAQ,CAACoB,MAAM,CAAC,CACzC,CACF;MACD;MACAtC,MAAM,CAACW,KAAK,CAACI,QAAQ,CAACwB,OAAO,CAAC,CAAAT,OAAO,KAAG;QACtC,MAAMU,aAAa,GAAGP,uBAAuB,CAACQ,SAAS,CACrD,CAAAnB,KAAK,UAAAoB,qBAAA,SAAAA,qBAAA,GACHR,gCAAgC;UAC7BH,IAAI,CAAC,CAAAtC,KAAK,KAAIA,KAAK,CAACJ,IAAI,CAACyC,OAAO,KAAKA,OAAO,CAAC,qBADhDY,qBAAA;UAEIN,OAAO,CAAClB,QAAQ,CAACI,KAAK,CAAC,GAC9B;QACD,IAAIkB,aAAa,GAAG,CAAC,CAAC,EAAE;UACtBP,uBAAuB,CAACU,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;;MAEpD,CAAC,CAAC;MACF;MACA,MAAMI,oBAAoB,GAAGvC,QAAQ;MAClCL,MAAM,CAAC,CAAA8B,OAAO,KAAI,CAAC9B,MAAM,CAACW,KAAK,CAACI,QAAQ,CAACG,QAAQ,CAACY,OAAO,CAAC,CAAC;MAC3De,MAAM,CAAC,CAACC,GAAiB,EAAEhB,OAAO,KAAI;QACrC,MAAMiB,+BAA+B,GACnCb,gCAAgC,CAACH,IAAI,CACnC,CAAAI,OAAO,KACLA,OAAO,CAAC9C,IAAI,CAACyC,OAAO,KAAKA,OAAO;QAChCK,OAAO,CAACC,OAAO,CAACpB,KAAK,CACnB,CAAAsB,MAAM,KAAI,CAACL,uBAAuB,CAACf,QAAQ,CAACoB,MAAM,CAAC,CACpD,CACJ;QACH,IAAIS,+BAA+B,EAAE;UACnCD,GAAG,CAACE,IAAI,CAACD,+BAA+B,CAAC;;QAE3C,OAAOD,GAAG;MACZ,CAAC,EAAE,EAAE,CAAC;MACR;MACA,OAAO;QACL1B,IAAI,EAAEa,uBAAuB;QAC1BZ,GAAG,CAAC,CAAAC,KAAK,KAAIrC,eAAe,CAACgB,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC;QAC5CtB,MAAM,CAACuB,OAAO,CAAC;QAClBM,MAAM,EAAEe,oBAAoB,CAACvB,GAAG,CAAC7B,iBAAiB,CAAC,CAACQ,MAAM,CAACuB,OAAO;OACnE;;IAGH,OAAOT,SAAS;EAClB,CAAC,EAAE,CAACT,QAAQ,EAAEL,MAAM,CAACW,KAAK,CAACI,QAAQ,EAAEf,MAAM,CAACW,KAAK,CAACC,QAAQ,EAAEX,MAAM,CAAC,CAAC;AACtE,CAAC,CAACgD,aAAA,CA/GWlD,cAAc,kEACVnB,WAAW,EAGTI,WAAW,sBAAAkE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAtC,SAAA,MAAAoC,cAAA,WAAAA,cAAA,CAAAG,QAAA,CATxBpE,eAAe,mJAAAiE,cAAA,CAAAG,QAAA,CAEf7D,iBAAiB,qJAAA0D,cAAA,CAAAG,QAAA,CAGVtD,cAAc,0KAAAuD,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAxC,SAAA,CAAAwC,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}