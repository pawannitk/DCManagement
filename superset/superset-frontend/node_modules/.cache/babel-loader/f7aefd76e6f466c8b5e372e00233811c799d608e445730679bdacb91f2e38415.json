{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getMetricLabel, getXAxisLabel } from '@superset-ui/core';\nimport { extractExtraMetrics } from './utils';\nexport const pivotOperator = (formData, queryObject) => {\n  const metricLabels = [\n  ...ensureIsArray(queryObject.metrics),\n  ...extractExtraMetrics(formData)].\n  map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(metricLabels.map((metric) => [metric, { operator: 'mean' }])),\n        drop_missing_columns: !(formData != null && formData.show_empty_columns)\n      }\n    };\n  }\n  return undefined;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(pivotOperator, \"pivotOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/pivotOperator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","getColumnLabel","getMetricLabel","getXAxisLabel","extractExtraMetrics","pivotOperator","formData","queryObject","metricLabels","metrics","map","xAxisLabel","columns","series_columns","length","operation","options","index","aggregates","Object","fromEntries","metric","operator","drop_missing_columns","show_empty_columns","undefined","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/pivotOperator.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { extractExtraMetrics } from './utils';\n\nexport const pivotOperator: PostProcessingFactory<PostProcessingPivot> = (\n  formData,\n  queryObject,\n) => {\n  const metricLabels = [\n    ...ensureIsArray(queryObject.metrics),\n    ...extractExtraMetrics(formData),\n  ].map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(\n          metricLabels.map(metric => [metric, { operator: 'mean' }]),\n        ),\n        drop_missing_columns: !formData?.show_empty_columns,\n      },\n    };\n  }\n\n  return undefined;\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,aAAa,EACbC,cAAc,EACdC,cAAc,EAEdC,aAAa,QACR,mBAAmB;AAE1B,SAASC,mBAAmB,QAAQ,SAAS;AAE7C,OAAO,MAAMC,aAAa,GAA+CA,CACvEC,QAAQ,EACRC,WAAW,KACT;EACF,MAAMC,YAAY,GAAG;EACnB,GAAGR,aAAa,CAACO,WAAW,CAACE,OAAO,CAAC;EACrC,GAAGL,mBAAmB,CAACE,QAAQ,CAAC,CACjC;EAACI,GAAG,CAACR,cAAc,CAAC;EACrB,MAAMS,UAAU,GAAGR,aAAa,CAACG,QAAQ,CAAC;EAC1C,MAAMM,OAAO,GAAGL,WAAW,CAACM,cAAc,IAAIN,WAAW,CAACK,OAAO;EAEjE,IAAID,UAAU,IAAIH,YAAY,CAACM,MAAM,EAAE;IACrC,OAAO;MACLC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE;QACPC,KAAK,EAAE,CAACN,UAAU,CAAC;QACnBC,OAAO,EAAEZ,aAAa,CAACY,OAAO,CAAC,CAACF,GAAG,CAACT,cAAc,CAAC;QACnD;QACA;QACAiB,UAAU,EAAEC,MAAM,CAACC,WAAW,CAC5BZ,YAAY,CAACE,GAAG,CAAC,CAAAW,MAAM,KAAI,CAACA,MAAM,EAAE,EAAEC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAC3D;QACDC,oBAAoB,EAAE,EAACjB,QAAQ,YAARA,QAAQ,CAAEkB,kBAAkB;;KAEtD;;EAGH,OAAOC,SAAS;AAClB,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAH,SAAA,MAAAC,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5BWxB,aAAa,wKAAAyB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAL,SAAA,CAAAK,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}