{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport { useGetTimeRangeLabel } from 'src/explore/components/controls/FilterControl/utils';\nimport OptionWrapper from './OptionWrapper';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function DndAdhocFilterOption({ adhocFilter, options, datasource, onFilterEdit, onShiftOptions, onClickClose, partitionColumn, index }) {\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n  return ___EmotionJSX(AdhocFilterPopoverTrigger, { key: index, adhocFilter: adhocFilter, options: options, datasource: datasource, onFilterEdit: onFilterEdit, partitionColumn: partitionColumn },\n  ___EmotionJSX(OptionWrapper, { key: index, index: index, label: actualTimeRange != null ? actualTimeRange : adhocFilter.getDefaultLabel(), tooltipTitle: title != null ? title : adhocFilter.getTooltipTitle(), clickClose: onClickClose, onShiftOptions: onShiftOptions, type: DndItemType.FilterOption, withCaret: true, isExtra: adhocFilter.isExtra, datasourceWarningMessage: adhocFilter.datasourceWarning ?\n    t('This filter might be incompatible with current dataset') :\n    undefined })\n  );\n}__signature__(DndAdhocFilterOption, \"useGetTimeRangeLabel{{ actualTimeRange, title }}\", () => [useGetTimeRangeLabel]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DndAdhocFilterOption, \"DndAdhocFilterOption\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndAdhocFilterOption.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","t","DndItemType","AdhocFilterPopoverTrigger","useGetTimeRangeLabel","OptionWrapper","jsx","___EmotionJSX","DndAdhocFilterOption","adhocFilter","options","datasource","onFilterEdit","onShiftOptions","onClickClose","partitionColumn","index","actualTimeRange","title","key","label","getDefaultLabel","tooltipTitle","getTooltipTitle","clickClose","type","FilterOption","withCaret","isExtra","datasourceWarningMessage","datasourceWarning","undefined","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndAdhocFilterOption.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport AdhocFilterPopoverTrigger from 'src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport { OptionSortType } from 'src/explore/types';\nimport { useGetTimeRangeLabel } from 'src/explore/components/controls/FilterControl/utils';\nimport OptionWrapper from './OptionWrapper';\n\nexport interface DndAdhocFilterOptionProps {\n  adhocFilter: AdhocFilter;\n  onFilterEdit: (changedFilter: AdhocFilter) => void;\n  onClickClose: (index: number) => void;\n  onShiftOptions: (dragIndex: number, hoverIndex: number) => void;\n  options: OptionSortType[];\n  datasource: Record<string, any>;\n  partitionColumn?: string;\n  index: number;\n}\n\nexport default function DndAdhocFilterOption({\n  adhocFilter,\n  options,\n  datasource,\n  onFilterEdit,\n  onShiftOptions,\n  onClickClose,\n  partitionColumn,\n  index,\n}: DndAdhocFilterOptionProps) {\n  const { actualTimeRange, title } = useGetTimeRangeLabel(adhocFilter);\n\n  return (\n    <AdhocFilterPopoverTrigger\n      key={index}\n      adhocFilter={adhocFilter}\n      options={options}\n      datasource={datasource}\n      onFilterEdit={onFilterEdit}\n      partitionColumn={partitionColumn}\n    >\n      <OptionWrapper\n        key={index}\n        index={index}\n        label={actualTimeRange ?? adhocFilter.getDefaultLabel()}\n        tooltipTitle={title ?? adhocFilter.getTooltipTitle()}\n        clickClose={onClickClose}\n        onShiftOptions={onShiftOptions}\n        type={DndItemType.FilterOption}\n        withCaret\n        isExtra={adhocFilter.isExtra}\n        datasourceWarningMessage={\n          adhocFilter.datasourceWarning\n            ? t('This filter might be incompatible with current dataset')\n            : undefined\n        }\n      />\n    </AdhocFilterPopoverTrigger>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,CAAC,QAAQ,mBAAmB;AACrC,SAASC,WAAW,QAAQ,oCAAoC;AAChE,OAAOC,yBAAyB,MAAM,yEAAyE;AAG/G,SAASC,oBAAoB,QAAQ,qDAAqD;AAC1F,OAAOC,aAAa,MAAM,iBAAiB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAa5C,eAAc,SAAUC,oBAAoBA,CAAC,EAC3CC,WAAW,EACXC,OAAO,EACPC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,eAAe,EACfC,KAAK,EACqB;EAC1B,MAAM,EAAEC,eAAe,EAAEC,KAAK,EAAE,GAAGd,oBAAoB,CAACK,WAAW,CAAC;EAEpE,OACEF,aAAA,CAACJ,yBAAyB,IACxBgB,GAAG,EAAEH,KAAM,EACXP,WAAW,EAAEA,WAAY,EACzBC,OAAO,EAAEA,OAAQ,EACjBC,UAAU,EAAEA,UAAW,EACvBC,YAAY,EAAEA,YAAa,EAC3BG,eAAe,EAAEA,eAAgB;EAEjCR,aAAA,CAACF,aAAa,IACZc,GAAG,EAAEH,KAAM,EACXA,KAAK,EAAEA,KAAM,EACbI,KAAK,EAAEH,eAAe,WAAfA,eAAe,GAAIR,WAAW,CAACY,eAAe,EAAG,EACxDC,YAAY,EAAEJ,KAAK,WAALA,KAAK,GAAIT,WAAW,CAACc,eAAe,EAAG,EACrDC,UAAU,EAAEV,YAAa,EACzBD,cAAc,EAAEA,cAAe,EAC/BY,IAAI,EAAEvB,WAAW,CAACwB,YAAa,EAC/BC,SAAS,QACTC,OAAO,EAAEnB,WAAW,CAACmB,OAAQ,EAC7BC,wBAAwB,EACtBpB,WAAW,CAACqB,iBAAiB;IACzB7B,CAAC,CAAC,wDAAwD,CAAC;IAC3D8B,SACL;EAEsB,CAAC;AAEhC,CAACC,aAAA,CAvCuBxB,oBAAoB,6DAUPJ,oBAAoB,sBAAA6B,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAJ,SAAA,MAAAE,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAVjC5B,oBAAoB,4LAAA6B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAN,SAAA,CAAAM,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}