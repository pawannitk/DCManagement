{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isAdhocColumn, isPhysicalColumn } from '@superset-ui/core';\nexport default function displayTimeRelatedControls({ controls }) {\n  if (!(controls != null && controls.x_axis)) {\n    return true;\n  }\n  const xAxis = controls == null ? void 0 : controls.x_axis;\n  const xAxisValue = xAxis == null ? void 0 : xAxis.value;\n  if (isAdhocColumn(xAxisValue)) {\n    return true;\n  }\n  if (isPhysicalColumn(xAxisValue)) {var _find, _xAxis$options;\n    return !!((_find = ((_xAxis$options = xAxis == null ? void 0 : xAxis.options) != null ? _xAxis$options : []).find((col) => (col == null ? void 0 : col.column_name) === xAxisValue)) != null && _find.is_dttm);\n  }\n  return false;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(displayTimeRelatedControls, \"displayTimeRelatedControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/displayTimeRelatedControls.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isAdhocColumn","isPhysicalColumn","displayTimeRelatedControls","controls","x_axis","xAxis","xAxisValue","value","_find","_xAxis$options","options","find","col","column_name","is_dttm","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/utils/displayTimeRelatedControls.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isAdhocColumn, isPhysicalColumn } from '@superset-ui/core';\nimport type { ColumnMeta, ControlPanelsContainerProps } from '../types';\n\nexport default function displayTimeRelatedControls({\n  controls,\n}: ControlPanelsContainerProps) {\n  if (!controls?.x_axis) {\n    return true;\n  }\n\n  const xAxis = controls?.x_axis;\n  const xAxisValue = xAxis?.value;\n  if (isAdhocColumn(xAxisValue)) {\n    return true;\n  }\n  if (isPhysicalColumn(xAxisValue)) {\n    return !!(xAxis?.options ?? []).find(\n      (col: ColumnMeta) => col?.column_name === xAxisValue,\n    )?.is_dttm;\n  }\n  return false;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAa,EAAEC,gBAAgB,QAAQ,mBAAmB;AAGnE,eAAc,SAAUC,0BAA0BA,CAAC,EACjDC,QAAQ,EACoB;EAC5B,IAAI,EAACA,QAAQ,YAARA,QAAQ,CAAEC,MAAM,GAAE;IACrB,OAAO,IAAI;;EAGb,MAAMC,KAAK,GAAGF,QAAQ,oBAARA,QAAQ,CAAEC,MAAM;EAC9B,MAAME,UAAU,GAAGD,KAAK,oBAALA,KAAK,CAAEE,KAAK;EAC/B,IAAIP,aAAa,CAACM,UAAU,CAAC,EAAE;IAC7B,OAAO,IAAI;;EAEb,IAAIL,gBAAgB,CAACK,UAAU,CAAC,EAAE,KAAAE,KAAA,EAAAC,cAAA;IAChC,OAAO,CAAC,GAAAD,KAAA,GAAC,EAAAC,cAAA,GAACJ,KAAK,oBAALA,KAAK,CAAEK,OAAO,YAAAD,cAAA,GAAI,EAAE,EAAEE,IAAI,CAClC,CAACC,GAAe,KAAK,CAAAA,GAAG,oBAAHA,GAAG,CAAEC,WAAW,MAAKP,UAAU,CACrD,aAFQE,KAAA,CAENM,OAAO;;EAEZ,OAAO,KAAK;AACd,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlBuBjB,0BAA0B,8LAAAkB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}