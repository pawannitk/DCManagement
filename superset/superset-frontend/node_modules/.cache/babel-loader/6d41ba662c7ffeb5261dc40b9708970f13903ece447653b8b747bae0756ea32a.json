{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\n/**\n * Importable CSS that enables text truncation on fixed-width block\n * elements.\n */\nexport const truncationCSS = process.env.NODE_ENV === \"production\" ? { name: \"l8l8b8\", styles: \"white-space:nowrap;overflow:hidden;text-overflow:ellipsis\" } : { name: \"u6p4lb-truncationCSS\", styles: \"white-space:nowrap;overflow:hidden;text-overflow:ellipsis;label:truncationCSS;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Bhd2Fuay9Eb2N1bWVudHMvZGNpbS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9ob29rcy91c2VUcnVuY2F0aW9uL3VzZUNTU1RleHRUcnVuY2F0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdCaUMiLCJmaWxlIjoiL2hvbWUvcGF3YW5rL0RvY3VtZW50cy9kY2ltL3N1cGVyc2V0L3N1cGVyc2V0LWZyb250ZW5kL3BhY2thZ2VzL3N1cGVyc2V0LXVpLWNvcmUvc3JjL2hvb2tzL3VzZVRydW5jYXRpb24vdXNlQ1NTVGV4dFRydW5jYXRpb24udHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG4vKipcbiAqIEltcG9ydGFibGUgQ1NTIHRoYXQgZW5hYmxlcyB0ZXh0IHRydW5jYXRpb24gb24gZml4ZWQtd2lkdGggYmxvY2tcbiAqIGVsZW1lbnRzLlxuICovXG5leHBvcnQgY29uc3QgdHJ1bmNhdGlvbkNTUyA9IGNzcyBgXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuYDtcbi8qKlxuICogVGhpcyBob29rIGVuY2Fwc3VsYXRlcyBsb2dpYyBzdXBwb3J0aW5nIHRydW5jYXRpb24gb2YgdGV4dCB2aWFcbiAqIHRoZSBDU1MgXCJ0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcIiBmZWF0dXJlLiAgR2l2ZW4gdGhlIHRleHQgY29udGVudFxuICogdG8gYmUgZGlzcGxheWVkLCB0aGlzIGhvb2sgcmV0dXJucyBhIHJlZiB0byBhdHRhY2ggdG8gdGhlIHRleHRcbiAqIGVsZW1lbnQgYW5kIGEgYm9vbGVhbiBmb3Igd2hldGhlciB0aGF0IGVsZW1lbnQgaXMgY3VycmVudGx5IHRydW5jYXRlZC5cbiAqL1xuY29uc3QgdXNlQ1NTVGV4dFRydW5jYXRpb24gPSAoKSA9PiB7XG4gICAgY29uc3QgW2lzVHJ1bmNhdGVkLCBzZXRJc1RydW5jYXRlZF0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgY29uc3QgW29mZnNldFdpZHRoLCBzZXRPZmZzZXRXaWR0aF0gPSB1c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbc2Nyb2xsV2lkdGgsIHNldFNjcm9sbFdpZHRoXSA9IHVzZVN0YXRlKDApO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRPZmZzZXRXaWR0aChyZWYuY3VycmVudD8ub2Zmc2V0V2lkdGggPz8gMCk7XG4gICAgICAgIHNldFNjcm9sbFdpZHRoKHJlZi5jdXJyZW50Py5zY3JvbGxXaWR0aCA/PyAwKTtcbiAgICB9KTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRJc1RydW5jYXRlZChvZmZzZXRXaWR0aCA8IHNjcm9sbFdpZHRoKTtcbiAgICB9LCBbb2Zmc2V0V2lkdGgsIHNjcm9sbFdpZHRoXSk7XG4gICAgcmV0dXJuIFtyZWYsIGlzVHJ1bmNhdGVkXTtcbn07XG5leHBvcnQgZGVmYXVsdCB1c2VDU1NUZXh0VHJ1bmNhdGlvbjtcbiJdfQ== */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\n\n\n/**\n * This hook encapsulates logic supporting truncation of text via\n * the CSS \"text-overflow: ellipsis;\" feature.  Given the text content\n * to be displayed, this hook returns a ref to attach to the text\n * element and a boolean for whether that element is currently truncated.\n */\nconst useCSSTextTruncation = () => {\n  const [isTruncated, setIsTruncated] = useState(true);\n  const ref = useRef(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [scrollWidth, setScrollWidth] = useState(0);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {var _ref$current$offsetWi, _ref$current, _ref$current$scrollWi, _ref$current2;\n    setOffsetWidth((_ref$current$offsetWi = (_ref$current = ref.current) == null ? void 0 : _ref$current.offsetWidth) != null ? _ref$current$offsetWi : 0);\n    setScrollWidth((_ref$current$scrollWi = (_ref$current2 = ref.current) == null ? void 0 : _ref$current2.scrollWidth) != null ? _ref$current$scrollWi : 0);\n  });\n  useEffect(() => {\n    setIsTruncated(offsetWidth < scrollWidth);\n  }, [offsetWidth, scrollWidth]);\n  return [ref, isTruncated];\n};__signature__(useCSSTextTruncation, \"useState{[isTruncated, setIsTruncated](true)}\\nuseRef{ref}\\nuseState{[offsetWidth, setOffsetWidth](0)}\\nuseState{[scrollWidth, setScrollWidth](0)}\\nuseEffect{}\\nuseEffect{}\");const _default =\nuseCSSTextTruncation;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(truncationCSS, \"truncationCSS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");reactHotLoader.register(useCSSTextTruncation, \"useCSSTextTruncation\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["css","useEffect","useRef","useState","truncationCSS","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","useCSSTextTruncation","isTruncated","setIsTruncated","ref","offsetWidth","setOffsetWidth","scrollWidth","setScrollWidth","_ref$current$offsetWi","_ref$current","_ref$current$scrollWi","_ref$current2","current","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css } from '@emotion/react';\nimport React, { useEffect, useRef, useState } from 'react';\n\n/**\n * Importable CSS that enables text truncation on fixed-width block\n * elements.\n */\nexport const truncationCSS = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n/**\n * This hook encapsulates logic supporting truncation of text via\n * the CSS \"text-overflow: ellipsis;\" feature.  Given the text content\n * to be displayed, this hook returns a ref to attach to the text\n * element and a boolean for whether that element is currently truncated.\n */\nconst useCSSTextTruncation = <T extends HTMLElement>(): [\n  React.RefObject<T>,\n  boolean,\n] => {\n  const [isTruncated, setIsTruncated] = useState(true);\n  const ref = useRef<T>(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [scrollWidth, setScrollWidth] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    setOffsetWidth(ref.current?.offsetWidth ?? 0);\n    setScrollWidth(ref.current?.scrollWidth ?? 0);\n  });\n\n  useEffect(() => {\n    setIsTruncated(offsetWidth < scrollWidth);\n  }, [offsetWidth, scrollWidth]);\n\n  return [ref, isTruncated];\n};\n\nexport default useCSSTextTruncation;\n"],"mappings":"+jBAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAAgBC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D;;;;AAIA,OAAO,MAAMC,aAAa,GAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA,sBAAAC,IAAA,YAAAC,MAAA,oEAAAD,IAAA,0BAAAC,MAAA,oFAAAC,GAAA,6sGAAAC,QAAA,EAAAC,gCAAA,EAIzB;;;;;AAED;;;;;;AAMA,MAAMC,oBAAoB,GAAGA,CAAA,KAGzB;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMa,GAAG,GAAGd,MAAM,CAAI,IAAI,CAAC;EAC3B,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEjD;EACAF,SAAS,CAAC,MAAK,KAAAoB,qBAAA,EAAAC,YAAA,EAAAC,qBAAA,EAAAC,aAAA;IACbN,cAAc,EAAAG,qBAAA,IAAAC,YAAA,GAACN,GAAG,CAACS,OAAO,qBAAXH,YAAA,CAAaL,WAAW,YAAAI,qBAAA,GAAI,CAAC,CAAC;IAC7CD,cAAc,EAAAG,qBAAA,IAAAC,aAAA,GAACR,GAAG,CAACS,OAAO,qBAAXD,aAAA,CAAaL,WAAW,YAAAI,qBAAA,GAAI,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAK;IACbc,cAAc,CAACE,WAAW,GAAGE,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACF,WAAW,EAAEE,WAAW,CAAC,CAAC;EAE9B,OAAO,CAACH,GAAG,EAAEF,WAAW,CAAC;AAC3B,CAAC,CAACY,aAAA,CApBIb,oBAAoB,wLAAAc,QAAA;AAsBXd,oBAAoB,CAAnC,eAAAc,QAAA,CAAoC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlCvB5B,aAAa,uJAAAwB,cAAA,CAAAI,QAAA,CAYpBnB,oBAAoB,8JAAAe,cAAA,CAAAI,QAAA,CAAAL,QAAA,yKAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}