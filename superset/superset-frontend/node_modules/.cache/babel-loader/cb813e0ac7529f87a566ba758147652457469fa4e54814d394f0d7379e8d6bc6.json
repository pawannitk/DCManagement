{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, useTheme } from '@superset-ui/core';\nimport React, { useMemo } from 'react';\nimport Icons from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { Menu } from 'src/components/Menu';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst { SubMenu } = Menu;\nconst StyledDropdownButton = styled(DropdownButton)`\n  button.ant-btn:first-of-type {\n    display: none;\n  }\n  > button.ant-btn:nth-of-type(2) {\n    display: inline-flex;\n    background-color: transparent !important;\n    height: unset;\n    padding: 0;\n    border: none;\n    width: auto !important;\n\n    .anticon {\n      line-height: 0;\n    }\n    &:after {\n      box-shadow: none !important;\n    }\n  }\n`;\nconst StyledMenu = styled(Menu)`\n  ${({ theme }) => `\n    .info {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n      padding: ${theme.gridUnit}px ${theme.gridUnit * 3}px ${theme.gridUnit}px ${theme.gridUnit * 3}px;\n    }\n    .ant-dropdown-menu-item-selected {\n      color: ${theme.colors.grayscale.dark1};\n      background-color: ${theme.colors.primary.light5};\n    }\n  `}\n`;\nconst StyleMenuItem = styled(Menu.Item)`\n  display: flex;\n  justify-content: space-between;\n  > span {\n    width: 100%;\n  }\n  border-bottom: ${({ divider, theme }) => divider ? `1px solid ${theme.colors.grayscale.light3};` : 'none;'};\n`;\nconst StyleSubmenuItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > span {\n    width: 100%;\n  }\n`;const _default =\n(props) => {\n  const theme = useTheme();\n  const { icon, info, menuItems, selectedKeys, onSelect } = props;\n  const menuItem = useMemo(() => (label, key, divider) => ___EmotionJSX(StyleMenuItem, { key: key, divider: divider },\n  ___EmotionJSX(StyleSubmenuItem, null,\n  ___EmotionJSX(\"span\", null, label),\n  (selectedKeys == null ? void 0 : selectedKeys.includes(key)) && ___EmotionJSX(Icons.Check, { iconColor: theme.colors.primary.base, className: \"tick-menu-item\", iconSize: \"xl\" })\n  )\n  ), [selectedKeys, theme.colors.primary.base]);\n  const overlayMenu = useMemo(() => ___EmotionJSX(StyledMenu, { selectedKeys: selectedKeys, onSelect: onSelect, selectable: true },\n  info && ___EmotionJSX(\"div\", { className: \"info\", \"data-test\": \"dropdown-selectable-info\" },\n  info\n  ),\n  menuItems.map((m) => {var _m$children;return (_m$children = m.children) != null && _m$children.length ? ___EmotionJSX(SubMenu, { title: m.label, key: m.key, \"data-test\": \"dropdown-selectable-icon-submenu\" },\n    m.children.map((s) => menuItem(s.label, s.key))\n    ) : menuItem(m.label, m.key, m.divider);})\n  ), [selectedKeys, onSelect, info, menuItems, menuItem]);\n  return ___EmotionJSX(StyledDropdownButton, { overlay: overlayMenu, trigger: ['click'], icon: icon });\n};__signature__(_default, \"useTheme{theme}\\nuseMemo{menuItem}\\nuseMemo{overlayMenu}\", () => [useTheme]);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SubMenu, \"SubMenu\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");reactHotLoader.register(StyledDropdownButton, \"StyledDropdownButton\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");reactHotLoader.register(StyledMenu, \"StyledMenu\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");reactHotLoader.register(StyleMenuItem, \"StyleMenuItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");reactHotLoader.register(StyleSubmenuItem, \"StyleSubmenuItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["styled","useTheme","React","useMemo","Icons","DropdownButton","Menu","jsx","___EmotionJSX","SubMenu","StyledDropdownButton","StyledMenu","theme","typography","sizes","s","colors","grayscale","base","gridUnit","dark1","primary","light5","StyleMenuItem","Item","divider","light3","StyleSubmenuItem","div","_default","props","icon","info","menuItems","selectedKeys","onSelect","menuItem","label","key","includes","Check","iconColor","className","iconSize","overlayMenu","selectable","map","m","_m$children","children","length","title","overlay","trigger","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/DropdownSelectableIcon/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, useTheme } from '@superset-ui/core';\nimport React, { RefObject, useMemo } from 'react';\nimport Icons from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { DropdownButtonProps } from 'antd/lib/dropdown';\nimport { Menu, MenuProps } from 'src/components/Menu';\n\nconst { SubMenu } = Menu;\n\ntype SubMenuItemProps = { key: string; label: string | React.ReactNode };\n\nexport interface DropDownSelectableProps extends Pick<MenuProps, 'onSelect'> {\n  ref?: RefObject<HTMLDivElement>;\n  icon: React.ReactNode;\n  info?: string;\n  menuItems: {\n    key: string;\n    label: string | React.ReactNode;\n    children?: SubMenuItemProps[];\n    divider?: boolean;\n  }[];\n  selectedKeys?: string[];\n}\n\nconst StyledDropdownButton = styled(\n  DropdownButton as React.FC<DropdownButtonProps>,\n)`\n  button.ant-btn:first-of-type {\n    display: none;\n  }\n  > button.ant-btn:nth-of-type(2) {\n    display: inline-flex;\n    background-color: transparent !important;\n    height: unset;\n    padding: 0;\n    border: none;\n    width: auto !important;\n\n    .anticon {\n      line-height: 0;\n    }\n    &:after {\n      box-shadow: none !important;\n    }\n  }\n`;\n\nconst StyledMenu = styled(Menu)`\n  ${({ theme }) => `\n    .info {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n      padding: ${theme.gridUnit}px ${theme.gridUnit * 3}px ${\n        theme.gridUnit\n      }px ${theme.gridUnit * 3}px;\n    }\n    .ant-dropdown-menu-item-selected {\n      color: ${theme.colors.grayscale.dark1};\n      background-color: ${theme.colors.primary.light5};\n    }\n  `}\n`;\n\nconst StyleMenuItem = styled(Menu.Item)<{ divider?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  > span {\n    width: 100%;\n  }\n  border-bottom: ${({ divider, theme }) =>\n    divider ? `1px solid ${theme.colors.grayscale.light3};` : 'none;'};\n`;\n\nconst StyleSubmenuItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > span {\n    width: 100%;\n  }\n`;\n\nexport default (props: DropDownSelectableProps) => {\n  const theme = useTheme();\n  const { icon, info, menuItems, selectedKeys, onSelect } = props;\n  const menuItem = useMemo(\n    () => (label: string | React.ReactNode, key: string, divider?: boolean) => (\n      <StyleMenuItem key={key} divider={divider}>\n        <StyleSubmenuItem>\n          <span>{label}</span>\n          {selectedKeys?.includes(key) && (\n            <Icons.Check\n              iconColor={theme.colors.primary.base}\n              className=\"tick-menu-item\"\n              iconSize=\"xl\"\n            />\n          )}\n        </StyleSubmenuItem>\n      </StyleMenuItem>\n    ),\n    [selectedKeys, theme.colors.primary.base],\n  );\n\n  const overlayMenu = useMemo(\n    () => (\n      <StyledMenu selectedKeys={selectedKeys} onSelect={onSelect} selectable>\n        {info && (\n          <div className=\"info\" data-test=\"dropdown-selectable-info\">\n            {info}\n          </div>\n        )}\n        {menuItems.map(m =>\n          m.children?.length ? (\n            <SubMenu\n              title={m.label}\n              key={m.key}\n              data-test=\"dropdown-selectable-icon-submenu\"\n            >\n              {m.children.map(s => menuItem(s.label, s.key))}\n            </SubMenu>\n          ) : (\n            menuItem(m.label, m.key, m.divider)\n          ),\n        )}\n      </StyledMenu>\n    ),\n    [selectedKeys, onSelect, info, menuItems, menuItem],\n  );\n\n  return (\n    <StyledDropdownButton\n      overlay={overlayMenu}\n      trigger={['click']}\n      icon={icon}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}