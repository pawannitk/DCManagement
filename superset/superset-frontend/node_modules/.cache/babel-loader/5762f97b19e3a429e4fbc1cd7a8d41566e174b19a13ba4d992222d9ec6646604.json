{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  styled,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  getSharedLabelColor,\n  getExtensionsRegistry } from\n'@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport {\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD } from\n'src/logger/LogUtils';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport { AntdButton } from 'src/components/';\nimport { findPermission } from 'src/utils/findPermission';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport HeaderActionsDropdown from 'src/dashboard/components/Header/HeaderActionsDropdown';\nimport PublishedStatus from 'src/dashboard/components/PublishedStatus';\nimport UndoRedoKeyListeners from 'src/dashboard/components/UndoRedoKeyListeners';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport {\n  UNDO_LIMIT,\n  SAVE_TYPE_OVERWRITE,\n  DASHBOARD_POSITION_DATA_LIMIT } from\n'src/dashboard/util/constants';\nimport setPeriodicRunner, {\n  stopPeriodicRender } from\n'src/dashboard/util/setPeriodicRunner';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport DashboardEmbedModal from '../EmbeddedModal';\nimport OverwriteConfirm from '../OverwriteConfirm';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n  user: PropTypes.object, // UserWithPermissionsAndRoles,\n  dashboardInfo: PropTypes.object.isRequired,\n  dashboardTitle: PropTypes.string,\n  dataMask: PropTypes.object.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object,\n  customCss: PropTypes.string,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  setColorScheme: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  isPublished: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fetchFaveStar: PropTypes.func.isRequired,\n  fetchCharts: PropTypes.func.isRequired,\n  saveFaveStar: PropTypes.func.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  updateDashboardTitle: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  updateCss: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  maxUndoHistoryExceeded: PropTypes.bool.isRequired,\n  lastModifiedTime: PropTypes.number.isRequired,\n\n  // redux\n  onRefresh: PropTypes.func.isRequired,\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n  setMaxUndoHistoryExceeded: PropTypes.func.isRequired,\n  maxUndoHistoryToast: PropTypes.func.isRequired,\n  refreshFrequency: PropTypes.number,\n  shouldPersistRefreshFrequency: PropTypes.bool.isRequired,\n  setRefreshFrequency: PropTypes.func.isRequired,\n  dashboardInfoChanged: PropTypes.func.isRequired,\n  dashboardTitleChanged: PropTypes.func.isRequired\n};\n\nconst defaultProps = {\n  colorNamespace: undefined,\n  colorScheme: undefined\n};\n\nconst headerContainerStyle = (theme) => css`\n  border-bottom: 1px solid ${theme.colors.grayscale.light2};\n`;\n\nconst editButtonStyle = (theme) => css`\n  color: ${theme.colors.primary.dark2};\n`;\n\nconst actionButtonsStyle = (theme) => css`\n  display: flex;\n  align-items: center;\n\n  .action-schedule-report {\n    margin-left: ${theme.gridUnit * 2}px;\n  }\n\n  .undoRedo {\n    display: flex;\n    margin-right: ${theme.gridUnit * 2}px;\n  }\n`;\n\nconst StyledUndoRedoButton = styled(AntdButton)`\n  padding: 0;\n  &:hover {\n    background: transparent;\n  }\n`;\n\nconst undoRedoStyle = (theme) => css`\n  color: ${theme.colors.grayscale.light1};\n  &:hover {\n    color: ${theme.colors.grayscale.base};\n  }\n`;\n\nconst undoRedoEmphasized = (theme) => css`\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst undoRedoDisabled = (theme) => css`\n  color: ${theme.colors.grayscale.light2};\n`;\n\nconst saveBtnStyle = (theme) => css`\n  min-width: ${theme.gridUnit * 17}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nconst discardBtnStyle = (theme) => css`\n  min-width: ${theme.gridUnit * 22}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nclass Header extends React.PureComponent {\n  static discardChanges() {\n    const url = new URL(window.location.href);\n\n    url.searchParams.delete('edit');\n    window.location.assign(url);\n  }\n\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    showEmbedModal = () => {\n      this.setState({ showingEmbedModal: true });\n    };this.\n\n    hideEmbedModal = () => {\n      this.setState({ showingEmbedModal: false });\n    };this.\n\n    getMetadataItems = () => {\n      const { dashboardInfo } = this.props;\n      return [\n      {\n        type: MetadataType.LastModified,\n        value: dashboardInfo.changed_on_delta_humanized,\n        modifiedBy:\n        getOwnerName(dashboardInfo.changed_by) || t('Not available')\n      },\n      {\n        type: MetadataType.Owner,\n        createdBy: getOwnerName(dashboardInfo.created_by) || t('Not available'),\n        owners:\n        dashboardInfo.owners.length > 0 ?\n        dashboardInfo.owners.map(getOwnerName) :\n        t('None'),\n        createdOn: dashboardInfo.created_on_delta_humanized\n      }];\n\n    };this.state = { didNotifyMaxUndoHistoryToast: false, emphasizeUndo: false, emphasizeRedo: false, showingPropertiesModal: false, isDropdownVisible: false };this.handleChangeText = this.handleChangeText.bind(this);this.handleCtrlZ = this.handleCtrlZ.bind(this);this.handleCtrlY = this.handleCtrlY.bind(this);this.toggleEditMode = this.toggleEditMode.bind(this);this.forceRefresh = this.forceRefresh.bind(this);this.startPeriodicRender = this.startPeriodicRender.bind(this);this.overwriteDashboard = this.overwriteDashboard.bind(this);this.showPropertiesModal = this.showPropertiesModal.bind(this);this.hidePropertiesModal = this.hidePropertiesModal.bind(this);this.setIsDropdownVisible = this.setIsDropdownVisible.bind(this);}componentDidMount() {const { refreshFrequency } = this.props;this.startPeriodicRender(refreshFrequency * 1000);}componentDidUpdate(prevProps) {if (this.props.refreshFrequency !== prevProps.refreshFrequency) {const { refreshFrequency } = this.props;this.startPeriodicRender(refreshFrequency * 1000);}}UNSAFE_componentWillReceiveProps(nextProps) {if (UNDO_LIMIT - nextProps.undoLength <= 0 && !this.state.didNotifyMaxUndoHistoryToast) {this.setState(() => ({ didNotifyMaxUndoHistoryToast: true }));this.props.maxUndoHistoryToast();}if (nextProps.undoLength > UNDO_LIMIT && !this.props.maxUndoHistoryExceeded) {this.props.setMaxUndoHistoryExceeded();}}componentWillUnmount() {stopPeriodicRender(this.refreshTimer);this.props.setRefreshFrequency(0);clearTimeout(this.ctrlYTimeout);clearTimeout(this.ctrlZTimeout);}handleChangeText(nextText) {const { updateDashboardTitle, onChange } = this.props;if (nextText && this.props.dashboardTitle !== nextText) {updateDashboardTitle(nextText);onChange();}}setIsDropdownVisible(visible) {this.setState({ isDropdownVisible: visible });}handleCtrlY() {this.props.onRedo();this.setState({ emphasizeRedo: true }, () => {if (this.ctrlYTimeout) clearTimeout(this.ctrlYTimeout);this.ctrlYTimeout = setTimeout(() => {this.setState({ emphasizeRedo: false });}, 100);});}handleCtrlZ() {this.props.onUndo();this.setState({ emphasizeUndo: true }, () => {if (this.ctrlZTimeout) clearTimeout(this.ctrlZTimeout);this.ctrlZTimeout = setTimeout(() => {this.setState({ emphasizeUndo: false });}, 100);});}forceRefresh() {if (!this.props.isLoading) {const chartList = Object.keys(this.props.charts);this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, { force: true, interval: 0, chartCount: chartList.length });return this.props.onRefresh(chartList, true, 0, this.props.dashboardInfo.id);}return false;}startPeriodicRender(interval) {let intervalMessage;if (interval) {var _dashboardInfo$common, _dashboardInfo$common2;const { dashboardInfo } = this.props;const periodicRefreshOptions = (_dashboardInfo$common = dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common2 = _dashboardInfo$common.conf) == null ? void 0 : _dashboardInfo$common2.DASHBOARD_AUTO_REFRESH_INTERVALS;const predefinedValue = periodicRefreshOptions.find((option) => Number(option[0]) === interval / 1000);if (predefinedValue) {intervalMessage = t(predefinedValue[1]);} else {intervalMessage = moment.duration(interval, 'millisecond').humanize();}}const periodicRender = () => {const { fetchCharts, logEvent, charts, dashboardInfo } = this.props;const { metadata } = dashboardInfo;const immune = metadata.timed_refresh_immune_slices || [];const affectedCharts = Object.values(charts).filter((chart) => immune.indexOf(chart.id) === -1).map((chart) => chart.id);logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, { interval, chartCount: affectedCharts.length });this.props.addWarningToast(t(`This dashboard is currently auto refreshing; the next auto refresh will be in %s.`, intervalMessage));if (dashboardInfo.common.conf.DASHBOARD_AUTO_REFRESH_MODE === 'fetch') {// force-refresh while auto-refresh in dashboard\n        return fetchCharts(affectedCharts, false, interval * 0.2, dashboardInfo.id);}return fetchCharts(affectedCharts, true, interval * 0.2, dashboardInfo.id);};this.refreshTimer = setPeriodicRunner({ interval, periodicRender, refreshTimer: this.refreshTimer });}toggleEditMode() {this.props.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, { edit_mode: !this.props.editMode });this.props.setEditMode(!this.props.editMode);}overwriteDashboard() {var _dashboardInfo$metada, _dashboardInfo$metada2, _dashboardInfo$metada3;const { dashboardTitle, layout: positions, colorScheme, colorNamespace, customCss, dashboardInfo, refreshFrequency: currentRefreshFrequency, shouldPersistRefreshFrequency, lastModifiedTime, slug } = this.props; // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency ? currentRefreshFrequency : (_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.refresh_frequency;const currentColorScheme = (dashboardInfo == null ? void 0 : (_dashboardInfo$metada2 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada2.color_scheme) || colorScheme;const currentColorNamespace = (dashboardInfo == null ? void 0 : (_dashboardInfo$metada3 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada3.color_namespace) || colorNamespace;const currentSharedLabelColors = Object.fromEntries(getSharedLabelColor().getColorMap());const data = { certified_by: dashboardInfo.certified_by, certification_details: dashboardInfo.certification_details, css: customCss, dashboard_title: dashboardTitle, last_modified_time: lastModifiedTime, owners: dashboardInfo.owners, roles: dashboardInfo.roles, slug, metadata: { ...(dashboardInfo == null ? void 0 : dashboardInfo.metadata), color_namespace: currentColorNamespace, color_scheme: currentColorScheme, positions, refresh_frequency: refreshFrequency, shared_label_colors: currentSharedLabelColors } }; // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(positions).length;const limit = dashboardInfo.common.conf.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT || DASHBOARD_POSITION_DATA_LIMIT;if (positionJSONLength >= limit) {this.props.addDangerToast(t('Your dashboard is too large. Please reduce its size before saving it.'));} else {if (positionJSONLength >= limit * 0.9) {this.props.addWarningToast('Your dashboard is near the size limit.');}this.props.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);}}showPropertiesModal() {this.setState({ showingPropertiesModal: true });}hidePropertiesModal() {this.setState({ showingPropertiesModal: false });}render() {var _dashboardInfo$common3, _dashboardInfo$common4, _dashboardInfo$common5, _dashboardInfo$common6;const {\n      dashboardTitle,\n      layout,\n      expandedSlices,\n      customCss,\n      colorNamespace,\n      dataMask,\n      setColorScheme,\n      setUnsavedChanges,\n      colorScheme,\n      onUndo,\n      onRedo,\n      undoLength,\n      redoLength,\n      onChange,\n      onSave,\n      updateCss,\n      editMode,\n      isPublished,\n      user,\n      dashboardInfo,\n      hasUnsavedChanges,\n      isLoading,\n      refreshFrequency,\n      shouldPersistRefreshFrequency,\n      setRefreshFrequency,\n      lastModifiedTime,\n      logEvent\n    } = this.props;\n\n    const userCanEdit =\n    dashboardInfo.dash_edit_perm && !dashboardInfo.is_managed_externally;\n    const userCanShare = dashboardInfo.dash_share_perm;\n    const userCanSaveAs = dashboardInfo.dash_save_perm;\n    const userCanCurate =\n    isFeatureEnabled(FeatureFlag.EmbeddedSuperset) &&\n    findPermission('can_set_embedded', 'Dashboard', user.roles);\n    const refreshLimit = (_dashboardInfo$common3 =\n    dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common4 = _dashboardInfo$common3.conf) == null ? void 0 : _dashboardInfo$common4.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n    const refreshWarning = (_dashboardInfo$common5 =\n    dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common6 = _dashboardInfo$common5.conf) == null ? void 0 : _dashboardInfo$common6.\n    SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n\n    const handleOnPropertiesChange = (updates) => {\n      const { dashboardInfoChanged, dashboardTitleChanged } = this.props;\n\n      setColorScheme(updates.colorScheme);\n      dashboardInfoChanged({\n        slug: updates.slug,\n        metadata: JSON.parse(updates.jsonMetadata || '{}'),\n        certified_by: updates.certifiedBy,\n        certification_details: updates.certificationDetails,\n        owners: updates.owners,\n        roles: updates.roles\n      });\n      setUnsavedChanges(true);\n      dashboardTitleChanged(updates.title);\n    };\n\n    const NavExtension = extensionsRegistry.get('dashboard.nav.right');\n\n    return (\n      ___EmotionJSX(\"div\", {\n        css: headerContainerStyle,\n        \"data-test\": \"dashboard-header-container\",\n        \"data-test-id\": dashboardInfo.id,\n        className: \"dashboard-header-container\" },\n\n      ___EmotionJSX(PageHeaderWithActions, {\n        editableTitleProps: {\n          title: dashboardTitle,\n          canEdit: userCanEdit && editMode,\n          onSave: this.handleChangeText,\n          placeholder: t('Add the name of the dashboard'),\n          label: t('Dashboard title'),\n          showTooltip: false\n        },\n        certificatiedBadgeProps: {\n          certifiedBy: dashboardInfo.certified_by,\n          details: dashboardInfo.certification_details\n        },\n        faveStarProps: {\n          itemId: dashboardInfo.id,\n          fetchFaveStar: this.props.fetchFaveStar,\n          saveFaveStar: this.props.saveFaveStar,\n          isStarred: this.props.isStarred,\n          showTooltip: true\n        },\n        titlePanelAdditionalItems: [\n        !editMode &&\n        ___EmotionJSX(PublishedStatus, {\n          dashboardId: dashboardInfo.id,\n          isPublished: isPublished,\n          savePublished: this.props.savePublished,\n          canEdit: userCanEdit,\n          canSave: userCanSaveAs,\n          visible: !editMode }\n        ),\n\n        !editMode &&\n        ___EmotionJSX(MetadataBar, {\n          items: this.getMetadataItems(),\n          tooltipPlacement: \"bottom\" }\n        )],\n\n\n        rightPanelAdditionalItems:\n        ___EmotionJSX(\"div\", { className: \"button-container\" },\n        userCanSaveAs &&\n        ___EmotionJSX(\"div\", {\n          className: \"button-container\",\n          \"data-test\": \"dashboard-edit-actions\" },\n\n        editMode &&\n        ___EmotionJSX(\"div\", { css: actionButtonsStyle },\n        ___EmotionJSX(\"div\", { className: \"undoRedo\" },\n        ___EmotionJSX(Tooltip, {\n          id: \"dashboard-undo-tooltip\",\n          title: t('Undo the action') },\n\n        ___EmotionJSX(StyledUndoRedoButton, {\n          type: \"text\",\n          disabled: undoLength < 1,\n          onClick: undoLength && onUndo },\n\n        ___EmotionJSX(Icons.Undo, {\n          css: [\n          undoRedoStyle,\n          this.state.emphasizeUndo && undoRedoEmphasized,\n          undoLength < 1 && undoRedoDisabled, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Header;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n\n          \"data-test\": \"undo-action\",\n          iconSize: \"xl\" }\n        )\n        )\n        ),\n        ___EmotionJSX(Tooltip, {\n          id: \"dashboard-redo-tooltip\",\n          title: t('Redo the action') },\n\n        ___EmotionJSX(StyledUndoRedoButton, {\n          type: \"text\",\n          disabled: redoLength < 1,\n          onClick: redoLength && onRedo },\n\n        ___EmotionJSX(Icons.Redo, {\n          css: [\n          undoRedoStyle,\n          this.state.emphasizeRedo && undoRedoEmphasized,\n          redoLength < 1 && undoRedoDisabled, process.env.NODE_ENV === \"production\" ? \"\" : \";label:Header;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n\n          \"data-test\": \"redo-action\",\n          iconSize: \"xl\" }\n        )\n        )\n        )\n        ),\n        ___EmotionJSX(Button, {\n          css: discardBtnStyle,\n          buttonSize: \"small\",\n          onClick: this.constructor.discardChanges,\n          buttonStyle: \"default\",\n          \"data-test\": \"discard-changes-button\",\n          \"aria-label\": t('Discard') },\n\n        t('Discard')\n        ),\n        ___EmotionJSX(Button, {\n          css: saveBtnStyle,\n          buttonSize: \"small\",\n          disabled: !hasUnsavedChanges,\n          buttonStyle: \"primary\",\n          onClick: this.overwriteDashboard,\n          \"data-test\": \"header-save-button\",\n          \"aria-label\": t('Save') },\n\n        t('Save')\n        )\n        )\n\n        ),\n\n        editMode ?\n        ___EmotionJSX(UndoRedoKeyListeners, {\n          onUndo: this.handleCtrlZ,\n          onRedo: this.handleCtrlY }\n        ) :\n\n        ___EmotionJSX(\"div\", { css: actionButtonsStyle },\n        NavExtension && ___EmotionJSX(NavExtension, null),\n        userCanEdit &&\n        ___EmotionJSX(Button, {\n          buttonStyle: \"secondary\",\n          onClick: this.toggleEditMode,\n          \"data-test\": \"edit-dashboard-button\",\n          className: \"action-button\",\n          css: editButtonStyle,\n          \"aria-label\": t('Edit dashboard') },\n\n        t('Edit dashboard')\n        )\n\n        )\n\n        ),\n\n        menuDropdownProps: {\n          getPopupContainer: (triggerNode) =>\n          triggerNode.closest('.header-with-actions'),\n          visible: this.state.isDropdownVisible,\n          onVisibleChange: this.setIsDropdownVisible\n        },\n        additionalActionsMenu:\n        ___EmotionJSX(HeaderActionsDropdown, {\n          addSuccessToast: this.props.addSuccessToast,\n          addDangerToast: this.props.addDangerToast,\n          dashboardId: dashboardInfo.id,\n          dashboardTitle: dashboardTitle,\n          dashboardInfo: dashboardInfo,\n          dataMask: dataMask,\n          layout: layout,\n          expandedSlices: expandedSlices,\n          customCss: customCss,\n          colorNamespace: colorNamespace,\n          colorScheme: colorScheme,\n          onSave: onSave,\n          onChange: onChange,\n          forceRefreshAllCharts: this.forceRefresh,\n          startPeriodicRender: this.startPeriodicRender,\n          refreshFrequency: refreshFrequency,\n          shouldPersistRefreshFrequency: shouldPersistRefreshFrequency,\n          setRefreshFrequency: setRefreshFrequency,\n          updateCss: updateCss,\n          editMode: editMode,\n          hasUnsavedChanges: hasUnsavedChanges,\n          userCanEdit: userCanEdit,\n          userCanShare: userCanShare,\n          userCanSave: userCanSaveAs,\n          userCanCurate: userCanCurate,\n          isLoading: isLoading,\n          showPropertiesModal: this.showPropertiesModal,\n          manageEmbedded: this.showEmbedModal,\n          refreshLimit: refreshLimit,\n          refreshWarning: refreshWarning,\n          lastModifiedTime: lastModifiedTime,\n          isDropdownVisible: this.state.isDropdownVisible,\n          setIsDropdownVisible: this.setIsDropdownVisible,\n          logEvent: logEvent }\n        ),\n\n        showFaveStar: (user == null ? void 0 : user.userId) && (dashboardInfo == null ? void 0 : dashboardInfo.id),\n        showTitlePanelItems: true }\n      ),\n      this.state.showingPropertiesModal &&\n      ___EmotionJSX(PropertiesModal, {\n        dashboardId: dashboardInfo.id,\n        dashboardInfo: dashboardInfo,\n        dashboardTitle: dashboardTitle,\n        show: this.state.showingPropertiesModal,\n        onHide: this.hidePropertiesModal,\n        colorScheme: this.props.colorScheme,\n        onSubmit: handleOnPropertiesChange,\n        onlyApply: true }\n      ),\n\n\n      ___EmotionJSX(OverwriteConfirm, null),\n\n      userCanCurate &&\n      ___EmotionJSX(DashboardEmbedModal, {\n        show: this.state.showingEmbedModal,\n        onHide: this.hideEmbedModal,\n        dashboardId: dashboardInfo.id }\n      ),\n\n      ___EmotionJSX(Global, {\n        styles: css`\n            .ant-menu-vertical {\n              border-right: none;\n            }\n          ` }\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;const _default =\n\nHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(headerContainerStyle, \"headerContainerStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(editButtonStyle, \"editButtonStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(actionButtonsStyle, \"actionButtonsStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(StyledUndoRedoButton, \"StyledUndoRedoButton\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoStyle, \"undoRedoStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoEmphasized, \"undoRedoEmphasized\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoDisabled, \"undoRedoDisabled\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(saveBtnStyle, \"saveBtnStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(discardBtnStyle, \"discardBtnStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(Header, \"Header\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["moment","React","PropTypes","styled","css","isFeatureEnabled","FeatureFlag","t","getSharedLabelColor","getExtensionsRegistry","Global","LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD","LOG_ACTIONS_FORCE_REFRESH_DASHBOARD","LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD","Icons","Button","AntdButton","findPermission","Tooltip","safeStringify","HeaderActionsDropdown","PublishedStatus","UndoRedoKeyListeners","PropertiesModal","chartPropShape","getOwnerName","UNDO_LIMIT","SAVE_TYPE_OVERWRITE","DASHBOARD_POSITION_DATA_LIMIT","setPeriodicRunner","stopPeriodicRender","PageHeaderWithActions","MetadataBar","MetadataType","DashboardEmbedModal","OverwriteConfirm","jsx","___EmotionJSX","extensionsRegistry","propTypes","addSuccessToast","func","isRequired","addDangerToast","addWarningToast","user","object","dashboardInfo","dashboardTitle","string","dataMask","charts","objectOf","layout","expandedSlices","customCss","colorNamespace","colorScheme","setColorScheme","setUnsavedChanges","isStarred","bool","isPublished","isLoading","onSave","onChange","fetchFaveStar","fetchCharts","saveFaveStar","savePublished","updateDashboardTitle","editMode","setEditMode","showBuilderPane","updateCss","logEvent","hasUnsavedChanges","maxUndoHistoryExceeded","lastModifiedTime","number","onRefresh","onUndo","onRedo","undoLength","redoLength","setMaxUndoHistoryExceeded","maxUndoHistoryToast","refreshFrequency","shouldPersistRefreshFrequency","setRefreshFrequency","dashboardInfoChanged","dashboardTitleChanged","defaultProps","undefined","headerContainerStyle","theme","colors","grayscale","light2","editButtonStyle","primary","dark2","actionButtonsStyle","gridUnit","StyledUndoRedoButton","undoRedoStyle","light1","base","undoRedoEmphasized","undoRedoDisabled","saveBtnStyle","discardBtnStyle","Header","PureComponent","discardChanges","url","URL","window","location","href","searchParams","delete","assign","constructor","props","showEmbedModal","setState","showingEmbedModal","hideEmbedModal","getMetadataItems","type","LastModified","value","changed_on_delta_humanized","modifiedBy","changed_by","Owner","createdBy","created_by","owners","length","map","createdOn","created_on_delta_humanized","state","didNotifyMaxUndoHistoryToast","emphasizeUndo","emphasizeRedo","showingPropertiesModal","isDropdownVisible","handleChangeText","bind","handleCtrlZ","handleCtrlY","toggleEditMode","forceRefresh","startPeriodicRender","overwriteDashboard","showPropertiesModal","hidePropertiesModal","setIsDropdownVisible","componentDidMount","componentDidUpdate","prevProps","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","refreshTimer","clearTimeout","ctrlYTimeout","ctrlZTimeout","nextText","visible","setTimeout","chartList","Object","keys","force","interval","chartCount","id","intervalMessage","_dashboardInfo$common","_dashboardInfo$common2","periodicRefreshOptions","common","conf","DASHBOARD_AUTO_REFRESH_INTERVALS","predefinedValue","find","option","Number","duration","humanize","periodicRender","metadata","immune","timed_refresh_immune_slices","affectedCharts","values","filter","chart","indexOf","DASHBOARD_AUTO_REFRESH_MODE","edit_mode","_dashboardInfo$metada","_dashboardInfo$metada2","_dashboardInfo$metada3","positions","currentRefreshFrequency","slug","refresh_frequency","currentColorScheme","color_scheme","currentColorNamespace","color_namespace","currentSharedLabelColors","fromEntries","getColorMap","data","certified_by","certification_details","dashboard_title","last_modified_time","roles","shared_label_colors","positionJSONLength","limit","SUPERSET_DASHBOARD_POSITION_DATA_LIMIT","render","_dashboardInfo$common3","_dashboardInfo$common4","_dashboardInfo$common5","_dashboardInfo$common6","userCanEdit","dash_edit_perm","is_managed_externally","userCanShare","dash_share_perm","userCanSaveAs","dash_save_perm","userCanCurate","EmbeddedSuperset","refreshLimit","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT","refreshWarning","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE","handleOnPropertiesChange","updates","JSON","parse","jsonMetadata","certifiedBy","certificationDetails","title","NavExtension","get","className","editableTitleProps","canEdit","placeholder","label","showTooltip","certificatiedBadgeProps","details","faveStarProps","itemId","titlePanelAdditionalItems","dashboardId","canSave","items","tooltipPlacement","rightPanelAdditionalItems","disabled","onClick","Undo","process","env","NODE_ENV","iconSize","Redo","buttonSize","buttonStyle","menuDropdownProps","getPopupContainer","triggerNode","closest","onVisibleChange","additionalActionsMenu","forceRefreshAllCharts","userCanSave","manageEmbedded","showFaveStar","userId","showTitlePanelItems","show","onHide","onSubmit","onlyApply","styles","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/Header/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  styled,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  getSharedLabelColor,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport {\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\n} from 'src/logger/LogUtils';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport { AntdButton } from 'src/components/';\nimport { findPermission } from 'src/utils/findPermission';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport HeaderActionsDropdown from 'src/dashboard/components/Header/HeaderActionsDropdown';\nimport PublishedStatus from 'src/dashboard/components/PublishedStatus';\nimport UndoRedoKeyListeners from 'src/dashboard/components/UndoRedoKeyListeners';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport {\n  UNDO_LIMIT,\n  SAVE_TYPE_OVERWRITE,\n  DASHBOARD_POSITION_DATA_LIMIT,\n} from 'src/dashboard/util/constants';\nimport setPeriodicRunner, {\n  stopPeriodicRender,\n} from 'src/dashboard/util/setPeriodicRunner';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport DashboardEmbedModal from '../EmbeddedModal';\nimport OverwriteConfirm from '../OverwriteConfirm';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n  user: PropTypes.object, // UserWithPermissionsAndRoles,\n  dashboardInfo: PropTypes.object.isRequired,\n  dashboardTitle: PropTypes.string,\n  dataMask: PropTypes.object.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object,\n  customCss: PropTypes.string,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  setColorScheme: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  isPublished: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fetchFaveStar: PropTypes.func.isRequired,\n  fetchCharts: PropTypes.func.isRequired,\n  saveFaveStar: PropTypes.func.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  updateDashboardTitle: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  updateCss: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  maxUndoHistoryExceeded: PropTypes.bool.isRequired,\n  lastModifiedTime: PropTypes.number.isRequired,\n\n  // redux\n  onRefresh: PropTypes.func.isRequired,\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n  setMaxUndoHistoryExceeded: PropTypes.func.isRequired,\n  maxUndoHistoryToast: PropTypes.func.isRequired,\n  refreshFrequency: PropTypes.number,\n  shouldPersistRefreshFrequency: PropTypes.bool.isRequired,\n  setRefreshFrequency: PropTypes.func.isRequired,\n  dashboardInfoChanged: PropTypes.func.isRequired,\n  dashboardTitleChanged: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  colorNamespace: undefined,\n  colorScheme: undefined,\n};\n\nconst headerContainerStyle = theme => css`\n  border-bottom: 1px solid ${theme.colors.grayscale.light2};\n`;\n\nconst editButtonStyle = theme => css`\n  color: ${theme.colors.primary.dark2};\n`;\n\nconst actionButtonsStyle = theme => css`\n  display: flex;\n  align-items: center;\n\n  .action-schedule-report {\n    margin-left: ${theme.gridUnit * 2}px;\n  }\n\n  .undoRedo {\n    display: flex;\n    margin-right: ${theme.gridUnit * 2}px;\n  }\n`;\n\nconst StyledUndoRedoButton = styled(AntdButton)`\n  padding: 0;\n  &:hover {\n    background: transparent;\n  }\n`;\n\nconst undoRedoStyle = theme => css`\n  color: ${theme.colors.grayscale.light1};\n  &:hover {\n    color: ${theme.colors.grayscale.base};\n  }\n`;\n\nconst undoRedoEmphasized = theme => css`\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst undoRedoDisabled = theme => css`\n  color: ${theme.colors.grayscale.light2};\n`;\n\nconst saveBtnStyle = theme => css`\n  min-width: ${theme.gridUnit * 17}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nconst discardBtnStyle = theme => css`\n  min-width: ${theme.gridUnit * 22}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nclass Header extends React.PureComponent {\n  static discardChanges() {\n    const url = new URL(window.location.href);\n\n    url.searchParams.delete('edit');\n    window.location.assign(url);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      didNotifyMaxUndoHistoryToast: false,\n      emphasizeUndo: false,\n      emphasizeRedo: false,\n      showingPropertiesModal: false,\n      isDropdownVisible: false,\n    };\n\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleCtrlZ = this.handleCtrlZ.bind(this);\n    this.handleCtrlY = this.handleCtrlY.bind(this);\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.startPeriodicRender = this.startPeriodicRender.bind(this);\n    this.overwriteDashboard = this.overwriteDashboard.bind(this);\n    this.showPropertiesModal = this.showPropertiesModal.bind(this);\n    this.hidePropertiesModal = this.hidePropertiesModal.bind(this);\n    this.setIsDropdownVisible = this.setIsDropdownVisible.bind(this);\n  }\n\n  componentDidMount() {\n    const { refreshFrequency } = this.props;\n    this.startPeriodicRender(refreshFrequency * 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.refreshFrequency !== prevProps.refreshFrequency) {\n      const { refreshFrequency } = this.props;\n      this.startPeriodicRender(refreshFrequency * 1000);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      UNDO_LIMIT - nextProps.undoLength <= 0 &&\n      !this.state.didNotifyMaxUndoHistoryToast\n    ) {\n      this.setState(() => ({ didNotifyMaxUndoHistoryToast: true }));\n      this.props.maxUndoHistoryToast();\n    }\n    if (\n      nextProps.undoLength > UNDO_LIMIT &&\n      !this.props.maxUndoHistoryExceeded\n    ) {\n      this.props.setMaxUndoHistoryExceeded();\n    }\n  }\n\n  componentWillUnmount() {\n    stopPeriodicRender(this.refreshTimer);\n    this.props.setRefreshFrequency(0);\n    clearTimeout(this.ctrlYTimeout);\n    clearTimeout(this.ctrlZTimeout);\n  }\n\n  handleChangeText(nextText) {\n    const { updateDashboardTitle, onChange } = this.props;\n    if (nextText && this.props.dashboardTitle !== nextText) {\n      updateDashboardTitle(nextText);\n      onChange();\n    }\n  }\n\n  setIsDropdownVisible(visible) {\n    this.setState({\n      isDropdownVisible: visible,\n    });\n  }\n\n  handleCtrlY() {\n    this.props.onRedo();\n    this.setState({ emphasizeRedo: true }, () => {\n      if (this.ctrlYTimeout) clearTimeout(this.ctrlYTimeout);\n      this.ctrlYTimeout = setTimeout(() => {\n        this.setState({ emphasizeRedo: false });\n      }, 100);\n    });\n  }\n\n  handleCtrlZ() {\n    this.props.onUndo();\n    this.setState({ emphasizeUndo: true }, () => {\n      if (this.ctrlZTimeout) clearTimeout(this.ctrlZTimeout);\n      this.ctrlZTimeout = setTimeout(() => {\n        this.setState({ emphasizeUndo: false });\n      }, 100);\n    });\n  }\n\n  forceRefresh() {\n    if (!this.props.isLoading) {\n      const chartList = Object.keys(this.props.charts);\n      this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartList.length,\n      });\n      return this.props.onRefresh(\n        chartList,\n        true,\n        0,\n        this.props.dashboardInfo.id,\n      );\n    }\n    return false;\n  }\n\n  startPeriodicRender(interval) {\n    let intervalMessage;\n\n    if (interval) {\n      const { dashboardInfo } = this.props;\n      const periodicRefreshOptions =\n        dashboardInfo.common?.conf?.DASHBOARD_AUTO_REFRESH_INTERVALS;\n      const predefinedValue = periodicRefreshOptions.find(\n        option => Number(option[0]) === interval / 1000,\n      );\n\n      if (predefinedValue) {\n        intervalMessage = t(predefinedValue[1]);\n      } else {\n        intervalMessage = moment.duration(interval, 'millisecond').humanize();\n      }\n    }\n\n    const periodicRender = () => {\n      const { fetchCharts, logEvent, charts, dashboardInfo } = this.props;\n      const { metadata } = dashboardInfo;\n      const immune = metadata.timed_refresh_immune_slices || [];\n      const affectedCharts = Object.values(charts)\n        .filter(chart => immune.indexOf(chart.id) === -1)\n        .map(chart => chart.id);\n\n      logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n        interval,\n        chartCount: affectedCharts.length,\n      });\n      this.props.addWarningToast(\n        t(\n          `This dashboard is currently auto refreshing; the next auto refresh will be in %s.`,\n          intervalMessage,\n        ),\n      );\n      if (dashboardInfo.common.conf.DASHBOARD_AUTO_REFRESH_MODE === 'fetch') {\n        // force-refresh while auto-refresh in dashboard\n        return fetchCharts(\n          affectedCharts,\n          false,\n          interval * 0.2,\n          dashboardInfo.id,\n        );\n      }\n      return fetchCharts(\n        affectedCharts,\n        true,\n        interval * 0.2,\n        dashboardInfo.id,\n      );\n    };\n\n    this.refreshTimer = setPeriodicRunner({\n      interval,\n      periodicRender,\n      refreshTimer: this.refreshTimer,\n    });\n  }\n\n  toggleEditMode() {\n    this.props.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !this.props.editMode,\n    });\n    this.props.setEditMode(!this.props.editMode);\n  }\n\n  overwriteDashboard() {\n    const {\n      dashboardTitle,\n      layout: positions,\n      colorScheme,\n      colorNamespace,\n      customCss,\n      dashboardInfo,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency,\n      lastModifiedTime,\n      slug,\n    } = this.props;\n\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency\n      ? currentRefreshFrequency\n      : dashboardInfo.metadata?.refresh_frequency;\n\n    const currentColorScheme =\n      dashboardInfo?.metadata?.color_scheme || colorScheme;\n    const currentColorNamespace =\n      dashboardInfo?.metadata?.color_namespace || colorNamespace;\n    const currentSharedLabelColors = Object.fromEntries(\n      getSharedLabelColor().getColorMap(),\n    );\n\n    const data = {\n      certified_by: dashboardInfo.certified_by,\n      certification_details: dashboardInfo.certification_details,\n      css: customCss,\n      dashboard_title: dashboardTitle,\n      last_modified_time: lastModifiedTime,\n      owners: dashboardInfo.owners,\n      roles: dashboardInfo.roles,\n      slug,\n      metadata: {\n        ...dashboardInfo?.metadata,\n        color_namespace: currentColorNamespace,\n        color_scheme: currentColorScheme,\n        positions,\n        refresh_frequency: refreshFrequency,\n        shared_label_colors: currentSharedLabelColors,\n      },\n    };\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(positions).length;\n    const limit =\n      dashboardInfo.common.conf.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT ||\n      DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      this.props.addDangerToast(\n        t(\n          'Your dashboard is too large. Please reduce its size before saving it.',\n        ),\n      );\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        this.props.addWarningToast('Your dashboard is near the size limit.');\n      }\n\n      this.props.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }\n\n  showPropertiesModal() {\n    this.setState({ showingPropertiesModal: true });\n  }\n\n  hidePropertiesModal() {\n    this.setState({ showingPropertiesModal: false });\n  }\n\n  showEmbedModal = () => {\n    this.setState({ showingEmbedModal: true });\n  };\n\n  hideEmbedModal = () => {\n    this.setState({ showingEmbedModal: false });\n  };\n\n  getMetadataItems = () => {\n    const { dashboardInfo } = this.props;\n    return [\n      {\n        type: MetadataType.LastModified,\n        value: dashboardInfo.changed_on_delta_humanized,\n        modifiedBy:\n          getOwnerName(dashboardInfo.changed_by) || t('Not available'),\n      },\n      {\n        type: MetadataType.Owner,\n        createdBy: getOwnerName(dashboardInfo.created_by) || t('Not available'),\n        owners:\n          dashboardInfo.owners.length > 0\n            ? dashboardInfo.owners.map(getOwnerName)\n            : t('None'),\n        createdOn: dashboardInfo.created_on_delta_humanized,\n      },\n    ];\n  };\n\n  render() {\n    const {\n      dashboardTitle,\n      layout,\n      expandedSlices,\n      customCss,\n      colorNamespace,\n      dataMask,\n      setColorScheme,\n      setUnsavedChanges,\n      colorScheme,\n      onUndo,\n      onRedo,\n      undoLength,\n      redoLength,\n      onChange,\n      onSave,\n      updateCss,\n      editMode,\n      isPublished,\n      user,\n      dashboardInfo,\n      hasUnsavedChanges,\n      isLoading,\n      refreshFrequency,\n      shouldPersistRefreshFrequency,\n      setRefreshFrequency,\n      lastModifiedTime,\n      logEvent,\n    } = this.props;\n\n    const userCanEdit =\n      dashboardInfo.dash_edit_perm && !dashboardInfo.is_managed_externally;\n    const userCanShare = dashboardInfo.dash_share_perm;\n    const userCanSaveAs = dashboardInfo.dash_save_perm;\n    const userCanCurate =\n      isFeatureEnabled(FeatureFlag.EmbeddedSuperset) &&\n      findPermission('can_set_embedded', 'Dashboard', user.roles);\n    const refreshLimit =\n      dashboardInfo.common?.conf?.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n    const refreshWarning =\n      dashboardInfo.common?.conf\n        ?.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n\n    const handleOnPropertiesChange = updates => {\n      const { dashboardInfoChanged, dashboardTitleChanged } = this.props;\n\n      setColorScheme(updates.colorScheme);\n      dashboardInfoChanged({\n        slug: updates.slug,\n        metadata: JSON.parse(updates.jsonMetadata || '{}'),\n        certified_by: updates.certifiedBy,\n        certification_details: updates.certificationDetails,\n        owners: updates.owners,\n        roles: updates.roles,\n      });\n      setUnsavedChanges(true);\n      dashboardTitleChanged(updates.title);\n    };\n\n    const NavExtension = extensionsRegistry.get('dashboard.nav.right');\n\n    return (\n      <div\n        css={headerContainerStyle}\n        data-test=\"dashboard-header-container\"\n        data-test-id={dashboardInfo.id}\n        className=\"dashboard-header-container\"\n      >\n        <PageHeaderWithActions\n          editableTitleProps={{\n            title: dashboardTitle,\n            canEdit: userCanEdit && editMode,\n            onSave: this.handleChangeText,\n            placeholder: t('Add the name of the dashboard'),\n            label: t('Dashboard title'),\n            showTooltip: false,\n          }}\n          certificatiedBadgeProps={{\n            certifiedBy: dashboardInfo.certified_by,\n            details: dashboardInfo.certification_details,\n          }}\n          faveStarProps={{\n            itemId: dashboardInfo.id,\n            fetchFaveStar: this.props.fetchFaveStar,\n            saveFaveStar: this.props.saveFaveStar,\n            isStarred: this.props.isStarred,\n            showTooltip: true,\n          }}\n          titlePanelAdditionalItems={[\n            !editMode && (\n              <PublishedStatus\n                dashboardId={dashboardInfo.id}\n                isPublished={isPublished}\n                savePublished={this.props.savePublished}\n                canEdit={userCanEdit}\n                canSave={userCanSaveAs}\n                visible={!editMode}\n              />\n            ),\n            !editMode && (\n              <MetadataBar\n                items={this.getMetadataItems()}\n                tooltipPlacement=\"bottom\"\n              />\n            ),\n          ]}\n          rightPanelAdditionalItems={\n            <div className=\"button-container\">\n              {userCanSaveAs && (\n                <div\n                  className=\"button-container\"\n                  data-test=\"dashboard-edit-actions\"\n                >\n                  {editMode && (\n                    <div css={actionButtonsStyle}>\n                      <div className=\"undoRedo\">\n                        <Tooltip\n                          id=\"dashboard-undo-tooltip\"\n                          title={t('Undo the action')}\n                        >\n                          <StyledUndoRedoButton\n                            type=\"text\"\n                            disabled={undoLength < 1}\n                            onClick={undoLength && onUndo}\n                          >\n                            <Icons.Undo\n                              css={[\n                                undoRedoStyle,\n                                this.state.emphasizeUndo && undoRedoEmphasized,\n                                undoLength < 1 && undoRedoDisabled,\n                              ]}\n                              data-test=\"undo-action\"\n                              iconSize=\"xl\"\n                            />\n                          </StyledUndoRedoButton>\n                        </Tooltip>\n                        <Tooltip\n                          id=\"dashboard-redo-tooltip\"\n                          title={t('Redo the action')}\n                        >\n                          <StyledUndoRedoButton\n                            type=\"text\"\n                            disabled={redoLength < 1}\n                            onClick={redoLength && onRedo}\n                          >\n                            <Icons.Redo\n                              css={[\n                                undoRedoStyle,\n                                this.state.emphasizeRedo && undoRedoEmphasized,\n                                redoLength < 1 && undoRedoDisabled,\n                              ]}\n                              data-test=\"redo-action\"\n                              iconSize=\"xl\"\n                            />\n                          </StyledUndoRedoButton>\n                        </Tooltip>\n                      </div>\n                      <Button\n                        css={discardBtnStyle}\n                        buttonSize=\"small\"\n                        onClick={this.constructor.discardChanges}\n                        buttonStyle=\"default\"\n                        data-test=\"discard-changes-button\"\n                        aria-label={t('Discard')}\n                      >\n                        {t('Discard')}\n                      </Button>\n                      <Button\n                        css={saveBtnStyle}\n                        buttonSize=\"small\"\n                        disabled={!hasUnsavedChanges}\n                        buttonStyle=\"primary\"\n                        onClick={this.overwriteDashboard}\n                        data-test=\"header-save-button\"\n                        aria-label={t('Save')}\n                      >\n                        {t('Save')}\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              )}\n              {editMode ? (\n                <UndoRedoKeyListeners\n                  onUndo={this.handleCtrlZ}\n                  onRedo={this.handleCtrlY}\n                />\n              ) : (\n                <div css={actionButtonsStyle}>\n                  {NavExtension && <NavExtension />}\n                  {userCanEdit && (\n                    <Button\n                      buttonStyle=\"secondary\"\n                      onClick={this.toggleEditMode}\n                      data-test=\"edit-dashboard-button\"\n                      className=\"action-button\"\n                      css={editButtonStyle}\n                      aria-label={t('Edit dashboard')}\n                    >\n                      {t('Edit dashboard')}\n                    </Button>\n                  )}\n                </div>\n              )}\n            </div>\n          }\n          menuDropdownProps={{\n            getPopupContainer: triggerNode =>\n              triggerNode.closest('.header-with-actions'),\n            visible: this.state.isDropdownVisible,\n            onVisibleChange: this.setIsDropdownVisible,\n          }}\n          additionalActionsMenu={\n            <HeaderActionsDropdown\n              addSuccessToast={this.props.addSuccessToast}\n              addDangerToast={this.props.addDangerToast}\n              dashboardId={dashboardInfo.id}\n              dashboardTitle={dashboardTitle}\n              dashboardInfo={dashboardInfo}\n              dataMask={dataMask}\n              layout={layout}\n              expandedSlices={expandedSlices}\n              customCss={customCss}\n              colorNamespace={colorNamespace}\n              colorScheme={colorScheme}\n              onSave={onSave}\n              onChange={onChange}\n              forceRefreshAllCharts={this.forceRefresh}\n              startPeriodicRender={this.startPeriodicRender}\n              refreshFrequency={refreshFrequency}\n              shouldPersistRefreshFrequency={shouldPersistRefreshFrequency}\n              setRefreshFrequency={setRefreshFrequency}\n              updateCss={updateCss}\n              editMode={editMode}\n              hasUnsavedChanges={hasUnsavedChanges}\n              userCanEdit={userCanEdit}\n              userCanShare={userCanShare}\n              userCanSave={userCanSaveAs}\n              userCanCurate={userCanCurate}\n              isLoading={isLoading}\n              showPropertiesModal={this.showPropertiesModal}\n              manageEmbedded={this.showEmbedModal}\n              refreshLimit={refreshLimit}\n              refreshWarning={refreshWarning}\n              lastModifiedTime={lastModifiedTime}\n              isDropdownVisible={this.state.isDropdownVisible}\n              setIsDropdownVisible={this.setIsDropdownVisible}\n              logEvent={logEvent}\n            />\n          }\n          showFaveStar={user?.userId && dashboardInfo?.id}\n          showTitlePanelItems\n        />\n        {this.state.showingPropertiesModal && (\n          <PropertiesModal\n            dashboardId={dashboardInfo.id}\n            dashboardInfo={dashboardInfo}\n            dashboardTitle={dashboardTitle}\n            show={this.state.showingPropertiesModal}\n            onHide={this.hidePropertiesModal}\n            colorScheme={this.props.colorScheme}\n            onSubmit={handleOnPropertiesChange}\n            onlyApply\n          />\n        )}\n\n        <OverwriteConfirm />\n\n        {userCanCurate && (\n          <DashboardEmbedModal\n            show={this.state.showingEmbedModal}\n            onHide={this.hideEmbedModal}\n            dashboardId={dashboardInfo.id}\n          />\n        )}\n        <Global\n          styles={css`\n            .ant-menu-vertical {\n              border-right: none;\n            }\n          `}\n        />\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}