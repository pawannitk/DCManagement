{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label from 'src/components/Label';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  dashboardId: PropTypes.number,\n  isPublished: PropTypes.bool.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool,\n  canSave: PropTypes.bool\n};\n\nconst draftButtonTooltip = t(\n  'This dashboard is not published, it will not show up in the list of dashboards. ' +\n  'Click here to publish this dashboard.'\n);\n\nconst draftDivTooltip = t(\n  'This dashboard is not published which means it will not show up in the list of dashboards.' +\n  ' Favorite it to see it there or access it by using the URL directly.'\n);\n\nconst publishedTooltip = t(\n  'This dashboard is published. Click to make it a draft.'\n);\n\nexport default class PublishedStatus extends React.Component {\n  componentDidMount() {\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n\n  render() {\n    // Show everybody the draft badge\n    if (!this.props.isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (this.props.canEdit && this.props.canSave) {\n        return (\n          ___EmotionJSX(Tooltip, {\n            id: \"unpublished-dashboard-tooltip\",\n            placement: \"bottom\",\n            title: draftButtonTooltip },\n\n          ___EmotionJSX(Label, {\n            onClick: () => {\n              this.togglePublished();\n            } },\n\n          t('Draft')\n          )\n          ));\n\n      }\n      return (\n        ___EmotionJSX(Tooltip, {\n          id: \"unpublished-dashboard-tooltip\",\n          placement: \"bottom\",\n          title: draftDivTooltip },\n\n        ___EmotionJSX(Label, null, t('Draft'))\n        ));\n\n    }\n\n    // Show the published badge for the owner of the dashboard to toggle\n    if (this.props.canEdit && this.props.canSave) {\n      return (\n        ___EmotionJSX(Tooltip, {\n          id: \"published-dashboard-tooltip\",\n          placement: \"bottom\",\n          title: publishedTooltip },\n\n        ___EmotionJSX(Label, {\n          onClick: () => {\n            this.togglePublished();\n          } },\n\n        t('Published')\n        )\n        ));\n\n    }\n\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nPublishedStatus.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx\");reactHotLoader.register(draftButtonTooltip, \"draftButtonTooltip\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx\");reactHotLoader.register(draftDivTooltip, \"draftDivTooltip\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx\");reactHotLoader.register(publishedTooltip, \"publishedTooltip\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx\");reactHotLoader.register(PublishedStatus, \"PublishedStatus\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","t","Tooltip","Label","jsx","___EmotionJSX","propTypes","dashboardId","number","isPublished","bool","isRequired","savePublished","func","canEdit","canSave","draftButtonTooltip","draftDivTooltip","publishedTooltip","PublishedStatus","Component","componentDidMount","togglePublished","bind","props","render","id","placement","title","onClick","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Label from 'src/components/Label';\n\nconst propTypes = {\n  dashboardId: PropTypes.number,\n  isPublished: PropTypes.bool.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  canEdit: PropTypes.bool,\n  canSave: PropTypes.bool,\n};\n\nconst draftButtonTooltip = t(\n  'This dashboard is not published, it will not show up in the list of dashboards. ' +\n    'Click here to publish this dashboard.',\n);\n\nconst draftDivTooltip = t(\n  'This dashboard is not published which means it will not show up in the list of dashboards.' +\n    ' Favorite it to see it there or access it by using the URL directly.',\n);\n\nconst publishedTooltip = t(\n  'This dashboard is published. Click to make it a draft.',\n);\n\nexport default class PublishedStatus extends React.Component {\n  componentDidMount() {\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n\n  render() {\n    // Show everybody the draft badge\n    if (!this.props.isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (this.props.canEdit && this.props.canSave) {\n        return (\n          <Tooltip\n            id=\"unpublished-dashboard-tooltip\"\n            placement=\"bottom\"\n            title={draftButtonTooltip}\n          >\n            <Label\n              onClick={() => {\n                this.togglePublished();\n              }}\n            >\n              {t('Draft')}\n            </Label>\n          </Tooltip>\n        );\n      }\n      return (\n        <Tooltip\n          id=\"unpublished-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={draftDivTooltip}\n        >\n          <Label>{t('Draft')}</Label>\n        </Tooltip>\n      );\n    }\n\n    // Show the published badge for the owner of the dashboard to toggle\n    if (this.props.canEdit && this.props.canSave) {\n      return (\n        <Tooltip\n          id=\"published-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={publishedTooltip}\n        >\n          <Label\n            onClick={() => {\n              this.togglePublished();\n            }}\n          >\n            {t('Published')}\n          </Label>\n        </Tooltip>\n      );\n    }\n\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  }\n}\n\nPublishedStatus.propTypes = propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}