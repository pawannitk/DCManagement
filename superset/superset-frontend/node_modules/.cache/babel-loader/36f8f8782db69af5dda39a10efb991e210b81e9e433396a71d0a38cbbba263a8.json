{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan' // timezones are deduped by the first alphabetical value\n};\nconst MIN_SELECT_WIDTH = '400px';\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n  'Mountain Standard Time - Phoenix',\n  'Mountain Standard Time - Phoenix'],\n\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time']\n};\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\nconst getOffsetKey = (name) => JANUARY.tz(name).utcOffset().toString() +\nJULY.tz(name).utcOffset().toString();\nconst getTimezoneName = (name) => {var _offsetsToName$offset, _offsetsToName$offset2;\n  const offsets = getOffsetKey(name);\n  return (currentDate.tz(name).isDST() ? (_offsetsToName$offset =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset[1] : (_offsetsToName$offset2 =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset2[0]) || name;\n};\nconst ALL_ZONES = moment.tz.\ncountries().\nmap((country) => moment.tz.zonesForCountry(country, true)).\nflat();\nconst TIMEZONES = [];\nALL_ZONES.forEach((zone) => {\n  if (!TIMEZONES.find((option) => getOffsetKey(option.name) === getOffsetKey(zone.name))) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\nconst TIMEZONE_OPTIONS = TIMEZONES.map((zone) => ({\n  label: `GMT ${moment.\n  tz(currentDate, zone.name).\n  format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name\n}));\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (a, b) => moment.tz(currentDate, a.timezoneName).utcOffset() -\nmoment.tz(currentDate, b.timezoneName).utcOffset();\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\nconst matchTimezoneToOptions = (timezone) => {var _TIMEZONE_OPTIONS$fin;return ((_TIMEZONE_OPTIONS$fin = TIMEZONE_OPTIONS.find((option) => option.offsets === getOffsetKey(timezone))) == null ? void 0 : _TIMEZONE_OPTIONS$fin.\n  value) || DEFAULT_TIMEZONE.value;};\nexport default function TimezoneSelector({ onTimezoneChange, timezone, minWidth = MIN_SELECT_WIDTH // smallest size for current values\n}) {\n  const validTimezone = useMemo(() => matchTimezoneToOptions(timezone || moment.tz.guess()), [timezone]);\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n  return ___EmotionJSX(Select, { ariaLabel: t('Timezone selector'), css: /*#__PURE__*/_css({ minWidth }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:TimezoneSelector;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Bhd2Fuay9Eb2N1bWVudHMvZGNpbS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRnVEIiwiZmlsZSI6Ii9ob21lL3Bhd2Fuay9Eb2N1bWVudHMvZGNpbS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudC10aW1lem9uZSc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0IH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xuY29uc3QgREVGQVVMVF9USU1FWk9ORSA9IHtcbiAgICBuYW1lOiAnR01UIFN0YW5kYXJkIFRpbWUnLFxuICAgIHZhbHVlOiAnQWZyaWNhL0FiaWRqYW4nLCAvLyB0aW1lem9uZXMgYXJlIGRlZHVwZWQgYnkgdGhlIGZpcnN0IGFscGhhYmV0aWNhbCB2YWx1ZVxufTtcbmNvbnN0IE1JTl9TRUxFQ1RfV0lEVEggPSAnNDAwcHgnO1xuY29uc3Qgb2Zmc2V0c1RvTmFtZSA9IHtcbiAgICAnLTMwMC0yNDAnOiBbJ0Vhc3Rlcm4gU3RhbmRhcmQgVGltZScsICdFYXN0ZXJuIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTM2MC0zMDAnOiBbJ0NlbnRyYWwgU3RhbmRhcmQgVGltZScsICdDZW50cmFsIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTQyMC0zNjAnOiBbJ01vdW50YWluIFN0YW5kYXJkIFRpbWUnLCAnTW91bnRhaW4gRGF5bGlnaHQgVGltZSddLFxuICAgICctNDIwLTQyMCc6IFtcbiAgICAgICAgJ01vdW50YWluIFN0YW5kYXJkIFRpbWUgLSBQaG9lbml4JyxcbiAgICAgICAgJ01vdW50YWluIFN0YW5kYXJkIFRpbWUgLSBQaG9lbml4JyxcbiAgICBdLFxuICAgICctNDgwLTQyMCc6IFsnUGFjaWZpYyBTdGFuZGFyZCBUaW1lJywgJ1BhY2lmaWMgRGF5bGlnaHQgVGltZSddLFxuICAgICctNTQwLTQ4MCc6IFsnQWxhc2thIFN0YW5kYXJkIFRpbWUnLCAnQWxhc2thIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTYwMC02MDAnOiBbJ0hhd2FpaSBTdGFuZGFyZCBUaW1lJywgJ0hhd2FpaSBEYXlsaWdodCBUaW1lJ10sXG4gICAgJzYwMTIwJzogWydDZW50cmFsIEV1cm9wZWFuIFRpbWUnLCAnQ2VudHJhbCBFdXJvcGVhbiBEYXlsaWdodCBUaW1lJ10sXG4gICAgJzAwJzogW0RFRkFVTFRfVElNRVpPTkUubmFtZSwgREVGQVVMVF9USU1FWk9ORS5uYW1lXSxcbiAgICAnMDYwJzogWydHTVQgU3RhbmRhcmQgVGltZSAtIExvbmRvbicsICdCcml0aXNoIFN1bW1lciBUaW1lJ10sXG59O1xuY29uc3QgY3VycmVudERhdGUgPSBtb21lbnQoKTtcbmNvbnN0IEpBTlVBUlkgPSBtb21lbnQoWzIwMjEsIDFdKTtcbmNvbnN0IEpVTFkgPSBtb21lbnQoWzIwMjEsIDddKTtcbmNvbnN0IGdldE9mZnNldEtleSA9IChuYW1lKSA9PiBKQU5VQVJZLnR6KG5hbWUpLnV0Y09mZnNldCgpLnRvU3RyaW5nKCkgK1xuICAgIEpVTFkudHoobmFtZSkudXRjT2Zmc2V0KCkudG9TdHJpbmcoKTtcbmNvbnN0IGdldFRpbWV6b25lTmFtZSA9IChuYW1lKSA9PiB7XG4gICAgY29uc3Qgb2Zmc2V0cyA9IGdldE9mZnNldEtleShuYW1lKTtcbiAgICByZXR1cm4gKChjdXJyZW50RGF0ZS50eihuYW1lKS5pc0RTVCgpXG4gICAgICAgID8gb2Zmc2V0c1RvTmFtZVtvZmZzZXRzXT8uWzFdXG4gICAgICAgIDogb2Zmc2V0c1RvTmFtZVtvZmZzZXRzXT8uWzBdKSB8fCBuYW1lKTtcbn07XG5jb25zdCBBTExfWk9ORVMgPSBtb21lbnQudHpcbiAgICAuY291bnRyaWVzKClcbiAgICAubWFwKGNvdW50cnkgPT4gbW9tZW50LnR6LnpvbmVzRm9yQ291bnRyeShjb3VudHJ5LCB0cnVlKSlcbiAgICAuZmxhdCgpO1xuY29uc3QgVElNRVpPTkVTID0gW107XG5BTExfWk9ORVMuZm9yRWFjaCh6b25lID0+IHtcbiAgICBpZiAoIVRJTUVaT05FUy5maW5kKG9wdGlvbiA9PiBnZXRPZmZzZXRLZXkob3B0aW9uLm5hbWUpID09PSBnZXRPZmZzZXRLZXkoem9uZS5uYW1lKSkpIHtcbiAgICAgICAgVElNRVpPTkVTLnB1c2goem9uZSk7IC8vIGRlZHVwZSB6b25lcyBieSBvZmZzZXRzXG4gICAgfVxufSk7XG5jb25zdCBUSU1FWk9ORV9PUFRJT05TID0gVElNRVpPTkVTLm1hcCh6b25lID0+ICh7XG4gICAgbGFiZWw6IGBHTVQgJHttb21lbnRcbiAgICAgICAgLnR6KGN1cnJlbnREYXRlLCB6b25lLm5hbWUpXG4gICAgICAgIC5mb3JtYXQoJ1onKX0gKCR7Z2V0VGltZXpvbmVOYW1lKHpvbmUubmFtZSl9KWAsXG4gICAgdmFsdWU6IHpvbmUubmFtZSxcbiAgICBvZmZzZXRzOiBnZXRPZmZzZXRLZXkoem9uZS5uYW1lKSxcbiAgICB0aW1lem9uZU5hbWU6IHpvbmUubmFtZSxcbn0pKTtcbmNvbnN0IFRJTUVaT05FX09QVElPTlNfU09SVF9DT01QQVJBVE9SID0gKGEsIGIpID0+IG1vbWVudC50eihjdXJyZW50RGF0ZSwgYS50aW1lem9uZU5hbWUpLnV0Y09mZnNldCgpIC1cbiAgICBtb21lbnQudHooY3VycmVudERhdGUsIGIudGltZXpvbmVOYW1lKS51dGNPZmZzZXQoKTtcbi8vIHByZS1zb3J0IHRpbWV6b25lIG9wdGlvbnMgYnkgdGltZSBvZmZzZXRcblRJTUVaT05FX09QVElPTlMuc29ydChUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUik7XG5jb25zdCBtYXRjaFRpbWV6b25lVG9PcHRpb25zID0gKHRpbWV6b25lKSA9PiBUSU1FWk9ORV9PUFRJT05TLmZpbmQob3B0aW9uID0+IG9wdGlvbi5vZmZzZXRzID09PSBnZXRPZmZzZXRLZXkodGltZXpvbmUpKVxuICAgID8udmFsdWUgfHwgREVGQVVMVF9USU1FWk9ORS52YWx1ZTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRpbWV6b25lU2VsZWN0b3IoeyBvblRpbWV6b25lQ2hhbmdlLCB0aW1lem9uZSwgbWluV2lkdGggPSBNSU5fU0VMRUNUX1dJRFRILCAvLyBzbWFsbGVzdCBzaXplIGZvciBjdXJyZW50IHZhbHVlc1xuIH0pIHtcbiAgICBjb25zdCB2YWxpZFRpbWV6b25lID0gdXNlTWVtbygoKSA9PiBtYXRjaFRpbWV6b25lVG9PcHRpb25zKHRpbWV6b25lIHx8IG1vbWVudC50ei5ndWVzcygpKSwgW3RpbWV6b25lXSk7XG4gICAgLy8gZm9yY2UgdHJpZ2dlciBhIHRpbWV6b25lIHVwZGF0ZSBpZiBwcm92aWRlZCBgdGltZXpvbmVgIGlzIG5vdCBpbnZhbGlkXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHRpbWV6b25lICE9PSB2YWxpZFRpbWV6b25lKSB7XG4gICAgICAgICAgICBvblRpbWV6b25lQ2hhbmdlKHZhbGlkVGltZXpvbmUpO1xuICAgICAgICB9XG4gICAgfSwgW3ZhbGlkVGltZXpvbmUsIG9uVGltZXpvbmVDaGFuZ2UsIHRpbWV6b25lXSk7XG4gICAgcmV0dXJuICg8U2VsZWN0IGFyaWFMYWJlbD17dCgnVGltZXpvbmUgc2VsZWN0b3InKX0gY3NzPXt7IG1pbldpZHRoIH19IG9uQ2hhbmdlPXt0eiA9PiBvblRpbWV6b25lQ2hhbmdlKHR6KX0gdmFsdWU9e3ZhbGlkVGltZXpvbmV9IG9wdGlvbnM9e1RJTUVaT05FX09QVElPTlN9IHNvcnRDb21wYXJhdG9yPXtUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUn0vPik7XG59XG4iXX0= */\"), onChange: (tz) => onTimezoneChange(tz), value: validTimezone, options: TIMEZONE_OPTIONS, sortComparator: TIMEZONE_OPTIONS_SORT_COMPARATOR });\n}__signature__(TimezoneSelector, \"useMemo{validTimezone}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_TIMEZONE, \"DEFAULT_TIMEZONE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(MIN_SELECT_WIDTH, \"MIN_SELECT_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(offsetsToName, \"offsetsToName\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(currentDate, \"currentDate\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JANUARY, \"JANUARY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JULY, \"JULY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getOffsetKey, \"getOffsetKey\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getTimezoneName, \"getTimezoneName\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(ALL_ZONES, \"ALL_ZONES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONES, \"TIMEZONES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONE_OPTIONS, \"TIMEZONE_OPTIONS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONE_OPTIONS_SORT_COMPARATOR, \"TIMEZONE_OPTIONS_SORT_COMPARATOR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(matchTimezoneToOptions, \"matchTimezoneToOptions\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TimezoneSelector, \"TimezoneSelector\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useMemo","moment","t","Select","jsx","___EmotionJSX","DEFAULT_TIMEZONE","name","value","MIN_SELECT_WIDTH","offsetsToName","currentDate","JANUARY","JULY","getOffsetKey","tz","utcOffset","toString","getTimezoneName","_offsetsToName$offset","_offsetsToName$offset2","offsets","isDST","ALL_ZONES","countries","map","country","zonesForCountry","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","label","format","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","sort","matchTimezoneToOptions","timezone","_TIMEZONE_OPTIONS$fin","TimezoneSelector","onTimezoneChange","minWidth","validTimezone","guess","ariaLabel","css","_css","process","env","NODE_ENV","onChange","options","sortComparator","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/TimezoneSelector/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: (typeof TIMEZONE_OPTIONS)[number],\n  b: (typeof TIMEZONE_OPTIONS)[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}