{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport columnType from './columnType';\nimport AdhocMetricOption from './AdhocMetricOption';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst propTypes = {\n  option: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  index: PropTypes.number.isRequired,\n  onMetricEdit: PropTypes.func,\n  onRemoveMetric: PropTypes.func,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  multi: PropTypes.bool,\n  datasource: PropTypes.object,\n  datasourceWarningMessage: PropTypes.string\n};\n\nexport default function MetricDefinitionValue({\n  option,\n  onMetricEdit,\n  onRemoveMetric,\n  columns,\n  savedMetrics,\n  savedMetricsOptions,\n  datasource,\n  onMoveLabel,\n  onDropLabel,\n  index,\n  type,\n  multi,\n  datasourceWarningMessage\n}) {\n  const getSavedMetricByName = (metricName) =>\n  savedMetrics.find((metric) => metric.metric_name === metricName);\n\n  let savedMetric;\n  if (typeof option === 'string') {\n    savedMetric = getSavedMetricByName(option);\n  } else if (option.metric_name) {\n    savedMetric = option;\n  }\n\n  if (option instanceof AdhocMetric || savedMetric) {var _savedMetric;\n    const adhocMetric =\n    option instanceof AdhocMetric ? option : new AdhocMetric({});\n\n    const metricOptionProps = {\n      onMetricEdit,\n      onRemoveMetric,\n      columns,\n      savedMetricsOptions,\n      datasource,\n      adhocMetric,\n      onMoveLabel,\n      onDropLabel,\n      index,\n      savedMetric: (_savedMetric = savedMetric) != null ? _savedMetric : {},\n      type,\n      multi,\n      datasourceWarningMessage\n    };\n\n    return ___EmotionJSX(AdhocMetricOption, metricOptionProps);\n  }\n  return null;\n}\nMetricDefinitionValue.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/MetricDefinitionValue.jsx\");reactHotLoader.register(MetricDefinitionValue, \"MetricDefinitionValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/MetricDefinitionValue.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","columnType","AdhocMetricOption","AdhocMetric","savedMetricType","jsx","___EmotionJSX","propTypes","option","oneOfType","object","string","isRequired","index","number","onMetricEdit","func","onRemoveMetric","onMoveLabel","onDropLabel","columns","arrayOf","savedMetrics","savedMetricsOptions","multi","bool","datasource","datasourceWarningMessage","MetricDefinitionValue","type","getSavedMetricByName","metricName","find","metric","metric_name","savedMetric","_savedMetric","adhocMetric","metricOptionProps","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/MetricControl/MetricDefinitionValue.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport columnType from './columnType';\nimport AdhocMetricOption from './AdhocMetricOption';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';\n\nconst propTypes = {\n  option: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  index: PropTypes.number.isRequired,\n  onMetricEdit: PropTypes.func,\n  onRemoveMetric: PropTypes.func,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  multi: PropTypes.bool,\n  datasource: PropTypes.object,\n  datasourceWarningMessage: PropTypes.string,\n};\n\nexport default function MetricDefinitionValue({\n  option,\n  onMetricEdit,\n  onRemoveMetric,\n  columns,\n  savedMetrics,\n  savedMetricsOptions,\n  datasource,\n  onMoveLabel,\n  onDropLabel,\n  index,\n  type,\n  multi,\n  datasourceWarningMessage,\n}) {\n  const getSavedMetricByName = metricName =>\n    savedMetrics.find(metric => metric.metric_name === metricName);\n\n  let savedMetric;\n  if (typeof option === 'string') {\n    savedMetric = getSavedMetricByName(option);\n  } else if (option.metric_name) {\n    savedMetric = option;\n  }\n\n  if (option instanceof AdhocMetric || savedMetric) {\n    const adhocMetric =\n      option instanceof AdhocMetric ? option : new AdhocMetric({});\n\n    const metricOptionProps = {\n      onMetricEdit,\n      onRemoveMetric,\n      columns,\n      savedMetricsOptions,\n      datasource,\n      adhocMetric,\n      onMoveLabel,\n      onDropLabel,\n      index,\n      savedMetric: savedMetric ?? {},\n      type,\n      multi,\n      datasourceWarningMessage,\n    };\n\n    return <AdhocMetricOption {...metricOptionProps} />;\n  }\n  return null;\n}\nMetricDefinitionValue.propTypes = propTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}