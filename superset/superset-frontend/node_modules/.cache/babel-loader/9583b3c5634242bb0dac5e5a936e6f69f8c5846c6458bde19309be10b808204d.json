{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqualArray } from '@superset-ui/core';\nexport default function isEqualColumns(propsA, propsB) {var _a$queriesData, _a$queriesData$, _b$queriesData, _b$queriesData$, _a$queriesData2, _a$queriesData2$, _b$queriesData2, _b$queriesData2$;\n  const a = propsA[0];\n  const b = propsB[0];\n  return a.datasource.columnFormats === b.datasource.columnFormats &&\n  a.datasource.currencyFormats === b.datasource.currencyFormats &&\n  a.datasource.verboseMap === b.datasource.verboseMap &&\n  a.formData.tableTimestampFormat === b.formData.tableTimestampFormat &&\n  a.formData.timeGrainSqla === b.formData.timeGrainSqla &&\n  JSON.stringify(a.formData.columnConfig || null) ===\n  JSON.stringify(b.formData.columnConfig || null) &&\n  isEqualArray(a.formData.metrics, b.formData.metrics) &&\n  isEqualArray((_a$queriesData = a.queriesData) == null ? void 0 : (_a$queriesData$ = _a$queriesData[0]) == null ? void 0 : _a$queriesData$.colnames, (_b$queriesData = b.queriesData) == null ? void 0 : (_b$queriesData$ = _b$queriesData[0]) == null ? void 0 : _b$queriesData$.colnames) &&\n  isEqualArray((_a$queriesData2 = a.queriesData) == null ? void 0 : (_a$queriesData2$ = _a$queriesData2[0]) == null ? void 0 : _a$queriesData2$.coltypes, (_b$queriesData2 = b.queriesData) == null ? void 0 : (_b$queriesData2$ = _b$queriesData2[0]) == null ? void 0 : _b$queriesData2$.coltypes) &&\n  JSON.stringify(a.formData.extraFilters || null) ===\n  JSON.stringify(b.formData.extraFilters || null) &&\n  JSON.stringify(a.formData.extraFormData || null) ===\n  JSON.stringify(b.formData.extraFormData || null) &&\n  JSON.stringify(a.rawFormData.column_config || null) ===\n  JSON.stringify(b.rawFormData.column_config || null);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isEqualColumns, \"isEqualColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/utils/isEqualColumns.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isEqualArray","isEqualColumns","propsA","propsB","_a$queriesData","_a$queriesData$","_b$queriesData","_b$queriesData$","_a$queriesData2","_a$queriesData2$","_b$queriesData2","_b$queriesData2$","a","b","datasource","columnFormats","currencyFormats","verboseMap","formData","tableTimestampFormat","timeGrainSqla","JSON","stringify","columnConfig","metrics","queriesData","colnames","coltypes","extraFilters","extraFormData","rawFormData","column_config","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/utils/isEqualColumns.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqualArray } from '@superset-ui/core';\nimport { TableChartProps } from '../types';\n\nexport default function isEqualColumns(\n  propsA: TableChartProps[],\n  propsB: TableChartProps[],\n) {\n  const a = propsA[0];\n  const b = propsB[0];\n  return (\n    a.datasource.columnFormats === b.datasource.columnFormats &&\n    a.datasource.currencyFormats === b.datasource.currencyFormats &&\n    a.datasource.verboseMap === b.datasource.verboseMap &&\n    a.formData.tableTimestampFormat === b.formData.tableTimestampFormat &&\n    a.formData.timeGrainSqla === b.formData.timeGrainSqla &&\n    JSON.stringify(a.formData.columnConfig || null) ===\n      JSON.stringify(b.formData.columnConfig || null) &&\n    isEqualArray(a.formData.metrics, b.formData.metrics) &&\n    isEqualArray(a.queriesData?.[0]?.colnames, b.queriesData?.[0]?.colnames) &&\n    isEqualArray(a.queriesData?.[0]?.coltypes, b.queriesData?.[0]?.coltypes) &&\n    JSON.stringify(a.formData.extraFilters || null) ===\n      JSON.stringify(b.formData.extraFilters || null) &&\n    JSON.stringify(a.formData.extraFormData || null) ===\n      JSON.stringify(b.formData.extraFormData || null) &&\n    JSON.stringify(a.rawFormData.column_config || null) ===\n      JSON.stringify(b.rawFormData.column_config || null)\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,YAAY,QAAQ,mBAAmB;AAGhD,eAAc,SAAUC,cAAcA,CACpCC,MAAyB,EACzBC,MAAyB,OAAAC,cAAA,EAAAC,eAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,gBAAA;EAEzB,MAAMC,CAAC,GAAGV,MAAM,CAAC,CAAC,CAAC;EACnB,MAAMW,CAAC,GAAGV,MAAM,CAAC,CAAC,CAAC;EACnB,OACES,CAAC,CAACE,UAAU,CAACC,aAAa,KAAKF,CAAC,CAACC,UAAU,CAACC,aAAa;EACzDH,CAAC,CAACE,UAAU,CAACE,eAAe,KAAKH,CAAC,CAACC,UAAU,CAACE,eAAe;EAC7DJ,CAAC,CAACE,UAAU,CAACG,UAAU,KAAKJ,CAAC,CAACC,UAAU,CAACG,UAAU;EACnDL,CAAC,CAACM,QAAQ,CAACC,oBAAoB,KAAKN,CAAC,CAACK,QAAQ,CAACC,oBAAoB;EACnEP,CAAC,CAACM,QAAQ,CAACE,aAAa,KAAKP,CAAC,CAACK,QAAQ,CAACE,aAAa;EACrDC,IAAI,CAACC,SAAS,CAACV,CAAC,CAACM,QAAQ,CAACK,YAAY,IAAI,IAAI,CAAC;EAC7CF,IAAI,CAACC,SAAS,CAACT,CAAC,CAACK,QAAQ,CAACK,YAAY,IAAI,IAAI,CAAC;EACjDvB,YAAY,CAACY,CAAC,CAACM,QAAQ,CAACM,OAAO,EAAEX,CAAC,CAACK,QAAQ,CAACM,OAAO,CAAC;EACpDxB,YAAY,EAAAI,cAAA,GAACQ,CAAC,CAACa,WAAW,sBAAApB,eAAA,GAAbD,cAAA,CAAgB,CAAC,CAAC,qBAAlBC,eAAA,CAAoBqB,QAAQ,GAAApB,cAAA,GAAEO,CAAC,CAACY,WAAW,sBAAAlB,eAAA,GAAbD,cAAA,CAAgB,CAAC,CAAC,qBAAlBC,eAAA,CAAoBmB,QAAQ,CAAC;EACxE1B,YAAY,EAAAQ,eAAA,GAACI,CAAC,CAACa,WAAW,sBAAAhB,gBAAA,GAAbD,eAAA,CAAgB,CAAC,CAAC,qBAAlBC,gBAAA,CAAoBkB,QAAQ,GAAAjB,eAAA,GAAEG,CAAC,CAACY,WAAW,sBAAAd,gBAAA,GAAbD,eAAA,CAAgB,CAAC,CAAC,qBAAlBC,gBAAA,CAAoBgB,QAAQ,CAAC;EACxEN,IAAI,CAACC,SAAS,CAACV,CAAC,CAACM,QAAQ,CAACU,YAAY,IAAI,IAAI,CAAC;EAC7CP,IAAI,CAACC,SAAS,CAACT,CAAC,CAACK,QAAQ,CAACU,YAAY,IAAI,IAAI,CAAC;EACjDP,IAAI,CAACC,SAAS,CAACV,CAAC,CAACM,QAAQ,CAACW,aAAa,IAAI,IAAI,CAAC;EAC9CR,IAAI,CAACC,SAAS,CAACT,CAAC,CAACK,QAAQ,CAACW,aAAa,IAAI,IAAI,CAAC;EAClDR,IAAI,CAACC,SAAS,CAACV,CAAC,CAACkB,WAAW,CAACC,aAAa,IAAI,IAAI,CAAC;EACjDV,IAAI,CAACC,SAAS,CAACT,CAAC,CAACiB,WAAW,CAACC,aAAa,IAAI,IAAI,CAAC;AAEzD,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxBuBnC,cAAc,6JAAAoC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}