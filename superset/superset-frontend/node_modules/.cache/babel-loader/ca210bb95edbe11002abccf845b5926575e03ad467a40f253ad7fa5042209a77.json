{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t } from '@superset-ui/core';\n\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport EditableTitle from 'src/components/EditableTitle';\nimport { setEditMode } from 'src/dashboard/actions/dashboardState';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport DragDroppable, {\n  Droppable } from\n'src/dashboard/components/dnd/DragDroppable';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { TAB_TYPE } from 'src/dashboard/util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nexport const RENDER_TAB = 'RENDER_TAB';\nexport const RENDER_TAB_CONTENT = 'RENDER_TAB_CONTENT';\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderType: PropTypes.oneOf([RENDER_TAB, RENDER_TAB_CONTENT]).isRequired,\n  onDropOnTab: PropTypes.func,\n  onHoverTab: PropTypes.func,\n  editMode: PropTypes.bool.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // redux\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setEditMode: PropTypes.func.isRequired\n};\n\nconst defaultProps = {\n  availableColumnCount: 0,\n  columnWidth: 0,\n  onDropOnTab() {},\n  onHoverTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {}\n};\n\nconst TabTitleContainer = styled.div`\n  ${({ isHighlighted, theme: { gridUnit, colors } }) => `\n    padding: ${gridUnit}px ${gridUnit * 2}px;\n    margin: ${-gridUnit}px ${gridUnit * -2}px;\n    transition: box-shadow 0.2s ease-in-out;\n    ${\nisHighlighted && `box-shadow: 0 0 ${gridUnit}px ${colors.primary.light1};`\n}\n  `}\n`;\n\nconst renderDraggableContent = (dropProps) =>\ndropProps.dropIndicatorProps && ___EmotionJSX(\"div\", dropProps.dropIndicatorProps);\n\nclass Tab extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleOnHover = this.handleOnHover.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleChangeText(nextTabText) {\n    const { updateComponents, component } = this.props;\n    if (nextTabText && nextTabText !== component.meta.text) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            text: nextTabText\n          }\n        }\n      });\n    }\n  }\n\n  handleDrop(dropResult) {\n    this.props.handleComponentDrop(dropResult);\n    this.props.onDropOnTab(dropResult);\n  }\n\n  handleOnHover() {\n    this.props.onHoverTab();\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0\n        }\n      });\n    }\n  }\n\n  shouldDropToChild(item) {\n    return item.type !== TAB_TYPE;\n  }\n\n  renderTabContent() {\n    const {\n      component: tabComponent,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      editMode,\n      isComponentVisible,\n      canEdit,\n      setEditMode,\n      dashboardId\n    } = this.props;\n\n    const shouldDisplayEmptyState = tabComponent.children.length === 0;\n    return (\n      ___EmotionJSX(\"div\", { className: \"dashboard-component-tabs-content\" },\n\n      editMode &&\n      ___EmotionJSX(Droppable, {\n        component: tabComponent,\n        orientation: \"column\",\n        index: 0,\n        depth: depth,\n        onDrop:\n        tabComponent.children.length === 0 ?\n        this.handleTopDropTargetDrop :\n        this.handleDrop,\n\n        editMode: true,\n        className: classNames({\n          'empty-droptarget': true,\n          'empty-droptarget--full': tabComponent.children.length === 0\n        }),\n        dropToChild: tabComponent.children.length === 0 },\n\n      renderDraggableContent\n      ),\n\n      shouldDisplayEmptyState &&\n      ___EmotionJSX(EmptyStateMedium, {\n        title:\n        editMode ?\n        t('Drag and drop components to this tab') :\n        t('There are no components added to this tab'),\n\n        description:\n        canEdit && (\n        editMode ?\n        ___EmotionJSX(\"span\", null,\n        t('You can'), ' ',\n        ___EmotionJSX(\"a\", {\n          href: `/chart/add?dashboard_id=${dashboardId}`,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\" },\n\n        t('create a new chart')\n        ), ' ',\n        t('or use existing ones from the panel on the right')\n        ) :\n\n        ___EmotionJSX(\"span\", null,\n        t('You can add the components in the'), ' ',\n        ___EmotionJSX(\"span\", {\n          role: \"button\",\n          tabIndex: 0,\n          onClick: () => setEditMode(true) },\n\n        t('edit mode')\n        )\n        )),\n\n\n        image: \"chart.svg\" }\n      ),\n\n      tabComponent.children.map((componentId, componentIndex) =>\n      ___EmotionJSX(React.Fragment, { key: componentId },\n      ___EmotionJSX(DashboardComponent, {\n        id: componentId,\n        parentId: tabComponent.id,\n        depth: depth // see isValidChild.js for why tabs don't increment child depth\n        , index: componentIndex,\n        onDrop: this.handleDrop,\n        onHover: this.handleOnHover,\n        availableColumnCount: availableColumnCount,\n        columnWidth: columnWidth,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        isComponentVisible: isComponentVisible,\n        onChangeTab: this.handleChangeTab }\n      ),\n\n      editMode &&\n      ___EmotionJSX(Droppable, {\n        component: tabComponent,\n        orientation: \"column\",\n        index: componentIndex + 1,\n        depth: depth,\n        onDrop: this.handleDrop,\n        editMode: true,\n        className: \"empty-droptarget\" },\n\n      renderDraggableContent\n      )\n\n      )\n      )\n      ));\n\n  }\n\n  renderTab() {\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      editMode,\n      isFocused,\n      isHighlighted\n    } = this.props;\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: \"column\",\n        index: index,\n        depth: depth,\n        onDrop: this.handleDrop,\n        onHover: this.handleOnHover,\n        editMode: editMode,\n        dropToChild: this.shouldDropToChild },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(TabTitleContainer, {\n        isHighlighted: isHighlighted,\n        className: \"dragdroppable-tab\",\n        ref: dragSourceRef },\n\n      ___EmotionJSX(EditableTitle, {\n        title: component.meta.text,\n        defaultTitle: component.meta.defaultText,\n        placeholder: component.meta.placeholder,\n        canEdit: editMode && isFocused,\n        onSaveTitle: this.handleChangeText,\n        showTooltip: false,\n        editing: editMode && isFocused }\n      ),\n      !editMode &&\n      ___EmotionJSX(AnchorLink, {\n        id: component.id,\n        dashboardId: this.props.dashboardId,\n        placement: index >= 5 ? 'left' : 'right' }\n      ),\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps)\n      )\n\n      ));\n\n  }\n\n  render() {\n    const { renderType } = this.props;\n    return renderType === RENDER_TAB ?\n    this.renderTab() :\n    this.renderTabContent();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    canEdit: state.dashboardInfo.dash_edit_perm\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setEditMode\n    },\n    dispatch\n  );\n}const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(Tab);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RENDER_TAB, \"RENDER_TAB\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(RENDER_TAB_CONTENT, \"RENDER_TAB_CONTENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(TabTitleContainer, \"TabTitleContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(renderDraggableContent, \"renderDraggableContent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(Tab, \"Tab\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","PropTypes","classNames","bindActionCreators","connect","styled","t","EmptyStateMedium","EditableTitle","setEditMode","DashboardComponent","AnchorLink","DragDroppable","Droppable","componentShape","TAB_TYPE","jsx","___EmotionJSX","RENDER_TAB","RENDER_TAB_CONTENT","propTypes","dashboardId","number","isRequired","id","string","parentId","component","parentComponent","index","depth","renderType","oneOf","onDropOnTab","func","onHoverTab","editMode","bool","canEdit","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","handleComponentDrop","updateComponents","setDirectPathToChild","defaultProps","TabTitleContainer","div","isHighlighted","theme","gridUnit","colors","primary","light1","renderDraggableContent","dropProps","dropIndicatorProps","Tab","PureComponent","constructor","props","handleChangeText","bind","handleDrop","handleOnHover","handleTopDropTargetDrop","handleChangeTab","pathToTabIndex","nextTabText","meta","text","dropResult","destination","shouldDropToChild","item","type","renderTabContent","tabComponent","isComponentVisible","shouldDisplayEmptyState","children","length","className","orientation","onDrop","dropToChild","title","description","href","rel","target","role","tabIndex","onClick","image","map","componentId","componentIndex","Fragment","key","onHover","onChangeTab","renderTab","isFocused","dragSourceRef","ref","defaultTitle","defaultText","placeholder","onSaveTitle","showTooltip","editing","placement","render","__reactstandin__regenerateByEval","code","eval","mapStateToProps","state","dashboardInfo","dash_edit_perm","mapDispatchToProps","dispatch","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/Tab.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t } from '@superset-ui/core';\n\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport EditableTitle from 'src/components/EditableTitle';\nimport { setEditMode } from 'src/dashboard/actions/dashboardState';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport DragDroppable, {\n  Droppable,\n} from 'src/dashboard/components/dnd/DragDroppable';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { TAB_TYPE } from 'src/dashboard/util/componentTypes';\n\nexport const RENDER_TAB = 'RENDER_TAB';\nexport const RENDER_TAB_CONTENT = 'RENDER_TAB_CONTENT';\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderType: PropTypes.oneOf([RENDER_TAB, RENDER_TAB_CONTENT]).isRequired,\n  onDropOnTab: PropTypes.func,\n  onHoverTab: PropTypes.func,\n  editMode: PropTypes.bool.isRequired,\n  canEdit: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // redux\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  availableColumnCount: 0,\n  columnWidth: 0,\n  onDropOnTab() {},\n  onHoverTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst TabTitleContainer = styled.div`\n  ${({ isHighlighted, theme: { gridUnit, colors } }) => `\n    padding: ${gridUnit}px ${gridUnit * 2}px;\n    margin: ${-gridUnit}px ${gridUnit * -2}px;\n    transition: box-shadow 0.2s ease-in-out;\n    ${\n      isHighlighted && `box-shadow: 0 0 ${gridUnit}px ${colors.primary.light1};`\n    }\n  `}\n`;\n\nconst renderDraggableContent = dropProps =>\n  dropProps.dropIndicatorProps && <div {...dropProps.dropIndicatorProps} />;\n\nclass Tab extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleOnHover = this.handleOnHover.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleChangeText(nextTabText) {\n    const { updateComponents, component } = this.props;\n    if (nextTabText && nextTabText !== component.meta.text) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            text: nextTabText,\n          },\n        },\n      });\n    }\n  }\n\n  handleDrop(dropResult) {\n    this.props.handleComponentDrop(dropResult);\n    this.props.onDropOnTab(dropResult);\n  }\n\n  handleOnHover() {\n    this.props.onHoverTab();\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0,\n        },\n      });\n    }\n  }\n\n  shouldDropToChild(item) {\n    return item.type !== TAB_TYPE;\n  }\n\n  renderTabContent() {\n    const {\n      component: tabComponent,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      editMode,\n      isComponentVisible,\n      canEdit,\n      setEditMode,\n      dashboardId,\n    } = this.props;\n\n    const shouldDisplayEmptyState = tabComponent.children.length === 0;\n    return (\n      <div className=\"dashboard-component-tabs-content\">\n        {/* Make top of tab droppable */}\n        {editMode && (\n          <Droppable\n            component={tabComponent}\n            orientation=\"column\"\n            index={0}\n            depth={depth}\n            onDrop={\n              tabComponent.children.length === 0\n                ? this.handleTopDropTargetDrop\n                : this.handleDrop\n            }\n            editMode\n            className={classNames({\n              'empty-droptarget': true,\n              'empty-droptarget--full': tabComponent.children.length === 0,\n            })}\n            dropToChild={tabComponent.children.length === 0}\n          >\n            {renderDraggableContent}\n          </Droppable>\n        )}\n        {shouldDisplayEmptyState && (\n          <EmptyStateMedium\n            title={\n              editMode\n                ? t('Drag and drop components to this tab')\n                : t('There are no components added to this tab')\n            }\n            description={\n              canEdit &&\n              (editMode ? (\n                <span>\n                  {t('You can')}{' '}\n                  <a\n                    href={`/chart/add?dashboard_id=${dashboardId}`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {t('create a new chart')}\n                  </a>{' '}\n                  {t('or use existing ones from the panel on the right')}\n                </span>\n              ) : (\n                <span>\n                  {t('You can add the components in the')}{' '}\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => setEditMode(true)}\n                  >\n                    {t('edit mode')}\n                  </span>\n                </span>\n              ))\n            }\n            image=\"chart.svg\"\n          />\n        )}\n        {tabComponent.children.map((componentId, componentIndex) => (\n          <React.Fragment key={componentId}>\n            <DashboardComponent\n              id={componentId}\n              parentId={tabComponent.id}\n              depth={depth} // see isValidChild.js for why tabs don't increment child depth\n              index={componentIndex}\n              onDrop={this.handleDrop}\n              onHover={this.handleOnHover}\n              availableColumnCount={availableColumnCount}\n              columnWidth={columnWidth}\n              onResizeStart={onResizeStart}\n              onResize={onResize}\n              onResizeStop={onResizeStop}\n              isComponentVisible={isComponentVisible}\n              onChangeTab={this.handleChangeTab}\n            />\n            {/* Make bottom of tab droppable */}\n            {editMode && (\n              <Droppable\n                component={tabComponent}\n                orientation=\"column\"\n                index={componentIndex + 1}\n                depth={depth}\n                onDrop={this.handleDrop}\n                editMode\n                className=\"empty-droptarget\"\n              >\n                {renderDraggableContent}\n              </Droppable>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    );\n  }\n\n  renderTab() {\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      editMode,\n      isFocused,\n      isHighlighted,\n    } = this.props;\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation=\"column\"\n        index={index}\n        depth={depth}\n        onDrop={this.handleDrop}\n        onHover={this.handleOnHover}\n        editMode={editMode}\n        dropToChild={this.shouldDropToChild}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <TabTitleContainer\n            isHighlighted={isHighlighted}\n            className=\"dragdroppable-tab\"\n            ref={dragSourceRef}\n          >\n            <EditableTitle\n              title={component.meta.text}\n              defaultTitle={component.meta.defaultText}\n              placeholder={component.meta.placeholder}\n              canEdit={editMode && isFocused}\n              onSaveTitle={this.handleChangeText}\n              showTooltip={false}\n              editing={editMode && isFocused}\n            />\n            {!editMode && (\n              <AnchorLink\n                id={component.id}\n                dashboardId={this.props.dashboardId}\n                placement={index >= 5 ? 'left' : 'right'}\n              />\n            )}\n\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </TabTitleContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n\n  render() {\n    const { renderType } = this.props;\n    return renderType === RENDER_TAB\n      ? this.renderTab()\n      : this.renderTabContent();\n  }\n}\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    canEdit: state.dashboardInfo.dash_edit_perm,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setEditMode,\n    },\n    dispatch,\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tab);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}