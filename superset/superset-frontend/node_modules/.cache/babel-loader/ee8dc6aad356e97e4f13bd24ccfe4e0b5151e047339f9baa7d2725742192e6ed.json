{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getTextDimension from './getTextDimension';\nfunction decreaseSizeUntil(startSize, computeDimension, condition) {\n  let size = startSize;\n  let dimension = computeDimension(size);\n  while (!condition(dimension)) {\n    size -= 1;\n    // Here if the size goes below zero most likely is because it\n    // has additional style applied in which case we assume the user\n    // knows what it's doing and we just let them use that.\n    // Visually it works, although it could have another\n    // check in place.\n    if (size < 0) {\n      size = startSize;\n      break;\n    }\n    dimension = computeDimension(size);\n  }\n  return size;\n}\nexport default function computeMaxFontSize(input) {\n  const { idealFontSize, maxWidth, maxHeight, style, ...rest } = input;\n  let size;\n  if (idealFontSize !== undefined && idealFontSize !== null) {\n    size = idealFontSize;\n  } else\n  if (maxHeight === undefined || maxHeight === null) {\n    throw new Error('You must specify at least one of maxHeight or idealFontSize');\n  } else\n  {\n    size = Math.floor(maxHeight);\n  }\n  function computeDimension(fontSize) {\n    return getTextDimension({\n      ...rest,\n      style: { ...style, fontSize: `${fontSize}px` }\n    });\n  }\n  if (maxWidth !== undefined && maxWidth !== null) {\n    size = decreaseSizeUntil(size, computeDimension, (dim) => dim.width > 0 && dim.width <= maxWidth);\n  }\n  if (maxHeight !== undefined && maxHeight !== null) {\n    size = decreaseSizeUntil(size, computeDimension, (dim) => dim.height > 0 && dim.height <= maxHeight);\n  }\n  return size;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(decreaseSizeUntil, \"decreaseSizeUntil\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/computeMaxFontSize.ts\");reactHotLoader.register(computeMaxFontSize, \"computeMaxFontSize\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/computeMaxFontSize.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getTextDimension","decreaseSizeUntil","startSize","computeDimension","condition","size","dimension","computeMaxFontSize","input","idealFontSize","maxWidth","maxHeight","style","rest","undefined","Error","Math","floor","fontSize","dim","width","height","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/dimension/computeMaxFontSize.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport getTextDimension, { GetTextDimensionInput } from './getTextDimension';\nimport { Dimension } from './types';\n\nfunction decreaseSizeUntil(\n  startSize: number,\n  computeDimension: (size: number) => Dimension,\n  condition: (dimension: Dimension) => boolean,\n): number {\n  let size = startSize;\n  let dimension = computeDimension(size);\n\n  while (!condition(dimension)) {\n    size -= 1;\n\n    // Here if the size goes below zero most likely is because it\n    // has additional style applied in which case we assume the user\n    // knows what it's doing and we just let them use that.\n    // Visually it works, although it could have another\n    // check in place.\n    if (size < 0) {\n      size = startSize;\n      break;\n    }\n\n    dimension = computeDimension(size);\n  }\n\n  return size;\n}\n\nexport default function computeMaxFontSize(\n  input: GetTextDimensionInput & {\n    maxWidth?: number;\n    maxHeight?: number;\n    idealFontSize?: number;\n  },\n) {\n  const { idealFontSize, maxWidth, maxHeight, style, ...rest } = input;\n\n  let size: number;\n  if (idealFontSize !== undefined && idealFontSize !== null) {\n    size = idealFontSize;\n  } else if (maxHeight === undefined || maxHeight === null) {\n    throw new Error(\n      'You must specify at least one of maxHeight or idealFontSize',\n    );\n  } else {\n    size = Math.floor(maxHeight);\n  }\n\n  function computeDimension(fontSize: number) {\n    return getTextDimension({\n      ...rest,\n      style: { ...style, fontSize: `${fontSize}px` },\n    });\n  }\n\n  if (maxWidth !== undefined && maxWidth !== null) {\n    size = decreaseSizeUntil(\n      size,\n      computeDimension,\n      dim => dim.width > 0 && dim.width <= maxWidth,\n    );\n  }\n\n  if (maxHeight !== undefined && maxHeight !== null) {\n    size = decreaseSizeUntil(\n      size,\n      computeDimension,\n      dim => dim.height > 0 && dim.height <= maxHeight,\n    );\n  }\n\n  return size;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,gBAA2C,MAAM,oBAAoB;AAG5E,SAASC,iBAAiBA,CACxBC,SAAiB,EACjBC,gBAA6C,EAC7CC,SAA4C;EAE5C,IAAIC,IAAI,GAAGH,SAAS;EACpB,IAAII,SAAS,GAAGH,gBAAgB,CAACE,IAAI,CAAC;EAEtC,OAAO,CAACD,SAAS,CAACE,SAAS,CAAC,EAAE;IAC5BD,IAAI,IAAI,CAAC;IAET;IACA;IACA;IACA;IACA;IACA,IAAIA,IAAI,GAAG,CAAC,EAAE;MACZA,IAAI,GAAGH,SAAS;MAChB;;IAGFI,SAAS,GAAGH,gBAAgB,CAACE,IAAI,CAAC;;EAGpC,OAAOA,IAAI;AACb;AAEA,eAAc,SAAUE,kBAAkBA,CACxCC,KAIC;EAED,MAAM,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGC,IAAI,EAAE,GAAGL,KAAK;EAEpE,IAAIH,IAAY;EAChB,IAAII,aAAa,KAAKK,SAAS,IAAIL,aAAa,KAAK,IAAI,EAAE;IACzDJ,IAAI,GAAGI,aAAa;GACrB;EAAM,IAAIE,SAAS,KAAKG,SAAS,IAAIH,SAAS,KAAK,IAAI,EAAE;IACxD,MAAM,IAAII,KAAK,CACb,6DAA6D,CAC9D;GACF;EAAM;IACLV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;;EAG9B,SAASR,gBAAgBA,CAACe,QAAgB;IACxC,OAAOlB,gBAAgB,CAAC;MACtB,GAAGa,IAAI;MACPD,KAAK,EAAE,EAAE,GAAGA,KAAK,EAAEM,QAAQ,EAAE,GAAGA,QAAQ,IAAI;KAC7C,CAAC;EACJ;EAEA,IAAIR,QAAQ,KAAKI,SAAS,IAAIJ,QAAQ,KAAK,IAAI,EAAE;IAC/CL,IAAI,GAAGJ,iBAAiB,CACtBI,IAAI,EACJF,gBAAgB,EAChB,CAAAgB,GAAG,KAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,IAAIV,QAAQ,CAC9C;;EAGH,IAAIC,SAAS,KAAKG,SAAS,IAAIH,SAAS,KAAK,IAAI,EAAE;IACjDN,IAAI,GAAGJ,iBAAiB,CACtBI,IAAI,EACJF,gBAAgB,EAChB,CAAAgB,GAAG,KAAIA,GAAG,CAACE,MAAM,GAAG,CAAC,IAAIF,GAAG,CAACE,MAAM,IAAIV,SAAS,CACjD;;EAGH,OAAON,IAAI;AACb,CAAC,mBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAV,SAAA,MAAAQ,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAvEQxB,iBAAiB,+IAAAqB,cAAA,CAAAG,QAAA,CA2BFlB,kBAAkB,wKAAAmB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAZ,SAAA,CAAAY,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}