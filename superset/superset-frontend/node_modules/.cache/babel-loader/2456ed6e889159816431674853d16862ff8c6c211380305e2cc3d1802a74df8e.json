{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { CacheProvider } from '@emotion/react';\nimport { QueryParamProvider } from 'use-query-params';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/features/home/Menu';\nimport { theme } from 'src/preamble';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { setupStore } from './store';\n// Disable connecting to redux debugger so that the React app injected\n// Below the menu like SqlLab or Explore can connect its redux store to the debugger\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";const store = setupStore({ disableDebugger: true });\nconst bootstrapData = getBootstrapData();\nconst menu = { ...bootstrapData.common.menu_data };\nconst emotionCache = createCache({\n  key: 'menu'\n});\nconst app =\n// @ts-ignore: emotion types defs are incompatible between core and cache\n___EmotionJSX(CacheProvider, { value: emotionCache },\n___EmotionJSX(ThemeProvider, { theme: theme },\n___EmotionJSX(Provider, { store: store },\n___EmotionJSX(BrowserRouter, null,\n___EmotionJSX(QueryParamProvider, { ReactRouterRoute: Route, stringifyOptions: { encode: false } },\n___EmotionJSX(Menu, { data: menu })\n)\n)\n)\n)\n);\nReactDOM.render(app, document.getElementById('app-menu'));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(store, \"store\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(menu, \"menu\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(emotionCache, \"emotionCache\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx\");reactHotLoader.register(app, \"app\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","Provider","ReactDOM","Route","BrowserRouter","CacheProvider","QueryParamProvider","createCache","ThemeProvider","Menu","theme","getBootstrapData","setupStore","jsx","___EmotionJSX","store","disableDebugger","bootstrapData","menu","common","menu_data","emotionCache","key","app","value","ReactRouterRoute","stringifyOptions","encode","data","render","document","getElementById","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/views/menu.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { CacheProvider } from '@emotion/react';\nimport { QueryParamProvider } from 'use-query-params';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/features/home/Menu';\nimport { theme } from 'src/preamble';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { setupStore } from './store';\n\n// Disable connecting to redux debugger so that the React app injected\n// Below the menu like SqlLab or Explore can connect its redux store to the debugger\nconst store = setupStore({ disableDebugger: true });\nconst bootstrapData = getBootstrapData();\nconst menu = { ...bootstrapData.common.menu_data };\n\nconst emotionCache = createCache({\n  key: 'menu',\n});\n\nconst app = (\n  // @ts-ignore: emotion types defs are incompatible between core and cache\n  <CacheProvider value={emotionCache}>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <QueryParamProvider\n            ReactRouterRoute={Route}\n            stringifyOptions={{ encode: false }}\n          >\n            <Menu data={menu} />\n          </QueryParamProvider>\n        </BrowserRouter>\n      </Provider>\n    </ThemeProvider>\n  </CacheProvider>\n);\n\nReactDOM.render(app, document.getElementById('app-menu'));\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AACvD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,SAASC,UAAU,QAAQ,SAAS;AAEpC;AACA;AAAA,SAAAC,GAAA,IAAAC,aAAA,yBACA,MAAMC,KAAK,GAAGH,UAAU,CAAC,EAAEI,eAAe,EAAE,IAAI,EAAE,CAAC;AACnD,MAAMC,aAAa,GAAGN,gBAAgB,EAAE;AACxC,MAAMO,IAAI,GAAG,EAAE,GAAGD,aAAa,CAACE,MAAM,CAACC,SAAS,EAAE;AAElD,MAAMC,YAAY,GAAGd,WAAW,CAAC;EAC/Be,GAAG,EAAE;CACN,CAAC;AAEF,MAAMC,GAAG;AACP;AACAT,aAAA,CAACT,aAAa,IAACmB,KAAK,EAAEH,YAAa;AACjCP,aAAA,CAACN,aAAa,IAACE,KAAK,EAAEA,KAAM;AAC1BI,aAAA,CAACb,QAAQ,IAACc,KAAK,EAAEA,KAAM;AACrBD,aAAA,CAACV,aAAa;AACZU,aAAA,CAACR,kBAAkB,IACjBmB,gBAAgB,EAAEtB,KAAM,EACxBuB,gBAAgB,EAAE,EAAEC,MAAM,EAAE,KAAK,EAAG;AAEpCb,aAAA,CAACL,IAAI,IAACmB,IAAI,EAAEV,IAAK;AACC;AACP;AACP;AACG;AACF,CAChB;AAEDhB,QAAQ,CAAC2B,MAAM,CAACN,GAAG,EAAEO,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1BpDrB,KAAK,wFAAAiB,cAAA,CAAAI,QAAA,CACLnB,aAAa,gGAAAe,cAAA,CAAAI,QAAA,CACblB,IAAI,uFAAAc,cAAA,CAAAI,QAAA,CAEJf,YAAY,+FAAAW,cAAA,CAAAI,QAAA,CAIZb,GAAG,8GAAAc,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}