{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, memo } from 'react';\nimport { Tree } from 'src/components';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { useFilterScopeTree } from './state';\nimport { findFilterScope, getTreeCheckedItems } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst buildTreeLeafTitle = (label, hasTooltip, tooltipTitle) => {\n  let title = ___EmotionJSX(\"span\", null, label);\n  if (hasTooltip) {\n    title = ___EmotionJSX(React.Fragment, null,\n    title, \"\\xA0\",\n    ___EmotionJSX(Tooltip, { title: tooltipTitle },\n    ___EmotionJSX(Icons.Info, { iconSize: \"m\" })\n    )\n    );\n  }\n  return title;\n};\nconst ScopingTree = ({ formScope, initialScope, forceUpdate, updateFormValues, chartId, initiallyExcludedCharts = [], title }) => {\n  const [expandedKeys, setExpandedKeys] = useState([\n  DASHBOARD_ROOT_ID]\n  );\n  const { treeData, layout } = useFilterScopeTree(chartId, initiallyExcludedCharts, buildTreeLeafTitle, title);\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n  const handleExpand = (expandedKeys) => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n  const handleCheck = (checkedKeys) => {\n    forceUpdate();\n    const scope = findFilterScope(checkedKeys, layout);\n    if (chartId !== undefined) {\n      scope.excluded = [...new Set([...scope.excluded, chartId])];\n    }\n    updateFormValues({\n      scope\n    });\n  };\n  const checkedKeys = useMemo(() => getTreeCheckedItems({ ...(formScope || initialScope) }, layout), [formScope, initialScope, layout]);\n  return ___EmotionJSX(Tree, { checkable: true, selectable: false, onExpand: handleExpand, expandedKeys: expandedKeys, autoExpandParent: autoExpandParent, onCheck: handleCheck, checkedKeys: checkedKeys, treeData: treeData });\n};__signature__(ScopingTree, \"useState{[expandedKeys, setExpandedKeys]([\\n        DASHBOARD_ROOT_ID,\\n    ])}\\nuseFilterScopeTree{{ treeData, layout }}\\nuseState{[autoExpandParent, setAutoExpandParent](true)}\\nuseMemo{checkedKeys}\", () => [useFilterScopeTree]);const _default = /*#__PURE__*/\nmemo(ScopingTree);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildTreeLeafTitle, \"buildTreeLeafTitle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");reactHotLoader.register(ScopingTree, \"ScopingTree\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","useState","memo","Tree","DASHBOARD_ROOT_ID","Tooltip","Icons","useFilterScopeTree","findFilterScope","getTreeCheckedItems","jsx","___EmotionJSX","buildTreeLeafTitle","label","hasTooltip","tooltipTitle","title","Fragment","Info","iconSize","ScopingTree","formScope","initialScope","forceUpdate","updateFormValues","chartId","initiallyExcludedCharts","expandedKeys","setExpandedKeys","treeData","layout","autoExpandParent","setAutoExpandParent","handleExpand","handleCheck","checkedKeys","scope","undefined","excluded","Set","checkable","selectable","onExpand","onCheck","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/ScopingTree.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useMemo, useState, memo } from 'react';\nimport { NativeFilterScope } from '@superset-ui/core';\nimport { Tree } from 'src/components';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { useFilterScopeTree } from './state';\nimport { findFilterScope, getTreeCheckedItems } from './utils';\n\ntype ScopingTreeProps = {\n  forceUpdate: Function;\n  updateFormValues: (values: any) => void;\n  formScope?: NativeFilterScope;\n  initialScope: NativeFilterScope;\n  chartId?: number;\n  initiallyExcludedCharts?: number[];\n  title?: string;\n};\n\nconst buildTreeLeafTitle = (\n  label: string,\n  hasTooltip: boolean,\n  tooltipTitle?: string,\n) => {\n  let title = <span>{label}</span>;\n  if (hasTooltip) {\n    title = (\n      <>\n        {title}&nbsp;\n        <Tooltip title={tooltipTitle}>\n          <Icons.Info iconSize=\"m\" />\n        </Tooltip>\n      </>\n    );\n  }\n  return title;\n};\n\nconst ScopingTree: FC<ScopingTreeProps> = ({\n  formScope,\n  initialScope,\n  forceUpdate,\n  updateFormValues,\n  chartId,\n  initiallyExcludedCharts = [],\n  title,\n}) => {\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([\n    DASHBOARD_ROOT_ID,\n  ]);\n\n  const { treeData, layout } = useFilterScopeTree(\n    chartId,\n    initiallyExcludedCharts,\n    buildTreeLeafTitle,\n    title,\n  );\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n\n  const handleExpand = (expandedKeys: string[]) => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  const handleCheck = (checkedKeys: string[]) => {\n    forceUpdate();\n    const scope = findFilterScope(checkedKeys, layout);\n    if (chartId !== undefined) {\n      scope.excluded = [...new Set([...scope.excluded, chartId])];\n    }\n    updateFormValues({\n      scope,\n    });\n  };\n\n  const checkedKeys = useMemo(\n    () => getTreeCheckedItems({ ...(formScope || initialScope) }, layout),\n    [formScope, initialScope, layout],\n  );\n\n  return (\n    <Tree\n      checkable\n      selectable={false}\n      onExpand={handleExpand}\n      expandedKeys={expandedKeys}\n      autoExpandParent={autoExpandParent}\n      onCheck={handleCheck}\n      checkedKeys={checkedKeys}\n      treeData={treeData}\n    />\n  );\n};\n\nexport default memo(ScopingTree);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}