{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api } from './queryApi';\nconst schemaApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    schemas: builder.query({\n      providesTags: [{ type: 'Schemas', id: 'LIST' }],\n      query: ({ dbId, catalog, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/schemas/`,\n        // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n        urlParams: {\n          force: forceRefresh,\n          ...(catalog !== undefined && { catalog })\n        },\n        transformResponse: ({ json }) => json.result.sort().map((value) => ({\n          value,\n          label: value,\n          title: value\n        }))\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId, catalog } }) => ({\n        dbId,\n        catalog\n      })\n    })\n  })\n});\nexport const { useLazySchemasQuery, useSchemasQuery, endpoints: schemaEndpoints, util: schemaApiUtil } = schemaApi;\nexport const EMPTY_SCHEMAS = [];\nexport function useSchemas(options) {\n  const isMountedRef = useRef(false);\n  const { dbId, catalog, onSuccess, onError } = options || {};\n  const [trigger] = useLazySchemasQuery();\n  const result = useSchemasQuery({ dbId, catalog: catalog || undefined, forceRefresh: false }, {\n    skip: !dbId\n  });\n  const handleOnSuccess = useEffectEvent((data, isRefetched) => {\n    onSuccess == null ? void 0 : onSuccess(data, isRefetched);\n  });\n  const handleOnError = useEffectEvent(() => {\n    onError == null ? void 0 : onError();\n  });\n  useEffect(() => {\n    if (dbId) {\n      trigger({ dbId, catalog, forceRefresh: false }).then(({ isSuccess, isError, data }) => {\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, true);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      });\n    }\n  }, [dbId, catalog, handleOnError, handleOnSuccess, trigger]);\n  const refetch = useCallback(() => {\n    if (dbId) {\n      trigger({ dbId, catalog, forceRefresh: true }).then(({ isSuccess, isError, data }) => {\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, true);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      });\n    }\n  }, [dbId, catalog, handleOnError, handleOnSuccess, trigger]);\n  useEffect(() => {\n    if (isMountedRef.current) {\n      const { requestId, isSuccess, isError, isFetching, data, originalArgs } = result;\n      if (!(originalArgs != null && originalArgs.forceRefresh) && requestId && !isFetching) {\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, false);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      }\n    } else\n    {\n      isMountedRef.current = true;\n    }\n  }, [catalog, result, handleOnSuccess, handleOnError]);\n  return {\n    ...result,\n    refetch\n  };\n}__signature__(useSchemas, \"useRef{isMountedRef}\\nuseLazySchemasQuery{[trigger]}\\nuseSchemasQuery{result}\\nuseEffectEvent{handleOnSuccess}\\nuseEffectEvent{handleOnError}\\nuseEffect{}\\nuseCallback{refetch}\\nuseEffect{}\", () => [useLazySchemasQuery, useSchemasQuery, useEffectEvent, useEffectEvent]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(schemaApi, \"schemaApi\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useLazySchemasQuery, \"useLazySchemasQuery\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemasQuery, \"useSchemasQuery\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(schemaEndpoints, \"schemaEndpoints\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(schemaApiUtil, \"schemaApiUtil\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(EMPTY_SCHEMAS, \"EMPTY_SCHEMAS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemas, \"useSchemas\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useRef","useEffectEvent","api","schemaApi","injectEndpoints","endpoints","builder","schemas","query","providesTags","type","id","dbId","catalog","forceRefresh","endpoint","urlParams","force","undefined","transformResponse","json","result","sort","map","value","label","title","serializeQueryArgs","queryArgs","useLazySchemasQuery","useSchemasQuery","schemaEndpoints","util","schemaApiUtil","EMPTY_SCHEMAS","useSchemas","options","isMountedRef","onSuccess","onError","trigger","skip","handleOnSuccess","data","isRefetched","handleOnError","then","isSuccess","isError","refetch","current","requestId","isFetching","originalArgs","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/hooks/apiResources/schemas.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api, JsonResponse } from './queryApi';\n\nexport type SchemaOption = {\n  value: string;\n  label: string;\n  title: string;\n};\n\nexport type FetchSchemasQueryParams = {\n  dbId?: string | number;\n  catalog?: string;\n  forceRefresh: boolean;\n  onSuccess?: (data: SchemaOption[], isRefetched: boolean) => void;\n  onError?: () => void;\n};\n\ntype Params = Omit<FetchSchemasQueryParams, 'forceRefresh'>;\n\nconst schemaApi = api.injectEndpoints({\n  endpoints: builder => ({\n    schemas: builder.query<SchemaOption[], FetchSchemasQueryParams>({\n      providesTags: [{ type: 'Schemas', id: 'LIST' }],\n      query: ({ dbId, catalog, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/schemas/`,\n        // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n        urlParams: {\n          force: forceRefresh,\n          ...(catalog !== undefined && { catalog }),\n        },\n        transformResponse: ({ json }: JsonResponse) =>\n          json.result.sort().map((value: string) => ({\n            value,\n            label: value,\n            title: value,\n          })),\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId, catalog } }) => ({\n        dbId,\n        catalog,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useLazySchemasQuery,\n  useSchemasQuery,\n  endpoints: schemaEndpoints,\n  util: schemaApiUtil,\n} = schemaApi;\n\nexport const EMPTY_SCHEMAS = [] as SchemaOption[];\n\nexport function useSchemas(options: Params) {\n  const isMountedRef = useRef(false);\n  const { dbId, catalog, onSuccess, onError } = options || {};\n  const [trigger] = useLazySchemasQuery();\n  const result = useSchemasQuery(\n    { dbId, catalog: catalog || undefined, forceRefresh: false },\n    {\n      skip: !dbId,\n    },\n  );\n\n  const handleOnSuccess = useEffectEvent(\n    (data: SchemaOption[], isRefetched: boolean) => {\n      onSuccess?.(data, isRefetched);\n    },\n  );\n\n  const handleOnError = useEffectEvent(() => {\n    onError?.();\n  });\n\n  useEffect(() => {\n    if (dbId) {\n      trigger({ dbId, catalog, forceRefresh: false }).then(\n        ({ isSuccess, isError, data }) => {\n          if (isSuccess) {\n            handleOnSuccess(data || EMPTY_SCHEMAS, true);\n          }\n          if (isError) {\n            handleOnError();\n          }\n        },\n      );\n    }\n  }, [dbId, catalog, handleOnError, handleOnSuccess, trigger]);\n\n  const refetch = useCallback(() => {\n    if (dbId) {\n      trigger({ dbId, catalog, forceRefresh: true }).then(\n        ({ isSuccess, isError, data }) => {\n          if (isSuccess) {\n            handleOnSuccess(data || EMPTY_SCHEMAS, true);\n          }\n          if (isError) {\n            handleOnError();\n          }\n        },\n      );\n    }\n  }, [dbId, catalog, handleOnError, handleOnSuccess, trigger]);\n\n  useEffect(() => {\n    if (isMountedRef.current) {\n      const { requestId, isSuccess, isError, isFetching, data, originalArgs } =\n        result;\n      if (!originalArgs?.forceRefresh && requestId && !isFetching) {\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, false);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      }\n    } else {\n      isMountedRef.current = true;\n    }\n  }, [catalog, result, handleOnSuccess, handleOnError]);\n\n  return {\n    ...result,\n    refetch,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}