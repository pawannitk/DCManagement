{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {\n  return getState().dashboardState.sliceIds.includes(chartId);\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components\n      });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return (dispatch) => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isValidFilter, \"isValidFilter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(CHANGE_FILTER, \"CHANGE_FILTER\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(changeFilter, \"changeFilter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DIRECT_PATH_TO_FILTER, \"UPDATE_DIRECT_PATH_TO_FILTER\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDirectPathToFilter, \"updateDirectPathToFilter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_LAYOUT_COMPONENTS, \"UPDATE_LAYOUT_COMPONENTS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateLayoutComponents, \"updateLayoutComponents\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(UPDATE_DASHBOARD_FILTERS_SCOPE, \"UPDATE_DASHBOARD_FILTERS_SCOPE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");reactHotLoader.register(updateDashboardFiltersScope, \"updateDashboardFiltersScope\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isValidFilter","getState","chartId","dashboardState","sliceIds","includes","CHANGE_FILTER","changeFilter","newSelectedValues","merge","dispatch","components","dashboardLayout","present","type","dashboardFilters","UPDATE_DIRECT_PATH_TO_FILTER","updateDirectPathToFilter","path","UPDATE_LAYOUT_COMPONENTS","updateLayoutComponents","UPDATE_DASHBOARD_FILTERS_SCOPE","updateDashboardFiltersScope","scopes","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardFilters.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n// util function to make sure filter is a valid slice in current dashboard\nfunction isValidFilter(getState, chartId) {\n  return getState().dashboardState.sliceIds.includes(chartId);\n}\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport function changeFilter(chartId, newSelectedValues, merge) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      const components = getState().dashboardLayout.present;\n      return dispatch({\n        type: CHANGE_FILTER,\n        chartId,\n        newSelectedValues,\n        merge,\n        components,\n      });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_DIRECT_PATH_TO_FILTER = 'UPDATE_DIRECT_PATH_TO_FILTER';\nexport function updateDirectPathToFilter(chartId, path) {\n  return (dispatch, getState) => {\n    if (isValidFilter(getState, chartId)) {\n      return dispatch({ type: UPDATE_DIRECT_PATH_TO_FILTER, chartId, path });\n    }\n    return getState().dashboardFilters;\n  };\n}\n\nexport const UPDATE_LAYOUT_COMPONENTS = 'UPDATE_LAYOUT_COMPONENTS';\nexport function updateLayoutComponents(components) {\n  return dispatch => {\n    dispatch({ type: UPDATE_LAYOUT_COMPONENTS, components });\n  };\n}\n\nexport const UPDATE_DASHBOARD_FILTERS_SCOPE = 'UPDATE_DASHBOARD_FILTERS_SCOPE';\nexport function updateDashboardFiltersScope(scopes) {\n  return dispatch => {\n    dispatch({ type: UPDATE_DASHBOARD_FILTERS_SCOPE, scopes });\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACxC,OAAOD,QAAQ,CAAC,CAAC,CAACE,cAAc,CAACC,QAAQ,CAACC,QAAQ,CAACH,OAAO,CAAC;AAC7D;;AAEA,OAAO,MAAMI,aAAa,GAAG,eAAe;AAC5C,OAAO,SAASC,YAAYA,CAACL,OAAO,EAAEM,iBAAiB,EAAEC,KAAK,EAAE;EAC9D,OAAO,CAACC,QAAQ,EAAET,QAAQ,KAAK;IAC7B,IAAID,aAAa,CAACC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACpC,MAAMS,UAAU,GAAGV,QAAQ,CAAC,CAAC,CAACW,eAAe,CAACC,OAAO;MACrD,OAAOH,QAAQ,CAAC;QACdI,IAAI,EAAER,aAAa;QACnBJ,OAAO;QACPM,iBAAiB;QACjBC,KAAK;QACLE;MACF,CAAC,CAAC;IACJ;IACA,OAAOV,QAAQ,CAAC,CAAC,CAACc,gBAAgB;EACpC,CAAC;AACH;;AAEA,OAAO,MAAMC,4BAA4B,GAAG,8BAA8B;AAC1E,OAAO,SAASC,wBAAwBA,CAACf,OAAO,EAAEgB,IAAI,EAAE;EACtD,OAAO,CAACR,QAAQ,EAAET,QAAQ,KAAK;IAC7B,IAAID,aAAa,CAACC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MACpC,OAAOQ,QAAQ,CAAC,EAAEI,IAAI,EAAEE,4BAA4B,EAAEd,OAAO,EAAEgB,IAAI,CAAC,CAAC,CAAC;IACxE;IACA,OAAOjB,QAAQ,CAAC,CAAC,CAACc,gBAAgB;EACpC,CAAC;AACH;;AAEA,OAAO,MAAMI,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,SAASC,sBAAsBA,CAACT,UAAU,EAAE;EACjD,OAAO,CAAAD,QAAQ,KAAI;IACjBA,QAAQ,CAAC,EAAEI,IAAI,EAAEK,wBAAwB,EAAER,UAAU,CAAC,CAAC,CAAC;EAC1D,CAAC;AACH;;AAEA,OAAO,MAAMU,8BAA8B,GAAG,gCAAgC;AAC9E,OAAO,SAASC,2BAA2BA,CAACC,MAAM,EAAE;EAClD,OAAO,CAAAb,QAAQ,KAAI;IACjBA,QAAQ,CAAC,EAAEI,IAAI,EAAEO,8BAA8B,EAAEE,MAAM,CAAC,CAAC,CAAC;EAC5D,CAAC;AACH,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA3CQ5B,aAAa,uHAAAwB,cAAA,CAAAI,QAAA,CAITtB,aAAa,uHAAAkB,cAAA,CAAAI,QAAA,CACVrB,YAAY,sHAAAiB,cAAA,CAAAI,QAAA,CAgBfZ,4BAA4B,sIAAAQ,cAAA,CAAAI,QAAA,CACzBX,wBAAwB,kIAAAO,cAAA,CAAAI,QAAA,CAS3BT,wBAAwB,kIAAAK,cAAA,CAAAI,QAAA,CACrBR,sBAAsB,gIAAAI,cAAA,CAAAI,QAAA,CAMzBP,8BAA8B,wIAAAG,cAAA,CAAAI,QAAA,CAC3BN,2BAA2B,6JAAAO,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}