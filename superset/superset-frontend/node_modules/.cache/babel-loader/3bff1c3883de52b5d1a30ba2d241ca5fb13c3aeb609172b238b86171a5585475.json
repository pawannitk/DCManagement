{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { width, height, datasource, formData, queriesData } = chartProps;\n  const {\n    colorScheme,\n    dateTimeFormat,\n    equalDateSize,\n    groupby,\n    logScale,\n    metrics,\n    numberFormat,\n    partitionLimit,\n    partitionThreshold,\n    richTooltip,\n    timeSeriesOption,\n    sliceId\n  } = formData;\n  const { verboseMap } = datasource;\n\n  return {\n    width,\n    height,\n    data: queriesData[0].data,\n    colorScheme,\n    dateTimeFormat,\n    equalDateSize,\n    levels: groupby.map((g) => verboseMap[g] || g),\n    metrics,\n    numberFormat,\n    partitionLimit: partitionLimit && parseInt(partitionLimit, 10),\n    partitionThreshold: partitionThreshold && parseInt(partitionThreshold, 10),\n    timeSeriesOption,\n    useLogScale: logScale,\n    useRichTooltip: richTooltip,\n    sliceId\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-partition/src/transformProps.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["transformProps","chartProps","width","height","datasource","formData","queriesData","colorScheme","dateTimeFormat","equalDateSize","groupby","logScale","metrics","numberFormat","partitionLimit","partitionThreshold","richTooltip","timeSeriesOption","sliceId","verboseMap","data","levels","map","g","parseInt","useLogScale","useRichTooltip","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-plugin-chart-partition/src/transformProps.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default function transformProps(chartProps) {\n  const { width, height, datasource, formData, queriesData } = chartProps;\n  const {\n    colorScheme,\n    dateTimeFormat,\n    equalDateSize,\n    groupby,\n    logScale,\n    metrics,\n    numberFormat,\n    partitionLimit,\n    partitionThreshold,\n    richTooltip,\n    timeSeriesOption,\n    sliceId,\n  } = formData;\n  const { verboseMap } = datasource;\n\n  return {\n    width,\n    height,\n    data: queriesData[0].data,\n    colorScheme,\n    dateTimeFormat,\n    equalDateSize,\n    levels: groupby.map(g => verboseMap[g] || g),\n    metrics,\n    numberFormat,\n    partitionLimit: partitionLimit && parseInt(partitionLimit, 10),\n    partitionThreshold: partitionThreshold && parseInt(partitionThreshold, 10),\n    timeSeriesOption,\n    useLogScale: logScale,\n    useRichTooltip: richTooltip,\n    sliceId,\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAcA,CAACC,UAAU,EAAE;EACjD,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,CAAC,CAAC,GAAGL,UAAU;EACvE,MAAM;IACJM,WAAW;IACXC,cAAc;IACdC,aAAa;IACbC,OAAO;IACPC,QAAQ;IACRC,OAAO;IACPC,YAAY;IACZC,cAAc;IACdC,kBAAkB;IAClBC,WAAW;IACXC,gBAAgB;IAChBC;EACF,CAAC,GAAGb,QAAQ;EACZ,MAAM,EAAEc,UAAU,CAAC,CAAC,GAAGf,UAAU;;EAEjC,OAAO;IACLF,KAAK;IACLC,MAAM;IACNiB,IAAI,EAAEd,WAAW,CAAC,CAAC,CAAC,CAACc,IAAI;IACzBb,WAAW;IACXC,cAAc;IACdC,aAAa;IACbY,MAAM,EAAEX,OAAO,CAACY,GAAG,CAAC,CAAAC,CAAC,KAAIJ,UAAU,CAACI,CAAC,CAAC,IAAIA,CAAC,CAAC;IAC5CX,OAAO;IACPC,YAAY;IACZC,cAAc,EAAEA,cAAc,IAAIU,QAAQ,CAACV,cAAc,EAAE,EAAE,CAAC;IAC9DC,kBAAkB,EAAEA,kBAAkB,IAAIS,QAAQ,CAACT,kBAAkB,EAAE,EAAE,CAAC;IAC1EE,gBAAgB;IAChBQ,WAAW,EAAEd,QAAQ;IACrBe,cAAc,EAAEV,WAAW;IAC3BE;EACF,CAAC;AACH,CAAC,mBAAAS,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAnCuB/B,cAAc,kKAAAgC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}