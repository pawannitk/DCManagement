{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const _default = \"#version 300 es\\nuniform float opacity;\\nin vec4 vColor;\\n\\nout vec4 fragmentColor;\\n#ifndef MODULE_PBR\\n  #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\\n    in vec2 vTEXCOORD_0;\\n    uniform sampler2D u_BaseColorSampler;\\n  #endif\\n#endif\\n\\nvoid main(void) {\\n  #ifdef MODULE_PBR\\n    fragmentColor = vColor * pbr_filterColor(vec4(0));\\n    geometry.uv = pbr_vUV;\\n  #else\\n    #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\\n      fragmentColor = vColor * texture2D(u_BaseColorSampler, vTEXCOORD_0);\\n      geometry.uv = vTEXCOORD_0;\\n    #else\\n      fragmentColor = vColor;\\n    #endif\\n  #endif\\n\\n  fragmentColor.a *= opacity;\\n  DECKGL_FILTER_COLOR(fragmentColor, geometry);\\n}\\n\";export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/mesh-layers/dist/esm/scenegraph-layer/scenegraph-layer-fragment.glsl.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/scenegraph-layer/scenegraph-layer-fragment.glsl.ts"],"sourcesContent":["export default `\\\n#version 300 es\n\n// Uniforms\nuniform float opacity;\n\n// Varying\nin vec4 vColor;\n\nout vec4 fragmentColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n    in vec2 vTEXCOORD_0;\n    uniform sampler2D u_BaseColorSampler;\n  #endif\n#endif\n\nvoid main(void) {\n  #ifdef MODULE_PBR\n    fragmentColor = vColor * pbr_filterColor(vec4(0));\n    geometry.uv = pbr_vUV;\n  #else\n    #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n      fragmentColor = vColor * texture2D(u_BaseColorSampler, vTEXCOORD_0);\n      geometry.uv = vTEXCOORD_0;\n    #else\n      fragmentColor = vColor;\n    #endif\n  #endif\n\n  fragmentColor.a *= opacity;\n  DECKGL_FILTER_COLOR(fragmentColor, geometry);\n}\n`;\n"],"mappings":"wTAAA,ssBAAAA,QAAA,oBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAAAL,QAAA,gOAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}