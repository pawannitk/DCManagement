{"ast":null,"code":"import _transform from \"lodash/transform\";import _isNumber from \"lodash/isNumber\";import _groupBy2 from \"lodash/groupBy\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\nfunction getMetricValue(datum, metric) {\n  return _isNumber(datum[metric]) ? datum[metric] : 0;\n}\nexport function treeBuilder(data, groupBy, metric, secondaryMetric) {\n  const [curGroupBy, ...restGroupby] = groupBy;\n  const curData = _groupBy2(data, curGroupBy);\n  return _transform(curData, (result, value, key) => {\n    const name = curData[key][0][curGroupBy];\n    if (!restGroupby.length) {\n      (value != null ? value : []).forEach((datum) => {\n        const metricValue = getMetricValue(datum, metric);\n        const secondaryValue = secondaryMetric ?\n        getMetricValue(datum, secondaryMetric) :\n        metricValue;\n        const item = {\n          name,\n          value: metricValue,\n          secondaryValue,\n          groupBy: curGroupBy\n        };\n        result.push(item);\n      });\n    } else\n    {\n      const children = treeBuilder(value, restGroupby, metric, secondaryMetric);\n      const metricValue = children.reduce((prev, cur) => prev + cur.value, 0);\n      const secondaryValue = secondaryMetric ?\n      children.reduce((prev, cur) => prev + cur.secondaryValue, 0) :\n      metricValue;\n      result.push({\n        name,\n        children,\n        value: metricValue,\n        secondaryValue,\n        groupBy: curGroupBy\n      });\n    }\n  }, []);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getMetricValue, \"getMetricValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/treeBuilder.ts\");reactHotLoader.register(treeBuilder, \"treeBuilder\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/treeBuilder.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getMetricValue","datum","metric","_isNumber","treeBuilder","data","groupBy","secondaryMetric","curGroupBy","restGroupby","curData","_groupBy2","_transform","result","value","key","name","length","forEach","metricValue","secondaryValue","item","push","children","reduce","prev","cur","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/treeBuilder.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DataRecord, DataRecordValue } from '@superset-ui/core';\nimport { groupBy as _groupBy, isNumber, transform } from 'lodash';\n\nexport type TreeNode = {\n  name: DataRecordValue;\n  value: number;\n  secondaryValue: number;\n  groupBy: string;\n  children?: TreeNode[];\n};\n\nfunction getMetricValue(datum: DataRecord, metric: string) {\n  return isNumber(datum[metric]) ? (datum[metric] as number) : 0;\n}\n\nexport function treeBuilder(\n  data: DataRecord[],\n  groupBy: string[],\n  metric: string,\n  secondaryMetric?: string,\n): TreeNode[] {\n  const [curGroupBy, ...restGroupby] = groupBy;\n  const curData = _groupBy(data, curGroupBy);\n  return transform(\n    curData,\n    (result, value, key) => {\n      const name = curData[key][0][curGroupBy]!;\n      if (!restGroupby.length) {\n        (value ?? []).forEach(datum => {\n          const metricValue = getMetricValue(datum, metric);\n          const secondaryValue = secondaryMetric\n            ? getMetricValue(datum, secondaryMetric)\n            : metricValue;\n          const item = {\n            name,\n            value: metricValue,\n            secondaryValue,\n            groupBy: curGroupBy,\n          };\n          result.push(item);\n        });\n      } else {\n        const children = treeBuilder(\n          value,\n          restGroupby,\n          metric,\n          secondaryMetric,\n        );\n        const metricValue = children.reduce(\n          (prev, cur) => prev + (cur.value as number),\n          0,\n        );\n        const secondaryValue = secondaryMetric\n          ? children.reduce(\n              (prev, cur) => prev + (cur.secondaryValue as number),\n              0,\n            )\n          : metricValue;\n        result.push({\n          name,\n          children,\n          value: metricValue,\n          secondaryValue,\n          groupBy: curGroupBy,\n        });\n      }\n    },\n    [] as TreeNode[],\n  );\n}\n"],"mappings":";AA6BA,SAASA,cAAcA,CAACC,KAAiB,EAAEC,MAAc;EACvD,OAAOC,SAAA,CAASF,KAAK,CAACC,MAAM,CAAC,CAAC,GAAID,KAAK,CAACC,MAAM,CAAY,GAAG,CAAC;AAChE;AAEA,OAAM,SAAUE,WAAWA,CACzBC,IAAkB,EAClBC,OAAiB,EACjBJ,MAAc,EACdK,eAAwB;EAExB,MAAM,CAACC,UAAU,EAAE,GAAGC,WAAW,CAAC,GAAGH,OAAO;EAC5C,MAAMI,OAAO,GAAGC,SAAA,CAASN,IAAI,EAAEG,UAAU,CAAC;EAC1C,OAAOI,UAAA,CACLF,OAAO,EACP,CAACG,MAAM,EAAEC,KAAK,EAAEC,GAAG,KAAI;IACrB,MAAMC,IAAI,GAAGN,OAAO,CAACK,GAAG,CAAC,CAAC,CAAC,CAAC,CAACP,UAAU,CAAE;IACzC,IAAI,CAACC,WAAW,CAACQ,MAAM,EAAE;MACvB,CAACH,KAAK,WAALA,KAAK,GAAI,EAAE,EAAEI,OAAO,CAAC,CAAAjB,KAAK,KAAG;QAC5B,MAAMkB,WAAW,GAAGnB,cAAc,CAACC,KAAK,EAAEC,MAAM,CAAC;QACjD,MAAMkB,cAAc,GAAGb,eAAe;QAClCP,cAAc,CAACC,KAAK,EAAEM,eAAe,CAAC;QACtCY,WAAW;QACf,MAAME,IAAI,GAAG;UACXL,IAAI;UACJF,KAAK,EAAEK,WAAW;UAClBC,cAAc;UACdd,OAAO,EAAEE;SACV;QACDK,MAAM,CAACS,IAAI,CAACD,IAAI,CAAC;MACnB,CAAC,CAAC;KACH;IAAM;MACL,MAAME,QAAQ,GAAGnB,WAAW,CAC1BU,KAAK,EACLL,WAAW,EACXP,MAAM,EACNK,eAAe,CAChB;MACD,MAAMY,WAAW,GAAGI,QAAQ,CAACC,MAAM,CACjC,CAACC,IAAI,EAAEC,GAAG,KAAKD,IAAI,GAAIC,GAAG,CAACZ,KAAgB,EAC3C,CAAC,CACF;MACD,MAAMM,cAAc,GAAGb,eAAe;MAClCgB,QAAQ,CAACC,MAAM,CACb,CAACC,IAAI,EAAEC,GAAG,KAAKD,IAAI,GAAIC,GAAG,CAACN,cAAyB,EACpD,CAAC,CACF;MACDD,WAAW;MACfN,MAAM,CAACS,IAAI,CAAC;QACVN,IAAI;QACJO,QAAQ;QACRT,KAAK,EAAEK,WAAW;QAClBC,cAAc;QACdd,OAAO,EAAEE;OACV,CAAC;;EAEN,CAAC,EACD,EAAgB,CACjB;AACH,CAAC,mBAAAmB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1DQ/B,cAAc,oIAAA2B,cAAA,CAAAI,QAAA,CAIP3B,WAAW,yJAAA4B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}