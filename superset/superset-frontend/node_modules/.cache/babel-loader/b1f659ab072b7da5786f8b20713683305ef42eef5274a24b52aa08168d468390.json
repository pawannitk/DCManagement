{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport { StyledInputContainer, StyledJsonEditor, StyledExpandableForm, antdCollapseStyles, no_margin_bottom } from './styles';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ExtraOptions = ({ db, onInputChange, onTextChange, onEditorChange, onExtraInputChange, onExtraEditorChange, extraExtension }) => {var _db$engine_informatio, _db$engine_informatio2, _extraJson$schema_opt, _extraJson$metadata_c, _extraJson$metadata_c2;\n  const expandableModalIsOpen = !!(db != null && db.expose_in_sqllab);\n  const createAsOpen = !!(db != null && db.allow_ctas || db != null && db.allow_cvas);\n  const isFileUploadSupportedByEngine = db == null ? void 0 : (_db$engine_informatio = db.engine_information) == null ? void 0 : _db$engine_informatio.supports_file_upload;\n  const supportsDynamicCatalog = db == null ? void 0 : (_db$engine_informatio2 = db.engine_information) == null ? void 0 : _db$engine_informatio2.supports_dynamic_catalog;\n  // JSON.parse will deep parse engine_params\n  // if it's an object, and we want to keep it a string\n  const extraJson = JSON.parse((db == null ? void 0 : db.extra) || '{}', (key, value) => {\n    if (key === 'engine_params' && typeof value === 'object') {\n      // keep this as a string\n      return JSON.stringify(value);\n    }\n    return value;\n  });\n  const ExtraExtensionComponent = extraExtension == null ? void 0 : extraExtension.component;\n  const ExtraExtensionLogo = extraExtension == null ? void 0 : extraExtension.logo;\n  const ExtensionDescription = extraExtension == null ? void 0 : extraExtension.description;\n  return ___EmotionJSX(Collapse, { expandIconPosition: \"right\", accordion: true, css: (theme) => antdCollapseStyles(theme) },\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('SQL Lab')),\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    t('Adjust how this database will interact with SQL Lab.')\n    )\n    ), key: \"1\" },\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"expose_in_sqllab\", indeterminate: false, checked: !!(db != null && db.expose_in_sqllab), onChange: onInputChange, labelText: t('Expose database in SQL Lab') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow this database to be queried in SQL Lab') })\n  ),\n  ___EmotionJSX(StyledExpandableForm, { className: cx('expandable', {\n      open: expandableModalIsOpen,\n      'ctas-open': createAsOpen\n    }) },\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_ctas\", indeterminate: false, checked: !!(db != null && db.allow_ctas), onChange: onInputChange, labelText: t('Allow CREATE TABLE AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new tables based on queries') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_cvas\", indeterminate: false, checked: !!(db != null && db.allow_cvas), onChange: onInputChange, labelText: t('Allow CREATE VIEW AS') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow creation of new views based on queries') })\n  ),\n  ___EmotionJSX(StyledInputContainer, { className: cx('expandable', { open: createAsOpen }) },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('CTAS & CVAS SCHEMA')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"force_ctas_schema\", placeholder: t('Create or select schema...'), onChange: onInputChange, value: (db == null ? void 0 : db.force_ctas_schema) || '' })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Force all tables and views to be created in this schema when clicking CTAS or CVAS in SQL Lab.')\n  )\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_dml\", indeterminate: false, checked: !!(db != null && db.allow_dml), onChange: onInputChange, labelText: t('Allow DML') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"cost_estimate_enabled\", indeterminate: false, checked: !!(extraJson != null && extraJson.cost_estimate_enabled), onChange: onExtraInputChange, labelText: t('Enable query cost estimation') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('For Bigquery, Presto and Postgres, shows a button to compute cost before running a query.') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allows_virtual_table_explore\", indeterminate: false\n    // when `allows_virtual_table_explore` is not present in `extra` it defaults to true\n    , checked: (extraJson == null ? void 0 : extraJson.allows_virtual_table_explore) !== false, onChange: onExtraInputChange, labelText: t('Allow this database to be explored') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('When enabled, users are able to visualize SQL Lab results in Explore.') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"disable_data_preview\", indeterminate: false, checked: !!(extraJson != null && extraJson.disable_data_preview), onChange: onExtraInputChange, labelText: t('Disable SQL Lab data preview queries') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Disable data preview when fetching table metadata in SQL Lab. ' +\n    ' Useful to avoid browser performance issues when using ' +\n    ' databases with very wide tables.') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"expand_rows\", indeterminate: false, checked: !!(extraJson != null && (_extraJson$schema_opt = extraJson.schema_options) != null && _extraJson$schema_opt.expand_rows), onChange: onExtraInputChange, labelText: t('Enable row expansion in schemas') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('For Trino, describe full schemas of nested ROW types, expanding them with dotted paths') })\n  )\n  )\n  )\n  )\n  ),\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Performance')),\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    t('Adjust performance settings of this database.')\n    )\n    ), key: \"2\" },\n  ___EmotionJSX(StyledInputContainer, { className: \"mb-8\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Chart cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"cache_timeout\", value: (db == null ? void 0 : db.cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onInputChange })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the caching timeout for charts of this database.' +\n  ' A timeout of 0 indicates that the cache never expires, and -1 bypasses the cache.' +\n  ' Note this defaults to the global timeout if undefined.')\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Schema cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"schema_cache_timeout\", value: (extraJson == null ? void 0 : (_extraJson$metadata_c = extraJson.metadata_cache_timeout) == null ? void 0 : _extraJson$metadata_c.schema_cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onExtraInputChange, \"data-test\": \"schema-cache-timeout-test\" })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the metadata caching timeout for schemas of ' +\n  'this database. If left unset, the cache never expires.')\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Table cache timeout')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"number\", name: \"table_cache_timeout\", value: (extraJson == null ? void 0 : (_extraJson$metadata_c2 = extraJson.metadata_cache_timeout) == null ? void 0 : _extraJson$metadata_c2.table_cache_timeout) || '', placeholder: t('Enter duration in seconds'), onChange: onExtraInputChange, \"data-test\": \"table-cache-timeout-test\" })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Duration (in seconds) of the metadata caching timeout for tables of ' +\n  'this database. If left unset, the cache never expires. ')\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: /*#__PURE__*/_css({ no_margin_bottom }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ExtraOptions;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_run_async\", indeterminate: false, checked: !!(db != null && db.allow_run_async), onChange: onInputChange, labelText: t('Asynchronous query execution') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Operate the database in asynchronous mode, meaning that the queries ' +\n    'are executed on remote workers as opposed to on the web server itself. ' +\n    'This assumes that you have a Celery worker setup as well as a results ' +\n    'backend. Refer to the installation docs for more information.') })\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: /*#__PURE__*/_css({ no_margin_bottom }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ExtraOptions;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3Bhd2Fuay9Eb2N1bWVudHMvZGNpbS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvZmVhdHVyZXMvZGF0YWJhc2VzL0RhdGFiYXNlTW9kYWwvRXh0cmFPcHRpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrSzhCIiwiZmlsZSI6Ii9ob21lL3Bhd2Fuay9Eb2N1bWVudHMvZGNpbS9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvZmVhdHVyZXMvZGF0YWJhc2VzL0RhdGFiYXNlTW9kYWwvRXh0cmFPcHRpb25zLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyB0LCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBJbmZvVG9vbHRpcCBmcm9tICdzcmMvY29tcG9uZW50cy9JbmZvVG9vbHRpcCc7XG5pbXBvcnQgSW5kZXRlcm1pbmF0ZUNoZWNrYm94IGZyb20gJ3NyYy9jb21wb25lbnRzL0luZGV0ZXJtaW5hdGVDaGVja2JveCc7XG5pbXBvcnQgQ29sbGFwc2UgZnJvbSAnc3JjL2NvbXBvbmVudHMvQ29sbGFwc2UnO1xuaW1wb3J0IHsgU3R5bGVkSW5wdXRDb250YWluZXIsIFN0eWxlZEpzb25FZGl0b3IsIFN0eWxlZEV4cGFuZGFibGVGb3JtLCBhbnRkQ29sbGFwc2VTdHlsZXMsIG5vX21hcmdpbl9ib3R0b20sIH0gZnJvbSAnLi9zdHlsZXMnO1xuY29uc3QgRXh0cmFPcHRpb25zID0gKHsgZGIsIG9uSW5wdXRDaGFuZ2UsIG9uVGV4dENoYW5nZSwgb25FZGl0b3JDaGFuZ2UsIG9uRXh0cmFJbnB1dENoYW5nZSwgb25FeHRyYUVkaXRvckNoYW5nZSwgZXh0cmFFeHRlbnNpb24sIH0pID0+IHtcbiAgICBjb25zdCBleHBhbmRhYmxlTW9kYWxJc09wZW4gPSAhIWRiPy5leHBvc2VfaW5fc3FsbGFiO1xuICAgIGNvbnN0IGNyZWF0ZUFzT3BlbiA9ICEhKGRiPy5hbGxvd19jdGFzIHx8IGRiPy5hbGxvd19jdmFzKTtcbiAgICBjb25zdCBpc0ZpbGVVcGxvYWRTdXBwb3J0ZWRCeUVuZ2luZSA9IGRiPy5lbmdpbmVfaW5mb3JtYXRpb24/LnN1cHBvcnRzX2ZpbGVfdXBsb2FkO1xuICAgIGNvbnN0IHN1cHBvcnRzRHluYW1pY0NhdGFsb2cgPSBkYj8uZW5naW5lX2luZm9ybWF0aW9uPy5zdXBwb3J0c19keW5hbWljX2NhdGFsb2c7XG4gICAgLy8gSlNPTi5wYXJzZSB3aWxsIGRlZXAgcGFyc2UgZW5naW5lX3BhcmFtc1xuICAgIC8vIGlmIGl0J3MgYW4gb2JqZWN0LCBhbmQgd2Ugd2FudCB0byBrZWVwIGl0IGEgc3RyaW5nXG4gICAgY29uc3QgZXh0cmFKc29uID0gSlNPTi5wYXJzZShkYj8uZXh0cmEgfHwgJ3t9JywgKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ2VuZ2luZV9wYXJhbXMnICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIC8vIGtlZXAgdGhpcyBhcyBhIHN0cmluZ1xuICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gICAgY29uc3QgRXh0cmFFeHRlbnNpb25Db21wb25lbnQgPSBleHRyYUV4dGVuc2lvbj8uY29tcG9uZW50O1xuICAgIGNvbnN0IEV4dHJhRXh0ZW5zaW9uTG9nbyA9IGV4dHJhRXh0ZW5zaW9uPy5sb2dvO1xuICAgIGNvbnN0IEV4dGVuc2lvbkRlc2NyaXB0aW9uID0gZXh0cmFFeHRlbnNpb24/LmRlc2NyaXB0aW9uO1xuICAgIHJldHVybiAoPENvbGxhcHNlIGV4cGFuZEljb25Qb3NpdGlvbj1cInJpZ2h0XCIgYWNjb3JkaW9uIGNzcz17KHRoZW1lKSA9PiBhbnRkQ29sbGFwc2VTdHlsZXModGhlbWUpfT5cbiAgICAgIDxDb2xsYXBzZS5QYW5lbCBoZWFkZXI9ezxkaXY+XG4gICAgICAgICAgICA8aDQ+e3QoJ1NRTCBMYWInKX08L2g0PlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICAgIHt0KCdBZGp1c3QgaG93IHRoaXMgZGF0YWJhc2Ugd2lsbCBpbnRlcmFjdCB3aXRoIFNRTCBMYWIuJyl9XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgPC9kaXY+fSBrZXk9XCIxXCI+XG4gICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lciBjc3M9e25vX21hcmdpbl9ib3R0b219PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8SW5kZXRlcm1pbmF0ZUNoZWNrYm94IGlkPVwiZXhwb3NlX2luX3NxbGxhYlwiIGluZGV0ZXJtaW5hdGU9e2ZhbHNlfSBjaGVja2VkPXshIWRiPy5leHBvc2VfaW5fc3FsbGFifSBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdFeHBvc2UgZGF0YWJhc2UgaW4gU1FMIExhYicpfS8+XG4gICAgICAgICAgICA8SW5mb1Rvb2x0aXAgdG9vbHRpcD17dCgnQWxsb3cgdGhpcyBkYXRhYmFzZSB0byBiZSBxdWVyaWVkIGluIFNRTCBMYWInKX0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxTdHlsZWRFeHBhbmRhYmxlRm9ybSBjbGFzc05hbWU9e2N4KCdleHBhbmRhYmxlJywge1xuICAgICAgICAgICAgb3BlbjogZXhwYW5kYWJsZU1vZGFsSXNPcGVuLFxuICAgICAgICAgICAgJ2N0YXMtb3Blbic6IGNyZWF0ZUFzT3BlbixcbiAgICAgICAgfSl9PlxuICAgICAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17bm9fbWFyZ2luX2JvdHRvbX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImFsbG93X2N0YXNcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFkYj8uYWxsb3dfY3Rhc30gb25DaGFuZ2U9e29uSW5wdXRDaGFuZ2V9IGxhYmVsVGV4dD17dCgnQWxsb3cgQ1JFQVRFIFRBQkxFIEFTJyl9Lz5cbiAgICAgICAgICAgICAgICA8SW5mb1Rvb2x0aXAgdG9vbHRpcD17dCgnQWxsb3cgY3JlYXRpb24gb2YgbmV3IHRhYmxlcyBiYXNlZCBvbiBxdWVyaWVzJyl9Lz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17bm9fbWFyZ2luX2JvdHRvbX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImFsbG93X2N2YXNcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFkYj8uYWxsb3dfY3Zhc30gb25DaGFuZ2U9e29uSW5wdXRDaGFuZ2V9IGxhYmVsVGV4dD17dCgnQWxsb3cgQ1JFQVRFIFZJRVcgQVMnKX0vPlxuICAgICAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdBbGxvdyBjcmVhdGlvbiBvZiBuZXcgdmlld3MgYmFzZWQgb24gcXVlcmllcycpfS8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXIgY2xhc3NOYW1lPXtjeCgnZXhwYW5kYWJsZScsIHsgb3BlbjogY3JlYXRlQXNPcGVuIH0pfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57dCgnQ1RBUyAmIENWQVMgU0NIRU1BJyl9PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJmb3JjZV9jdGFzX3NjaGVtYVwiIHBsYWNlaG9sZGVyPXt0KCdDcmVhdGUgb3Igc2VsZWN0IHNjaGVtYS4uLicpfSBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0gdmFsdWU9e2RiPy5mb3JjZV9jdGFzX3NjaGVtYSB8fCAnJ30vPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICAgICAgICB7dCgnRm9yY2UgYWxsIHRhYmxlcyBhbmQgdmlld3MgdG8gYmUgY3JlYXRlZCBpbiB0aGlzIHNjaGVtYSB3aGVuIGNsaWNraW5nIENUQVMgb3IgQ1ZBUyBpbiBTUUwgTGFiLicpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgICAgPC9TdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lciBjc3M9e25vX21hcmdpbl9ib3R0b219PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxJbmRldGVybWluYXRlQ2hlY2tib3ggaWQ9XCJhbGxvd19kbWxcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFkYj8uYWxsb3dfZG1sfSBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdBbGxvdyBETUwnKX0vPlxuICAgICAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdBbGxvdyBtYW5pcHVsYXRpb24gb2YgdGhlIGRhdGFiYXNlIHVzaW5nIG5vbi1TRUxFQ1Qgc3RhdGVtZW50cyBzdWNoIGFzIFVQREFURSwgREVMRVRFLCBDUkVBVEUsIGV0Yy4nKX0vPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXIgY3NzPXtub19tYXJnaW5fYm90dG9tfT5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8SW5kZXRlcm1pbmF0ZUNoZWNrYm94IGlkPVwiY29zdF9lc3RpbWF0ZV9lbmFibGVkXCIgaW5kZXRlcm1pbmF0ZT17ZmFsc2V9IGNoZWNrZWQ9eyEhZXh0cmFKc29uPy5jb3N0X2VzdGltYXRlX2VuYWJsZWR9IG9uQ2hhbmdlPXtvbkV4dHJhSW5wdXRDaGFuZ2V9IGxhYmVsVGV4dD17dCgnRW5hYmxlIHF1ZXJ5IGNvc3QgZXN0aW1hdGlvbicpfS8+XG4gICAgICAgICAgICAgICAgPEluZm9Ub29sdGlwIHRvb2x0aXA9e3QoJ0ZvciBCaWdxdWVyeSwgUHJlc3RvIGFuZCBQb3N0Z3Jlcywgc2hvd3MgYSBidXR0b24gdG8gY29tcHV0ZSBjb3N0IGJlZm9yZSBydW5uaW5nIGEgcXVlcnkuJyl9Lz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17bm9fbWFyZ2luX2JvdHRvbX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImFsbG93c192aXJ0dWFsX3RhYmxlX2V4cGxvcmVcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gXG4gICAgLy8gd2hlbiBgYWxsb3dzX3ZpcnR1YWxfdGFibGVfZXhwbG9yZWAgaXMgbm90IHByZXNlbnQgaW4gYGV4dHJhYCBpdCBkZWZhdWx0cyB0byB0cnVlXG4gICAgY2hlY2tlZD17ZXh0cmFKc29uPy5hbGxvd3NfdmlydHVhbF90YWJsZV9leHBsb3JlICE9PSBmYWxzZX0gb25DaGFuZ2U9e29uRXh0cmFJbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdBbGxvdyB0aGlzIGRhdGFiYXNlIHRvIGJlIGV4cGxvcmVkJyl9Lz5cbiAgICAgICAgICAgICAgICA8SW5mb1Rvb2x0aXAgdG9vbHRpcD17dCgnV2hlbiBlbmFibGVkLCB1c2VycyBhcmUgYWJsZSB0byB2aXN1YWxpemUgU1FMIExhYiByZXN1bHRzIGluIEV4cGxvcmUuJyl9Lz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17bm9fbWFyZ2luX2JvdHRvbX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImRpc2FibGVfZGF0YV9wcmV2aWV3XCIgaW5kZXRlcm1pbmF0ZT17ZmFsc2V9IGNoZWNrZWQ9eyEhZXh0cmFKc29uPy5kaXNhYmxlX2RhdGFfcHJldmlld30gb25DaGFuZ2U9e29uRXh0cmFJbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdEaXNhYmxlIFNRTCBMYWIgZGF0YSBwcmV2aWV3IHF1ZXJpZXMnKX0vPlxuICAgICAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdEaXNhYmxlIGRhdGEgcHJldmlldyB3aGVuIGZldGNoaW5nIHRhYmxlIG1ldGFkYXRhIGluIFNRTCBMYWIuICcgK1xuICAgICAgICAgICAgJyBVc2VmdWwgdG8gYXZvaWQgYnJvd3NlciBwZXJmb3JtYW5jZSBpc3N1ZXMgd2hlbiB1c2luZyAnICtcbiAgICAgICAgICAgICcgZGF0YWJhc2VzIHdpdGggdmVyeSB3aWRlIHRhYmxlcy4nKX0vPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImV4cGFuZF9yb3dzXCIgaW5kZXRlcm1pbmF0ZT17ZmFsc2V9IGNoZWNrZWQ9eyEhZXh0cmFKc29uPy5zY2hlbWFfb3B0aW9ucz8uZXhwYW5kX3Jvd3N9IG9uQ2hhbmdlPXtvbkV4dHJhSW5wdXRDaGFuZ2V9IGxhYmVsVGV4dD17dCgnRW5hYmxlIHJvdyBleHBhbnNpb24gaW4gc2NoZW1hcycpfS8+XG4gICAgICAgICAgICAgICAgPEluZm9Ub29sdGlwIHRvb2x0aXA9e3QoJ0ZvciBUcmlubywgZGVzY3JpYmUgZnVsbCBzY2hlbWFzIG9mIG5lc3RlZCBST1cgdHlwZXMsIGV4cGFuZGluZyB0aGVtIHdpdGggZG90dGVkIHBhdGhzJyl9Lz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgIDwvU3R5bGVkRXhwYW5kYWJsZUZvcm0+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICA8L0NvbGxhcHNlLlBhbmVsPlxuICAgICAgPENvbGxhcHNlLlBhbmVsIGhlYWRlcj17PGRpdj5cbiAgICAgICAgICAgIDxoND57dCgnUGVyZm9ybWFuY2UnKX08L2g0PlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICAgIHt0KCdBZGp1c3QgcGVyZm9ybWFuY2Ugc2V0dGluZ3Mgb2YgdGhpcyBkYXRhYmFzZS4nKX1cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L2Rpdj59IGtleT1cIjJcIj5cbiAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyIGNsYXNzTmFtZT1cIm1iLThcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57dCgnQ2hhcnQgY2FjaGUgdGltZW91dCcpfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIG5hbWU9XCJjYWNoZV90aW1lb3V0XCIgdmFsdWU9e2RiPy5jYWNoZV90aW1lb3V0IHx8ICcnfSBwbGFjZWhvbGRlcj17dCgnRW50ZXIgZHVyYXRpb24gaW4gc2Vjb25kcycpfSBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICB7dCgnRHVyYXRpb24gKGluIHNlY29uZHMpIG9mIHRoZSBjYWNoaW5nIHRpbWVvdXQgZm9yIGNoYXJ0cyBvZiB0aGlzIGRhdGFiYXNlLicgK1xuICAgICAgICAgICAgJyBBIHRpbWVvdXQgb2YgMCBpbmRpY2F0ZXMgdGhhdCB0aGUgY2FjaGUgbmV2ZXIgZXhwaXJlcywgYW5kIC0xIGJ5cGFzc2VzIHRoZSBjYWNoZS4nICtcbiAgICAgICAgICAgICcgTm90ZSB0aGlzIGRlZmF1bHRzIHRvIHRoZSBnbG9iYWwgdGltZW91dCBpZiB1bmRlZmluZWQuJyl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57dCgnU2NoZW1hIGNhY2hlIHRpbWVvdXQnKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwic2NoZW1hX2NhY2hlX3RpbWVvdXRcIiB2YWx1ZT17ZXh0cmFKc29uPy5tZXRhZGF0YV9jYWNoZV90aW1lb3V0Py5zY2hlbWFfY2FjaGVfdGltZW91dCB8fCAnJ30gcGxhY2Vob2xkZXI9e3QoJ0VudGVyIGR1cmF0aW9uIGluIHNlY29uZHMnKX0gb25DaGFuZ2U9e29uRXh0cmFJbnB1dENoYW5nZX0gZGF0YS10ZXN0PVwic2NoZW1hLWNhY2hlLXRpbWVvdXQtdGVzdFwiLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlbHBlclwiPlxuICAgICAgICAgICAge3QoJ0R1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgbWV0YWRhdGEgY2FjaGluZyB0aW1lb3V0IGZvciBzY2hlbWFzIG9mICcgK1xuICAgICAgICAgICAgJ3RoaXMgZGF0YWJhc2UuIElmIGxlZnQgdW5zZXQsIHRoZSBjYWNoZSBuZXZlciBleHBpcmVzLicpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sLWxhYmVsXCI+e3QoJ1RhYmxlIGNhY2hlIHRpbWVvdXQnKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBuYW1lPVwidGFibGVfY2FjaGVfdGltZW91dFwiIHZhbHVlPXtleHRyYUpzb24/Lm1ldGFkYXRhX2NhY2hlX3RpbWVvdXQ/LnRhYmxlX2NhY2hlX3RpbWVvdXQgfHwgJyd9IHBsYWNlaG9sZGVyPXt0KCdFbnRlciBkdXJhdGlvbiBpbiBzZWNvbmRzJyl9IG9uQ2hhbmdlPXtvbkV4dHJhSW5wdXRDaGFuZ2V9IGRhdGEtdGVzdD1cInRhYmxlLWNhY2hlLXRpbWVvdXQtdGVzdFwiLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlbHBlclwiPlxuICAgICAgICAgICAge3QoJ0R1cmF0aW9uIChpbiBzZWNvbmRzKSBvZiB0aGUgbWV0YWRhdGEgY2FjaGluZyB0aW1lb3V0IGZvciB0YWJsZXMgb2YgJyArXG4gICAgICAgICAgICAndGhpcyBkYXRhYmFzZS4gSWYgbGVmdCB1bnNldCwgdGhlIGNhY2hlIG5ldmVyIGV4cGlyZXMuICcpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXIgY3NzPXt7IG5vX21hcmdpbl9ib3R0b20gfX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxJbmRldGVybWluYXRlQ2hlY2tib3ggaWQ9XCJhbGxvd19ydW5fYXN5bmNcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFkYj8uYWxsb3dfcnVuX2FzeW5jfSBvbkNoYW5nZT17b25JbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdBc3luY2hyb25vdXMgcXVlcnkgZXhlY3V0aW9uJyl9Lz5cbiAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdPcGVyYXRlIHRoZSBkYXRhYmFzZSBpbiBhc3luY2hyb25vdXMgbW9kZSwgbWVhbmluZyB0aGF0IHRoZSBxdWVyaWVzICcgK1xuICAgICAgICAgICAgJ2FyZSBleGVjdXRlZCBvbiByZW1vdGUgd29ya2VycyBhcyBvcHBvc2VkIHRvIG9uIHRoZSB3ZWIgc2VydmVyIGl0c2VsZi4gJyArXG4gICAgICAgICAgICAnVGhpcyBhc3N1bWVzIHRoYXQgeW91IGhhdmUgYSBDZWxlcnkgd29ya2VyIHNldHVwIGFzIHdlbGwgYXMgYSByZXN1bHRzICcgK1xuICAgICAgICAgICAgJ2JhY2tlbmQuIFJlZmVyIHRvIHRoZSBpbnN0YWxsYXRpb24gZG9jcyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4nKX0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXIgY3NzPXt7IG5vX21hcmdpbl9ib3R0b20gfX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxJbmRldGVybWluYXRlQ2hlY2tib3ggaWQ9XCJjYW5jZWxfcXVlcnlfb25fd2luZG93c191bmxvYWRcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFleHRyYUpzb24/LmNhbmNlbF9xdWVyeV9vbl93aW5kb3dzX3VubG9hZH0gb25DaGFuZ2U9e29uRXh0cmFJbnB1dENoYW5nZX0gbGFiZWxUZXh0PXt0KCdDYW5jZWwgcXVlcnkgb24gd2luZG93IHVubG9hZCBldmVudCcpfS8+XG4gICAgICAgICAgICA8SW5mb1Rvb2x0aXAgdG9vbHRpcD17dCgnVGVybWluYXRlIHJ1bm5pbmcgcXVlcmllcyB3aGVuIGJyb3dzZXIgd2luZG93IGNsb3NlZCBvciBuYXZpZ2F0ZWQgJyArXG4gICAgICAgICAgICAndG8gYW5vdGhlciBwYWdlLiBBdmFpbGFibGUgZm9yIFByZXN0bywgSGl2ZSwgTXlTUUwsIFBvc3RncmVzIGFuZCAnICtcbiAgICAgICAgICAgICdTbm93Zmxha2UgZGF0YWJhc2VzLicpfS8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICA8L0NvbGxhcHNlLlBhbmVsPlxuICAgICAgPENvbGxhcHNlLlBhbmVsIGhlYWRlcj17PGRpdj5cbiAgICAgICAgICAgIDxoND57dCgnU2VjdXJpdHknKX08L2g0PlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiaGVscGVyXCI+e3QoJ0FkZCBleHRyYSBjb25uZWN0aW9uIGluZm9ybWF0aW9uLicpfTwvcD5cbiAgICAgICAgICA8L2Rpdj59IGtleT1cIjNcIj5cbiAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPnt0KCdTZWN1cmUgZXh0cmEnKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPFN0eWxlZEpzb25FZGl0b3IgbmFtZT1cIm1hc2tlZF9lbmNyeXB0ZWRfZXh0cmFcIiB2YWx1ZT17ZGI/Lm1hc2tlZF9lbmNyeXB0ZWRfZXh0cmEgfHwgJyd9IHBsYWNlaG9sZGVyPXt0KCdTZWN1cmUgZXh0cmEnKX0gb25DaGFuZ2U9eyhqc29uKSA9PiBvbkVkaXRvckNoYW5nZSh7IGpzb24sIG5hbWU6ICdtYXNrZWRfZW5jcnlwdGVkX2V4dHJhJyB9KX0gd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTYwcHhcIi8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWxwZXJcIj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIHt0KCdKU09OIHN0cmluZyBjb250YWluaW5nIGFkZGl0aW9uYWwgY29ubmVjdGlvbiBjb25maWd1cmF0aW9uLiAnICtcbiAgICAgICAgICAgICdUaGlzIGlzIHVzZWQgdG8gcHJvdmlkZSBjb25uZWN0aW9uIGluZm9ybWF0aW9uIGZvciBzeXN0ZW1zICcgK1xuICAgICAgICAgICAgJ2xpa2UgSGl2ZSwgUHJlc3RvIGFuZCBCaWdRdWVyeSB3aGljaCBkbyBub3QgY29uZm9ybSB0byB0aGUgJyArXG4gICAgICAgICAgICAndXNlcm5hbWU6cGFzc3dvcmQgc3ludGF4IG5vcm1hbGx5IHVzZWQgYnkgU1FMQWxjaGVteS4nKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sLWxhYmVsXCI+e3QoJ1Jvb3QgY2VydGlmaWNhdGUnKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPHRleHRhcmVhIG5hbWU9XCJzZXJ2ZXJfY2VydFwiIHZhbHVlPXtkYj8uc2VydmVyX2NlcnQgfHwgJyd9IHBsYWNlaG9sZGVyPXt0KCdFbnRlciBDQV9CVU5ETEUnKX0gb25DaGFuZ2U9e29uVGV4dENoYW5nZX0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICB7dCgnT3B0aW9uYWwgQ0FfQlVORExFIGNvbnRlbnRzIHRvIHZhbGlkYXRlIEhUVFBTIHJlcXVlc3RzLiBPbmx5ICcgK1xuICAgICAgICAgICAgJ2F2YWlsYWJsZSBvbiBjZXJ0YWluIGRhdGFiYXNlIGVuZ2luZXMuJyl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lciBjc3M9eyFpc0ZpbGVVcGxvYWRTdXBwb3J0ZWRCeUVuZ2luZSA/IG5vX21hcmdpbl9ib3R0b20gOiB7fX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxJbmRldGVybWluYXRlQ2hlY2tib3ggaWQ9XCJpbXBlcnNvbmF0ZV91c2VyXCIgaW5kZXRlcm1pbmF0ZT17ZmFsc2V9IGNoZWNrZWQ9eyEhZGI/LmltcGVyc29uYXRlX3VzZXJ9IG9uQ2hhbmdlPXtvbklucHV0Q2hhbmdlfSBsYWJlbFRleHQ9e3QoJ0ltcGVyc29uYXRlIGxvZ2dlZCBpbiB1c2VyIChQcmVzdG8sIFRyaW5vLCBEcmlsbCwgSGl2ZSwgYW5kIEdTaGVldHMpJyl9Lz5cbiAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdJZiBQcmVzdG8gb3IgVHJpbm8sIGFsbCB0aGUgcXVlcmllcyBpbiBTUUwgTGFiIGFyZSBnb2luZyB0byBiZSBleGVjdXRlZCBhcyB0aGUgJyArXG4gICAgICAgICAgICAnY3VycmVudGx5IGxvZ2dlZCBvbiB1c2VyIHdobyBtdXN0IGhhdmUgcGVybWlzc2lvbiB0byBydW4gdGhlbS4gSWYgSGl2ZSAnICtcbiAgICAgICAgICAgICdhbmQgaGl2ZS5zZXJ2ZXIyLmVuYWJsZS5kb0FzIGlzIGVuYWJsZWQsIHdpbGwgcnVuIHRoZSBxdWVyaWVzIGFzICcgK1xuICAgICAgICAgICAgJ3NlcnZpY2UgYWNjb3VudCwgYnV0IGltcGVyc29uYXRlIHRoZSBjdXJyZW50bHkgbG9nZ2VkIG9uIHVzZXIgdmlhICcgK1xuICAgICAgICAgICAgJ2hpdmUuc2VydmVyMi5wcm94eS51c2VyIHByb3BlcnR5LicpfS8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgIHtpc0ZpbGVVcGxvYWRTdXBwb3J0ZWRCeUVuZ2luZSAmJiAoPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17IWRiPy5hbGxvd19maWxlX3VwbG9hZCA/IG5vX21hcmdpbl9ib3R0b20gOiB7fX0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICA8SW5kZXRlcm1pbmF0ZUNoZWNrYm94IGlkPVwiYWxsb3dfZmlsZV91cGxvYWRcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFkYj8uYWxsb3dfZmlsZV91cGxvYWR9IG9uQ2hhbmdlPXtvbklucHV0Q2hhbmdlfSBsYWJlbFRleHQ9e3QoJ0FsbG93IGZpbGUgdXBsb2FkcyB0byBkYXRhYmFzZScpfS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L1N0eWxlZElucHV0Q29udGFpbmVyPil9XG4gICAgICAgIHtpc0ZpbGVVcGxvYWRTdXBwb3J0ZWRCeUVuZ2luZSAmJiAhIWRiPy5hbGxvd19maWxlX3VwbG9hZCAmJiAoPFN0eWxlZElucHV0Q29udGFpbmVyIGNzcz17bm9fbWFyZ2luX2JvdHRvbX0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj5cbiAgICAgICAgICAgICAge3QoJ1NjaGVtYXMgYWxsb3dlZCBmb3IgRmlsZSB1cGxvYWQnKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInNjaGVtYXNfYWxsb3dlZF9mb3JfZmlsZV91cGxvYWRcIiB2YWx1ZT17KGV4dHJhSnNvbj8uc2NoZW1hc19hbGxvd2VkX2Zvcl9maWxlX3VwbG9hZCB8fCBbXSkuam9pbignLCcpfSBwbGFjZWhvbGRlcj1cInNjaGVtYTEsc2NoZW1hMlwiIG9uQ2hhbmdlPXtvbkV4dHJhSW5wdXRDaGFuZ2V9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWxwZXJcIj5cbiAgICAgICAgICAgICAge3QoJ0EgY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2Ygc2NoZW1hcyB0aGF0IGZpbGVzIGFyZSBhbGxvd2VkIHRvIHVwbG9hZCB0by4nKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+KX1cbiAgICAgIDwvQ29sbGFwc2UuUGFuZWw+XG4gICAgICB7ZXh0cmFFeHRlbnNpb24gJiYgRXh0cmFFeHRlbnNpb25Db21wb25lbnQgJiYgRXh0ZW5zaW9uRGVzY3JpcHRpb24gJiYgKDxDb2xsYXBzZS5QYW5lbCBoZWFkZXI9ezxkaXY+XG4gICAgICAgICAgICAgIHtFeHRyYUV4dGVuc2lvbkxvZ28gJiYgPEV4dHJhRXh0ZW5zaW9uTG9nbyAvPn1cbiAgICAgICAgICAgICAgPHNwYW4gY3NzPXsodGhlbWUpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnNpemVzLmwsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IHRoZW1lLnR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkLFxuICAgICAgICAgICAgICAgIH0pfT5cbiAgICAgICAgICAgICAgICB7ZXh0cmFFeHRlbnNpb24/LnRpdGxlfVxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImhlbHBlclwiPlxuICAgICAgICAgICAgICAgIDxFeHRlbnNpb25EZXNjcmlwdGlvbiAvPlxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj59IGtleT17ZXh0cmFFeHRlbnNpb24/LnRpdGxlfSBcbiAgICAgICAgLy8gQHRzLWlnbm9yZSwgJ2ljb24nIGlzIHZhbGlkIGluID49NC45LjAgYnV0IG1pc3NpbmcgZnJvbSBgQ29sbGFwc2libGVUeXBlYFxuICAgICAgICBjb2xsYXBzaWJsZT17ZXh0cmFFeHRlbnNpb24uZW5hYmxlZD8uKCkgPyAnaWNvbicgOiAnZGlzYWJsZWQnfT5cbiAgICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXIgY3NzPXtub19tYXJnaW5fYm90dG9tfT5cbiAgICAgICAgICAgIDxFeHRyYUV4dGVuc2lvbkNvbXBvbmVudCBkYj17ZGJ9IG9uRWRpdD17ZXh0cmFFeHRlbnNpb24ub25FZGl0fS8+XG4gICAgICAgICAgPC9TdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgPC9Db2xsYXBzZS5QYW5lbD4pfVxuICAgICAgPENvbGxhcHNlLlBhbmVsIGhlYWRlcj17PGRpdj5cbiAgICAgICAgICAgIDxoND57dCgnT3RoZXInKX08L2g0PlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiaGVscGVyXCI+e3QoJ0FkZGl0aW9uYWwgc2V0dGluZ3MuJyl9PC9wPlxuICAgICAgICAgIDwvZGl2Pn0ga2V5PVwiNFwiPlxuICAgICAgICA8U3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sLWxhYmVsXCI+e3QoJ01ldGFkYXRhIFBhcmFtZXRlcnMnKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPFN0eWxlZEpzb25FZGl0b3IgbmFtZT1cIm1ldGFkYXRhX3BhcmFtc1wiIHBsYWNlaG9sZGVyPXt0KCdNZXRhZGF0YSBQYXJhbWV0ZXJzJyl9IG9uQ2hhbmdlPXsoanNvbikgPT4gb25FeHRyYUVkaXRvckNoYW5nZSh7IGpzb24sIG5hbWU6ICdtZXRhZGF0YV9wYXJhbXMnIH0pfSB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxNjBweFwiIHZhbHVlPXshT2JqZWN0LmtleXMoZXh0cmFKc29uPy5tZXRhZGF0YV9wYXJhbXMgfHwge30pLmxlbmd0aFxuICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgOiBleHRyYUpzb24/Lm1ldGFkYXRhX3BhcmFtc30vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICB7dCgnVGhlIG1ldGFkYXRhX3BhcmFtcyBvYmplY3QgZ2V0cyB1bnBhY2tlZCBpbnRvIHRoZSBzcWxhbGNoZW15Lk1ldGFEYXRhIGNhbGwuJyl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9TdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgPFN0eWxlZElucHV0Q29udGFpbmVyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPnt0KCdFbmdpbmUgUGFyYW1ldGVycycpfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8U3R5bGVkSnNvbkVkaXRvciBuYW1lPVwiZW5naW5lX3BhcmFtc1wiIHBsYWNlaG9sZGVyPXt0KCdFbmdpbmUgUGFyYW1ldGVycycpfSBvbkNoYW5nZT17KGpzb24pID0+IG9uRXh0cmFFZGl0b3JDaGFuZ2UoeyBqc29uLCBuYW1lOiAnZW5naW5lX3BhcmFtcycgfSl9IHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjE2MHB4XCIgdmFsdWU9eyFPYmplY3Qua2V5cyhleHRyYUpzb24/LmVuZ2luZV9wYXJhbXMgfHwge30pLmxlbmd0aFxuICAgICAgICAgICAgPyAnJ1xuICAgICAgICAgICAgOiBleHRyYUpzb24/LmVuZ2luZV9wYXJhbXN9Lz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlbHBlclwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAge3QoJ1RoZSBlbmdpbmVfcGFyYW1zIG9iamVjdCBnZXRzIHVucGFja2VkIGludG8gdGhlIHNxbGFsY2hlbXkuY3JlYXRlX2VuZ2luZSBjYWxsLicpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIiBkYXRhLXRlc3Q9XCJ2ZXJzaW9uLWxhYmVsLXRlc3RcIj5cbiAgICAgICAgICAgIHt0KCdWZXJzaW9uJyl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIiBkYXRhLXRlc3Q9XCJ2ZXJzaW9uLXNwaW5idXR0b24tdGVzdFwiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cInZlcnNpb25cIiBwbGFjZWhvbGRlcj17dCgnVmVyc2lvbiBudW1iZXInKX0gb25DaGFuZ2U9e29uRXh0cmFJbnB1dENoYW5nZX0gdmFsdWU9e2V4dHJhSnNvbj8udmVyc2lvbiB8fCAnJ30vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVscGVyXCI+XG4gICAgICAgICAgICB7dCgnU3BlY2lmeSB0aGUgZGF0YWJhc2UgdmVyc2lvbi4gVGhpcyBpcyB1c2VkIHdpdGggUHJlc3RvIGZvciBxdWVyeSBjb3N0ICcgK1xuICAgICAgICAgICAgJ2VzdGltYXRpb24sIGFuZCBEcmVtaW8gZm9yIHN5bnRheCBjaGFuZ2VzLCBhbW9uZyBvdGhlcnMuJyl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU3R5bGVkSW5wdXRDb250YWluZXI+XG4gICAgICAgIDxTdHlsZWRJbnB1dENvbnRhaW5lciBjc3M9e25vX21hcmdpbl9ib3R0b219PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8SW5kZXRlcm1pbmF0ZUNoZWNrYm94IGlkPVwiZGlzYWJsZV9kcmlsbF90b19kZXRhaWxcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFleHRyYUpzb24/LmRpc2FibGVfZHJpbGxfdG9fZGV0YWlsfSBvbkNoYW5nZT17b25FeHRyYUlucHV0Q2hhbmdlfSBsYWJlbFRleHQ9e3QoJ0Rpc2FibGUgZHJpbGwgdG8gZGV0YWlsJyl9Lz5cbiAgICAgICAgICAgIDxJbmZvVG9vbHRpcCB0b29sdGlwPXt0KCdEaXNhYmxlcyB0aGUgZHJpbGwgdG8gZGV0YWlsIGZlYXR1cmUgZm9yIHRoaXMgZGF0YWJhc2UuJyl9Lz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9TdHlsZWRJbnB1dENvbnRhaW5lcj5cbiAgICAgICAge3N1cHBvcnRzRHluYW1pY0NhdGFsb2cgJiYgKDxTdHlsZWRJbnB1dENvbnRhaW5lciBjc3M9e25vX21hcmdpbl9ib3R0b219PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPEluZGV0ZXJtaW5hdGVDaGVja2JveCBpZD1cImFsbG93X211bHRpX2NhdGFsb2dcIiBpbmRldGVybWluYXRlPXtmYWxzZX0gY2hlY2tlZD17ISFleHRyYUpzb24/LmFsbG93X211bHRpX2NhdGFsb2d9IG9uQ2hhbmdlPXtvbkV4dHJhSW5wdXRDaGFuZ2V9IGxhYmVsVGV4dD17dCgnQWxsb3cgY2hhbmdpbmcgY2F0YWxvZ3MnKX0vPlxuICAgICAgICAgICAgICA8SW5mb1Rvb2x0aXAgdG9vbHRpcD17dCgnR2l2ZSBhY2Nlc3MgdG8gbXVsdGlwbGUgY2F0YWxvZ3MgaW4gYSBzaW5nbGUgZGF0YWJhc2UgY29ubmVjdGlvbi4nKX0vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9TdHlsZWRJbnB1dENvbnRhaW5lcj4pfVxuICAgICAgPC9Db2xsYXBzZS5QYW5lbD5cbiAgICA8L0NvbGxhcHNlPik7XG59O1xuZXhwb3J0IGRlZmF1bHQgRXh0cmFPcHRpb25zO1xuIl19 */\") },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"cancel_query_on_windows_unload\", indeterminate: false, checked: !!(extraJson != null && extraJson.cancel_query_on_windows_unload), onChange: onExtraInputChange, labelText: t('Cancel query on window unload event') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Terminate running queries when browser window closed or navigated ' +\n    'to another page. Available for Presto, Hive, MySQL, Postgres and ' +\n    'Snowflake databases.') })\n  )\n  )\n  ),\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Security')),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, t('Add extra connection information.'))\n    ), key: \"3\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Secure extra')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"masked_encrypted_extra\", value: (db == null ? void 0 : db.masked_encrypted_extra) || '', placeholder: t('Secure extra'), onChange: (json) => onEditorChange({ json, name: 'masked_encrypted_extra' }), width: \"100%\", height: \"160px\" })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('JSON string containing additional connection configuration. ' +\n  'This is used to provide connection information for systems ' +\n  'like Hive, Presto and BigQuery which do not conform to the ' +\n  'username:password syntax normally used by SQLAlchemy.')\n  )\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Root certificate')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"textarea\", { name: \"server_cert\", value: (db == null ? void 0 : db.server_cert) || '', placeholder: t('Enter CA_BUNDLE'), onChange: onTextChange })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Optional CA_BUNDLE contents to validate HTTPS requests. Only ' +\n  'available on certain database engines.')\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: !isFileUploadSupportedByEngine ? no_margin_bottom : {} },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"impersonate_user\", indeterminate: false, checked: !!(db != null && db.impersonate_user), onChange: onInputChange, labelText: t('Impersonate logged in user (Presto, Trino, Drill, Hive, and GSheets)') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n    'currently logged on user who must have permission to run them. If Hive ' +\n    'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n    'service account, but impersonate the currently logged on user via ' +\n    'hive.server2.proxy.user property.') })\n  )\n  ),\n  isFileUploadSupportedByEngine && ___EmotionJSX(StyledInputContainer, { css: !(db != null && db.allow_file_upload) ? no_margin_bottom : {} },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_file_upload\", indeterminate: false, checked: !!(db != null && db.allow_file_upload), onChange: onInputChange, labelText: t('Allow file uploads to database') })\n  )\n  ),\n  isFileUploadSupportedByEngine && !!(db != null && db.allow_file_upload) && ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Schemas allowed for File upload')\n  ),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"schemas_allowed_for_file_upload\", value: ((extraJson == null ? void 0 : extraJson.schemas_allowed_for_file_upload) || []).join(','), placeholder: \"schema1,schema2\", onChange: onExtraInputChange })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('A comma-separated list of schemas that files are allowed to upload to.')\n  )\n  )\n  ),\n  extraExtension && ExtraExtensionComponent && ExtensionDescription && ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ExtraExtensionLogo && ___EmotionJSX(ExtraExtensionLogo, null),\n    ___EmotionJSX(\"span\", { css: (theme) => ({\n        fontSize: theme.typography.sizes.l,\n        fontWeight: theme.typography.weights.bold\n      }) },\n    extraExtension == null ? void 0 : extraExtension.title\n    ),\n    ___EmotionJSX(\"p\", { className: \"helper\" },\n    ___EmotionJSX(ExtensionDescription, null)\n    )\n    ), key: extraExtension == null ? void 0 : extraExtension.title\n    // @ts-ignore, 'icon' is valid in >=4.9.0 but missing from `CollapsibleType`\n    , collapsible: extraExtension.enabled != null && extraExtension.enabled() ? 'icon' : 'disabled' },\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(ExtraExtensionComponent, { db: db, onEdit: extraExtension.onEdit })\n  )\n  ),\n  ___EmotionJSX(Collapse.Panel, { header: ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"h4\", null, t('Other')),\n    ___EmotionJSX(\"p\", { className: \"helper\" }, t('Additional settings.'))\n    ), key: \"4\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Metadata Parameters')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"metadata_params\", placeholder: t('Metadata Parameters'), onChange: (json) => onExtraEditorChange({ json, name: 'metadata_params' }), width: \"100%\", height: \"160px\", value: !Object.keys((extraJson == null ? void 0 : extraJson.metadata_params) || {}).length ?\n    '' :\n    extraJson == null ? void 0 : extraJson.metadata_params })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('The metadata_params object gets unpacked into the sqlalchemy.MetaData call.')\n  )\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Engine Parameters')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(StyledJsonEditor, { name: \"engine_params\", placeholder: t('Engine Parameters'), onChange: (json) => onExtraEditorChange({ json, name: 'engine_params' }), width: \"100%\", height: \"160px\", value: !Object.keys((extraJson == null ? void 0 : extraJson.engine_params) || {}).length ?\n    '' :\n    extraJson == null ? void 0 : extraJson.engine_params })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  ___EmotionJSX(\"div\", null,\n  t('The engine_params object gets unpacked into the sqlalchemy.create_engine call.')\n  )\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\", \"data-test\": \"version-label-test\" },\n  t('Version')\n  ),\n  ___EmotionJSX(\"div\", { className: \"input-container\", \"data-test\": \"version-spinbutton-test\" },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"version\", placeholder: t('Version number'), onChange: onExtraInputChange, value: (extraJson == null ? void 0 : extraJson.version) || '' })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Specify the database version. This is used with Presto for query cost ' +\n  'estimation, and Dremio for syntax changes, among others.')\n  )\n  ),\n  ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"disable_drill_to_detail\", indeterminate: false, checked: !!(extraJson != null && extraJson.disable_drill_to_detail), onChange: onExtraInputChange, labelText: t('Disable drill to detail') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Disables the drill to detail feature for this database.') })\n  )\n  ),\n  supportsDynamicCatalog && ___EmotionJSX(StyledInputContainer, { css: no_margin_bottom },\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(IndeterminateCheckbox, { id: \"allow_multi_catalog\", indeterminate: false, checked: !!(extraJson != null && extraJson.allow_multi_catalog), onChange: onExtraInputChange, labelText: t('Allow changing catalogs') }),\n  ___EmotionJSX(InfoTooltip, { tooltip: t('Give access to multiple catalogs in a single database connection.') })\n  )\n  )\n  )\n  );\n};const _default =\nExtraOptions;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ExtraOptions, \"ExtraOptions\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","cx","t","InfoTooltip","IndeterminateCheckbox","Collapse","StyledInputContainer","StyledJsonEditor","StyledExpandableForm","antdCollapseStyles","no_margin_bottom","jsx","___EmotionJSX","ExtraOptions","db","onInputChange","onTextChange","onEditorChange","onExtraInputChange","onExtraEditorChange","extraExtension","_db$engine_informatio","_db$engine_informatio2","_extraJson$schema_opt","_extraJson$metadata_c","_extraJson$metadata_c2","expandableModalIsOpen","expose_in_sqllab","createAsOpen","allow_ctas","allow_cvas","isFileUploadSupportedByEngine","engine_information","supports_file_upload","supportsDynamicCatalog","supports_dynamic_catalog","extraJson","JSON","parse","extra","key","value","stringify","ExtraExtensionComponent","component","ExtraExtensionLogo","logo","ExtensionDescription","description","expandIconPosition","accordion","css","theme","Panel","header","className","id","indeterminate","checked","onChange","labelText","tooltip","open","type","name","placeholder","force_ctas_schema","allow_dml","cost_estimate_enabled","allows_virtual_table_explore","disable_data_preview","schema_options","expand_rows","cache_timeout","metadata_cache_timeout","schema_cache_timeout","table_cache_timeout","_css","process","env","NODE_ENV","allow_run_async","cancel_query_on_windows_unload","masked_encrypted_extra","json","width","height","server_cert","impersonate_user","allow_file_upload","schemas_allowed_for_file_upload","join","fontSize","typography","sizes","l","fontWeight","weights","bold","title","collapsible","enabled","onEdit","Object","keys","metadata_params","length","engine_params","version","disable_drill_to_detail","allow_multi_catalog","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/databases/DatabaseModal/ExtraOptions.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, EventHandler } from 'react';\nimport cx from 'classnames';\nimport {\n  t,\n  SupersetTheme,\n  DatabaseConnectionExtension,\n} from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport IndeterminateCheckbox from 'src/components/IndeterminateCheckbox';\nimport Collapse from 'src/components/Collapse';\nimport {\n  StyledInputContainer,\n  StyledJsonEditor,\n  StyledExpandableForm,\n  antdCollapseStyles,\n  no_margin_bottom,\n} from './styles';\nimport { DatabaseObject, ExtraJson } from '../types';\n\nconst ExtraOptions = ({\n  db,\n  onInputChange,\n  onTextChange,\n  onEditorChange,\n  onExtraInputChange,\n  onExtraEditorChange,\n  extraExtension,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onTextChange: EventHandler<ChangeEvent<HTMLTextAreaElement>>;\n  onEditorChange: Function;\n  onExtraInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  onExtraEditorChange: Function;\n  extraExtension: DatabaseConnectionExtension | undefined;\n}) => {\n  const expandableModalIsOpen = !!db?.expose_in_sqllab;\n  const createAsOpen = !!(db?.allow_ctas || db?.allow_cvas);\n  const isFileUploadSupportedByEngine =\n    db?.engine_information?.supports_file_upload;\n  const supportsDynamicCatalog =\n    db?.engine_information?.supports_dynamic_catalog;\n\n  // JSON.parse will deep parse engine_params\n  // if it's an object, and we want to keep it a string\n  const extraJson: ExtraJson = JSON.parse(db?.extra || '{}', (key, value) => {\n    if (key === 'engine_params' && typeof value === 'object') {\n      // keep this as a string\n      return JSON.stringify(value);\n    }\n    return value;\n  });\n\n  const ExtraExtensionComponent = extraExtension?.component;\n  const ExtraExtensionLogo = extraExtension?.logo;\n  const ExtensionDescription = extraExtension?.description;\n\n  return (\n    <Collapse\n      expandIconPosition=\"right\"\n      accordion\n      css={(theme: SupersetTheme) => antdCollapseStyles(theme)}\n    >\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('SQL Lab')}</h4>\n            <p className=\"helper\">\n              {t('Adjust how this database will interact with SQL Lab.')}\n            </p>\n          </div>\n        }\n        key=\"1\"\n      >\n        <StyledInputContainer css={no_margin_bottom}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"expose_in_sqllab\"\n              indeterminate={false}\n              checked={!!db?.expose_in_sqllab}\n              onChange={onInputChange}\n              labelText={t('Expose database in SQL Lab')}\n            />\n            <InfoTooltip\n              tooltip={t('Allow this database to be queried in SQL Lab')}\n            />\n          </div>\n          <StyledExpandableForm\n            className={cx('expandable', {\n              open: expandableModalIsOpen,\n              'ctas-open': createAsOpen,\n            })}\n          >\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_ctas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_ctas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE TABLE AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new tables based on queries')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_cvas\"\n                  indeterminate={false}\n                  checked={!!db?.allow_cvas}\n                  onChange={onInputChange}\n                  labelText={t('Allow CREATE VIEW AS')}\n                />\n                <InfoTooltip\n                  tooltip={t('Allow creation of new views based on queries')}\n                />\n              </div>\n              <StyledInputContainer\n                className={cx('expandable', { open: createAsOpen })}\n              >\n                <div className=\"control-label\">{t('CTAS & CVAS SCHEMA')}</div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"text\"\n                    name=\"force_ctas_schema\"\n                    placeholder={t('Create or select schema...')}\n                    onChange={onInputChange}\n                    value={db?.force_ctas_schema || ''}\n                  />\n                </div>\n                <div className=\"helper\">\n                  {t(\n                    'Force all tables and views to be created in this schema when clicking CTAS or CVAS in SQL Lab.',\n                  )}\n                </div>\n              </StyledInputContainer>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allow_dml\"\n                  indeterminate={false}\n                  checked={!!db?.allow_dml}\n                  onChange={onInputChange}\n                  labelText={t('Allow DML')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Allow manipulation of the database using non-SELECT statements such as UPDATE, DELETE, CREATE, etc.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"cost_estimate_enabled\"\n                  indeterminate={false}\n                  checked={!!extraJson?.cost_estimate_enabled}\n                  onChange={onExtraInputChange}\n                  labelText={t('Enable query cost estimation')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'For Bigquery, Presto and Postgres, shows a button to compute cost before running a query.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"allows_virtual_table_explore\"\n                  indeterminate={false}\n                  // when `allows_virtual_table_explore` is not present in `extra` it defaults to true\n                  checked={extraJson?.allows_virtual_table_explore !== false}\n                  onChange={onExtraInputChange}\n                  labelText={t('Allow this database to be explored')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'When enabled, users are able to visualize SQL Lab results in Explore.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer css={no_margin_bottom}>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"disable_data_preview\"\n                  indeterminate={false}\n                  checked={!!extraJson?.disable_data_preview}\n                  onChange={onExtraInputChange}\n                  labelText={t('Disable SQL Lab data preview queries')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'Disable data preview when fetching table metadata in SQL Lab. ' +\n                      ' Useful to avoid browser performance issues when using ' +\n                      ' databases with very wide tables.',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"input-container\">\n                <IndeterminateCheckbox\n                  id=\"expand_rows\"\n                  indeterminate={false}\n                  checked={!!extraJson?.schema_options?.expand_rows}\n                  onChange={onExtraInputChange}\n                  labelText={t('Enable row expansion in schemas')}\n                />\n                <InfoTooltip\n                  tooltip={t(\n                    'For Trino, describe full schemas of nested ROW types, expanding them with dotted paths',\n                  )}\n                />\n              </div>\n            </StyledInputContainer>\n          </StyledExpandableForm>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Performance')}</h4>\n            <p className=\"helper\">\n              {t('Adjust performance settings of this database.')}\n            </p>\n          </div>\n        }\n        key=\"2\"\n      >\n        <StyledInputContainer className=\"mb-8\">\n          <div className=\"control-label\">{t('Chart cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"cache_timeout\"\n              value={db?.cache_timeout || ''}\n              placeholder={t('Enter duration in seconds')}\n              onChange={onInputChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the caching timeout for charts of this database.' +\n                ' A timeout of 0 indicates that the cache never expires, and -1 bypasses the cache.' +\n                ' Note this defaults to the global timeout if undefined.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Schema cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"schema_cache_timeout\"\n              value={\n                extraJson?.metadata_cache_timeout?.schema_cache_timeout || ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"schema-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for schemas of ' +\n                'this database. If left unset, the cache never expires.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Table cache timeout')}</div>\n          <div className=\"input-container\">\n            <input\n              type=\"number\"\n              name=\"table_cache_timeout\"\n              value={\n                extraJson?.metadata_cache_timeout?.table_cache_timeout || ''\n              }\n              placeholder={t('Enter duration in seconds')}\n              onChange={onExtraInputChange}\n              data-test=\"table-cache-timeout-test\"\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Duration (in seconds) of the metadata caching timeout for tables of ' +\n                'this database. If left unset, the cache never expires. ',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"allow_run_async\"\n              indeterminate={false}\n              checked={!!db?.allow_run_async}\n              onChange={onInputChange}\n              labelText={t('Asynchronous query execution')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Operate the database in asynchronous mode, meaning that the queries ' +\n                  'are executed on remote workers as opposed to on the web server itself. ' +\n                  'This assumes that you have a Celery worker setup as well as a results ' +\n                  'backend. Refer to the installation docs for more information.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={{ no_margin_bottom }}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"cancel_query_on_windows_unload\"\n              indeterminate={false}\n              checked={!!extraJson?.cancel_query_on_windows_unload}\n              onChange={onExtraInputChange}\n              labelText={t('Cancel query on window unload event')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Terminate running queries when browser window closed or navigated ' +\n                  'to another page. Available for Presto, Hive, MySQL, Postgres and ' +\n                  'Snowflake databases.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n      </Collapse.Panel>\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Security')}</h4>\n            <p className=\"helper\">{t('Add extra connection information.')}</p>\n          </div>\n        }\n        key=\"3\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Secure extra')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"masked_encrypted_extra\"\n              value={db?.masked_encrypted_extra || ''}\n              placeholder={t('Secure extra')}\n              onChange={(json: string) =>\n                onEditorChange({ json, name: 'masked_encrypted_extra' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'JSON string containing additional connection configuration. ' +\n                  'This is used to provide connection information for systems ' +\n                  'like Hive, Presto and BigQuery which do not conform to the ' +\n                  'username:password syntax normally used by SQLAlchemy.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Root certificate')}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"server_cert\"\n              value={db?.server_cert || ''}\n              placeholder={t('Enter CA_BUNDLE')}\n              onChange={onTextChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Optional CA_BUNDLE contents to validate HTTPS requests. Only ' +\n                'available on certain database engines.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer\n          css={!isFileUploadSupportedByEngine ? no_margin_bottom : {}}\n        >\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"impersonate_user\"\n              indeterminate={false}\n              checked={!!db?.impersonate_user}\n              onChange={onInputChange}\n              labelText={t(\n                'Impersonate logged in user (Presto, Trino, Drill, Hive, and GSheets)',\n              )}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'If Presto or Trino, all the queries in SQL Lab are going to be executed as the ' +\n                  'currently logged on user who must have permission to run them. If Hive ' +\n                  'and hive.server2.enable.doAs is enabled, will run the queries as ' +\n                  'service account, but impersonate the currently logged on user via ' +\n                  'hive.server2.proxy.user property.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        {isFileUploadSupportedByEngine && (\n          <StyledInputContainer\n            css={!db?.allow_file_upload ? no_margin_bottom : {}}\n          >\n            <div className=\"input-container\">\n              <IndeterminateCheckbox\n                id=\"allow_file_upload\"\n                indeterminate={false}\n                checked={!!db?.allow_file_upload}\n                onChange={onInputChange}\n                labelText={t('Allow file uploads to database')}\n              />\n            </div>\n          </StyledInputContainer>\n        )}\n        {isFileUploadSupportedByEngine && !!db?.allow_file_upload && (\n          <StyledInputContainer css={no_margin_bottom}>\n            <div className=\"control-label\">\n              {t('Schemas allowed for File upload')}\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"schemas_allowed_for_file_upload\"\n                value={(extraJson?.schemas_allowed_for_file_upload || []).join(\n                  ',',\n                )}\n                placeholder=\"schema1,schema2\"\n                onChange={onExtraInputChange}\n              />\n            </div>\n            <div className=\"helper\">\n              {t(\n                'A comma-separated list of schemas that files are allowed to upload to.',\n              )}\n            </div>\n          </StyledInputContainer>\n        )}\n      </Collapse.Panel>\n      {extraExtension && ExtraExtensionComponent && ExtensionDescription && (\n        <Collapse.Panel\n          header={\n            <div>\n              {ExtraExtensionLogo && <ExtraExtensionLogo />}\n              <span\n                css={(theme: SupersetTheme) => ({\n                  fontSize: theme.typography.sizes.l,\n                  fontWeight: theme.typography.weights.bold,\n                })}\n              >\n                {extraExtension?.title}\n              </span>\n              <p className=\"helper\">\n                <ExtensionDescription />\n              </p>\n            </div>\n          }\n          key={extraExtension?.title}\n          // @ts-ignore, 'icon' is valid in >=4.9.0 but missing from `CollapsibleType`\n          collapsible={extraExtension.enabled?.() ? 'icon' : 'disabled'}\n        >\n          <StyledInputContainer css={no_margin_bottom}>\n            <ExtraExtensionComponent db={db} onEdit={extraExtension.onEdit} />\n          </StyledInputContainer>\n        </Collapse.Panel>\n      )}\n      <Collapse.Panel\n        header={\n          <div>\n            <h4>{t('Other')}</h4>\n            <p className=\"helper\">{t('Additional settings.')}</p>\n          </div>\n        }\n        key=\"4\"\n      >\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Metadata Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"metadata_params\"\n              placeholder={t('Metadata Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'metadata_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n              value={\n                !Object.keys(extraJson?.metadata_params || {}).length\n                  ? ''\n                  : extraJson?.metadata_params\n              }\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The metadata_params object gets unpacked into the sqlalchemy.MetaData call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Engine Parameters')}</div>\n          <div className=\"input-container\">\n            <StyledJsonEditor\n              name=\"engine_params\"\n              placeholder={t('Engine Parameters')}\n              onChange={(json: string) =>\n                onExtraEditorChange({ json, name: 'engine_params' })\n              }\n              width=\"100%\"\n              height=\"160px\"\n              value={\n                !Object.keys(extraJson?.engine_params || {}).length\n                  ? ''\n                  : extraJson?.engine_params\n              }\n            />\n          </div>\n          <div className=\"helper\">\n            <div>\n              {t(\n                'The engine_params object gets unpacked into the sqlalchemy.create_engine call.',\n              )}\n            </div>\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer>\n          <div className=\"control-label\" data-test=\"version-label-test\">\n            {t('Version')}\n          </div>\n          <div className=\"input-container\" data-test=\"version-spinbutton-test\">\n            <input\n              type=\"text\"\n              name=\"version\"\n              placeholder={t('Version number')}\n              onChange={onExtraInputChange}\n              value={extraJson?.version || ''}\n            />\n          </div>\n          <div className=\"helper\">\n            {t(\n              'Specify the database version. This is used with Presto for query cost ' +\n                'estimation, and Dremio for syntax changes, among others.',\n            )}\n          </div>\n        </StyledInputContainer>\n        <StyledInputContainer css={no_margin_bottom}>\n          <div className=\"input-container\">\n            <IndeterminateCheckbox\n              id=\"disable_drill_to_detail\"\n              indeterminate={false}\n              checked={!!extraJson?.disable_drill_to_detail}\n              onChange={onExtraInputChange}\n              labelText={t('Disable drill to detail')}\n            />\n            <InfoTooltip\n              tooltip={t(\n                'Disables the drill to detail feature for this database.',\n              )}\n            />\n          </div>\n        </StyledInputContainer>\n        {supportsDynamicCatalog && (\n          <StyledInputContainer css={no_margin_bottom}>\n            <div className=\"input-container\">\n              <IndeterminateCheckbox\n                id=\"allow_multi_catalog\"\n                indeterminate={false}\n                checked={!!extraJson?.allow_multi_catalog}\n                onChange={onExtraInputChange}\n                labelText={t('Allow changing catalogs')}\n              />\n              <InfoTooltip\n                tooltip={t(\n                  'Give access to multiple catalogs in a single database connection.',\n                )}\n              />\n            </div>\n          </StyledInputContainer>\n        )}\n      </Collapse.Panel>\n    </Collapse>\n  );\n};\n\nexport default ExtraOptions;\n"],"mappings":"qVAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAoC,MAAM,OAAO;AACxD,OAAOC,EAAE,MAAM,YAAY;AAC3B,SACEC,CAAC,QAGI,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,qBAAqB,MAAM,sCAAsC;AACxE,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SACEC,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,kBAAkB,EAClBC,gBAAgB,QACX,UAAU,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAGlB,MAAMC,YAAY,GAAGA,CAAC,EACpBC,EAAE,EACFC,aAAa,EACbC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,mBAAmB,EACnBC,cAAc,EASf,KAAI,KAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA;EACH,MAAMC,qBAAqB,GAAG,CAAC,EAACZ,EAAE,YAAFA,EAAE,CAAEa,gBAAgB;EACpD,MAAMC,YAAY,GAAG,CAAC,EAAEd,EAAE,YAAFA,EAAE,CAAEe,UAAU,IAAIf,EAAE,YAAFA,EAAE,CAAEgB,UAAU,CAAC;EACzD,MAAMC,6BAA6B,GACjCjB,EAAE,qBAAAO,qBAAA,GAAFP,EAAE,CAAEkB,kBAAkB,qBAAtBX,qBAAA,CAAwBY,oBAAoB;EAC9C,MAAMC,sBAAsB,GAC1BpB,EAAE,qBAAAQ,sBAAA,GAAFR,EAAE,CAAEkB,kBAAkB,qBAAtBV,sBAAA,CAAwBa,wBAAwB;EAElD;EACA;EACA,MAAMC,SAAS,GAAcC,IAAI,CAACC,KAAK,CAAC,CAAAxB,EAAE,oBAAFA,EAAE,CAAEyB,KAAK,KAAI,IAAI,EAAE,CAACC,GAAG,EAAEC,KAAK,KAAI;IACxE,IAAID,GAAG,KAAK,eAAe,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;MACxD;MACA,OAAOJ,IAAI,CAACK,SAAS,CAACD,KAAK,CAAC;;IAE9B,OAAOA,KAAK;EACd,CAAC,CAAC;EAEF,MAAME,uBAAuB,GAAGvB,cAAc,oBAAdA,cAAc,CAAEwB,SAAS;EACzD,MAAMC,kBAAkB,GAAGzB,cAAc,oBAAdA,cAAc,CAAE0B,IAAI;EAC/C,MAAMC,oBAAoB,GAAG3B,cAAc,oBAAdA,cAAc,CAAE4B,WAAW;EAExD,OACEpC,aAAA,CAACP,QAAQ,IACP4C,kBAAkB,EAAC,OAAO,EAC1BC,SAAS,QACTC,GAAG,EAAEA,CAACC,KAAoB,KAAK3C,kBAAkB,CAAC2C,KAAK,CAAE;EAEzDxC,aAAA,CAACP,QAAQ,CAACgD,KAAK,IACbC,MAAM,EACJ1C,aAAA;IACEA,aAAA,aAAKV,CAAC,CAAC,SAAS,CAAM,CACtB;IAAAU,aAAA,QAAG2C,SAAS,EAAC,QAAQ;IAClBrD,CAAC,CAAC,sDAAsD;IACxD;IACA,CACN,EACDsC,GAAG,EAAC,GAAG;EAEP5B,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,kBAAkB,EACrBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAEa,gBAAgB,CAAC,EAChCgC,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,4BAA4B,CAAE,GAE7C;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CAAC,8CAA8C,CAAE;EAE1D,CACL;EAAAU,aAAA,CAACJ,oBAAoB,IACnB+C,SAAS,EAAEtD,EAAE,CAAC,YAAY,EAAE;MAC1B6D,IAAI,EAAEpC,qBAAqB;MAC3B,WAAW,EAAEE;KACd,CAAE;EAEHhB,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,YAAY,EACfC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAEe,UAAU,CAAC,EAC1B8B,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,uBAAuB,CAAE,GAExC;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CAAC,+CAA+C,CAAE;EAE3D;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,YAAY,EACfC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAEgB,UAAU,CAAC,EAC1B6B,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,sBAAsB,CAAE,GAEvC;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CAAC,8CAA8C,CAAE;EAE1D,CACL;EAAAU,aAAA,CAACN,oBAAoB,IACnBiD,SAAS,EAAEtD,EAAE,CAAC,YAAY,EAAE,EAAE6D,IAAI,EAAElC,YAAY,EAAE,CAAE;EAEpDhB,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,oBAAoB,CAAO,CAC7D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,YACEmD,IAAI,EAAC,MAAM,EACXC,IAAI,EAAC,mBAAmB,EACxBC,WAAW,EAAE/D,CAAC,CAAC,4BAA4B,CAAE,EAC7CyD,QAAQ,EAAE5C,aAAc,EACxB0B,KAAK,EAAE,CAAA3B,EAAE,oBAAFA,EAAE,CAAEoD,iBAAiB,KAAI,EAAG;EAElC,CACL;EAAAtD,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,gGAAgG;EAE/F;EACe;EACF,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,WAAW,EACdC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAEqD,SAAS,CAAC,EACzBR,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,WAAW,CAAE,GAE5B;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,qGAAqG,CACrG;EAED;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,uBAAuB,EAC1BC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,YAATA,SAAS,CAAEgC,qBAAqB,CAAC,EAC5CT,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,8BAA8B,CAAE,GAE/C;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,2FAA2F,CAC3F;EAED;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,8BAA8B,EACjCC,aAAa,EAAE;IACf;IAAA,EACAC,OAAO,EAAE,CAAAtB,SAAS,oBAATA,SAAS,CAAEiC,4BAA4B,MAAK,KAAM,EAC3DV,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,oCAAoC,CAAE,GAErD;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,uEAAuE,CACvE;EAED;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,sBAAsB,EACzBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,YAATA,SAAS,CAAEkC,oBAAoB,CAAC,EAC3CX,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,sCAAsC,CAAE,GAEvD;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,gEAAgE;IAC9D,yDAAyD;IACzD,mCAAmC,CACrC;EAED;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,aAAa,EAChBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,aAAAb,qBAAA,GAATa,SAAS,CAAEmC,cAAc,aAAzBhD,qBAAA,CAA2BiD,WAAW,CAAC,EAClDb,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,iCAAiC,CAAE,GAElD;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,wFAAwF,CACxF;EAED;EACe;EACF;EACF;EACR,CAChB;EAAAU,aAAA,CAACP,QAAQ,CAACgD,KAAK,IACbC,MAAM,EACJ1C,aAAA;IACEA,aAAA,aAAKV,CAAC,CAAC,aAAa,CAAM,CAC1B;IAAAU,aAAA,QAAG2C,SAAS,EAAC,QAAQ;IAClBrD,CAAC,CAAC,+CAA+C;IACjD;IACA,CACN,EACDsC,GAAG,EAAC,GAAG;EAEP5B,aAAA,CAACN,oBAAoB,IAACiD,SAAS,EAAC,MAAM;EACpC3C,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,qBAAqB,CAAO,CAC9D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,YACEmD,IAAI,EAAC,QAAQ,EACbC,IAAI,EAAC,eAAe,EACpBvB,KAAK,EAAE,CAAA3B,EAAE,oBAAFA,EAAE,CAAE2D,aAAa,KAAI,EAAG,EAC/BR,WAAW,EAAE/D,CAAC,CAAC,2BAA2B,CAAE,EAC5CyD,QAAQ,EAAE5C,aAAc;EAEvB,CACL;EAAAH,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,2EAA2E;EACzE,oFAAoF;EACpF,yDAAyD;EAE1D;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,sBAAsB,CAAO,CAC/D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,YACEmD,IAAI,EAAC,QAAQ,EACbC,IAAI,EAAC,sBAAsB,EAC3BvB,KAAK,EACH,CAAAL,SAAS,qBAAAZ,qBAAA,GAATY,SAAS,CAAEsC,sBAAsB,qBAAjClD,qBAAA,CAAmCmD,oBAAoB,KAAI,EAC5D,EACDV,WAAW,EAAE/D,CAAC,CAAC,2BAA2B,CAAE,EAC5CyD,QAAQ,EAAEzC,kBAAmB,EAC7B,aAAU,2BAA2B;EAEpC,CACL;EAAAN,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,uEAAuE;EACrE,wDAAwD;EAEzD;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,qBAAqB,CAAO,CAC9D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,YACEmD,IAAI,EAAC,QAAQ,EACbC,IAAI,EAAC,qBAAqB,EAC1BvB,KAAK,EACH,CAAAL,SAAS,qBAAAX,sBAAA,GAATW,SAAS,CAAEsC,sBAAsB,qBAAjCjD,sBAAA,CAAmCmD,mBAAmB,KAAI,EAC3D,EACDX,WAAW,EAAE/D,CAAC,CAAC,2BAA2B,CAAE,EAC5CyD,QAAQ,EAAEzC,kBAAmB,EAC7B,aAAU,0BAA0B;EAEnC,CACL;EAAAN,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,sEAAsE;EACpE,yDAAyD;EAE1D;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,eAAA0B,IAAA,CAAE,EAAEnE,gBAAgB,EAAE,EAAAoE,OAAA,CAAAC,GAAA,CAAAC,QAAA,iDAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA,2qyBAAC;EAC9CpE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,iBAAiB,EACpBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAEmE,eAAe,CAAC,EAC/BtB,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,8BAA8B,CAAE,GAE/C;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,sEAAsE;IACpE,yEAAyE;IACzE,wEAAwE;IACxE,+DAA+D,CACjE;EAED;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,eAAA0B,IAAA,CAAE,EAAEnE,gBAAgB,EAAE,EAAAoE,OAAA,CAAAC,GAAA,CAAAC,QAAA,iDAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA,2qyBAAC;EAC9CpE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,gCAAgC,EACnCC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,YAATA,SAAS,CAAE8C,8BAA8B,CAAC,EACrDvB,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,qCAAqC,CAAE,GAEtD;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,oEAAoE;IAClE,mEAAmE;IACnE,sBAAsB,CACxB;EAED;EACe;EACR,CAChB;EAAAU,aAAA,CAACP,QAAQ,CAACgD,KAAK,IACbC,MAAM,EACJ1C,aAAA;IACEA,aAAA,aAAKV,CAAC,CAAC,UAAU,CAAM,CACvB;IAAAU,aAAA,QAAG2C,SAAS,EAAC,QAAQ,IAAErD,CAAC,CAAC,mCAAmC,CAAK;IAC9D,CACN,EACDsC,GAAG,EAAC,GAAG;EAEP5B,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,cAAc,CAAO,CACvD;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACL,gBAAgB,IACfyD,IAAI,EAAC,wBAAwB,EAC7BvB,KAAK,EAAE,CAAA3B,EAAE,oBAAFA,EAAE,CAAEqE,sBAAsB,KAAI,EAAG,EACxClB,WAAW,EAAE/D,CAAC,CAAC,cAAc,CAAE,EAC/ByD,QAAQ,EAAEA,CAACyB,IAAY,KACrBnE,cAAc,CAAC,EAAEmE,IAAI,EAAEpB,IAAI,EAAE,wBAAwB,EAAE,CACxD,EACDqB,KAAK,EAAC,MAAM,EACZC,MAAM,EAAC,OAAO;EAEb,CACL;EAAA1E,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACrB3C,aAAA;EACGV,CAAC,CACA,8DAA8D;EAC5D,6DAA6D;EAC7D,6DAA6D;EAC7D,uDAAuD;EAExD;EACF;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,kBAAkB,CAAO,CAC3D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,eACEoD,IAAI,EAAC,aAAa,EAClBvB,KAAK,EAAE,CAAA3B,EAAE,oBAAFA,EAAE,CAAEyE,WAAW,KAAI,EAAG,EAC7BtB,WAAW,EAAE/D,CAAC,CAAC,iBAAiB,CAAE,EAClCyD,QAAQ,EAAE3C,YAAa;EAEtB,CACL;EAAAJ,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,+DAA+D;EAC7D,wCAAwC;EAEzC;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IACnB6C,GAAG,EAAE,CAACpB,6BAA6B,GAAGrB,gBAAgB,GAAG,EAAG;EAE5DE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,kBAAkB,EACrBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAE0E,gBAAgB,CAAC,EAChC7B,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CACV,sEAAsE,CACtE,GAEJ;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,iFAAiF;IAC/E,yEAAyE;IACzE,mEAAmE;IACnE,oEAAoE;IACpE,mCAAmC,CACrC;EAED;EACe,CACtB;EAAC6B,6BAA6B,IAC5BnB,aAAA,CAACN,oBAAoB,IACnB6C,GAAG,EAAE,EAACrC,EAAE,YAAFA,EAAE,CAAE2E,iBAAiB,IAAG/E,gBAAgB,GAAG,EAAG;EAEpDE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,mBAAmB,EACtBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAAC5C,EAAE,YAAFA,EAAE,CAAE2E,iBAAiB,CAAC,EACjC9B,QAAQ,EAAE5C,aAAc,EACxB6C,SAAS,EAAE1D,CAAC,CAAC,gCAAgC,CAAE;EAE9C;EACe,CACvB;EACA6B,6BAA6B,IAAI,CAAC,EAACjB,EAAE,YAAFA,EAAE,CAAE2E,iBAAiB,KACvD7E,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,eAAe;EAC3BrD,CAAC,CAAC,iCAAiC;EACjC,CACL;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,YACEmD,IAAI,EAAC,MAAM,EACXC,IAAI,EAAC,iCAAiC,EACtCvB,KAAK,EAAE,CAAC,CAAAL,SAAS,oBAATA,SAAS,CAAEsD,+BAA+B,KAAI,EAAE,EAAEC,IAAI,CAC5D,GAAG,CACH,EACF1B,WAAW,EAAC,iBAAiB,EAC7BN,QAAQ,EAAEzC,kBAAmB;EAE5B,CACL;EAAAN,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,wEAAwE;EAEvE;EACe;EAEV,CAChB;EAACkB,cAAc,IAAIuB,uBAAuB,IAAII,oBAAoB,IAChEnC,aAAA,CAACP,QAAQ,CAACgD,KAAK,IACbC,MAAM,EACJ1C,aAAA;IACGiC,kBAAkB,IAAIjC,aAAA,CAACiC,kBAAkB,OAAG;IAC7CjC,aAAA,WACEuC,GAAG,EAAEA,CAACC,KAAoB,MAAM;QAC9BwC,QAAQ,EAAExC,KAAK,CAACyC,UAAU,CAACC,KAAK,CAACC,CAAC;QAClCC,UAAU,EAAE5C,KAAK,CAACyC,UAAU,CAACI,OAAO,CAACC;OACtC,CAAE;IAEF9E,cAAc,oBAAdA,cAAc,CAAE+E;IACb,CACN;IAAAvF,aAAA,QAAG2C,SAAS,EAAC,QAAQ;IACnB3C,aAAA,CAACmC,oBAAoB;IACpB;IACA,CACN,EACDP,GAAG,EAAEpB,cAAc,oBAAdA,cAAc,CAAE+E;IACrB;IAAA,EACAC,WAAW,EAAEhF,cAAc,CAACiF,OAAO,YAAtBjF,cAAc,CAACiF,OAAO,CAAE,CAAE,GAAG,MAAM,GAAG,UAAW;EAE9DzF,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,CAAC+B,uBAAuB,IAAC7B,EAAE,EAAEA,EAAG,EAACwF,MAAM,EAAElF,cAAc,CAACkF,MAAO;EAC3C;EACR,CACjB;EACD1F,aAAA,CAACP,QAAQ,CAACgD,KAAK,IACbC,MAAM,EACJ1C,aAAA;IACEA,aAAA,aAAKV,CAAC,CAAC,OAAO,CAAM,CACpB;IAAAU,aAAA,QAAG2C,SAAS,EAAC,QAAQ,IAAErD,CAAC,CAAC,sBAAsB,CAAK;IACjD,CACN,EACDsC,GAAG,EAAC,GAAG;EAEP5B,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,qBAAqB,CAAO,CAC9D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACL,gBAAgB,IACfyD,IAAI,EAAC,iBAAiB,EACtBC,WAAW,EAAE/D,CAAC,CAAC,qBAAqB,CAAE,EACtCyD,QAAQ,EAAEA,CAACyB,IAAY,KACrBjE,mBAAmB,CAAC,EAAEiE,IAAI,EAAEpB,IAAI,EAAE,iBAAiB,EAAE,CACtD,EACDqB,KAAK,EAAC,MAAM,EACZC,MAAM,EAAC,OAAO,EACd7C,KAAK,EACH,CAAC8D,MAAM,CAACC,IAAI,CAAC,CAAApE,SAAS,oBAATA,SAAS,CAAEqE,eAAe,KAAI,EAAE,CAAC,CAACC,MAAM;IACjD,EAAE;IACFtE,SAAS,oBAATA,SAAS,CAAEqE,eAChB;EAEA,CACL;EAAA7F,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACrB3C,aAAA;EACGV,CAAC,CACA,6EAA6E;EAE5E;EACF;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,IAAErD,CAAC,CAAC,mBAAmB,CAAO,CAC5D;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACL,gBAAgB,IACfyD,IAAI,EAAC,eAAe,EACpBC,WAAW,EAAE/D,CAAC,CAAC,mBAAmB,CAAE,EACpCyD,QAAQ,EAAEA,CAACyB,IAAY,KACrBjE,mBAAmB,CAAC,EAAEiE,IAAI,EAAEpB,IAAI,EAAE,eAAe,EAAE,CACpD,EACDqB,KAAK,EAAC,MAAM,EACZC,MAAM,EAAC,OAAO,EACd7C,KAAK,EACH,CAAC8D,MAAM,CAACC,IAAI,CAAC,CAAApE,SAAS,oBAATA,SAAS,CAAEuE,aAAa,KAAI,EAAE,CAAC,CAACD,MAAM;IAC/C,EAAE;IACFtE,SAAS,oBAATA,SAAS,CAAEuE,aAChB;EAEA,CACL;EAAA/F,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACrB3C,aAAA;EACGV,CAAC,CACA,gFAAgF;EAE/E;EACF;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB;EACnBM,aAAA,UAAK2C,SAAS,EAAC,eAAe,EAAC,aAAU,oBAAoB;EAC1DrD,CAAC,CAAC,SAAS;EACT,CACL;EAAAU,aAAA,UAAK2C,SAAS,EAAC,iBAAiB,EAAC,aAAU,yBAAyB;EAClE3C,aAAA,YACEmD,IAAI,EAAC,MAAM,EACXC,IAAI,EAAC,SAAS,EACdC,WAAW,EAAE/D,CAAC,CAAC,gBAAgB,CAAE,EACjCyD,QAAQ,EAAEzC,kBAAmB,EAC7BuB,KAAK,EAAE,CAAAL,SAAS,oBAATA,SAAS,CAAEwE,OAAO,KAAI,EAAG;EAE/B,CACL;EAAAhG,aAAA,UAAK2C,SAAS,EAAC,QAAQ;EACpBrD,CAAC,CACA,wEAAwE;EACtE,0DAA0D;EAE3D;EACe,CACtB;EAAAU,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,yBAAyB,EAC5BC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,YAATA,SAAS,CAAEyE,uBAAuB,CAAC,EAC9ClD,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,yBAAyB,CAAE,GAE1C;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,yDAAyD,CACzD;EAED;EACe,CACtB;EAACgC,sBAAsB,IACrBtB,aAAA,CAACN,oBAAoB,IAAC6C,GAAG,EAAEzC,gBAAiB;EAC1CE,aAAA,UAAK2C,SAAS,EAAC,iBAAiB;EAC9B3C,aAAA,CAACR,qBAAqB,IACpBoD,EAAE,EAAC,qBAAqB,EACxBC,aAAa,EAAE,KAAM,EACrBC,OAAO,EAAE,CAAC,EAACtB,SAAS,YAATA,SAAS,CAAE0E,mBAAmB,CAAC,EAC1CnD,QAAQ,EAAEzC,kBAAmB,EAC7B0C,SAAS,EAAE1D,CAAC,CAAC,yBAAyB,CAAE,GAE1C;EAAAU,aAAA,CAACT,WAAW,IACV0D,OAAO,EAAE3D,CAAC,CACR,mEAAmE,CACnE;EAED;EACe;EAEV;EACR,CAAC;AAEf,CAAC,CAAC,MAAA6G,QAAA;AAEalG,YAAY,CAA3B,eAAAkG,QAAA,CAA4B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlkBtBvG,YAAY,kIAAAmG,cAAA,CAAAI,QAAA,CAAAL,QAAA,qJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}