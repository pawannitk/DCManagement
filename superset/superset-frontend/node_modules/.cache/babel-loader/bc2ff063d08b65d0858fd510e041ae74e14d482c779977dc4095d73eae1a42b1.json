{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo } from 'react';\nexport const NULL_STRING = 'NULL';\nexport function useCellContentParser({ columnKeys, expandedColumns }) {\n  // columns that have complex type and were expanded into sub columns\n  const complexColumns = useMemo(() => columnKeys.reduce((obj, key) => ({\n    ...obj,\n    [key]: expandedColumns == null ? void 0 : expandedColumns.some((name) => name.startsWith(`${key}.`))\n  }), {}), [expandedColumns, columnKeys]);\n  return useCallback(({ cellData, columnKey }) => {\n    if (cellData === null) {\n      return NULL_STRING;\n    }\n    const content = String(cellData);\n    const firstCharacter = content.substring(0, 1);\n    let truncated;\n    if (firstCharacter === '[') {\n      truncated = '[…]';\n    } else\n    if (firstCharacter === '{') {\n      truncated = '{…}';\n    } else\n    {\n      truncated = '';\n    }\n    return complexColumns[columnKey] ? truncated : content;\n  }, [complexColumns]);\n}__signature__(useCellContentParser, \"useMemo{complexColumns}\\nuseCallback{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NULL_STRING, \"NULL_STRING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/FilterableTable/useCellContentParser.ts\");reactHotLoader.register(useCellContentParser, \"useCellContentParser\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/FilterableTable/useCellContentParser.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useMemo","NULL_STRING","useCellContentParser","columnKeys","expandedColumns","complexColumns","reduce","obj","key","some","name","startsWith","cellData","columnKey","content","String","firstCharacter","substring","truncated","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/FilterableTable/useCellContentParser.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo } from 'react';\n\nexport type CellDataType = string | number | null;\n\nexport const NULL_STRING = 'NULL';\n\ntype Params = {\n  columnKeys: string[];\n  expandedColumns?: string[];\n};\n\nexport function useCellContentParser({ columnKeys, expandedColumns }: Params) {\n  // columns that have complex type and were expanded into sub columns\n  const complexColumns = useMemo<Record<string, boolean>>(\n    () =>\n      columnKeys.reduce(\n        (obj, key) => ({\n          ...obj,\n          [key]: expandedColumns?.some(name => name.startsWith(`${key}.`)),\n        }),\n        {},\n      ),\n    [expandedColumns, columnKeys],\n  );\n\n  return useCallback(\n    ({\n      cellData,\n      columnKey,\n    }: {\n      cellData: CellDataType;\n      columnKey: string;\n    }) => {\n      if (cellData === null) {\n        return NULL_STRING;\n      }\n      const content = String(cellData);\n      const firstCharacter = content.substring(0, 1);\n      let truncated;\n      if (firstCharacter === '[') {\n        truncated = '[…]';\n      } else if (firstCharacter === '{') {\n        truncated = '{…}';\n      } else {\n        truncated = '';\n      }\n      return complexColumns[columnKey] ? truncated : content;\n    },\n    [complexColumns],\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAI5C,OAAO,MAAMC,WAAW,GAAG,MAAM;AAOjC,OAAM,SAAUC,oBAAoBA,CAAC,EAAEC,UAAU,EAAEC,eAAe,EAAU;EAC1E;EACA,MAAMC,cAAc,GAAGL,OAAO,CAC5B,MACEG,UAAU,CAACG,MAAM,CACf,CAACC,GAAG,EAAEC,GAAG,MAAM;IACb,GAAGD,GAAG;IACN,CAACC,GAAG,GAAGJ,eAAe,oBAAfA,eAAe,CAAEK,IAAI,CAAC,CAAAC,IAAI,KAAIA,IAAI,CAACC,UAAU,CAAC,GAAGH,GAAG,GAAG,CAAC;GAChE,CAAC,EACF,EAAE,CACH,EACH,CAACJ,eAAe,EAAED,UAAU,CAAC,CAC9B;EAED,OAAOJ,WAAW,CAChB,CAAC,EACCa,QAAQ,EACRC,SAAS,EAIV,KAAI;IACH,IAAID,QAAQ,KAAK,IAAI,EAAE;MACrB,OAAOX,WAAW;;IAEpB,MAAMa,OAAO,GAAGC,MAAM,CAACH,QAAQ,CAAC;IAChC,MAAMI,cAAc,GAAGF,OAAO,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAIC,SAAS;IACb,IAAIF,cAAc,KAAK,GAAG,EAAE;MAC1BE,SAAS,GAAG,KAAK;KAClB;IAAM,IAAIF,cAAc,KAAK,GAAG,EAAE;MACjCE,SAAS,GAAG,KAAK;KAClB;IAAM;MACLA,SAAS,GAAG,EAAE;;IAEhB,OAAOb,cAAc,CAACQ,SAAS,CAAC,GAAGK,SAAS,GAAGJ,OAAO;EACxD,CAAC,EACD,CAACT,cAAc,CAAC,CACjB;AACH,CAACc,aAAA,CAvCejB,oBAAoB,+DAAAkB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAPvBvB,WAAW,kIAAAmB,cAAA,CAAAI,QAAA,CAORtB,oBAAoB,mKAAAuB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}