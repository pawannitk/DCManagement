{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export var TableTab;\n(function (TableTab) {\n  TableTab[\"Favorite\"] = \"Favorite\";\n  TableTab[\"Mine\"] = \"Mine\";\n  TableTab[\"Other\"] = \"Other\";\n  TableTab[\"Viewed\"] = \"Viewed\";\n  TableTab[\"Created\"] = \"Created\";\n  TableTab[\"Edited\"] = \"Edited\";\n})(TableTab || (TableTab = {}));\nexport var QueryObjectColumns;\n(function (QueryObjectColumns) {\n  QueryObjectColumns[\"Id\"] = \"id\";\n  QueryObjectColumns[\"ChangedOn\"] = \"changed_on\";\n  QueryObjectColumns[\"ChangedBy\"] = \"changed_by\";\n  QueryObjectColumns[\"Database\"] = \"database\";\n  QueryObjectColumns[\"DatabaseName\"] = \"database.database_name\";\n  QueryObjectColumns[\"Schema\"] = \"schema\";\n  QueryObjectColumns[\"Sql\"] = \"sql\";\n  QueryObjectColumns[\"ExecutedSql\"] = \"executed_sql\";\n  QueryObjectColumns[\"SqlTables\"] = \"sql_tables\";\n  QueryObjectColumns[\"Status\"] = \"status\";\n  QueryObjectColumns[\"TabName\"] = \"tab_name\";\n  QueryObjectColumns[\"User\"] = \"user\";\n  QueryObjectColumns[\"UserFirstName\"] = \"user.first_name\";\n  QueryObjectColumns[\"StartTime\"] = \"start_time\";\n  QueryObjectColumns[\"EndTime\"] = \"end_time\";\n  QueryObjectColumns[\"Rows\"] = \"rows\";\n  QueryObjectColumns[\"TmpTableName\"] = \"tmp_table_name\";\n  QueryObjectColumns[\"TrackingUrl\"] = \"tracking_url\";\n})(QueryObjectColumns || (QueryObjectColumns = {}));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableTab, \"TableTab\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/CRUD/types.ts\");reactHotLoader.register(QueryObjectColumns, \"QueryObjectColumns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/views/CRUD/types.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["TableTab","QueryObjectColumns","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/views/CRUD/types.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryState } from '@superset-ui/core';\nimport { User } from 'src/types/bootstrapTypes';\nimport Database from 'src/types/Database';\nimport Owner from 'src/types/Owner';\n\nexport type FavoriteStatus = {\n  [id: number]: boolean;\n};\n\nexport enum TableTab {\n  Favorite = 'Favorite',\n  Mine = 'Mine',\n  Other = 'Other',\n  Viewed = 'Viewed',\n  Created = 'Created',\n  Edited = 'Edited',\n}\n\nexport type Filter = {\n  col: string;\n  opr: string;\n  value: string | number;\n};\n\nexport interface DashboardTableProps {\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n  user?: User;\n  mine: Array<Dashboard>;\n  showThumbnails?: boolean;\n  otherTabData: Array<Dashboard>;\n  otherTabFilters: Filter[];\n  otherTabTitle: string;\n}\n\nexport interface Dashboard {\n  certified_by?: string;\n  certification_details?: string;\n  changed_by_name: string;\n  changed_on_delta_humanized?: string;\n  changed_on_utc?: string;\n  changed_by: string;\n  dashboard_title: string;\n  slice_name?: string;\n  id: number;\n  published: boolean;\n  url: string;\n  thumbnail_url: string;\n  owners: Owner[];\n  loading?: boolean;\n}\n\nexport type SavedQueryObject = {\n  id: number;\n  changed_on: string;\n  changed_on_delta_humanized: string;\n  database: {\n    database_name: string;\n    id: number;\n  };\n  db_id: number;\n  description?: string;\n  label: string;\n  schema: string;\n  sql: string | null;\n  sql_tables?: { catalog?: string; schema: string; table: string }[];\n};\n\nexport interface QueryObject {\n  id: number;\n  changed_on: string;\n  database: {\n    database_name: string;\n  };\n  schema: string;\n  sql: string;\n  executed_sql: string | null;\n  sql_tables?: { catalog?: string; schema: string; table: string }[];\n  status: QueryState;\n  tab_name: string;\n  user: {\n    first_name: string;\n    id: number;\n    last_name: string;\n    username: string;\n  };\n  start_time: number;\n  end_time: number;\n  rows: number;\n  tmp_table_name: string;\n  tracking_url: string;\n}\n\nexport enum QueryObjectColumns {\n  Id = 'id',\n  ChangedOn = 'changed_on',\n  ChangedBy = 'changed_by',\n  Database = 'database',\n  DatabaseName = 'database.database_name',\n  Schema = 'schema',\n  Sql = 'sql',\n  ExecutedSql = 'executed_sql',\n  SqlTables = 'sql_tables',\n  Status = 'status',\n  TabName = 'tab_name',\n  User = 'user',\n  UserFirstName = 'user.first_name',\n  StartTime = 'start_time',\n  EndTime = 'end_time',\n  Rows = 'rows',\n  TmpTableName = 'tmp_table_name',\n  TrackingUrl = 'tracking_url',\n}\n\nexport type ImportResourceName =\n  | 'chart'\n  | 'dashboard'\n  | 'database'\n  | 'dataset'\n  | 'saved_query';\n\nexport interface Tag {\n  changed_on_delta_humanized: string;\n  changed_by: Owner;\n  created_on_delta_humanized: string;\n  name: string;\n  id: number;\n  created_by: Owner;\n  description: string;\n  type: string;\n}\n\nexport type DatabaseObject = Partial<Database> &\n  Pick<Database, 'sqlalchemy_uri'>;\n"],"mappings":"uSA2BA,WAAYA,QAOX;AAPD,WAAYA,QAAQ;EAClBA,QAAA,yBAAqB;EACrBA,QAAA,iBAAa;EACbA,QAAA,mBAAe;EACfA,QAAA,qBAAiB;EACjBA,QAAA,uBAAmB;EACnBA,QAAA,qBAAiB;AACnB,CAAC,EAPWA,QAAQ,KAARA,QAAQ;AAoFpB,WAAYC,kBAmBX;AAnBD,WAAYA,kBAAkB;EAC5BA,kBAAA,aAAS;EACTA,kBAAA,4BAAwB;EACxBA,kBAAA,4BAAwB;EACxBA,kBAAA,yBAAqB;EACrBA,kBAAA,2CAAuC;EACvCA,kBAAA,qBAAiB;EACjBA,kBAAA,eAAW;EACXA,kBAAA,gCAA4B;EAC5BA,kBAAA,4BAAwB;EACxBA,kBAAA,qBAAiB;EACjBA,kBAAA,wBAAoB;EACpBA,kBAAA,iBAAa;EACbA,kBAAA,qCAAiC;EACjCA,kBAAA,4BAAwB;EACxBA,kBAAA,wBAAoB;EACpBA,kBAAA,iBAAa;EACbA,kBAAA,mCAA+B;EAC/BA,kBAAA,gCAA4B;AAC9B,CAAC,EAnBWA,kBAAkB,KAAlBA,kBAAkB,QAmB7B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAvGWN,QAOX,gGAAAE,cAAA,CAAAI,QAAA,CA6EWL,kBAmBX,kIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}