{"ast":null,"code":"import _omit from \"lodash/omit\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\n\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { t, styled, css, FeatureFlag, isFeatureEnabled } from '@superset-ui/core';\nimport QueryTable from 'src/SqlLab/components/QueryTable';\nimport { useEditorQueriesQuery } from 'src/hooks/apiResources/queries';\nimport { Skeleton } from 'src/components';\nimport useEffectEvent from 'src/hooks/useEffectEvent';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledEmptyStateWrapper = styled.div`\n  height: 100%;\n  .ant-empty-image img {\n    margin-right: 28px;\n  }\n\n  p {\n    margin-right: 28px;\n  }\n`;\nconst getEditorQueries = (queries, queryEditorId) => Object.values(queries).filter(({ sqlEditorId }) => String(sqlEditorId) === String(queryEditorId));\nconst QueryHistory = ({ queryEditorId, displayLimit, latestQueryId }) => {\n  const [ref, hasReachedBottom] = useInView({ threshold: 0 });\n  const [pageIndex, setPageIndex] = useState(0);\n  const queries = useSelector(({ sqlLab: { queries } }) => queries, shallowEqual);\n  const { data, isLoading, isFetching } = useEditorQueriesQuery({ editorId: `${queryEditorId}`, pageIndex }, {\n    skip: !isFeatureEnabled(FeatureFlag.SqllabBackendPersistence)\n  });\n  const editorQueries = useMemo(() => data ?\n  getEditorQueries(_omit(queries, data.result.map(({ id }) => id)), queryEditorId).\n  concat(data.result).\n  reverse() :\n  getEditorQueries(queries, queryEditorId), [queries, data, queryEditorId]);\n  const loadNext = useEffectEvent(() => {\n    setPageIndex(pageIndex + 1);\n  });\n  const loadedDataCount = (data == null ? void 0 : data.result.length) || 0;\n  const totalCount = (data == null ? void 0 : data.count) || 0;\n  useEffect(() => {\n    if (hasReachedBottom && loadedDataCount < totalCount) {\n      loadNext();\n    }\n  }, [hasReachedBottom, loadNext, loadedDataCount, totalCount]);\n  if (!editorQueries.length && isLoading) {\n    return ___EmotionJSX(Skeleton, { active: true });\n  }\n  return editorQueries.length > 0 ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(QueryTable, { columns: [\n    'state',\n    'started',\n    'duration',\n    'progress',\n    'rows',\n    'sql',\n    'results',\n    'actions'],\n    queries: editorQueries, displayLimit: displayLimit, latestQueryId: latestQueryId }),\n  data && loadedDataCount < totalCount && ___EmotionJSX(\"div\", { ref: ref, css: css`\n            position: relative;\n            top: -150px;\n          ` }),\n  isFetching && ___EmotionJSX(Skeleton, { active: true })\n  ) : ___EmotionJSX(StyledEmptyStateWrapper, null,\n  ___EmotionJSX(EmptyStateMedium, { title: t('Run a query to display query history'), image: \"document.svg\" })\n  );\n};__signature__(QueryHistory, \"useInView{[ref, hasReachedBottom]}\\nuseState{[pageIndex, setPageIndex](0)}\\nuseSelector{queries}\\nuseEditorQueriesQuery{{ data, isLoading, isFetching }}\\nuseMemo{editorQueries}\\nuseEffectEvent{loadNext}\\nuseEffect{}\", () => [useInView, useSelector, useEditorQueriesQuery, useEffectEvent]);const _default =\nQueryHistory;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledEmptyStateWrapper, \"StyledEmptyStateWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/QueryHistory/index.tsx\");reactHotLoader.register(getEditorQueries, \"getEditorQueries\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/QueryHistory/index.tsx\");reactHotLoader.register(QueryHistory, \"QueryHistory\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/QueryHistory/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/QueryHistory/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useMemo","useState","shallowEqual","useSelector","useInView","EmptyStateMedium","t","styled","css","FeatureFlag","isFeatureEnabled","QueryTable","useEditorQueriesQuery","Skeleton","useEffectEvent","jsx","___EmotionJSX","StyledEmptyStateWrapper","div","getEditorQueries","queries","queryEditorId","Object","values","filter","sqlEditorId","String","QueryHistory","displayLimit","latestQueryId","ref","hasReachedBottom","threshold","pageIndex","setPageIndex","sqlLab","data","isLoading","isFetching","editorId","skip","SqllabBackendPersistence","editorQueries","_omit","result","map","id","concat","reverse","loadNext","loadedDataCount","length","totalCount","count","active","Fragment","columns","title","image","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/QueryHistory/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport { omit } from 'lodash';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport {\n  t,\n  styled,\n  css,\n  FeatureFlag,\n  isFeatureEnabled,\n} from '@superset-ui/core';\nimport QueryTable from 'src/SqlLab/components/QueryTable';\nimport { SqlLabRootState } from 'src/SqlLab/types';\nimport { useEditorQueriesQuery } from 'src/hooks/apiResources/queries';\nimport { Skeleton } from 'src/components';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\n\ninterface QueryHistoryProps {\n  queryEditorId: string | number;\n  displayLimit: number;\n  latestQueryId: string | undefined;\n}\n\nconst StyledEmptyStateWrapper = styled.div`\n  height: 100%;\n  .ant-empty-image img {\n    margin-right: 28px;\n  }\n\n  p {\n    margin-right: 28px;\n  }\n`;\n\nconst getEditorQueries = (\n  queries: SqlLabRootState['sqlLab']['queries'],\n  queryEditorId: string | number,\n) =>\n  Object.values(queries).filter(\n    ({ sqlEditorId }) => String(sqlEditorId) === String(queryEditorId),\n  );\n\nconst QueryHistory = ({\n  queryEditorId,\n  displayLimit,\n  latestQueryId,\n}: QueryHistoryProps) => {\n  const [ref, hasReachedBottom] = useInView({ threshold: 0 });\n  const [pageIndex, setPageIndex] = useState(0);\n  const queries = useSelector(\n    ({ sqlLab: { queries } }: SqlLabRootState) => queries,\n    shallowEqual,\n  );\n  const { data, isLoading, isFetching } = useEditorQueriesQuery(\n    { editorId: `${queryEditorId}`, pageIndex },\n    {\n      skip: !isFeatureEnabled(FeatureFlag.SqllabBackendPersistence),\n    },\n  );\n  const editorQueries = useMemo(\n    () =>\n      data\n        ? getEditorQueries(\n            omit(\n              queries,\n              data.result.map(({ id }) => id),\n            ),\n            queryEditorId,\n          )\n            .concat(data.result)\n            .reverse()\n        : getEditorQueries(queries, queryEditorId),\n    [queries, data, queryEditorId],\n  );\n\n  const loadNext = useEffectEvent(() => {\n    setPageIndex(pageIndex + 1);\n  });\n\n  const loadedDataCount = data?.result.length || 0;\n  const totalCount = data?.count || 0;\n\n  useEffect(() => {\n    if (hasReachedBottom && loadedDataCount < totalCount) {\n      loadNext();\n    }\n  }, [hasReachedBottom, loadNext, loadedDataCount, totalCount]);\n\n  if (!editorQueries.length && isLoading) {\n    return <Skeleton active />;\n  }\n\n  return editorQueries.length > 0 ? (\n    <>\n      <QueryTable\n        columns={[\n          'state',\n          'started',\n          'duration',\n          'progress',\n          'rows',\n          'sql',\n          'results',\n          'actions',\n        ]}\n        queries={editorQueries}\n        displayLimit={displayLimit}\n        latestQueryId={latestQueryId}\n      />\n      {data && loadedDataCount < totalCount && (\n        <div\n          ref={ref}\n          css={css`\n            position: relative;\n            top: -150px;\n          `}\n        />\n      )}\n      {isFetching && <Skeleton active />}\n    </>\n  ) : (\n    <StyledEmptyStateWrapper>\n      <EmptyStateMedium\n        title={t('Run a query to display query history')}\n        image=\"document.svg\"\n      />\n    </StyledEmptyStateWrapper>\n  );\n};\n\nexport default QueryHistory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}