{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport ChartContextMenu from './ChartContextMenu';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const useContextMenu = (chartId, formData, onSelection, displayedItems, additionalConfig) => {\n  const contextMenuRef = useRef(null);\n  const [inContextMenu, setInContextMenu] = useState(false);\n  const onContextMenu = (offsetX, offsetY, filters) => {var _contextMenuRef$curre;\n    (_contextMenuRef$curre = contextMenuRef.current) == null ? void 0 : _contextMenuRef$curre.open(offsetX, offsetY, filters);\n    setInContextMenu(true);\n  };\n  const handleContextMenuSelected = useCallback((...args) => {\n    setInContextMenu(false);\n    onSelection == null ? void 0 : onSelection(...args);\n  }, [onSelection]);\n  const handleContextMenuClosed = useCallback(() => {\n    setInContextMenu(false);\n  }, []);\n  const contextMenu = useMemo(() => ___EmotionJSX(ChartContextMenu, { ref: contextMenuRef, id: chartId, formData: formData, onSelection: handleContextMenuSelected, onClose: handleContextMenuClosed, displayedItems: displayedItems, additionalConfig: additionalConfig }), [\n  additionalConfig,\n  chartId,\n  displayedItems,\n  formData,\n  handleContextMenuClosed,\n  handleContextMenuSelected]\n  );\n  return { contextMenu, inContextMenu, onContextMenu };\n};__signature__(useContextMenu, \"useRef{contextMenuRef}\\nuseState{[inContextMenu, setInContextMenu](false)}\\nuseCallback{handleContextMenuSelected}\\nuseCallback{handleContextMenuClosed}\\nuseMemo{contextMenu}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useContextMenu, \"useContextMenu\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/ChartContextMenu/useContextMenu.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","ChartContextMenu","jsx","___EmotionJSX","useContextMenu","chartId","formData","onSelection","displayedItems","additionalConfig","contextMenuRef","inContextMenu","setInContextMenu","onContextMenu","offsetX","offsetY","filters","_contextMenuRef$curre","current","open","handleContextMenuSelected","args","handleContextMenuClosed","contextMenu","ref","id","onClose","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/ChartContextMenu/useContextMenu.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { BaseFormData, ContextMenuFilters } from '@superset-ui/core';\nimport ChartContextMenu, {\n  ChartContextMenuRef,\n  ContextMenuItem,\n} from './ChartContextMenu';\n\nexport const useContextMenu = (\n  chartId: number,\n  formData: BaseFormData & { [key: string]: any },\n  onSelection?: (...args: any) => void,\n  displayedItems?: ContextMenuItem[] | ContextMenuItem,\n  additionalConfig?: {\n    crossFilter?: Record<string, any>;\n    drillToDetail?: Record<string, any>;\n    drillBy?: Record<string, any>;\n  },\n) => {\n  const contextMenuRef = useRef<ChartContextMenuRef>(null);\n  const [inContextMenu, setInContextMenu] = useState(false);\n  const onContextMenu = (\n    offsetX: number,\n    offsetY: number,\n    filters: ContextMenuFilters,\n  ) => {\n    contextMenuRef.current?.open(offsetX, offsetY, filters);\n    setInContextMenu(true);\n  };\n\n  const handleContextMenuSelected = useCallback(\n    (...args: any) => {\n      setInContextMenu(false);\n      onSelection?.(...args);\n    },\n    [onSelection],\n  );\n\n  const handleContextMenuClosed = useCallback(() => {\n    setInContextMenu(false);\n  }, []);\n\n  const contextMenu = useMemo(\n    () => (\n      <ChartContextMenu\n        ref={contextMenuRef}\n        id={chartId}\n        formData={formData}\n        onSelection={handleContextMenuSelected}\n        onClose={handleContextMenuClosed}\n        displayedItems={displayedItems}\n        additionalConfig={additionalConfig}\n      />\n    ),\n    [\n      additionalConfig,\n      chartId,\n      displayedItems,\n      formData,\n      handleContextMenuClosed,\n      handleContextMenuSelected,\n    ],\n  );\n  return { contextMenu, inContextMenu, onContextMenu };\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAErE,OAAOC,gBAGN,MAAM,oBAAoB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAE5B,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,OAAe,EACfC,QAA+C,EAC/CC,WAAoC,EACpCC,cAAoD,EACpDC,gBAIC,KACC;EACF,MAAMC,cAAc,GAAGX,MAAM,CAAsB,IAAI,CAAC;EACxD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMa,aAAa,GAAGA,CACpBC,OAAe,EACfC,OAAe,EACfC,OAA2B,KACzB,KAAAC,qBAAA;IACF,CAAAA,qBAAA,GAAAP,cAAc,CAACQ,OAAO,qBAAtBD,qBAAA,CAAwBE,IAAI,CAACL,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;IACvDJ,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMQ,yBAAyB,GAAGvB,WAAW,CAC3C,CAAC,GAAGwB,IAAS,KAAI;IACfT,gBAAgB,CAAC,KAAK,CAAC;IACvBL,WAAW,oBAAXA,WAAW,CAAG,GAAGc,IAAI,CAAC;EACxB,CAAC,EACD,CAACd,WAAW,CAAC,CACd;EAED,MAAMe,uBAAuB,GAAGzB,WAAW,CAAC,MAAK;IAC/Ce,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,WAAW,GAAGzB,OAAO,CACzB,MACEK,aAAA,CAACF,gBAAgB,IACfuB,GAAG,EAAEd,cAAe,EACpBe,EAAE,EAAEpB,OAAQ,EACZC,QAAQ,EAAEA,QAAS,EACnBC,WAAW,EAAEa,yBAA0B,EACvCM,OAAO,EAAEJ,uBAAwB,EACjCd,cAAc,EAAEA,cAAe,EAC/BC,gBAAgB,EAAEA,gBAAiB,GAEtC,EACD;EACEA,gBAAgB;EAChBJ,OAAO;EACPG,cAAc;EACdF,QAAQ;EACRgB,uBAAuB;EACvBF,yBAAyB;EAC1B,CACF;EACD,OAAO,EAAEG,WAAW,EAAEZ,aAAa,EAAEE,aAAa,EAAE;AACtD,CAAC,CAACc,aAAA,CAxDWvB,cAAc,uMAAAwB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAAd5B,cAAc,+JAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}