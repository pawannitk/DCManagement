{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { OVERWRITE_INSPECT_FIELDS } from 'src/dashboard/constants';\nconst JSON_KEYS = new Set(['json_metadata', 'position_json']);\nfunction extractValue(object, keyPath) {\n  return keyPath.split('.').reduce((obj, key) => {\n    const value = obj == null ? void 0 : obj[key];\n    return JSON_KEYS.has(key) && value ? JSON.parse(value) : value;\n  }, object);\n}\nexport default function getOverwriteItems(prev, next) {\n  return OVERWRITE_INSPECT_FIELDS.map((keyPath) => ({\n    keyPath,\n    ...(keyPath.split('.').find((key) => JSON_KEYS.has(key)) ?\n    {\n      oldValue: JSON.stringify(extractValue(prev, keyPath), null, 2) || '{}',\n      newValue: JSON.stringify(extractValue(next, keyPath), null, 2) || '{}'\n    } :\n    {\n      oldValue: extractValue(prev, keyPath) || '',\n      newValue: extractValue(next, keyPath) || ''\n    })\n  })).filter(({ oldValue, newValue }) => oldValue !== newValue);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(JSON_KEYS, \"JSON_KEYS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getOverwriteItems.ts\");reactHotLoader.register(extractValue, \"extractValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getOverwriteItems.ts\");reactHotLoader.register(getOverwriteItems, \"getOverwriteItems\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getOverwriteItems.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["OVERWRITE_INSPECT_FIELDS","JSON_KEYS","Set","extractValue","object","keyPath","split","reduce","obj","key","value","has","JSON","parse","getOverwriteItems","prev","next","map","find","oldValue","stringify","newValue","filter","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/getOverwriteItems.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { OVERWRITE_INSPECT_FIELDS } from 'src/dashboard/constants';\n\nconst JSON_KEYS = new Set(['json_metadata', 'position_json']);\n\nfunction extractValue(object: JsonObject, keyPath: string) {\n  return keyPath.split('.').reduce((obj: JsonObject, key: string) => {\n    const value = obj?.[key];\n    return JSON_KEYS.has(key) && value ? JSON.parse(value) : value;\n  }, object);\n}\n\nexport default function getOverwriteItems(prev: JsonObject, next: JsonObject) {\n  return OVERWRITE_INSPECT_FIELDS.map(keyPath => ({\n    keyPath,\n    ...(keyPath.split('.').find(key => JSON_KEYS.has(key))\n      ? {\n          oldValue:\n            JSON.stringify(extractValue(prev, keyPath), null, 2) || '{}',\n          newValue:\n            JSON.stringify(extractValue(next, keyPath), null, 2) || '{}',\n        }\n      : {\n          oldValue: extractValue(prev, keyPath) || '',\n          newValue: extractValue(next, keyPath) || '',\n        }),\n  })).filter(({ oldValue, newValue }) => oldValue !== newValue);\n}\n"],"mappings":"uSAmBA,SAASA,wBAAwB,QAAQ,yBAAyB;AAElE,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;AAE7D,SAASC,YAAYA,CAACC,MAAkB,EAAEC,OAAe;EACvD,OAAOA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAe,EAAEC,GAAW,KAAI;IAChE,MAAMC,KAAK,GAAGF,GAAG,oBAAHA,GAAG,CAAGC,GAAG,CAAC;IACxB,OAAOR,SAAS,CAACU,GAAG,CAACF,GAAG,CAAC,IAAIC,KAAK,GAAGE,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,GAAGA,KAAK;EAChE,CAAC,EAAEN,MAAM,CAAC;AACZ;AAEA,eAAc,SAAUU,iBAAiBA,CAACC,IAAgB,EAAEC,IAAgB;EAC1E,OAAOhB,wBAAwB,CAACiB,GAAG,CAAC,CAAAZ,OAAO,MAAK;IAC9CA,OAAO;IACP,IAAIA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACY,IAAI,CAAC,CAAAT,GAAG,KAAIR,SAAS,CAACU,GAAG,CAACF,GAAG,CAAC,CAAC;IAClD;MACEU,QAAQ,EACNP,IAAI,CAACQ,SAAS,CAACjB,YAAY,CAACY,IAAI,EAAEV,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI;MAC9DgB,QAAQ,EACNT,IAAI,CAACQ,SAAS,CAACjB,YAAY,CAACa,IAAI,EAAEX,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI;KAC3D;IACD;MACEc,QAAQ,EAAEhB,YAAY,CAACY,IAAI,EAAEV,OAAO,CAAC,IAAI,EAAE;MAC3CgB,QAAQ,EAAElB,YAAY,CAACa,IAAI,EAAEX,OAAO,CAAC,IAAI;KAC1C;GACN,CAAC,CAAC,CAACiB,MAAM,CAAC,CAAC,EAAEH,QAAQ,EAAEE,QAAQ,EAAE,KAAKF,QAAQ,KAAKE,QAAQ,CAAC;AAC/D,CAAC,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxBK1B,SAAS,iHAAAsB,cAAA,CAAAI,QAAA,CAENxB,YAAY,oHAAAoB,cAAA,CAAAI,QAAA,CAOGb,iBAAiB,iJAAAc,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}