{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Behavior, isFeatureEnabled, FeatureFlag, GenericDataType, getChartMetadataRegistry, NativeFilterType, styled, t, getClientErrorObject } from '@superset-ui/core';\n\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport { getFormData, mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { DatasetSelectLabel } from 'src/features/datasets/DatasetSelectLabel';\nimport { ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES, getFiltersConfigModalTestId } from '../FiltersConfigModal';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport { hasTemporalColumns, mostUsedDataset, setNativeFilterFieldValues, useForceUpdate } from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n`;\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `}\n`;\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\nconst controlsOrder = [\n'enableEmptyFilter',\n'defaultToFirstItem',\n'multiSelect',\n'searchAllOptions',\n'inverseSelection'];\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  color: ${({ theme }) => theme.colors.primary.base};\n`;\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\nconst FilterTypeInfo = styled.div`\n  ${({ theme }) => `\n    width: 49%;\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `}\n`;\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings')\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping')\n  }\n};\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration')\n  },\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings')\n  }\n};\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by')\n};\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = ({ filterId, filterToEdit, removedFilters, form, getAvailableFilters, activeFilterPanelKeys, restoreFilter, handleActiveFilterPanelChange, setErroredFilters, validateDependencies, getDependencySuggestion, isActive }, ref) => {var _formFilter$dataset2, _nativeFilterItems$fo, _nativeFilterItems$fo2, _ref, _formFilter$dataset$v, _formFilter$dataset3, _filterToEdit$targets, _nativeFilterItems$fo3, _nativeFilterItem$val, _formFilter$isDataDir, _formFilter$dataset6, _filterToEdit$adhoc_f, _formFilter$controlVa, _filterToEdit$control, _filterToEdit$control2, _formFilter$controlVa2, _formFilter$controlVa3, _filterToEdit$control3, _filterToEdit$control4, _formFilter$controlVa4, _formFilter$adhoc_fil, _formFilter$controlVa5, _formFilter$dataset9, _datasetDetails$colum, _error$errors;\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState();\n  const [metrics, setMetrics] = useState([]);\n  const [activeTabKey, setActiveTabKey] = useState(FilterTabs.configuration.key);\n  const dashboardId = useSelector((state) => state.dashboardInfo.id);\n  const [undoFormValues, setUndoFormValues] = useState(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters == null ? void 0 : filters[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n  const dependencies = (formFilter == null ? void 0 : formFilter.dependencies) || (filterToEdit == null ? void 0 : filterToEdit.cascadeParentIds) || [];\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n  // @ts-ignore\n  .filter(([, { value }]) => {var _value$behaviors;return (_value$behaviors = value.behaviors) == null ? void 0 : _value$behaviors.includes(Behavior.NativeFilter);}).\n  map(([key]) => key);\n  const loadedDatasets = useSelector(({ datasources }) => datasources);\n  const charts = useSelector(({ charts }) => charts);\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(() => Object.values(loadedDatasets).some((dataset) => hasTemporalColumns(dataset)), [loadedDatasets]);\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find((dataset) => {var _formFilter$dataset;return dataset.id === (formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value);});\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter == null ? void 0 : (_formFilter$dataset2 = formFilter.dataset) == null ? void 0 : _formFilter$dataset2.value, loadedDatasets]);\n  const hasDataset =\n  // @ts-ignore\n  !!((_nativeFilterItems$fo = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo2 = _nativeFilterItems$fo.value) != null && _nativeFilterItems$fo2.datasourceCount);\n  const datasetId = (_ref = (_formFilter$dataset$v = formFilter == null ? void 0 : (_formFilter$dataset3 = formFilter.dataset) == null ? void 0 : _formFilter$dataset3.value) != null ? _formFilter$dataset$v :\n  filterToEdit == null ? void 0 : (_filterToEdit$targets = filterToEdit.targets[0]) == null ? void 0 : _filterToEdit$targets.datasetId) != null ? _ref :\n  mostUsedDataset(loadedDatasets, charts);\n  const { controlItems = {}, mainControlItems = {} } = formFilter ?\n  getControlItemsMap({\n    datasetId,\n    disabled: false,\n    forceUpdate,\n    form,\n    filterId,\n    filterType: formFilter == null ? void 0 : formFilter.filterType,\n    filterToEdit,\n    formFilter,\n    removed: isRemoved\n  }) :\n  {};\n  const hasColumn = !!mainControlItems.groupby;\n  const nativeFilterItem = (_nativeFilterItems$fo3 = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null ? _nativeFilterItems$fo3 : {};\n  // @ts-ignore\n  const enableNoResults = !!((_nativeFilterItem$val = nativeFilterItem.value) != null && _nativeFilterItem$val.enableNoResults);\n  const hasMetrics = hasColumn && !!metrics.length;\n  const hasFilledDataset = !hasDataset || datasetId && ((formFilter == null ? void 0 : formFilter.column) || !hasColumn);\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const canDependOnOtherFilters = TYPES_SUPPORT_DEPENDENCIES.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const isDataDirty = (_formFilter$isDataDir = formFilter == null ? void 0 : formFilter.isDataDirty) != null ? _formFilter$isDataDir : true;\n  const setNativeFilterFieldValuesWrapper = (values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n  const setErrorWrapper = (error) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null\n    });\n    setError(error);\n    forceUpdate();\n  };\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach((dependency) => {var _filters$dependency, _filters$dependency$d;\n      const extraFormData = (_filters$dependency = filters[dependency]) == null ? void 0 : (_filters$dependency$d = _filters$dependency.defaultDataMask) == null ? void 0 : _filters$dependency$d.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(dependenciesDefaultValues, extraFormData);\n    });\n  }\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n  const refreshHandler = useCallback((force = false) => {var _formFilter$dataset4, _formFilter$dataset5;\n    if (!hasDataset || !(formFilter != null && (_formFilter$dataset4 = formFilter.dataset) != null && _formFilter$dataset4.value)) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter == null ? void 0 : (_formFilter$dataset5 = formFilter.dataset) == null ? void 0 : _formFilter$dataset5.value,\n      dashboardId,\n      groupby: formFilter == null ? void 0 : formFilter.column,\n      ...formFilter\n    });\n    formData.extra_form_data = dependenciesDefaultValues;\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false\n    });\n    getChartDataRequest({\n      formData,\n      force\n    }).\n    then(({ response, json }) => {\n      if (isFeatureEnabled(FeatureFlag.GlobalAsyncQueries)) {\n        // deal with getChartDataRequest transforming the response data\n        const result = 'result' in json ? json.result[0] : json;\n        if (response.status === 200) {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: [result]\n          });\n        } else\n        if (response.status === 202) {\n          waitForAsyncData(result).\n          then((asyncResult) => {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: asyncResult\n            });\n          }).\n          catch((error) => {\n            getClientErrorObject(error).then((clientErrorObject) => {\n              setErrorWrapper(clientErrorObject);\n            });\n          });\n        } else\n        {\n          throw new Error(`Received unexpected response status (${response.status}) while fetching chart data`);\n        }\n      } else\n      {\n        setNativeFilterFieldValuesWrapper({\n          defaultValueQueriesData: json.result\n        });\n      }\n    }).\n    catch((error) => {\n      getClientErrorObject(error).then((clientErrorObject) => {\n        setError(clientErrorObject);\n      });\n    });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText]);\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter == null ? void 0 : formFilter.column : undefined,\n    ...formFilter\n  });\n  newFormData.extra_form_data = dependenciesDefaultValues;\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] = useDefaultValue(formFilter, filterToEdit);\n  const showDataset = !datasetId || datasetDetails || (formFilter == null ? void 0 : (_formFilter$dataset6 = formFilter.dataset) == null ? void 0 : _formFilter$dataset6.label);\n  const formChanged = useCallback(() => {\n    form.setFields([\n    {\n      name: 'changed',\n      value: true\n    }]\n    );\n  }, [form]);\n  const updateFormValues = useCallback((values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    formChanged();\n  }, [filterId, form, formChanged]);\n  const hasPreFilter = !!(formFilter != null && formFilter.adhoc_filters) ||\n  !!(formFilter != null && formFilter.time_range) ||\n  !!(filterToEdit != null && (_filterToEdit$adhoc_f = filterToEdit.adhoc_filters) != null && _filterToEdit$adhoc_f.length) ||\n  !!(filterToEdit != null && filterToEdit.time_range);\n  const hasEnableSingleValue = (formFilter == null ? void 0 : (_formFilter$controlVa = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa.enableSingleValue) !== undefined ||\n  (filterToEdit == null ? void 0 : (_filterToEdit$control = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control.enableSingleValue) !== undefined;\n  let enableSingleValue = filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2.enableSingleValue;\n  if ((formFilter == null ? void 0 : (_formFilter$controlVa2 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa2.enableSingleMaxValue) !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n  const hasSorting = typeof (formFilter == null ? void 0 : (_formFilter$controlVa3 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa3.sortAscending) === 'boolean' ||\n  typeof (filterToEdit == null ? void 0 : (_filterToEdit$control3 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control3.sortAscending) === 'boolean';\n  let sort = filterToEdit == null ? void 0 : (_filterToEdit$control4 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control4.sortAscending;\n  if (typeof (formFilter == null ? void 0 : (_formFilter$controlVa4 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa4.sortAscending) === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n  const showDefaultValue = !hasDataset ||\n  !isDataDirty && hasFilledDataset ||\n  !mainControlItems.groupby;\n  const onSortChanged = (value) => {var _form$getFieldValue;\n    const previous = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value\n      }\n    });\n    forceUpdate();\n  };\n  const onEnableSingleValueChanged = (value) => {var _form$getFieldValue2;\n    const previous = (_form$getFieldValue2 = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue2[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value\n      }\n    });\n    forceUpdate();\n  };\n  const validatePreFilter = () => setTimeout(() => form.validateFields([\n  ['filters', filterId, 'adhoc_filters'],\n  ['filters', filterId, 'time_range']]\n  ), 0);\n  const hasTimeRange = (formFilter == null ? void 0 : formFilter.time_range) && formFilter.time_range !== 'No filter';\n  const hasAdhoc = (formFilter == null ? void 0 : (_formFilter$adhoc_fil = formFilter.adhoc_filters) == null ? void 0 : _formFilter$adhoc_fil.length) > 0;\n  const defaultToFirstItem = formFilter == null ? void 0 : (_formFilter$controlVa5 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa5.defaultToFirstItem;\n  const initialDefaultValue = (formFilter == null ? void 0 : formFilter.filterType) === (filterToEdit == null ? void 0 : filterToEdit.filterType) ?\n  filterToEdit == null ? void 0 : filterToEdit.defaultDataMask :\n  null;\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters.\n  filter((filter) => filter.type === 'filter_time').\n  some((filter) => dependencies == null ? void 0 : dependencies.includes(filter.value));\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n          'columns.column_name',\n          'columns.expression',\n          'columns.filterable',\n          'columns.is_dttm',\n          'columns.type',\n          'columns.verbose_name',\n          'database.id',\n          'database.database_name',\n          'datasource_type',\n          'filter_select_enabled',\n          'id',\n          'is_sqllab_view',\n          'main_dttm_col',\n          'metrics.metric_name',\n          'metrics.verbose_name',\n          'schema',\n          'sql',\n          'table_name']\n\n        })}`\n      }).\n      then((response) => {var _response$json, _response$json$result, _response$json2;\n        setMetrics((_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result) == null ? void 0 : _response$json$result.metrics);\n        const dataset = (_response$json2 = response.json) == null ? void 0 : _response$json2.result;\n        // modify the response to fit structure expected by AdhocFilterControl\n        dataset.type = dataset.datasource_type;\n        dataset.filter_select = true;\n        setDatasetDetails(dataset);\n      }).\n      catch((response) => {\n        addDangerToast(response.message);\n      });\n    }\n  }, [datasetId]);\n  useImperativeHandle(ref, () => ({\n    changeTab(tab) {\n      setActiveTabKey(tab);\n    }\n  }));\n  useBackendFormUpdate(form, filterId);\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n  hasDataset,\n  hasFilledDataset,\n  hasDefaultValue,\n  isDataDirty,\n  refreshHandler,\n  showDataset]\n  );\n  const initiallyExcludedCharts = useMemo(() => {var _formFilter$dataset7;\n    const excluded = [];\n    if ((formFilter == null ? void 0 : (_formFilter$dataset7 = formFilter.dataset) == null ? void 0 : _formFilter$dataset7.value) === undefined) {\n      return [];\n    }\n    Object.values(charts).forEach((chart) => {var _chart$form_data, _loadedDatasets$chart, _formFilter$dataset8;\n      const chartDatasetUid = (_chart$form_data = chart.form_data) == null ? void 0 : _chart$form_data.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (((_loadedDatasets$chart = loadedDatasets[chartDatasetUid]) == null ? void 0 : _loadedDatasets$chart.id) !== (formFilter == null ? void 0 : (_formFilter$dataset8 = formFilter.dataset) == null ? void 0 : _formFilter$dataset8.value)) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n  JSON.stringify(charts),\n  formFilter == null ? void 0 : (_formFilter$dataset9 = formFilter.dataset) == null ? void 0 : _formFilter$dataset9.value,\n  JSON.stringify(loadedDatasets)]\n  );\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n  if (isRemoved) {\n    return ___EmotionJSX(RemovedFilter, { onClick: () => restoreFilter(filterId) });\n  }\n  const timeColumn = ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'granularity_sqla'], label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, null, t('Time column')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: hasTimeDependency ?\n      t('Time column to apply dependent temporal filter to') :\n      t('Time column to apply time range to') })\n    ), initialValue: filterToEdit == null ? void 0 : filterToEdit.granularity_sqla },\n  ___EmotionJSX(ColumnSelect, { allowClear: true, form: form, formField: \"granularity_sqla\", filterId: filterId, filterValues: (column) => !!column.is_dttm, datasetId: datasetId, onChange: (column) => {\n      // We need reset default value when when column changed\n      setNativeFilterFieldValues(form, filterId, {\n        granularity_sqla: column\n      });\n      forceUpdate();\n    } })\n  );\n  return ___EmotionJSX(StyledTabs, { activeKey: activeTabKey, onChange: (activeKey) => setActiveTabKey(activeKey), centered: true },\n  ___EmotionJSX(TabPane, { tab: FilterTabs.configuration.name, key: FilterTabs.configuration.key, forceRender: true },\n  ___EmotionJSX(StyledContainer, null,\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'type'], hidden: true, initialValue: NativeFilterType.NativeFilter },\n  ___EmotionJSX(Input, null)\n  ),\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'name'], label: ___EmotionJSX(StyledLabel, null, t('Filter name')), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !isRemoved, message: t('Name is required') }] },\n  ___EmotionJSX(Input, getFiltersConfigModalTestId('name-input'))\n  ),\n  ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'filterType'], rules: [{ required: !isRemoved, message: t('Name is required') }], initialValue: (filterToEdit == null ? void 0 : filterToEdit.filterType) || 'filter_select', label: ___EmotionJSX(StyledLabel, null, t('Filter Type')) }, getFiltersConfigModalTestId('filter-type')),\n  ___EmotionJSX(Select, { ariaLabel: t('Filter type'), options: nativeFilterVizTypes.map((filterType) => {var _nativeFilterItems$fi, _FILTER_SUPPORTED_TYP, _FILTER_SUPPORTED_TYP2;\n      // @ts-ignore\n      const name = (_nativeFilterItems$fi = nativeFilterItems[filterType]) == null ? void 0 : _nativeFilterItems$fi.value.name;\n      const mappedName = name ?\n      FILTER_TYPE_NAME_MAPPING[name] :\n      undefined;\n      const isDisabled = ((_FILTER_SUPPORTED_TYP = FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP.length) === 1 && ((_FILTER_SUPPORTED_TYP2 =\n      FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP2.includes(GenericDataType.Temporal)) &&\n      !doLoadedDatasetsHaveTemporalColumns;\n      return {\n        value: filterType,\n        label: mappedName || name,\n        customLabel: isDisabled ? ___EmotionJSX(Tooltip, { title: t('Datasets do not contain a temporal column') },\n        mappedName || name\n        ) : undefined,\n        disabled: isDisabled\n      };\n    }), onChange: (value) => {\n      setNativeFilterFieldValues(form, filterId, {\n        filterType: value,\n        defaultDataMask: null,\n        column: null\n      });\n      forceUpdate();\n    } })\n  )\n  ),\n  (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' && ___EmotionJSX(FilterTypeInfo, null,\n  t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`)\n  ),\n  hasDataset && ___EmotionJSX(StyledRowContainer, null,\n  showDataset ? ___EmotionJSX(StyledFormItem, _extends({ name: ['filters', filterId, 'dataset'], label: ___EmotionJSX(StyledLabel, null, t('Dataset')), initialValue: datasetDetails ?\n    {\n      label: DatasetSelectLabel({\n        id: datasetDetails.id,\n        table_name: datasetDetails.table_name,\n        schema: datasetDetails.schema,\n        database: {\n          database_name: datasetDetails.database.database_name\n        }\n      }),\n      value: datasetDetails.id\n    } :\n    undefined, rules: [\n    { required: !isRemoved, message: t('Dataset is required') }] },\n  getFiltersConfigModalTestId('datasource-input')),\n  ___EmotionJSX(DatasetSelect, { onChange: (value) => {\n      // We need to reset the column when the dataset has changed\n      if (value.value !== datasetId) {\n        setNativeFilterFieldValues(form, filterId, {\n          dataset: value,\n          defaultDataMask: null,\n          column: null\n        });\n      }\n      forceUpdate();\n    } })\n  ) : ___EmotionJSX(StyledFormItem, { label: ___EmotionJSX(StyledLabel, null, t('Dataset')) },\n  ___EmotionJSX(Loading, { position: \"inline-centered\" })\n  ),\n  hasDataset &&\n  Object.keys(mainControlItems).map((key) => mainControlItems[key].element)\n  ),\n  ___EmotionJSX(StyledCollapse, { defaultActiveKey: activeFilterPanelKeys, onChange: (key) => {\n      handleActiveFilterPanelChange(key);\n    }, expandIconPosition: \"right\", key: `native-filter-config-${filterId}` },\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_time' && ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.configuration.name, key: `${filterId}-${FilterPanels.configuration.key}` },\n  canDependOnOtherFilters && hasAvailableFilters && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'dependencies'], initialValue: dependencies },\n  ___EmotionJSX(DependencyList, { availableFilters: availableFilters, dependencies: dependencies, onDependenciesChange: (dependencies) => {\n      setNativeFilterFieldValues(form, filterId, {\n        dependencies\n      });\n      forceUpdate();\n      validateDependencies();\n      formChanged();\n    }, getDependencySuggestion: () => getDependencySuggestion(filterId) },\n  hasTimeDependency ? timeColumn : undefined\n  )\n  ),\n  hasDataset && hasAdditionalFilters && ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'preFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasPreFilter, title: t('Pre-filter available values'), tooltip: t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`), onChange: (checked) => {\n      formChanged();\n      if (checked) {\n        validatePreFilter();\n      }\n    } },\n  ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'adhoc_filters'], css: /*#__PURE__*/_css({ width: INPUT_WIDTH }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:FiltersConfigForm;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), initialValue: filterToEdit == null ? void 0 : filterToEdit.adhoc_filters, required: true, rules: [\n    {\n      validator: preFilterValidator\n    }] },\n\n  ___EmotionJSX(AdhocFilterControl, { columns: (datasetDetails == null ? void 0 : (_datasetDetails$colum = datasetDetails.columns) == null ? void 0 : _datasetDetails$colum.filter((c) => c.filterable)) || [], savedMetrics: (datasetDetails == null ? void 0 : datasetDetails.metrics) || [], datasource: datasetDetails, onChange: (filters) => {\n      setNativeFilterFieldValues(form, filterId, {\n        adhoc_filters: filters\n      });\n      forceUpdate();\n      validatePreFilter();\n    }, label: ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(StyledLabel, null, t('Pre-filter')),\n    !hasTimeRange && ___EmotionJSX(StyledAsterisk, null)\n    ) })\n  ),\n  showTimeRangePicker && ___EmotionJSX(StyledRowFormItem, { name: ['filters', filterId, 'time_range'], label: ___EmotionJSX(StyledLabel, null, t('Time range')), initialValue: (filterToEdit == null ? void 0 : filterToEdit.time_range) || t('No filter'), required: !hasAdhoc, rules: [\n    {\n      validator: preFilterValidator\n    }] },\n\n  ___EmotionJSX(DateFilterControl, { name: \"time_range\", onChange: (timeRange) => {\n      setNativeFilterFieldValues(form, filterId, {\n        time_range: timeRange\n      });\n      forceUpdate();\n      validatePreFilter();\n    } })\n  ),\n  hasTimeRange && !hasTimeDependency ?\n  timeColumn :\n  undefined\n  )\n  ),\n  (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_range' ? ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'sortFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasSorting, title: t('Sort filter values'), onChange: (checked) => {\n      onSortChanged(checked || undefined);\n      formChanged();\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'sortAscending'],\n    initialValue: sort, label: ___EmotionJSX(StyledLabel, null, t('Sort type')) },\n  ___EmotionJSX(Radio.Group, { onChange: (value) => {\n      onSortChanged(value.target.value);\n    } },\n  ___EmotionJSX(Radio, { value: true }, t('Sort ascending')),\n  ___EmotionJSX(Radio, { value: false }, t('Sort descending'))\n  )\n  ),\n  hasMetrics && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'sortMetric'], initialValue: filterToEdit == null ? void 0 : filterToEdit.sortMetric, label: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledLabel, null, t('Sort Metric')), \"\\xA0\",\n    ___EmotionJSX(InfoTooltipWithTrigger, { placement: \"top\", tooltip: t('If a metric is specified, sorting will be done based on the metric value') })\n    ), \"data-test\": \"field-input\" },\n  ___EmotionJSX(Select, { allowClear: true, ariaLabel: t('Sort metric'), name: \"sortMetric\", options: metrics.map((metric) => {var _metric$verbose_name;return {\n        value: metric.metric_name,\n        label: (_metric$verbose_name = metric.verbose_name) != null ? _metric$verbose_name : metric.metric_name\n      };}), onChange: (value) => {\n      if (value !== undefined) {\n        setNativeFilterFieldValues(form, filterId, {\n          sortMetric: value\n        });\n        forceUpdate();\n      }\n    } })\n  )\n  )\n  ) : ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'rangeFilter'] },\n  ___EmotionJSX(CollapsibleControl, { initialValue: hasEnableSingleValue, title: t('Single Value'), onChange: (checked) => {\n      onEnableSingleValueChanged(checked ? SingleValueType.Exact : undefined);\n      formChanged();\n    } },\n  ___EmotionJSX(StyledRowFormItem, { name: [\n    'filters',\n    filterId,\n    'controlValues',\n    'enableSingleValue'],\n    initialValue: enableSingleValue, label: ___EmotionJSX(StyledLabel, null, t('Single value type')) },\n  ___EmotionJSX(Radio.Group, { onChange: (value) => onEnableSingleValueChanged(value.target.value) },\n  ___EmotionJSX(Radio, { value: SingleValueType.Minimum },\n  t('Minimum')\n  ),\n  ___EmotionJSX(Radio, { value: SingleValueType.Exact },\n  t('Exact')\n  ),\n  ___EmotionJSX(Radio, { value: SingleValueType.Maximum },\n  t('Maximum')\n  )\n  )\n  )\n  )\n  )\n  ),\n  ___EmotionJSX(Collapse.Panel, { forceRender: true, header: FilterPanels.settings.name, key: `${filterId}-${FilterPanels.settings.key}` },\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'description'], initialValue: filterToEdit == null ? void 0 : filterToEdit.description, label: ___EmotionJSX(StyledLabel, null, t('Description')) },\n  ___EmotionJSX(TextArea, null)\n  ),\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValueQueriesData'], hidden: true, initialValue: null }),\n  ___EmotionJSX(CleanFormItem, { name: ['filters', filterId, 'defaultValue'] },\n  ___EmotionJSX(CollapsibleControl, { checked: hasDefaultValue, disabled: isRequired || defaultToFirstItem, initialValue: hasDefaultValue, title: t('Filter has default value'), tooltip: defaultValueTooltip, onChange: (value) => {\n      setHasDefaultValue(value);\n      if (!value) {\n        setNativeFilterFieldValues(form, filterId, {\n          defaultDataMask: null\n        });\n      }\n      formChanged();\n    } },\n  !isRemoved && ___EmotionJSX(StyledRowSubFormItem, { name: ['filters', filterId, 'defaultDataMask'], initialValue: initialDefaultValue, \"data-test\": \"default-input\", label: ___EmotionJSX(StyledLabel, null, t('Default Value')), required: hasDefaultValue, rules: [\n    {\n      validator: () => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n        if (formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value) {\n          // requires managing the error as the DefaultValue\n          // component does not use an Antdesign compatible input\n          const formValidationFields = form.getFieldsError();\n          setErroredFilters((prevErroredFilters) => {\n            if (prevErroredFilters.length &&\n            !formValidationFields.find((f) => f.errors.length > 0)) {\n              return [];\n            }\n            return prevErroredFilters;\n          });\n          return Promise.resolve();\n        }\n        setErroredFilters((prevErroredFilters) => {\n          if (prevErroredFilters.includes(filterId)) {\n            return prevErroredFilters;\n          }\n          return [...prevErroredFilters, filterId];\n        });\n        return Promise.reject(new Error(t('Default value is required')));\n      }\n    }] },\n\n  error || showDefaultValue ? ___EmotionJSX(DefaultValueContainer, null,\n  error ? ___EmotionJSX(ErrorMessageWithStackTrace, { error: (_error$errors = error.errors) == null ? void 0 : _error$errors[0], fallback: ___EmotionJSX(BasicErrorAlert, { title: t('Cannot load filter'), body: error.error, level: \"error\" }) }) : ___EmotionJSX(DefaultValue, { setDataMask: (dataMask) => {var _initialDefaultValue$, _dataMask$filterState;\n      if (!_isEqual(initialDefaultValue == null ? void 0 : (_initialDefaultValue$ = initialDefaultValue.filterState) == null ? void 0 : _initialDefaultValue$.value, dataMask == null ? void 0 : (_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value)) {\n        formChanged();\n      }\n      setNativeFilterFieldValues(form, filterId, {\n        defaultDataMask: dataMask\n      });\n      form.validateFields([\n      ['filters', filterId, 'defaultDataMask']]\n      );\n      forceUpdate();\n    }, hasDefaultValue: hasDefaultValue, filterId: filterId, hasDataset: hasDataset, form: form, formData: newFormData, enableNoResults: enableNoResults }),\n  hasDataset && datasetId && ___EmotionJSX(Tooltip, { title: t('Refresh the default values') },\n  ___EmotionJSX(RefreshIcon, { onClick: () => refreshHandler(true) })\n  )\n  ) : t('Fill all required fields to enable \"Default Value\"')\n  )\n  )\n  ),\n  Object.keys(controlItems).\n  sort((a, b) => controlsOrder.indexOf(a) -\n  controlsOrder.indexOf(b)).\n  map((key) => controlItems[key].element)\n  )\n  )\n  ),\n  ___EmotionJSX(TabPane, { tab: FilterTabs.scoping.name, key: FilterTabs.scoping.key, forceRender: true },\n  ___EmotionJSX(FilterScope, { updateFormValues: updateFormValues, pathToFormValue: ['filters', filterId], forceUpdate: forceUpdate, filterScope: filterToEdit == null ? void 0 : filterToEdit.scope, formFilterScope: formFilter == null ? void 0 : formFilter.scope, formScopingType: formFilter == null ? void 0 : formFilter.scoping, initiallyExcludedCharts: initiallyExcludedCharts })\n  )\n  );\n};__signature__(FiltersConfigForm, \"useState{[error, setError]}\\nuseState{[metrics, setMetrics]([])}\\nuseState{[activeTabKey, setActiveTabKey](FilterTabs.configuration.key)}\\nuseSelector{dashboardId}\\nuseState{[undoFormValues, setUndoFormValues](null)}\\nuseForceUpdate{forceUpdate}\\nuseState{[datasetDetails, setDatasetDetails]}\\nuseMemo{defaultFormFilter}\\nuseSelector{loadedDatasets}\\nuseSelector{charts}\\nuseMemo{doLoadedDatasetsHaveTemporalColumns}\\nuseMemo{showTimeRangePicker}\\nuseCallback{refreshHandler}\\nuseEffect{}\\nuseDefaultValue{[hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue]}\\nuseCallback{formChanged}\\nuseCallback{updateFormValues}\\nuseEffect{}\\nuseImperativeHandle{}\\nuseBackendFormUpdate{}\\nuseEffect{}\\nuseMemo{initiallyExcludedCharts}\\nuseEffect{}\\nuseEffect{}\", () => [useSelector, useForceUpdate, useSelector, useSelector, useDefaultValue, useImperativeHandle, useBackendFormUpdate]);const _default = /*#__PURE__*/\nReact.memo( /*#__PURE__*/forwardRef(FiltersConfigForm));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TabPane, \"TabPane\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowContainer, \"StyledRowContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(controlsOrder, \"controlsOrder\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledFormItem, \"StyledFormItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowFormItem, \"StyledRowFormItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowSubFormItem, \"StyledRowSubFormItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledLabel, \"StyledLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(DefaultValueContainer, \"DefaultValueContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(RefreshIcon, \"RefreshIcon\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledCollapse, \"StyledCollapse\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledTabs, \"StyledTabs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledAsterisk, \"StyledAsterisk\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTypeInfo, \"FilterTypeInfo\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTabs, \"FilterTabs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterPanels, \"FilterPanels\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTERS_WITH_ADHOC_FILTERS, \"FILTERS_WITH_ADHOC_FILTERS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTER_TYPE_NAME_MAPPING, \"FILTER_TYPE_NAME_MAPPING\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FiltersConfigForm, \"FiltersConfigForm\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["InfoTooltipWithTrigger","Behavior","isFeatureEnabled","FeatureFlag","GenericDataType","getChartMetadataRegistry","NativeFilterType","styled","t","getClientErrorObject","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useState","rison","useSelector","getChartDataRequest","Input","TextArea","Select","Collapse","BasicErrorAlert","ErrorMessageWithStackTrace","FormItem","Icons","Loading","addDangerToast","Radio","Tabs","Tooltip","cachedSupersetGet","DateFilterControl","AdhocFilterControl","waitForAsyncData","SingleValueType","getFormData","mergeExtraFormData","DatasetSelectLabel","ALLOW_DEPENDENCIES","TYPES_SUPPORT_DEPENDENCIES","getFiltersConfigModalTestId","CollapsibleControl","ColumnSelect","DatasetSelect","DefaultValue","FilterScope","getControlItemsMap","RemovedFilter","useBackendFormUpdate","useDefaultValue","hasTemporalColumns","mostUsedDataset","setNativeFilterFieldValues","useForceUpdate","FILTER_SUPPORTED_TYPES","INPUT_WIDTH","DependencyList","jsx","___EmotionJSX","TabPane","theme","gridUnit","StyledContainer","div","StyledRowContainer","controlsOrder","StyledFormItem","StyledRowFormItem","StyledRowSubFormItem","StyledLabel","span","colors","grayscale","base","typography","sizes","s","CleanFormItem","DefaultValueContainer","RefreshIcon","Refresh","primary","StyledCollapse","light2","StyledTabs","light5","StyledAsterisk","error","FilterTypeInfo","light1","FilterTabs","configuration","key","name","scoping","FilterPanels","settings","FILTERS_WITH_ADHOC_FILTERS","FILTER_TYPE_NAME_MAPPING","FiltersConfigForm","filterId","filterToEdit","removedFilters","form","getAvailableFilters","activeFilterPanelKeys","restoreFilter","handleActiveFilterPanelChange","setErroredFilters","validateDependencies","getDependencySuggestion","isActive","ref","_formFilter$dataset2","_nativeFilterItems$fo","_nativeFilterItems$fo2","_ref","_formFilter$dataset$v","_formFilter$dataset3","_filterToEdit$targets","_nativeFilterItems$fo3","_nativeFilterItem$val","_formFilter$isDataDir","_formFilter$dataset6","_filterToEdit$adhoc_f","_formFilter$controlVa","_filterToEdit$control","_filterToEdit$control2","_formFilter$controlVa2","_formFilter$controlVa3","_filterToEdit$control3","_filterToEdit$control4","_formFilter$controlVa4","_formFilter$adhoc_fil","_formFilter$controlVa5","_formFilter$dataset9","_datasetDetails$colum","_error$errors","isRemoved","setError","metrics","setMetrics","activeTabKey","setActiveTabKey","dashboardId","state","dashboardInfo","id","undoFormValues","setUndoFormValues","forceUpdate","datasetDetails","setDatasetDetails","defaultFormFilter","filters","getFieldValue","formValues","formFilter","dependencies","cascadeParentIds","nativeFilterItems","items","nativeFilterVizTypes","Object","entries","filter","value","_value$behaviors","behaviors","includes","NativeFilter","map","loadedDatasets","datasources","charts","doLoadedDatasetsHaveTemporalColumns","values","some","dataset","showTimeRangePicker","currentDataset","find","_formFilter$dataset","hasDataset","filterType","datasourceCount","datasetId","targets","controlItems","mainControlItems","disabled","removed","hasColumn","groupby","nativeFilterItem","enableNoResults","hasMetrics","length","hasFilledDataset","column","hasAdditionalFilters","canDependOnOtherFilters","isDataDirty","setNativeFilterFieldValuesWrapper","undefined","setErrorWrapper","defaultValueQueriesData","dependenciesDefaultValues","forEach","dependency","_filters$dependency","_filters$dependency$d","extraFormData","defaultDataMask","dependenciesText","JSON","stringify","refreshHandler","force","_formFilter$dataset4","_formFilter$dataset5","formData","extra_form_data","then","response","json","GlobalAsyncQueries","result","status","asyncResult","catch","clientErrorObject","Error","newFormData","hasDefaultValue","isRequired","defaultValueTooltip","setHasDefaultValue","showDataset","label","formChanged","setFields","updateFormValues","hasPreFilter","adhoc_filters","time_range","hasEnableSingleValue","controlValues","enableSingleValue","enableSingleMaxValue","hasSorting","sortAscending","sort","showDefaultValue","onSortChanged","_form$getFieldValue","previous","onEnableSingleValueChanged","_form$getFieldValue2","validatePreFilter","setTimeout","validateFields","hasTimeRange","hasAdhoc","defaultToFirstItem","initialDefaultValue","preFilterValidator","Promise","resolve","reject","availableFilters","hasAvailableFilters","hasTimeDependency","type","endpoint","encode","columns","_response$json","_response$json$result","_response$json2","datasource_type","filter_select","message","changeTab","tab","initiallyExcludedCharts","_formFilter$dataset7","excluded","chart","_chart$form_data","_loadedDatasets$chart","_formFilter$dataset8","chartDatasetUid","form_data","datasource","push","onClick","timeColumn","Fragment","placement","tooltip","initialValue","granularity_sqla","allowClear","formField","filterValues","is_dttm","onChange","activeKey","centered","forceRender","hidden","rules","required","_extends","ariaLabel","options","_nativeFilterItems$fi","_FILTER_SUPPORTED_TYP","_FILTER_SUPPORTED_TYP2","mappedName","isDisabled","Temporal","customLabel","title","table_name","schema","database","database_name","position","keys","element","defaultActiveKey","expandIconPosition","Panel","header","onDependenciesChange","checked","css","_css","width","process","env","NODE_ENV","validator","c","filterable","savedMetrics","timeRange","Group","target","sortMetric","metric","_metric$verbose_name","metric_name","verbose_name","Exact","Minimum","Maximum","description","_formFilter$defaultDa","_formFilter$defaultDa2","filterState","formValidationFields","getFieldsError","prevErroredFilters","f","errors","fallback","body","level","setDataMask","dataMask","_initialDefaultValue$","_dataMask$filterState","_isEqual","a","b","indexOf","pathToFormValue","filterScope","scope","formFilterScope","formScopingType","__signature__","_default","memo","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  ColumnMeta,\n  InfoTooltipWithTrigger,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport {\n  AdhocFilter,\n  Behavior,\n  ChartDataResponseResult,\n  Column,\n  isFeatureEnabled,\n  FeatureFlag,\n  Filter,\n  GenericDataType,\n  getChartMetadataRegistry,\n  JsonResponse,\n  NativeFilterType,\n  styled,\n  SupersetApiError,\n  t,\n  ClientErrorObject,\n  getClientErrorObject,\n} from '@superset-ui/core';\nimport { isEqual } from 'lodash';\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport rison from 'rison';\nimport { PluginFilterSelectCustomizeProps } from 'src/filters/components/Select/types';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select, FormInstance } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport {\n  Chart,\n  ChartsState,\n  DatasourcesState,\n  RootState,\n} from 'src/dashboard/types';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport {\n  getFormData,\n  mergeExtraFormData,\n} from 'src/dashboard/components/nativeFilters/utils';\nimport { DatasetSelectLabel } from 'src/features/datasets/DatasetSelectLabel';\nimport {\n  ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES,\n  getFiltersConfigModalTestId,\n} from '../FiltersConfigModal';\nimport { FilterRemoval, NativeFiltersForm } from '../types';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport {\n  hasTemporalColumns,\n  mostUsedDataset,\n  setNativeFilterFieldValues,\n  useForceUpdate,\n} from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';\n\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n`;\n\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\ntype ControlKey = keyof PluginFilterSelectCustomizeProps;\n\nconst controlsOrder: ControlKey[] = [\n  'enableEmptyFilter',\n  'defaultToFirstItem',\n  'multiSelect',\n  'searchAllOptions',\n  'inverseSelection',\n];\n\nexport const StyledFormItem = styled(FormItem)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: 50%;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  text-transform: uppercase;\n`;\n\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst RefreshIcon = styled(Icons.Refresh)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  color: ${({ theme }) => theme.colors.primary.base};\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\n\nconst FilterTypeInfo = styled.div`\n  ${({ theme }) => `\n    width: 49%;\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings'),\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping'),\n  },\n};\n\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration'),\n  },\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings'),\n  },\n};\n\nexport interface FiltersConfigFormProps {\n  filterId: string;\n  filterToEdit?: Filter;\n  removedFilters: Record<string, FilterRemoval>;\n  restoreFilter: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  getAvailableFilters: (\n    filterId: string,\n  ) => { label: string; value: string; type: string | undefined }[];\n  handleActiveFilterPanelChange: (activeFilterPanel: string | string[]) => void;\n  activeFilterPanelKeys: string | string[];\n  isActive: boolean;\n  setErroredFilters: (f: (filters: string[]) => string[]) => void;\n  validateDependencies: () => void;\n  getDependencySuggestion: (filterId: string) => string;\n}\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by'),\n};\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (\n  {\n    filterId,\n    filterToEdit,\n    removedFilters,\n    form,\n    getAvailableFilters,\n    activeFilterPanelKeys,\n    restoreFilter,\n    handleActiveFilterPanelChange,\n    setErroredFilters,\n    validateDependencies,\n    getDependencySuggestion,\n    isActive,\n  }: FiltersConfigFormProps,\n  ref: React.RefObject<any>,\n) => {\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState<ClientErrorObject>();\n  const [metrics, setMetrics] = useState<Metric[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    FilterTabs.configuration.key,\n  );\n  const dashboardId = useSelector<RootState, number>(\n    state => state.dashboardInfo.id,\n  );\n  const [undoFormValues, setUndoFormValues] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState<Record<string, any>>();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters?.[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n\n  const dependencies: string[] =\n    formFilter?.dependencies || filterToEdit?.cascadeParentIds || [];\n\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n    // @ts-ignore\n    .filter(([, { value }]) => value.behaviors?.includes(Behavior.NativeFilter))\n    .map(([key]) => key);\n\n  const loadedDatasets = useSelector<RootState, DatasourcesState>(\n    ({ datasources }) => datasources,\n  );\n\n  const charts = useSelector<RootState, ChartsState>(({ charts }) => charts);\n\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(\n    () =>\n      Object.values(loadedDatasets).some(dataset =>\n        hasTemporalColumns(dataset),\n      ),\n    [loadedDatasets],\n  );\n\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find(\n      dataset => dataset.id === formFilter?.dataset?.value,\n    );\n\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter?.dataset?.value, loadedDatasets]);\n\n  const hasDataset =\n    // @ts-ignore\n    !!nativeFilterItems[formFilter?.filterType]?.value?.datasourceCount;\n\n  const datasetId =\n    formFilter?.dataset?.value ??\n    filterToEdit?.targets[0]?.datasetId ??\n    mostUsedDataset(loadedDatasets, charts);\n\n  const { controlItems = {}, mainControlItems = {} } = formFilter\n    ? getControlItemsMap({\n        datasetId,\n        disabled: false,\n        forceUpdate,\n        form,\n        filterId,\n        filterType: formFilter?.filterType,\n        filterToEdit,\n        formFilter,\n        removed: isRemoved,\n      })\n    : {};\n  const hasColumn = !!mainControlItems.groupby;\n\n  const nativeFilterItem = nativeFilterItems[formFilter?.filterType] ?? {};\n  // @ts-ignore\n  const enableNoResults = !!nativeFilterItem.value?.enableNoResults;\n\n  const hasMetrics = hasColumn && !!metrics.length;\n\n  const hasFilledDataset =\n    !hasDataset || (datasetId && (formFilter?.column || !hasColumn));\n\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(\n    formFilter?.filterType,\n  );\n\n  const canDependOnOtherFilters = TYPES_SUPPORT_DEPENDENCIES.includes(\n    formFilter?.filterType,\n  );\n\n  const isDataDirty = formFilter?.isDataDirty ?? true;\n\n  const setNativeFilterFieldValuesWrapper = (values: object) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n\n  const setErrorWrapper = (error: ClientErrorObject) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null,\n    });\n    setError(error);\n    forceUpdate();\n  };\n\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach(dependency => {\n      const extraFormData = filters[dependency]?.defaultDataMask?.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(\n        dependenciesDefaultValues,\n        extraFormData,\n      );\n    });\n  }\n\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n\n  const refreshHandler = useCallback(\n    (force = false) => {\n      if (!hasDataset || !formFilter?.dataset?.value) {\n        forceUpdate();\n        return;\n      }\n      const formData = getFormData({\n        datasetId: formFilter?.dataset?.value,\n        dashboardId,\n        groupby: formFilter?.column,\n        ...formFilter,\n      });\n\n      formData.extra_form_data = dependenciesDefaultValues;\n\n      setNativeFilterFieldValuesWrapper({\n        defaultValueQueriesData: null,\n        isDataDirty: false,\n      });\n      getChartDataRequest({\n        formData,\n        force,\n      })\n        .then(({ response, json }) => {\n          if (isFeatureEnabled(FeatureFlag.GlobalAsyncQueries)) {\n            // deal with getChartDataRequest transforming the response data\n            const result = 'result' in json ? json.result[0] : json;\n\n            if (response.status === 200) {\n              setNativeFilterFieldValuesWrapper({\n                defaultValueQueriesData: [result],\n              });\n            } else if (response.status === 202) {\n              waitForAsyncData(result)\n                .then((asyncResult: ChartDataResponseResult[]) => {\n                  setNativeFilterFieldValuesWrapper({\n                    defaultValueQueriesData: asyncResult,\n                  });\n                })\n                .catch((error: Response) => {\n                  getClientErrorObject(error).then(clientErrorObject => {\n                    setErrorWrapper(clientErrorObject);\n                  });\n                });\n            } else {\n              throw new Error(\n                `Received unexpected response status (${response.status}) while fetching chart data`,\n              );\n            }\n          } else {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: json.result,\n            });\n          }\n        })\n        .catch((error: Response) => {\n          getClientErrorObject(error).then(clientErrorObject => {\n            setError(clientErrorObject);\n          });\n        });\n    },\n    [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText],\n  );\n\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter?.column : undefined,\n    ...formFilter,\n  });\n  newFormData.extra_form_data = dependenciesDefaultValues;\n\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] =\n    useDefaultValue(formFilter, filterToEdit);\n\n  const showDataset =\n    !datasetId || datasetDetails || formFilter?.dataset?.label;\n\n  const formChanged = useCallback(() => {\n    form.setFields([\n      {\n        name: 'changed',\n        value: true,\n      },\n    ]);\n  }, [form]);\n\n  const updateFormValues = useCallback(\n    (values: any) => {\n      setNativeFilterFieldValues(form, filterId, values);\n      formChanged();\n    },\n    [filterId, form, formChanged],\n  );\n\n  const hasPreFilter =\n    !!formFilter?.adhoc_filters ||\n    !!formFilter?.time_range ||\n    !!filterToEdit?.adhoc_filters?.length ||\n    !!filterToEdit?.time_range;\n\n  const hasEnableSingleValue =\n    formFilter?.controlValues?.enableSingleValue !== undefined ||\n    filterToEdit?.controlValues?.enableSingleValue !== undefined;\n\n  let enableSingleValue = filterToEdit?.controlValues?.enableSingleValue;\n  if (formFilter?.controlValues?.enableSingleMaxValue !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n\n  const hasSorting =\n    typeof formFilter?.controlValues?.sortAscending === 'boolean' ||\n    typeof filterToEdit?.controlValues?.sortAscending === 'boolean';\n\n  let sort = filterToEdit?.controlValues?.sortAscending;\n  if (typeof formFilter?.controlValues?.sortAscending === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n\n  const showDefaultValue =\n    !hasDataset ||\n    (!isDataDirty && hasFilledDataset) ||\n    !mainControlItems.groupby;\n\n  const onSortChanged = (value: boolean | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const onEnableSingleValueChanged = (value: SingleValueType | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const validatePreFilter = () =>\n    setTimeout(\n      () =>\n        form.validateFields([\n          ['filters', filterId, 'adhoc_filters'],\n          ['filters', filterId, 'time_range'],\n        ]),\n      0,\n    );\n\n  const hasTimeRange =\n    formFilter?.time_range && formFilter.time_range !== 'No filter';\n\n  const hasAdhoc = formFilter?.adhoc_filters?.length > 0;\n\n  const defaultToFirstItem = formFilter?.controlValues?.defaultToFirstItem;\n\n  const initialDefaultValue =\n    formFilter?.filterType === filterToEdit?.filterType\n      ? filterToEdit?.defaultDataMask\n      : null;\n\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters\n    .filter(filter => filter.type === 'filter_time')\n    .some(filter => dependencies?.includes(filter.value));\n\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n            'columns.column_name',\n            'columns.expression',\n            'columns.filterable',\n            'columns.is_dttm',\n            'columns.type',\n            'columns.verbose_name',\n            'database.id',\n            'database.database_name',\n            'datasource_type',\n            'filter_select_enabled',\n            'id',\n            'is_sqllab_view',\n            'main_dttm_col',\n            'metrics.metric_name',\n            'metrics.verbose_name',\n            'schema',\n            'sql',\n            'table_name',\n          ],\n        })}`,\n      })\n        .then((response: JsonResponse) => {\n          setMetrics(response.json?.result?.metrics);\n          const dataset = response.json?.result;\n          // modify the response to fit structure expected by AdhocFilterControl\n          dataset.type = dataset.datasource_type;\n          dataset.filter_select = true;\n          setDatasetDetails(dataset);\n        })\n        .catch((response: SupersetApiError) => {\n          addDangerToast(response.message);\n        });\n    }\n  }, [datasetId]);\n\n  useImperativeHandle(ref, () => ({\n    changeTab(tab: 'configuration' | 'scoping') {\n      setActiveTabKey(tab);\n    },\n  }));\n\n  useBackendFormUpdate(form, filterId);\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n    hasDataset,\n    hasFilledDataset,\n    hasDefaultValue,\n    isDataDirty,\n    refreshHandler,\n    showDataset,\n  ]);\n\n  const initiallyExcludedCharts = useMemo(() => {\n    const excluded: number[] = [];\n    if (formFilter?.dataset?.value === undefined) {\n      return [];\n    }\n\n    Object.values(charts).forEach((chart: Chart) => {\n      const chartDatasetUid = chart.form_data?.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (loadedDatasets[chartDatasetUid]?.id !== formFilter?.dataset?.value) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n    JSON.stringify(charts),\n    formFilter?.dataset?.value,\n    JSON.stringify(loadedDatasets),\n  ]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n\n  if (isRemoved) {\n    return <RemovedFilter onClick={() => restoreFilter(filterId)} />;\n  }\n\n  const timeColumn = (\n    <StyledRowFormItem\n      name={['filters', filterId, 'granularity_sqla']}\n      label={\n        <>\n          <StyledLabel>{t('Time column')}</StyledLabel>&nbsp;\n          <InfoTooltipWithTrigger\n            placement=\"top\"\n            tooltip={\n              hasTimeDependency\n                ? t('Time column to apply dependent temporal filter to')\n                : t('Time column to apply time range to')\n            }\n          />\n        </>\n      }\n      initialValue={filterToEdit?.granularity_sqla}\n    >\n      <ColumnSelect\n        allowClear\n        form={form}\n        formField=\"granularity_sqla\"\n        filterId={filterId}\n        filterValues={(column: Column) => !!column.is_dttm}\n        datasetId={datasetId}\n        onChange={column => {\n          // We need reset default value when when column changed\n          setNativeFilterFieldValues(form, filterId, {\n            granularity_sqla: column,\n          });\n          forceUpdate();\n        }}\n      />\n    </StyledRowFormItem>\n  );\n\n  return (\n    <StyledTabs\n      activeKey={activeTabKey}\n      onChange={activeKey => setActiveTabKey(activeKey)}\n      centered\n    >\n      <TabPane\n        tab={FilterTabs.configuration.name}\n        key={FilterTabs.configuration.key}\n        forceRender\n      >\n        <StyledContainer>\n          <StyledFormItem\n            name={['filters', filterId, 'type']}\n            hidden\n            initialValue={NativeFilterType.NativeFilter}\n          >\n            <Input />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'name']}\n            label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n            initialValue={filterToEdit?.name}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n          >\n            <Input {...getFiltersConfigModalTestId('name-input')} />\n          </StyledFormItem>\n          <StyledFormItem\n            name={['filters', filterId, 'filterType']}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n            initialValue={filterToEdit?.filterType || 'filter_select'}\n            label={<StyledLabel>{t('Filter Type')}</StyledLabel>}\n            {...getFiltersConfigModalTestId('filter-type')}\n          >\n            <Select\n              ariaLabel={t('Filter type')}\n              options={nativeFilterVizTypes.map(filterType => {\n                // @ts-ignore\n                const name = nativeFilterItems[filterType]?.value.name;\n                const mappedName = name\n                  ? FILTER_TYPE_NAME_MAPPING[name]\n                  : undefined;\n                const isDisabled =\n                  FILTER_SUPPORTED_TYPES[filterType]?.length === 1 &&\n                  FILTER_SUPPORTED_TYPES[filterType]?.includes(\n                    GenericDataType.Temporal,\n                  ) &&\n                  !doLoadedDatasetsHaveTemporalColumns;\n                return {\n                  value: filterType,\n                  label: mappedName || name,\n                  customLabel: isDisabled ? (\n                    <Tooltip\n                      title={t('Datasets do not contain a temporal column')}\n                    >\n                      {mappedName || name}\n                    </Tooltip>\n                  ) : undefined,\n                  disabled: isDisabled,\n                };\n              })}\n              onChange={value => {\n                setNativeFilterFieldValues(form, filterId, {\n                  filterType: value,\n                  defaultDataMask: null,\n                  column: null,\n                });\n                forceUpdate();\n              }}\n            />\n          </StyledFormItem>\n        </StyledContainer>\n        {formFilter?.filterType === 'filter_time' && (\n          <FilterTypeInfo>\n            {t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`)}\n          </FilterTypeInfo>\n        )}\n        {hasDataset && (\n          <StyledRowContainer>\n            {showDataset ? (\n              <StyledFormItem\n                name={['filters', filterId, 'dataset']}\n                label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n                initialValue={\n                  datasetDetails\n                    ? {\n                        label: DatasetSelectLabel({\n                          id: datasetDetails.id,\n                          table_name: datasetDetails.table_name,\n                          schema: datasetDetails.schema,\n                          database: {\n                            database_name:\n                              datasetDetails.database.database_name,\n                          },\n                        }),\n                        value: datasetDetails.id,\n                      }\n                    : undefined\n                }\n                rules={[\n                  { required: !isRemoved, message: t('Dataset is required') },\n                ]}\n                {...getFiltersConfigModalTestId('datasource-input')}\n              >\n                <DatasetSelect\n                  onChange={(value: { label: string; value: number }) => {\n                    // We need to reset the column when the dataset has changed\n                    if (value.value !== datasetId) {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dataset: value,\n                        defaultDataMask: null,\n                        column: null,\n                      });\n                    }\n                    forceUpdate();\n                  }}\n                />\n              </StyledFormItem>\n            ) : (\n              <StyledFormItem label={<StyledLabel>{t('Dataset')}</StyledLabel>}>\n                <Loading position=\"inline-centered\" />\n              </StyledFormItem>\n            )}\n            {hasDataset &&\n              Object.keys(mainControlItems).map(\n                key => mainControlItems[key].element,\n              )}\n          </StyledRowContainer>\n        )}\n        <StyledCollapse\n          defaultActiveKey={activeFilterPanelKeys}\n          onChange={key => {\n            handleActiveFilterPanelChange(key);\n          }}\n          expandIconPosition=\"right\"\n          key={`native-filter-config-${filterId}`}\n        >\n          {formFilter?.filterType !== 'filter_time' && (\n            <Collapse.Panel\n              forceRender\n              header={FilterPanels.configuration.name}\n              key={`${filterId}-${FilterPanels.configuration.key}`}\n            >\n              {canDependOnOtherFilters && hasAvailableFilters && (\n                <StyledRowFormItem\n                  name={['filters', filterId, 'dependencies']}\n                  initialValue={dependencies}\n                >\n                  <DependencyList\n                    availableFilters={availableFilters}\n                    dependencies={dependencies}\n                    onDependenciesChange={dependencies => {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dependencies,\n                      });\n                      forceUpdate();\n                      validateDependencies();\n                      formChanged();\n                    }}\n                    getDependencySuggestion={() =>\n                      getDependencySuggestion(filterId)\n                    }\n                  >\n                    {hasTimeDependency ? timeColumn : undefined}\n                  </DependencyList>\n                </StyledRowFormItem>\n              )}\n              {hasDataset && hasAdditionalFilters && (\n                <CleanFormItem name={['filters', filterId, 'preFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasPreFilter}\n                    title={t('Pre-filter available values')}\n                    tooltip={t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`)}\n                    onChange={checked => {\n                      formChanged();\n                      if (checked) {\n                        validatePreFilter();\n                      }\n                    }}\n                  >\n                    <StyledRowSubFormItem\n                      name={['filters', filterId, 'adhoc_filters']}\n                      css={{ width: INPUT_WIDTH }}\n                      initialValue={filterToEdit?.adhoc_filters}\n                      required\n                      rules={[\n                        {\n                          validator: preFilterValidator,\n                        },\n                      ]}\n                    >\n                      <AdhocFilterControl\n                        columns={\n                          datasetDetails?.columns?.filter(\n                            (c: ColumnMeta) => c.filterable,\n                          ) || []\n                        }\n                        savedMetrics={datasetDetails?.metrics || []}\n                        datasource={datasetDetails}\n                        onChange={(filters: AdhocFilter[]) => {\n                          setNativeFilterFieldValues(form, filterId, {\n                            adhoc_filters: filters,\n                          });\n                          forceUpdate();\n                          validatePreFilter();\n                        }}\n                        label={\n                          <span>\n                            <StyledLabel>{t('Pre-filter')}</StyledLabel>\n                            {!hasTimeRange && <StyledAsterisk />}\n                          </span>\n                        }\n                      />\n                    </StyledRowSubFormItem>\n                    {showTimeRangePicker && (\n                      <StyledRowFormItem\n                        name={['filters', filterId, 'time_range']}\n                        label={<StyledLabel>{t('Time range')}</StyledLabel>}\n                        initialValue={\n                          filterToEdit?.time_range || t('No filter')\n                        }\n                        required={!hasAdhoc}\n                        rules={[\n                          {\n                            validator: preFilterValidator,\n                          },\n                        ]}\n                      >\n                        <DateFilterControl\n                          name=\"time_range\"\n                          onChange={timeRange => {\n                            setNativeFilterFieldValues(form, filterId, {\n                              time_range: timeRange,\n                            });\n                            forceUpdate();\n                            validatePreFilter();\n                          }}\n                        />\n                      </StyledRowFormItem>\n                    )}\n                    {hasTimeRange && !hasTimeDependency\n                      ? timeColumn\n                      : undefined}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n              {formFilter?.filterType !== 'filter_range' ? (\n                <CleanFormItem name={['filters', filterId, 'sortFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasSorting}\n                    title={t('Sort filter values')}\n                    onChange={checked => {\n                      onSortChanged(checked || undefined);\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'sortAscending',\n                      ]}\n                      initialValue={sort}\n                      label={<StyledLabel>{t('Sort type')}</StyledLabel>}\n                    >\n                      <Radio.Group\n                        onChange={value => {\n                          onSortChanged(value.target.value);\n                        }}\n                      >\n                        <Radio value>{t('Sort ascending')}</Radio>\n                        <Radio value={false}>{t('Sort descending')}</Radio>\n                      </Radio.Group>\n                    </StyledRowFormItem>\n                    {hasMetrics && (\n                      <StyledRowSubFormItem\n                        name={['filters', filterId, 'sortMetric']}\n                        initialValue={filterToEdit?.sortMetric}\n                        label={\n                          <>\n                            <StyledLabel>{t('Sort Metric')}</StyledLabel>&nbsp;\n                            <InfoTooltipWithTrigger\n                              placement=\"top\"\n                              tooltip={t(\n                                'If a metric is specified, sorting will be done based on the metric value',\n                              )}\n                            />\n                          </>\n                        }\n                        data-test=\"field-input\"\n                      >\n                        <Select\n                          allowClear\n                          ariaLabel={t('Sort metric')}\n                          name=\"sortMetric\"\n                          options={metrics.map((metric: Metric) => ({\n                            value: metric.metric_name,\n                            label: metric.verbose_name ?? metric.metric_name,\n                          }))}\n                          onChange={value => {\n                            if (value !== undefined) {\n                              setNativeFilterFieldValues(form, filterId, {\n                                sortMetric: value,\n                              });\n                              forceUpdate();\n                            }\n                          }}\n                        />\n                      </StyledRowSubFormItem>\n                    )}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              ) : (\n                <CleanFormItem name={['filters', filterId, 'rangeFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasEnableSingleValue}\n                    title={t('Single Value')}\n                    onChange={checked => {\n                      onEnableSingleValueChanged(\n                        checked ? SingleValueType.Exact : undefined,\n                      );\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'enableSingleValue',\n                      ]}\n                      initialValue={enableSingleValue}\n                      label={\n                        <StyledLabel>{t('Single value type')}</StyledLabel>\n                      }\n                    >\n                      <Radio.Group\n                        onChange={value =>\n                          onEnableSingleValueChanged(value.target.value)\n                        }\n                      >\n                        <Radio value={SingleValueType.Minimum}>\n                          {t('Minimum')}\n                        </Radio>\n                        <Radio value={SingleValueType.Exact}>\n                          {t('Exact')}\n                        </Radio>\n                        <Radio value={SingleValueType.Maximum}>\n                          {t('Maximum')}\n                        </Radio>\n                      </Radio.Group>\n                    </StyledRowFormItem>\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n            </Collapse.Panel>\n          )}\n          <Collapse.Panel\n            forceRender\n            header={FilterPanels.settings.name}\n            key={`${filterId}-${FilterPanels.settings.key}`}\n          >\n            <StyledFormItem\n              name={['filters', filterId, 'description']}\n              initialValue={filterToEdit?.description}\n              label={<StyledLabel>{t('Description')}</StyledLabel>}\n            >\n              <TextArea />\n            </StyledFormItem>\n            <CleanFormItem\n              name={['filters', filterId, 'defaultValueQueriesData']}\n              hidden\n              initialValue={null}\n            />\n            <CleanFormItem name={['filters', filterId, 'defaultValue']}>\n              <CollapsibleControl\n                checked={hasDefaultValue}\n                disabled={isRequired || defaultToFirstItem}\n                initialValue={hasDefaultValue}\n                title={t('Filter has default value')}\n                tooltip={defaultValueTooltip}\n                onChange={value => {\n                  setHasDefaultValue(value);\n                  if (!value) {\n                    setNativeFilterFieldValues(form, filterId, {\n                      defaultDataMask: null,\n                    });\n                  }\n                  formChanged();\n                }}\n              >\n                {!isRemoved && (\n                  <StyledRowSubFormItem\n                    name={['filters', filterId, 'defaultDataMask']}\n                    initialValue={initialDefaultValue}\n                    data-test=\"default-input\"\n                    label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n                    required={hasDefaultValue}\n                    rules={[\n                      {\n                        validator: () => {\n                          if (formFilter?.defaultDataMask?.filterState?.value) {\n                            // requires managing the error as the DefaultValue\n                            // component does not use an Antdesign compatible input\n                            const formValidationFields = form.getFieldsError();\n                            setErroredFilters(prevErroredFilters => {\n                              if (\n                                prevErroredFilters.length &&\n                                !formValidationFields.find(\n                                  f => f.errors.length > 0,\n                                )\n                              ) {\n                                return [];\n                              }\n                              return prevErroredFilters;\n                            });\n                            return Promise.resolve();\n                          }\n                          setErroredFilters(prevErroredFilters => {\n                            if (prevErroredFilters.includes(filterId)) {\n                              return prevErroredFilters;\n                            }\n                            return [...prevErroredFilters, filterId];\n                          });\n                          return Promise.reject(\n                            new Error(t('Default value is required')),\n                          );\n                        },\n                      },\n                    ]}\n                  >\n                    {error || showDefaultValue ? (\n                      <DefaultValueContainer>\n                        {error ? (\n                          <ErrorMessageWithStackTrace\n                            error={error.errors?.[0]}\n                            fallback={\n                              <BasicErrorAlert\n                                title={t('Cannot load filter')}\n                                body={error.error}\n                                level=\"error\"\n                              />\n                            }\n                          />\n                        ) : (\n                          <DefaultValue\n                            setDataMask={dataMask => {\n                              if (\n                                !isEqual(\n                                  initialDefaultValue?.filterState?.value,\n                                  dataMask?.filterState?.value,\n                                )\n                              ) {\n                                formChanged();\n                              }\n                              setNativeFilterFieldValues(form, filterId, {\n                                defaultDataMask: dataMask,\n                              });\n                              form.validateFields([\n                                ['filters', filterId, 'defaultDataMask'],\n                              ]);\n                              forceUpdate();\n                            }}\n                            hasDefaultValue={hasDefaultValue}\n                            filterId={filterId}\n                            hasDataset={hasDataset}\n                            form={form}\n                            formData={newFormData}\n                            enableNoResults={enableNoResults}\n                          />\n                        )}\n                        {hasDataset && datasetId && (\n                          <Tooltip title={t('Refresh the default values')}>\n                            <RefreshIcon onClick={() => refreshHandler(true)} />\n                          </Tooltip>\n                        )}\n                      </DefaultValueContainer>\n                    ) : (\n                      t('Fill all required fields to enable \"Default Value\"')\n                    )}\n                  </StyledRowSubFormItem>\n                )}\n              </CollapsibleControl>\n            </CleanFormItem>\n            {Object.keys(controlItems)\n              .sort(\n                (a, b) =>\n                  controlsOrder.indexOf(a as ControlKey) -\n                  controlsOrder.indexOf(b as ControlKey),\n              )\n              .map(key => controlItems[key].element)}\n          </Collapse.Panel>\n        </StyledCollapse>\n      </TabPane>\n      <TabPane\n        tab={FilterTabs.scoping.name}\n        key={FilterTabs.scoping.key}\n        forceRender\n      >\n        <FilterScope\n          updateFormValues={updateFormValues}\n          pathToFormValue={['filters', filterId]}\n          forceUpdate={forceUpdate}\n          filterScope={filterToEdit?.scope}\n          formFilterScope={formFilter?.scope}\n          formScopingType={formFilter?.scoping}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      </TabPane>\n    </StyledTabs>\n  );\n};\n\nexport default React.memo(\n  forwardRef<typeof FiltersConfigForm, FiltersConfigFormProps>(\n    FiltersConfigForm,\n  ),\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}