{"ast":null,"code":"'use strict';(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDate = formatDate;\n\nvar _utils = require('../util/utils');\n\n/**\n * A formatDate helper to format date using moment js with optional locale designation.\n *\n * @example\n *      {{formatDate 'MM/DD/YYYY' date 'es'}}\n *\n * @param {string} formatString Based on moment.js.\n * @param {Date} date\n * @param {object} localeString Language or language-country locale string (or array of strings) available in https://github.com/moment/moment/tree/develop/locale .\n * @returns {string}\n */\nfunction formatDate(formatString, date, localeString) {\n  var moment = global.moment;\n\n  if (!moment) {\n    moment = require('moment/min/moment-with-locales');\n  }\n\n  formatString = (0, _utils.isString)(formatString) ? formatString : '';\n\n  if ((0, _utils.isString)(localeString) || (0, _utils.isArray)(localeString)) {\n    var localeMoment = moment(date || new Date());\n\n    localeMoment.locale(localeString);\n\n    return localeMoment.format(formatString);\n  }\n\n  // use global moment and format with default locale\n  return moment(date || new Date()).format(formatString);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(formatDate, \"formatDate\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/node_modules/just-handlebars-helpers/lib/helpers/datetime.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","Object","defineProperty","exports","value","formatDate","_utils","require","formatString","date","localeString","moment","global","isString","isArray","localeMoment","Date","locale","format","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/node_modules/just-handlebars-helpers/lib/helpers/datetime.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDate = formatDate;\n\nvar _utils = require('../util/utils');\n\n/**\n * A formatDate helper to format date using moment js with optional locale designation.\n *\n * @example\n *      {{formatDate 'MM/DD/YYYY' date 'es'}}\n *\n * @param {string} formatString Based on moment.js.\n * @param {Date} date\n * @param {object} localeString Language or language-country locale string (or array of strings) available in https://github.com/moment/moment/tree/develop/locale .\n * @returns {string}\n */\nfunction formatDate(formatString, date, localeString) {\n  var moment = global.moment;\n\n  if (!moment) {\n    moment = require('moment/min/moment-with-locales');\n  }\n\n  formatString = (0, _utils.isString)(formatString) ? formatString : '';\n\n  if ((0, _utils.isString)(localeString) || (0, _utils.isArray)(localeString)) {\n    var localeMoment = moment(date || new Date());\n\n    localeMoment.locale(localeString);\n\n    return localeMoment.format(formatString);\n  }\n\n  // use global moment and format with default locale\n  return moment(date || new Date()).format(formatString);\n}"],"mappings":"AAAA,YAAY,CAAC,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,UAAU,GAAGA,UAAU;;AAE/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACG,YAAY,EAAEC,IAAI,EAAEC,YAAY,EAAE;EACpD,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAAM;;EAE1B,IAAI,CAACA,MAAM,EAAE;IACXA,MAAM,GAAGJ,OAAO,CAAC,gCAAgC,CAAC;EACpD;;EAEAC,YAAY,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACO,QAAQ,EAAEL,YAAY,CAAC,GAAGA,YAAY,GAAG,EAAE;;EAErE,IAAI,CAAC,CAAC,EAAEF,MAAM,CAACO,QAAQ,EAAEH,YAAY,CAAC,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAACQ,OAAO,EAAEJ,YAAY,CAAC,EAAE;IAC3E,IAAIK,YAAY,GAAGJ,MAAM,CAACF,IAAI,IAAI,IAAIO,IAAI,CAAC,CAAC,CAAC;;IAE7CD,YAAY,CAACE,MAAM,CAACP,YAAY,CAAC;;IAEjC,OAAOK,YAAY,CAACG,MAAM,CAACV,YAAY,CAAC;EAC1C;;EAEA;EACA,OAAOG,MAAM,CAACF,IAAI,IAAI,IAAIO,IAAI,CAAC,CAAC,CAAC,CAACE,MAAM,CAACV,YAAY,CAAC;AACxD,CAAC,mBAAAW,cAAA,UAAAzB,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAAwB,cAAA,WAAAA,cAAA,CAAAC,QAAA,CAnBQf,UAAU,+LAAAgB,WAAA,UAAA3B,oBAAA,mBAAAA,oBAAA,CAAA2B,WAAA,GAAA1B,SAAA,CAAA0B,WAAA,IAAAA,WAAA,CAAAzB,MAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}