{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, validateNonEmpty } from '@superset-ui/core';\nimport { sharedControls, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { showLegend, showControls, xAxisLabel, bottomMargin, xTicksLayout, showBarValue, barStacked, reduceXTicks, yAxisLabel, yAxisShowMinmax, yAxisBounds, richTooltip } from '../NVD3Controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['metrics'],\n    ['adhoc_filters'],\n    ['groupby'],\n    ['columns'],\n    ['row_limit'],\n    ['timeseries_limit_metric'],\n    ['order_desc'],\n    [\n    {\n      name: 'contribution',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Contribution'),\n        default: false,\n        description: t('Compute the contribution to the total')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [\n    ['color_scheme'],\n    [showLegend],\n    [showBarValue],\n    [richTooltip],\n    [barStacked],\n    [\n    {\n      name: 'order_bars',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort Bars'),\n        default: false,\n        renderTrigger: true,\n        description: t('Sort bars by x labels.')\n      }\n    }],\n\n    ['y_axis_format'],\n    [yAxisLabel],\n    [showControls, null],\n    [yAxisShowMinmax],\n    [yAxisBounds]]\n\n  },\n  {\n    label: t('X Axis'),\n    expanded: true,\n    controlSetRows: [\n    [xAxisLabel],\n    [bottomMargin],\n    [xTicksLayout],\n    [reduceXTicks]]\n\n  }],\n\n  controlOverrides: {\n    groupby: {\n      validators: [validateNonEmpty],\n      mapStateToProps: (state, controlState) => {\n        const groupbyProps = (sharedControls.groupby.mapStateToProps == null ? void 0 : sharedControls.groupby.mapStateToProps(state, controlState)) || {};\n        groupbyProps.canDropValue = (column) => {var _state$controls, _state$controls$colum;return !ensureIsArray((_state$controls = state.controls) == null ? void 0 : (_state$controls$colum = _state$controls.columns) == null ? void 0 : _state$controls$colum.value).includes(column.column_name);};\n        return groupbyProps;\n      },\n      rerender: ['columns']\n    },\n    columns: {\n      label: t('Breakdowns'),\n      description: t('Defines how each series is broken down'),\n      mapStateToProps: (state, controlState) => {\n        const columnsProps = (sharedControls.columns.mapStateToProps == null ? void 0 : sharedControls.columns.mapStateToProps(state, controlState)) || {};\n        columnsProps.canDropValue = (column) => {var _state$controls2, _state$controls2$grou;return !ensureIsArray((_state$controls2 = state.controls) == null ? void 0 : (_state$controls2$grou = _state$controls2.groupby) == null ? void 0 : _state$controls2$grou.value).includes(column.column_name);};\n        return columnsProps;\n      },\n      rerender: ['groupby']\n    }\n  },\n  formDataOverrides: (formData) => {\n    const columns = getStandardizedControls().controls.columns.filter((col) => !ensureIsArray(formData.groupby).includes(col));\n    getStandardizedControls().controls.columns =\n    getStandardizedControls().controls.columns.filter((col) => !columns.includes(col));\n    return {\n      ...formData,\n      metrics: getStandardizedControls().popAllMetrics(),\n      columns\n    };\n  }\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DistBar/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DistBar/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","t","validateNonEmpty","sharedControls","getStandardizedControls","showLegend","showControls","xAxisLabel","bottomMargin","xTicksLayout","showBarValue","barStacked","reduceXTicks","yAxisLabel","yAxisShowMinmax","yAxisBounds","richTooltip","config","controlPanelSections","label","expanded","controlSetRows","name","type","default","description","renderTrigger","controlOverrides","groupby","validators","mapStateToProps","state","controlState","groupbyProps","canDropValue","column","_state$controls","_state$controls$colum","controls","columns","value","includes","column_name","rerender","columnsProps","_state$controls2","_state$controls2$grou","formDataOverrides","formData","filter","col","metrics","popAllMetrics","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/DistBar/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ControlPanelConfig,\n  sharedControls,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport {\n  showLegend,\n  showControls,\n  xAxisLabel,\n  bottomMargin,\n  xTicksLayout,\n  showBarValue,\n  barStacked,\n  reduceXTicks,\n  yAxisLabel,\n  yAxisShowMinmax,\n  yAxisBounds,\n  richTooltip,\n} from '../NVD3Controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['metrics'],\n        ['adhoc_filters'],\n        ['groupby'],\n        ['columns'],\n        ['row_limit'],\n        ['timeseries_limit_metric'],\n        ['order_desc'],\n        [\n          {\n            name: 'contribution',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Contribution'),\n              default: false,\n              description: t('Compute the contribution to the total'),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        ['color_scheme'],\n        [showLegend],\n        [showBarValue],\n        [richTooltip],\n        [barStacked],\n        [\n          {\n            name: 'order_bars',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort Bars'),\n              default: false,\n              renderTrigger: true,\n              description: t('Sort bars by x labels.'),\n            },\n          },\n        ],\n        ['y_axis_format'],\n        [yAxisLabel],\n        [showControls, null],\n        [yAxisShowMinmax],\n        [yAxisBounds],\n      ],\n    },\n    {\n      label: t('X Axis'),\n      expanded: true,\n      controlSetRows: [\n        [xAxisLabel],\n        [bottomMargin],\n        [xTicksLayout],\n        [reduceXTicks],\n      ],\n    },\n  ],\n  controlOverrides: {\n    groupby: {\n      validators: [validateNonEmpty],\n      mapStateToProps: (state, controlState) => {\n        const groupbyProps =\n          sharedControls.groupby.mapStateToProps?.(state, controlState) || {};\n        groupbyProps.canDropValue = (column: ColumnMeta) =>\n          !ensureIsArray(state.controls?.columns?.value).includes(\n            column.column_name,\n          );\n        return groupbyProps;\n      },\n      rerender: ['columns'],\n    },\n    columns: {\n      label: t('Breakdowns'),\n      description: t('Defines how each series is broken down'),\n      mapStateToProps: (state, controlState) => {\n        const columnsProps =\n          sharedControls.columns.mapStateToProps?.(state, controlState) || {};\n        columnsProps.canDropValue = (column: ColumnMeta) =>\n          !ensureIsArray(state.controls?.groupby?.value).includes(\n            column.column_name,\n          );\n        return columnsProps;\n      },\n      rerender: ['groupby'],\n    },\n  },\n  formDataOverrides: formData => {\n    const columns = getStandardizedControls().controls.columns.filter(\n      col => !ensureIsArray(formData.groupby).includes(col),\n    );\n    getStandardizedControls().controls.columns =\n      getStandardizedControls().controls.columns.filter(\n        col => !columns.includes(col),\n      );\n\n    return {\n      ...formData,\n      metrics: getStandardizedControls().popAllMetrics(),\n      columns,\n    };\n  },\n};\n\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}