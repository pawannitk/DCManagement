{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport AntTable from 'antd/lib/table';\nimport classNames from 'classnames';\nimport { useResizeDetector } from 'react-resize-detector';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport { useTheme, styled, safeHtmlSpan } from '@superset-ui/core';\nimport { TableSize, ETableAction } from './index';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledCell = styled('div')(({ theme, height }) => `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-left: ${theme.gridUnit * 2}px;\n  padding-right: ${theme.gridUnit}px;\n  border-bottom: 1px solid ${theme.colors.grayscale.light3};\n  transition: background 0.3s;\n  line-height: ${height}px;\n  box-sizing: border-box;\n`);\nconst StyledTable = styled(AntTable)(({ theme }) => `\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n      }\n    }\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n`);\nconst SMALL = 39;\nconst MIDDLE = 47;\nconst VirtualTable = (props) => {var _columns$map;\n  const { columns, pagination, onChange, height, scroll, size, allowHTML = false } = props;\n  const [tableWidth, setTableWidth] = useState(0);\n  const onResize = useCallback((width) => {\n    setTableWidth(width);\n  }, []);\n  const { ref } = useResizeDetector({ onResize });\n  const theme = useTheme();\n  // If a column definition has no width, react-window will use this as the default column width\n  const DEFAULT_COL_WIDTH = (theme == null ? void 0 : theme.gridUnit) * 37 || 150;\n  const widthColumnCount = columns.filter(({ width }) => !width).length;\n  let staticColWidthTotal = 0;\n  columns == null ? void 0 : columns.forEach((column) => {\n    if (column.width) {\n      staticColWidthTotal += column.width;\n    }\n  });\n  let totalWidth = 0;\n  const defaultWidth = Math.max(Math.floor((tableWidth - staticColWidthTotal) / widthColumnCount), 50);\n  const mergedColumns = (_columns$map = columns == null ? void 0 : columns.map == null ? void 0 : columns.map((column) => {\n    const modifiedColumn = { ...column };\n    if (!column.width) {\n      modifiedColumn.width = defaultWidth;\n    }\n    totalWidth += modifiedColumn.width;\n    return modifiedColumn;\n  })) != null ? _columns$map : [];\n  /*\n   * There are cases where a user could set the width of each column and the total width is less than width of\n   * the table.  In this case we will stretch the last column to use the extra space\n   */\n  if (totalWidth < tableWidth) {\n    const lastColumn = mergedColumns[mergedColumns.length - 1];\n    lastColumn.width =\n    lastColumn.width + Math.floor(tableWidth - totalWidth);\n  }\n  const gridRef = useRef();\n  const [connectObject] = useState(() => {\n    const obj = {};\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: () => {\n        if (gridRef.current) {var _gridRef$current, _gridRef$current$stat;\n          return (_gridRef$current = gridRef.current) == null ? void 0 : (_gridRef$current$stat = _gridRef$current.state) == null ? void 0 : _gridRef$current$stat.scrollLeft;\n        }\n        return null;\n      },\n      set: (scrollLeft) => {\n        if (gridRef.current) {\n          gridRef.current.scrollTo({ scrollLeft });\n        }\n      }\n    });\n    return obj;\n  });\n  const resetVirtualGrid = () => {var _gridRef$current2;\n    (_gridRef$current2 = gridRef.current) == null ? void 0 : _gridRef$current2.resetAfterIndices({\n      columnIndex: 0,\n      shouldForceUpdate: true\n    });\n  };\n  useEffect(() => resetVirtualGrid, [tableWidth, columns, size]);\n  /*\n   * antd Table has a runtime error when it tries to fire the onChange event triggered from a pageChange\n   * when the table body is overridden with the virtualized table.  This function capture the page change event\n   * from within the pagination controls and proxies the onChange event payload\n   */\n  const onPageChange = (page, size) => {var _gridRef$current3;\n    /**\n     * This resets vertical scroll position to 0 (top) when page changes\n     * We intentionally leave horizontal scroll where it was so user can focus on\n     * specific range of columns as they page through data\n     */\n    (_gridRef$current3 = gridRef.current) == null ? void 0 : _gridRef$current3.scrollTo == null ? void 0 : _gridRef$current3.scrollTo({ scrollTop: 0 });\n    onChange == null ? void 0 : onChange({\n      ...pagination,\n      current: page,\n      pageSize: size\n    }, {}, {}, {\n      action: ETableAction.Paginate,\n      currentDataSource: []\n    });\n  };\n  const renderVirtualList = (rawData, { ref, onScroll }) => {\n    // eslint-disable-next-line no-param-reassign\n    ref.current = connectObject;\n    const cellSize = size === TableSize.Middle ? MIDDLE : SMALL;\n    return ___EmotionJSX(Grid, { ref: gridRef, className: \"virtual-grid\", columnCount: mergedColumns.length, columnWidth: (index) => {\n        const { width = DEFAULT_COL_WIDTH } = mergedColumns[index];\n        return width;\n      }, height: height || scroll.y, rowCount: rawData.length, rowHeight: () => cellSize, width: tableWidth, onScroll: ({ scrollLeft }) => {\n        onScroll({ scrollLeft });\n      } },\n    ({ columnIndex, rowIndex, style }) => {var _mergedColumns$column, _mergedColumns$column2;\n      const data = rawData == null ? void 0 : rawData[rowIndex];\n      // Set default content\n      let content = data == null ? void 0 : data[mergedColumns == null ? void 0 : (_mergedColumns$column = mergedColumns[columnIndex]) == null ? void 0 : _mergedColumns$column.dataIndex];\n      // Check if the column has a render function\n      const render = (_mergedColumns$column2 = mergedColumns[columnIndex]) == null ? void 0 : _mergedColumns$column2.render;\n      if (typeof render === 'function') {\n        // Use render function to generate formatted content using column's render function\n        content = render(content, data, rowIndex);\n      }\n      if (allowHTML && typeof content === 'string') {\n        content = safeHtmlSpan(content);\n      }\n      return ___EmotionJSX(StyledCell, { className: classNames('virtual-table-cell', {\n          'virtual-table-cell-last': columnIndex === mergedColumns.length - 1\n        }), style: style, title: typeof content === 'string' ? content : undefined, theme: theme, height: cellSize },\n      content\n      );\n    }\n    );\n  };\n  const modifiedPagination = {\n    ...pagination,\n    onChange: onPageChange\n  };\n  return ___EmotionJSX(\"div\", { ref: ref },\n  ___EmotionJSX(StyledTable, _extends({}, props, { sticky: false, className: \"virtual-table\", columns: mergedColumns, components: {\n      body: renderVirtualList\n    }, pagination: pagination ? modifiedPagination : false }))\n  );\n};__signature__(VirtualTable, \"useState{[tableWidth, setTableWidth](0)}\\nuseCallback{onResize}\\nuseResizeDetector{{ ref }}\\nuseTheme{theme}\\nuseRef{gridRef}\\nuseState{[connectObject](() => {\\n        const obj = {};\\n        Object.defineProperty(obj, 'scrollLeft', {\\n            get: () => {\\n                if (gridRef.current) {\\n                    return gridRef.current?.state?.scrollLeft;\\n                }\\n                return null;\\n            },\\n            set: (scrollLeft) => {\\n                if (gridRef.current) {\\n                    gridRef.current.scrollTo({ scrollLeft });\\n                }\\n            },\\n        });\\n        return obj;\\n    })}\\nuseEffect{}\", () => [useResizeDetector, useTheme]);const _default =\nVirtualTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCell, \"StyledCell\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");reactHotLoader.register(StyledTable, \"StyledTable\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");reactHotLoader.register(SMALL, \"SMALL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");reactHotLoader.register(MIDDLE, \"MIDDLE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");reactHotLoader.register(VirtualTable, \"VirtualTable\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["AntTable","classNames","useResizeDetector","React","useEffect","useRef","useState","useCallback","VariableSizeGrid","Grid","useTheme","styled","safeHtmlSpan","TableSize","ETableAction","jsx","___EmotionJSX","StyledCell","theme","height","gridUnit","colors","grayscale","light3","StyledTable","typography","weights","bold","dark1","primary","base","sizes","s","SMALL","MIDDLE","VirtualTable","props","_columns$map","columns","pagination","onChange","scroll","size","allowHTML","tableWidth","setTableWidth","onResize","width","ref","DEFAULT_COL_WIDTH","widthColumnCount","filter","length","staticColWidthTotal","forEach","column","totalWidth","defaultWidth","Math","max","floor","mergedColumns","map","modifiedColumn","lastColumn","gridRef","connectObject","obj","Object","defineProperty","get","current","_gridRef$current","_gridRef$current$stat","state","scrollLeft","set","scrollTo","resetVirtualGrid","_gridRef$current2","resetAfterIndices","columnIndex","shouldForceUpdate","onPageChange","page","_gridRef$current3","scrollTop","pageSize","action","Paginate","currentDataSource","renderVirtualList","rawData","onScroll","cellSize","Middle","className","columnCount","columnWidth","index","y","rowCount","rowHeight","rowIndex","style","_mergedColumns$column","_mergedColumns$column2","data","content","dataIndex","render","title","undefined","modifiedPagination","_extends","sticky","components","body","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/VirtualTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport AntTable, {\n  TablePaginationConfig,\n  TableProps as AntTableProps,\n} from 'antd/lib/table';\nimport classNames from 'classnames';\nimport { useResizeDetector } from 'react-resize-detector';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport { useTheme, styled, safeHtmlSpan } from '@superset-ui/core';\n\nimport { TableSize, ETableAction } from './index';\n\ninterface VirtualTableProps<RecordType> extends AntTableProps<RecordType> {\n  height?: number;\n  allowHTML?: boolean;\n}\n\nconst StyledCell = styled('div')<{ height?: number }>(\n  ({ theme, height }) => `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-left: ${theme.gridUnit * 2}px;\n  padding-right: ${theme.gridUnit}px;\n  border-bottom: 1px solid ${theme.colors.grayscale.light3};\n  transition: background 0.3s;\n  line-height: ${height}px;\n  box-sizing: border-box;\n`,\n);\n\nconst StyledTable = styled(AntTable)<{ height?: number }>(\n  ({ theme }) => `\n    th.ant-table-cell {\n      font-weight: ${theme.typography.weights.bold};\n      color: ${theme.colors.grayscale.dark1};\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .ant-pagination-item-active {\n      border-color: ${theme.colors.primary.base};\n      }\n    }\n    .ant-table.ant-table-small {\n      font-size: ${theme.typography.sizes.s}px;\n    }\n`,\n);\n\nconst SMALL = 39;\nconst MIDDLE = 47;\n\nconst VirtualTable = <RecordType extends object>(\n  props: VirtualTableProps<RecordType>,\n) => {\n  const {\n    columns,\n    pagination,\n    onChange,\n    height,\n    scroll,\n    size,\n    allowHTML = false,\n  } = props;\n  const [tableWidth, setTableWidth] = useState<number>(0);\n  const onResize = useCallback((width: number) => {\n    setTableWidth(width);\n  }, []);\n  const { ref } = useResizeDetector({ onResize });\n  const theme = useTheme();\n\n  // If a column definition has no width, react-window will use this as the default column width\n  const DEFAULT_COL_WIDTH = theme?.gridUnit * 37 || 150;\n  const widthColumnCount = columns!.filter(({ width }) => !width).length;\n  let staticColWidthTotal = 0;\n  columns?.forEach(column => {\n    if (column.width) {\n      staticColWidthTotal += column.width as number;\n    }\n  });\n\n  let totalWidth = 0;\n  const defaultWidth = Math.max(\n    Math.floor((tableWidth - staticColWidthTotal) / widthColumnCount),\n    50,\n  );\n\n  const mergedColumns =\n    columns?.map?.(column => {\n      const modifiedColumn = { ...column };\n      if (!column.width) {\n        modifiedColumn.width = defaultWidth;\n      }\n      totalWidth += modifiedColumn.width as number;\n      return modifiedColumn;\n    }) ?? [];\n\n  /*\n   * There are cases where a user could set the width of each column and the total width is less than width of\n   * the table.  In this case we will stretch the last column to use the extra space\n   */\n  if (totalWidth < tableWidth) {\n    const lastColumn = mergedColumns[mergedColumns.length - 1];\n    lastColumn.width =\n      (lastColumn.width as number) + Math.floor(tableWidth - totalWidth);\n  }\n\n  const gridRef = useRef<any>();\n  const [connectObject] = useState<any>(() => {\n    const obj = {};\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: () => {\n        if (gridRef.current) {\n          return gridRef.current?.state?.scrollLeft;\n        }\n        return null;\n      },\n      set: (scrollLeft: number) => {\n        if (gridRef.current) {\n          gridRef.current.scrollTo({ scrollLeft });\n        }\n      },\n    });\n\n    return obj;\n  });\n\n  const resetVirtualGrid = () => {\n    gridRef.current?.resetAfterIndices({\n      columnIndex: 0,\n      shouldForceUpdate: true,\n    });\n  };\n\n  useEffect(() => resetVirtualGrid, [tableWidth, columns, size]);\n\n  /*\n   * antd Table has a runtime error when it tries to fire the onChange event triggered from a pageChange\n   * when the table body is overridden with the virtualized table.  This function capture the page change event\n   * from within the pagination controls and proxies the onChange event payload\n   */\n  const onPageChange = (page: number, size: number) => {\n    /**\n     * This resets vertical scroll position to 0 (top) when page changes\n     * We intentionally leave horizontal scroll where it was so user can focus on\n     * specific range of columns as they page through data\n     */\n    gridRef.current?.scrollTo?.({ scrollTop: 0 });\n\n    onChange?.(\n      {\n        ...pagination,\n        current: page,\n        pageSize: size,\n      } as TablePaginationConfig,\n      {},\n      {},\n      {\n        action: ETableAction.Paginate,\n        currentDataSource: [],\n      },\n    );\n  };\n\n  const renderVirtualList = (rawData: object[], { ref, onScroll }: any) => {\n    // eslint-disable-next-line no-param-reassign\n    ref.current = connectObject;\n    const cellSize = size === TableSize.Middle ? MIDDLE : SMALL;\n    return (\n      <Grid\n        ref={gridRef}\n        className=\"virtual-grid\"\n        columnCount={mergedColumns.length}\n        columnWidth={(index: number) => {\n          const { width = DEFAULT_COL_WIDTH } = mergedColumns[index];\n          return width as number;\n        }}\n        height={height || (scroll!.y as number)}\n        rowCount={rawData.length}\n        rowHeight={() => cellSize}\n        width={tableWidth}\n        onScroll={({ scrollLeft }: { scrollLeft: number }) => {\n          onScroll({ scrollLeft });\n        }}\n      >\n        {({\n          columnIndex,\n          rowIndex,\n          style,\n        }: {\n          columnIndex: number;\n          rowIndex: number;\n          style: React.CSSProperties;\n        }) => {\n          const data: any = rawData?.[rowIndex];\n          // Set default content\n          let content =\n            data?.[(mergedColumns as any)?.[columnIndex]?.dataIndex];\n          // Check if the column has a render function\n          const render = mergedColumns[columnIndex]?.render;\n          if (typeof render === 'function') {\n            // Use render function to generate formatted content using column's render function\n            content = render(content, data, rowIndex);\n          }\n\n          if (allowHTML && typeof content === 'string') {\n            content = safeHtmlSpan(content);\n          }\n\n          return (\n            <StyledCell\n              className={classNames('virtual-table-cell', {\n                'virtual-table-cell-last':\n                  columnIndex === mergedColumns.length - 1,\n              })}\n              style={style}\n              title={typeof content === 'string' ? content : undefined}\n              theme={theme}\n              height={cellSize}\n            >\n              {content}\n            </StyledCell>\n          );\n        }}\n      </Grid>\n    );\n  };\n\n  const modifiedPagination = {\n    ...pagination,\n    onChange: onPageChange,\n  };\n\n  return (\n    <div ref={ref}>\n      <StyledTable\n        {...props}\n        sticky={false}\n        className=\"virtual-table\"\n        columns={mergedColumns}\n        components={{\n          body: renderVirtualList,\n        }}\n        pagination={pagination ? modifiedPagination : false}\n      />\n    </div>\n  );\n};\n\nexport default VirtualTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}