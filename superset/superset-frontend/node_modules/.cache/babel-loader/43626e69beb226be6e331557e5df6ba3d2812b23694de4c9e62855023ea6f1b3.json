{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nclass LRUCache {\n\n\n  constructor(capacity) {this.cache = void 0;this.capacity = void 0;\n    if (capacity < 1) {\n      throw new Error('The capacity in LRU must be greater than 0.');\n    }\n    this.capacity = capacity;\n    this.cache = new Map();\n  }\n  has(key) {\n    return this.cache.has(key);\n  }\n  get(key) {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n    if (this.cache.has(key)) {\n      const tmp = this.cache.get(key);\n      this.cache.delete(key);\n      this.cache.set(key, tmp);\n      return tmp;\n    }\n    return undefined;\n  }\n  set(key, value) {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n    this.cache.set(key, value);\n  }\n  clear() {\n    this.cache.clear();\n  }\n  get size() {\n    return this.cache.size;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}export function lruCache(capacity = 100) {\n  return new LRUCache(capacity);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LRUCache, \"LRUCache\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/utils/lruCache.ts\");reactHotLoader.register(lruCache, \"lruCache\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/utils/lruCache.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["LRUCache","constructor","capacity","cache","Error","Map","has","key","get","TypeError","tmp","delete","set","undefined","value","size","keys","next","clear","__reactstandin__regenerateByEval","code","eval","lruCache","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/utils/lruCache.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nclass LRUCache<T> {\n  private cache: Map<string, T>;\n\n  readonly capacity: number;\n\n  constructor(capacity: number) {\n    if (capacity < 1) {\n      throw new Error('The capacity in LRU must be greater than 0.');\n    }\n    this.capacity = capacity;\n    this.cache = new Map<string, T>();\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  public get(key: string): T | undefined {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n\n    if (this.cache.has(key)) {\n      const tmp = this.cache.get(key) as T;\n      this.cache.delete(key);\n      this.cache.set(key, tmp);\n      return tmp;\n    }\n    return undefined;\n  }\n\n  public set(key: string, value: T) {\n    // Prevent runtime errors\n    if (typeof key !== 'string') {\n      throw new TypeError('The LRUCache key must be string.');\n    }\n    if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n    this.cache.set(key, value);\n  }\n\n  public clear() {\n    this.cache.clear();\n  }\n\n  public get size() {\n    return this.cache.size;\n  }\n}\n\nexport function lruCache<T>(capacity = 100) {\n  return new LRUCache<T>(capacity);\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,MAAMA,QAAQ;;;EAKZC,YAAYC,QAAgB,QAJpBC,KAAK,eAEJD,QAAQ;IAGf,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChB,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;;IAEhE,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAG,IAAIE,GAAG,EAAa;EACnC;EAEOC,GAAGA,CAACC,GAAW;IACpB,OAAO,IAAI,CAACJ,KAAK,CAACG,GAAG,CAACC,GAAG,CAAC;EAC5B;EAEOC,GAAGA,CAACD,GAAW;IACpB;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIE,SAAS,CAAC,kCAAkC,CAAC;;IAGzD,IAAI,IAAI,CAACN,KAAK,CAACG,GAAG,CAACC,GAAG,CAAC,EAAE;MACvB,MAAMG,GAAG,GAAG,IAAI,CAACP,KAAK,CAACK,GAAG,CAACD,GAAG,CAAM;MACpC,IAAI,CAACJ,KAAK,CAACQ,MAAM,CAACJ,GAAG,CAAC;MACtB,IAAI,CAACJ,KAAK,CAACS,GAAG,CAACL,GAAG,EAAEG,GAAG,CAAC;MACxB,OAAOA,GAAG;;IAEZ,OAAOG,SAAS;EAClB;EAEOD,GAAGA,CAACL,GAAW,EAAEO,KAAQ;IAC9B;IACA,IAAI,OAAOP,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIE,SAAS,CAAC,kCAAkC,CAAC;;IAEzD,IAAI,IAAI,CAACN,KAAK,CAACY,IAAI,IAAI,IAAI,CAACb,QAAQ,EAAE;MACpC,IAAI,CAACC,KAAK,CAACQ,MAAM,CAAC,IAAI,CAACR,KAAK,CAACa,IAAI,EAAE,CAACC,IAAI,EAAE,CAACH,KAAK,CAAC;;IAEnD,IAAI,CAACX,KAAK,CAACS,GAAG,CAACL,GAAG,EAAEO,KAAK,CAAC;EAC5B;EAEOI,KAAKA,CAAA;IACV,IAAI,CAACf,KAAK,CAACe,KAAK,EAAE;EACpB;EAEA,IAAWH,IAAIA,CAAA;IACb,OAAO,IAAI,CAACZ,KAAK,CAACY,IAAI;EACxB,CAAC;EAAAI,iCAAAZ,GAAA,EAAAa,IAAA;IAAA,KAAAb,GAAA,IAAAc,IAAA,CAAAD,IAAA,G,CAGH,OAAM,SAAUE,QAAQA,CAAIpB,QAAQ,GAAG,GAAG;EACxC,OAAO,IAAIF,QAAQ,CAAIE,QAAQ,CAAC;AAClC,CAAC,mBAAAqB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAZ,SAAA,MAAAU,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAtDK1B,QAAQ,wHAAAuB,cAAA,CAAAG,QAAA,CAoDEJ,QAAQ,gJAAAK,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAd,SAAA,CAAAc,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}