{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { styled, usePrevious } from '@superset-ui/core';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport controlMap from './controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledControl = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n`;\nexport default function Control(props) {\n  const { actions: { setControlValue }, name, type, hidden, isVisible, resetOnHide = true } = props;\n  const [hovered, setHovered] = useState(false);\n  const wasVisible = usePrevious(isVisible);\n  const onChange = useCallback((value, errors) => setControlValue(name, value, errors), [name, setControlValue]);\n  useEffect(() => {\n    if (wasVisible === true &&\n    isVisible === false &&\n    props.default !== undefined &&\n    !_isEqual(props.value, props.default) &&\n    resetOnHide) {\n      // reset control value if setting to invisible\n      setControlValue == null ? void 0 : setControlValue(name, props.default);\n    }\n  }, [\n  name,\n  wasVisible,\n  isVisible,\n  setControlValue,\n  props.value,\n  props.default]\n  );\n  if (!type || isVisible === false)\n  return null;\n  const ControlComponent = typeof type === 'string' ? controlMap[type] : type;\n  if (!ControlComponent) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unknown controlType: ${type}`);\n    return null;\n  }\n  return ___EmotionJSX(StyledControl, { className: \"Control\", \"data-test\": name, style: hidden ? { display: 'none' } : undefined, onMouseEnter: () => setHovered(true), onMouseLeave: () => setHovered(false) },\n  ___EmotionJSX(ErrorBoundary, null,\n  ___EmotionJSX(ControlComponent, _extends({ onChange: onChange, hovered: hovered }, props))\n  )\n  );\n}__signature__(Control, \"useState{[hovered, setHovered](false)}\\nusePrevious{wasVisible}\\nuseCallback{onChange}\\nuseEffect{}\", () => [usePrevious]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledControl, \"StyledControl\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/Control.tsx\");reactHotLoader.register(Control, \"Control\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/Control.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useState","useEffect","styled","usePrevious","ErrorBoundary","controlMap","jsx","___EmotionJSX","StyledControl","div","theme","gridUnit","Control","props","actions","setControlValue","name","type","hidden","isVisible","resetOnHide","hovered","setHovered","wasVisible","onChange","value","errors","default","undefined","_isEqual","ControlComponent","console","warn","className","style","display","onMouseEnter","onMouseLeave","_extends","__signature__","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/Control.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, useCallback, useState, useEffect } from 'react';\nimport { isEqual } from 'lodash';\nimport {\n  ControlType,\n  ControlComponentProps as BaseControlComponentProps,\n} from '@superset-ui/chart-controls';\nimport {\n  styled,\n  JsonValue,\n  QueryFormData,\n  usePrevious,\n} from '@superset-ui/core';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport controlMap from './controls';\n\nexport type ControlProps = {\n  // the actual action dispatcher (via bindActionCreators) has identical\n  // signature to the original action factory.\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  type: ControlType;\n  label?: ReactNode;\n  name: string;\n  description?: ReactNode;\n  tooltipOnClick?: () => ReactNode;\n  places?: number;\n  rightNode?: ReactNode;\n  formData?: QueryFormData | null;\n  value?: JsonValue;\n  validationErrors?: any[];\n  hidden?: boolean;\n  renderTrigger?: boolean;\n  default?: JsonValue;\n  isVisible?: boolean;\n  resetOnHide?: boolean;\n};\n\n/**\n *\n */\nexport type ControlComponentProps<ValueType extends JsonValue = JsonValue> =\n  Omit<ControlProps, 'value'> & BaseControlComponentProps<ValueType>;\n\nconst StyledControl = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nexport default function Control(props: ControlProps) {\n  const {\n    actions: { setControlValue },\n    name,\n    type,\n    hidden,\n    isVisible,\n    resetOnHide = true,\n  } = props;\n\n  const [hovered, setHovered] = useState(false);\n  const wasVisible = usePrevious(isVisible);\n  const onChange = useCallback(\n    (value: any, errors: any[]) => setControlValue(name, value, errors),\n    [name, setControlValue],\n  );\n\n  useEffect(() => {\n    if (\n      wasVisible === true &&\n      isVisible === false &&\n      props.default !== undefined &&\n      !isEqual(props.value, props.default) &&\n      resetOnHide\n    ) {\n      // reset control value if setting to invisible\n      setControlValue?.(name, props.default);\n    }\n  }, [\n    name,\n    wasVisible,\n    isVisible,\n    setControlValue,\n    props.value,\n    props.default,\n  ]);\n\n  if (!type || isVisible === false) return null;\n\n  const ControlComponent = typeof type === 'string' ? controlMap[type] : type;\n  if (!ControlComponent) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unknown controlType: ${type}`);\n    return null;\n  }\n\n  return (\n    <StyledControl\n      className=\"Control\"\n      data-test={name}\n      style={hidden ? { display: 'none' } : undefined}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <ErrorBoundary>\n        <ControlComponent onChange={onChange} hovered={hovered} {...props} />\n      </ErrorBoundary>\n    </StyledControl>\n  );\n}\n"],"mappings":"4YAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAeC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAM1E,SACEC,MAAM,EAGNC,WAAW,QACN,mBAAmB;AAC1B,OAAOC,aAAa,MAAM,8BAA8B;AAExD,OAAOC,UAAU,MAAM,YAAY,CAAC,SAAAC,GAAA,IAAAC,aAAA;AA6BpC,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAG;oBACZ,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;CACpD;AAED,eAAc,SAAUC,OAAOA,CAACC,KAAmB;EACjD,MAAM,EACJC,OAAO,EAAE,EAAEC,eAAe,EAAE,EAC5BC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,SAAS,EACTC,WAAW,GAAG,IAAI,EACnB,GAAGP,KAAK;EAET,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMuB,UAAU,GAAGpB,WAAW,CAACgB,SAAS,CAAC;EACzC,MAAMK,QAAQ,GAAGzB,WAAW,CAC1B,CAAC0B,KAAU,EAAEC,MAAa,KAAKX,eAAe,CAACC,IAAI,EAAES,KAAK,EAAEC,MAAM,CAAC,EACnE,CAACV,IAAI,EAAED,eAAe,CAAC,CACxB;EAEDd,SAAS,CAAC,MAAK;IACb,IACEsB,UAAU,KAAK,IAAI;IACnBJ,SAAS,KAAK,KAAK;IACnBN,KAAK,CAACc,OAAO,KAAKC,SAAS;IAC3B,CAACC,QAAA,CAAQhB,KAAK,CAACY,KAAK,EAAEZ,KAAK,CAACc,OAAO,CAAC;IACpCP,WAAW,EACX;MACA;MACAL,eAAe,oBAAfA,eAAe,CAAGC,IAAI,EAAEH,KAAK,CAACc,OAAO,CAAC;;EAE1C,CAAC,EAAE;EACDX,IAAI;EACJO,UAAU;EACVJ,SAAS;EACTJ,eAAe;EACfF,KAAK,CAACY,KAAK;EACXZ,KAAK,CAACc,OAAO;EACd,CAAC;EAEF,IAAI,CAACV,IAAI,IAAIE,SAAS,KAAK,KAAK;EAAE,OAAO,IAAI;EAE7C,MAAMW,gBAAgB,GAAG,OAAOb,IAAI,KAAK,QAAQ,GAAGZ,UAAU,CAACY,IAAI,CAAC,GAAGA,IAAI;EAC3E,IAAI,CAACa,gBAAgB,EAAE;IACrB;IACAC,OAAO,CAACC,IAAI,CAAC,wBAAwBf,IAAI,EAAE,CAAC;IAC5C,OAAO,IAAI;;EAGb,OACEV,aAAA,CAACC,aAAa,IACZyB,SAAS,EAAC,SAAS,EACnB,aAAWjB,IAAK,EAChBkB,KAAK,EAAEhB,MAAM,GAAG,EAAEiB,OAAO,EAAE,MAAM,EAAE,GAAGP,SAAU,EAChDQ,YAAY,EAAEA,CAAA,KAAMd,UAAU,CAAC,IAAI,CAAE,EACrCe,YAAY,EAAEA,CAAA,KAAMf,UAAU,CAAC,KAAK,CAAE;EAEtCf,aAAA,CAACH,aAAa;EACZG,aAAA,CAACuB,gBAAgB,EAAAQ,QAAA,GAACd,QAAQ,EAAEA,QAAS,EAACH,OAAO,EAAEA,OAAQ,IAAKR,KAAK,CAAC;EACrD;EACF,CAAC;AAEpB,CAAC0B,aAAA,CA3DuB3B,OAAO,gHAWVT,WAAW,sBAAAqC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAd,OAAA,GAAAC,SAAA,MAAAY,cAAA,WAAAA,cAAA,CAAAE,QAAA,CAf1BlC,aAAa,gHAAAgC,cAAA,CAAAE,QAAA,CAIK9B,OAAO,kIAAA+B,WAAA,UAAAF,oBAAA,mBAAAA,oBAAA,CAAAE,WAAA,GAAAf,SAAA,CAAAe,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}