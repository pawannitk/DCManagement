{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\n\nimport { usePrevious } from '@superset-ui/core';\nimport { DeckGLContainerStyledWrapper } from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport from './utils/fitViewport';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport function createDeckGLComponent(getLayer, getPoints) {\n  // Higher order component\n  return /*#__PURE__*/memo(__signature__((props) => {\n    const containerRef = useRef();\n    const prevFormData = usePrevious(props.formData);\n    const prevPayload = usePrevious(props.payload);\n    const getAdjustedViewport = () => {\n      const { width, height, formData } = props;\n      if (formData.autozoom) {\n        return fitViewport(props.viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features)\n        });\n      }\n      return props.viewport;\n    };\n    const [viewport, setViewport] = useState(getAdjustedViewport());\n    const setTooltip = useCallback((tooltip) => {\n      const { current } = containerRef;\n      if (current) {\n        current == null ? void 0 : current.setTooltip(tooltip);\n      }\n    }, []);\n    const computeLayer = useCallback((props) => {\n      const { formData, payload, onAddFilter } = props;\n      return getLayer(formData, payload, onAddFilter, setTooltip);\n    }, [setTooltip]);\n    const [layer, setLayer] = useState(computeLayer(props));\n    useEffect(() => {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const prevFdNoVP = { ...prevFormData, viewport: null };\n      const currFdNoVP = { ...props.formData, viewport: null };\n      if (!_isEqual(prevFdNoVP, currFdNoVP) || prevPayload !== props.payload) {\n        setLayer(computeLayer(props));\n      }\n    }, [computeLayer, prevFormData, prevPayload, props]);\n    const { formData, payload, setControlValue, height, width } = props;\n    return ___EmotionJSX(DeckGLContainerStyledWrapper, { ref: containerRef, mapboxApiAccessToken: payload.data.mapboxApiKey, viewport: viewport, layers: [layer], mapStyle: formData.mapbox_style, setControlValue: setControlValue, width: width, height: height, onViewportChange: setViewport });\n  }, \"useRef{containerRef}\\nusePrevious{prevFormData}\\nusePrevious{prevPayload}\\nuseState{[viewport, setViewport](getAdjustedViewport())}\\nuseCallback{setTooltip}\\nuseCallback{computeLayer}\\nuseState{[layer, setLayer](computeLayer(props))}\\nuseEffect{}\", () => [usePrevious, usePrevious]));\n}\nexport function createCategoricalDeckGLComponent(getLayer, getPoints) {\n  return function Component(props) {\n    const { datasource, formData, height, payload, setControlValue, viewport, width } = props;\n    return ___EmotionJSX(CategoricalDeckGLContainer, { datasource: datasource, formData: formData, mapboxApiKey: payload.data.mapboxApiKey, setControlValue: setControlValue, viewport: viewport, getLayer: getLayer, payload: payload, getPoints: getPoints, width: width, height: height });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createDeckGLComponent, \"createDeckGLComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/factory.tsx\");reactHotLoader.register(createCategoricalDeckGLComponent, \"createCategoricalDeckGLComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/factory.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","memo","useCallback","useEffect","useRef","useState","usePrevious","DeckGLContainerStyledWrapper","CategoricalDeckGLContainer","fitViewport","jsx","___EmotionJSX","createDeckGLComponent","getLayer","getPoints","__signature__","props","containerRef","prevFormData","formData","prevPayload","payload","getAdjustedViewport","width","height","autozoom","viewport","points","data","features","setViewport","setTooltip","tooltip","current","computeLayer","onAddFilter","layer","setLayer","prevFdNoVP","currFdNoVP","_isEqual","setControlValue","ref","mapboxApiAccessToken","mapboxApiKey","layers","mapStyle","mapbox_style","onViewportChange","createCategoricalDeckGLComponent","Component","datasource","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/factory.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { isEqual } from 'lodash';\nimport { Layer } from 'deck.gl/typed';\nimport {\n  Datasource,\n  QueryFormData,\n  JsonObject,\n  HandlerFunction,\n  usePrevious,\n} from '@superset-ui/core';\n\nimport {\n  DeckGLContainerStyledWrapper,\n  DeckGLContainerHandle,\n} from './DeckGLContainer';\nimport CategoricalDeckGLContainer from './CategoricalDeckGLContainer';\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport { Point } from './types';\nimport { TooltipProps } from './components/Tooltip';\n\ntype deckGLComponentProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  height: number;\n  onAddFilter: HandlerFunction;\n  payload: JsonObject;\n  setControlValue: () => void;\n  viewport: Viewport;\n  width: number;\n};\nexport interface getLayerType<T> {\n  (\n    formData: QueryFormData,\n    payload: JsonObject,\n    onAddFilter: HandlerFunction | undefined,\n    setTooltip: (tooltip: TooltipProps['tooltip']) => void,\n    datasource?: Datasource,\n  ): T;\n}\ninterface getPointsType {\n  (data: JsonObject[]): Point[];\n}\n\nexport function createDeckGLComponent(\n  getLayer: getLayerType<unknown>,\n  getPoints: getPointsType,\n) {\n  // Higher order component\n  return memo((props: deckGLComponentProps) => {\n    const containerRef = useRef<DeckGLContainerHandle>();\n    const prevFormData = usePrevious(props.formData);\n    const prevPayload = usePrevious(props.payload);\n    const getAdjustedViewport = () => {\n      const { width, height, formData } = props;\n      if (formData.autozoom) {\n        return fitViewport(props.viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features),\n        }) as Viewport;\n      }\n      return props.viewport;\n    };\n\n    const [viewport, setViewport] = useState(getAdjustedViewport());\n\n    const setTooltip = useCallback((tooltip: TooltipProps['tooltip']) => {\n      const { current } = containerRef;\n      if (current) {\n        current?.setTooltip(tooltip);\n      }\n    }, []);\n\n    const computeLayer = useCallback(\n      (props: deckGLComponentProps) => {\n        const { formData, payload, onAddFilter } = props;\n\n        return getLayer(formData, payload, onAddFilter, setTooltip) as Layer;\n      },\n      [setTooltip],\n    );\n\n    const [layer, setLayer] = useState(computeLayer(props));\n\n    useEffect(() => {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const prevFdNoVP = { ...prevFormData, viewport: null };\n      const currFdNoVP = { ...props.formData, viewport: null };\n      if (!isEqual(prevFdNoVP, currFdNoVP) || prevPayload !== props.payload) {\n        setLayer(computeLayer(props));\n      }\n    }, [computeLayer, prevFormData, prevPayload, props]);\n\n    const { formData, payload, setControlValue, height, width } = props;\n\n    return (\n      <DeckGLContainerStyledWrapper\n        ref={containerRef}\n        mapboxApiAccessToken={payload.data.mapboxApiKey}\n        viewport={viewport}\n        layers={[layer]}\n        mapStyle={formData.mapbox_style}\n        setControlValue={setControlValue}\n        width={width}\n        height={height}\n        onViewportChange={setViewport}\n      />\n    );\n  });\n}\n\nexport function createCategoricalDeckGLComponent(\n  getLayer: getLayerType<Layer>,\n  getPoints: getPointsType,\n) {\n  return function Component(props: deckGLComponentProps) {\n    const {\n      datasource,\n      formData,\n      height,\n      payload,\n      setControlValue,\n      viewport,\n      width,\n    } = props;\n\n    return (\n      <CategoricalDeckGLContainer\n        datasource={datasource}\n        formData={formData}\n        mapboxApiKey={payload.data.mapboxApiKey}\n        setControlValue={setControlValue}\n        viewport={viewport}\n        getLayer={getLayer}\n        payload={payload}\n        getPoints={getPoints}\n        width={width}\n        height={height}\n      />\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}