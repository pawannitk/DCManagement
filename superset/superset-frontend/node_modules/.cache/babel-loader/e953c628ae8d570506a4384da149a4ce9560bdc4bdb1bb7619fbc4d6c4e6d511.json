{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { format as d3Format, formatLocale } from 'd3-format';\nimport { isRequired } from '../../utils';\nimport NumberFormatter from '../NumberFormatter';\nexport default function createD3NumberFormatter(config) {\n  const { description, formatString = isRequired('config.formatString'), label, locale } = config;\n  let formatFunc;\n  let isInvalid = false;\n  try {\n    formatFunc =\n    typeof locale === 'undefined' ?\n    d3Format(formatString) :\n    formatLocale(locale).format(formatString);\n  }\n  catch (error) {\n    formatFunc = (value) => `${value} (Invalid format: ${formatString})`;\n    isInvalid = true;\n  }\n  return new NumberFormatter({\n    description,\n    formatFunc,\n    id: formatString,\n    isInvalid,\n    label\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createD3NumberFormatter, \"createD3NumberFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createD3NumberFormatter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["format","d3Format","formatLocale","isRequired","NumberFormatter","createD3NumberFormatter","config","description","formatString","label","locale","formatFunc","isInvalid","error","value","id","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/factories/createD3NumberFormatter.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  format as d3Format,\n  formatLocale,\n  FormatLocaleDefinition,\n} from 'd3-format';\nimport { isRequired } from '../../utils';\nimport NumberFormatter from '../NumberFormatter';\nimport { NumberFormatFunction } from '../types';\n\nexport default function createD3NumberFormatter(config: {\n  description?: string;\n  formatString: string;\n  label?: string;\n  locale?: FormatLocaleDefinition;\n}) {\n  const {\n    description,\n    formatString = isRequired('config.formatString'),\n    label,\n    locale,\n  } = config;\n\n  let formatFunc: NumberFormatFunction;\n  let isInvalid = false;\n\n  try {\n    formatFunc =\n      typeof locale === 'undefined'\n        ? d3Format(formatString)\n        : formatLocale(locale).format(formatString);\n  } catch (error) {\n    formatFunc = value => `${value} (Invalid format: ${formatString})`;\n    isInvalid = true;\n  }\n\n  return new NumberFormatter({\n    description,\n    formatFunc,\n    id: formatString,\n    isInvalid,\n    label,\n  });\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,MAAM,IAAIC,QAAQ,EAClBC,YAAY,QAEP,WAAW;AAClB,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,eAAe,MAAM,oBAAoB;AAGhD,eAAc,SAAUC,uBAAuBA,CAACC,MAK/C;EACC,MAAM,EACJC,WAAW,EACXC,YAAY,GAAGL,UAAU,CAAC,qBAAqB,CAAC,EAChDM,KAAK,EACLC,MAAM,EACP,GAAGJ,MAAM;EAEV,IAAIK,UAAgC;EACpC,IAAIC,SAAS,GAAG,KAAK;EAErB,IAAI;IACFD,UAAU;IACR,OAAOD,MAAM,KAAK,WAAW;IACzBT,QAAQ,CAACO,YAAY,CAAC;IACtBN,YAAY,CAACQ,MAAM,CAAC,CAACV,MAAM,CAACQ,YAAY,CAAC;;EAC/C,OAAOK,KAAK,EAAE;IACdF,UAAU,GAAGA,CAAAG,KAAK,KAAI,GAAGA,KAAK,qBAAqBN,YAAY,GAAG;IAClEI,SAAS,GAAG,IAAI;;EAGlB,OAAO,IAAIR,eAAe,CAAC;IACzBG,WAAW;IACXI,UAAU;IACVI,EAAE,EAAEP,YAAY;IAChBI,SAAS;IACTH;GACD,CAAC;AACJ,CAAC,mBAAAO,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjCuBf,uBAAuB,gMAAAgB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}