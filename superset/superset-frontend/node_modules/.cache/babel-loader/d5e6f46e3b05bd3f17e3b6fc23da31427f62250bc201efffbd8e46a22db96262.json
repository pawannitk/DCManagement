{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useRef, useState } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n// useAsyncDebounce in dist build of `react-table` requires regeneratorRuntime\nimport 'regenerator-runtime/runtime';\n/**\n * Hook useState to allow always return latest initialValue\n */\nexport default function useAsyncState(initialValue, callback, wait = 200) {\n  const [value, setValue] = useState(initialValue);\n  const valueRef = useRef(initialValue);\n  const onChange = useAsyncDebounce(callback, wait);\n  // sync updated initialValue\n  if (valueRef.current !== initialValue) {\n    valueRef.current = initialValue;\n    if (value !== initialValue) {\n      setValue(initialValue);\n    }\n  }\n  const setBoth = (newValue) => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n  return [value, setBoth];\n}__signature__(useAsyncState, \"useState{[value, setValue](initialValue)}\\nuseRef{valueRef}\\nuseAsyncDebounce{onChange}\", () => [useAsyncDebounce]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useAsyncState, \"useAsyncState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/utils/useAsyncState.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useRef","useState","useAsyncDebounce","useAsyncState","initialValue","callback","wait","value","setValue","valueRef","onChange","current","setBoth","newValue","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/utils/useAsyncState.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useRef, useState } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\n// useAsyncDebounce in dist build of `react-table` requires regeneratorRuntime\nimport 'regenerator-runtime/runtime';\n\n/**\n * Hook useState to allow always return latest initialValue\n */\nexport default function useAsyncState<T, F extends (newValue: T) => unknown>(\n  initialValue: T,\n  callback: F,\n  wait = 200,\n) {\n  const [value, setValue] = useState(initialValue);\n  const valueRef = useRef(initialValue);\n  const onChange = useAsyncDebounce(callback, wait);\n\n  // sync updated initialValue\n  if (valueRef.current !== initialValue) {\n    valueRef.current = initialValue;\n    if (value !== initialValue) {\n      setValue(initialValue);\n    }\n  }\n\n  const setBoth = (newValue: T) => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return [value, setBoth] as [typeof value, typeof setValue];\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,aAAa;AAE9C;AACA,OAAO,6BAA6B;AAEpC;;;AAGA,eAAc,SAAUC,aAAaA,CACnCC,YAAe,EACfC,QAAW,EACXC,IAAI,GAAG,GAAG;EAEV,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,YAAY,CAAC;EAChD,MAAMK,QAAQ,GAAGT,MAAM,CAACI,YAAY,CAAC;EACrC,MAAMM,QAAQ,GAAGR,gBAAgB,CAACG,QAAQ,EAAEC,IAAI,CAAC;EAEjD;EACA,IAAIG,QAAQ,CAACE,OAAO,KAAKP,YAAY,EAAE;IACrCK,QAAQ,CAACE,OAAO,GAAGP,YAAY;IAC/B,IAAIG,KAAK,KAAKH,YAAY,EAAE;MAC1BI,QAAQ,CAACJ,YAAY,CAAC;;;EAI1B,MAAMQ,OAAO,GAAGA,CAACC,QAAW,KAAI;IAC9BL,QAAQ,CAACK,QAAQ,CAAC;IAClBH,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC;EAED,OAAO,CAACN,KAAK,EAAEK,OAAO,CAAoC;AAC5D,CAACE,aAAA,CAvBuBX,aAAa,oGAOlBD,gBAAgB,sBAAAa,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAPXhB,aAAa,qKAAAiB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}