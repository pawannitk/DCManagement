{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Registry, makeSingleton, OverwritePolicy } from '@superset-ui/core';\nclass ErrorMessageComponentRegistry extends Registry {\n  constructor() {\n    super({\n      name: 'ErrorMessageComponent',\n      overwritePolicy: OverwritePolicy.Allow\n    });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const getErrorMessageComponentRegistry = makeSingleton(ErrorMessageComponentRegistry);const _default =\ngetErrorMessageComponentRegistry;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ErrorMessageComponentRegistry, \"ErrorMessageComponentRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ErrorMessage/getErrorMessageComponentRegistry.ts\");reactHotLoader.register(getErrorMessageComponentRegistry, \"getErrorMessageComponentRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ErrorMessage/getErrorMessageComponentRegistry.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ErrorMessage/getErrorMessageComponentRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Registry","makeSingleton","OverwritePolicy","ErrorMessageComponentRegistry","constructor","name","overwritePolicy","Allow","__reactstandin__regenerateByEval","key","code","eval","getErrorMessageComponentRegistry","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ErrorMessage/getErrorMessageComponentRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Registry, makeSingleton, OverwritePolicy } from '@superset-ui/core';\nimport { ErrorMessageComponent } from './types';\n\nclass ErrorMessageComponentRegistry extends Registry<\n  ErrorMessageComponent,\n  ErrorMessageComponent\n> {\n  constructor() {\n    super({\n      name: 'ErrorMessageComponent',\n      overwritePolicy: OverwritePolicy.Allow,\n    });\n  }\n}\n\nconst getErrorMessageComponentRegistry = makeSingleton(\n  ErrorMessageComponentRegistry,\n);\n\nexport default getErrorMessageComponentRegistry;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,eAAe,QAAQ,mBAAmB;AAG5E,MAAMC,6BAA8B,SAAQH,QAG3C;EACCI,YAAA;IACE,KAAK,CAAC;MACJC,IAAI,EAAE,uBAAuB;MAC7BC,eAAe,EAAEJ,eAAe,CAACK;KAClC,CAAC;EACJ,CAAC;EAAAC,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CAGH,MAAME,gCAAgC,GAAGX,aAAa,CACpDE,6BAA6B,CAC9B,CAAC,MAAAU,QAAA;AAEaD,gCAAgC,CAA/C,eAAAC,QAAA,CAAgD,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAhB1Cf,6BAA8B,6JAAAW,cAAA,CAAAI,QAAA,CAY9BN,gCAAgC,gKAAAE,cAAA,CAAAI,QAAA,CAAAL,QAAA,+JAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}