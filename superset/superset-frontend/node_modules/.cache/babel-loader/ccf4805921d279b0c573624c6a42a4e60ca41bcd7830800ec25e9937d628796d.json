{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { css, ensureIsArray, styled } from '@superset-ui/core';\nimport { AntdBreadcrumb } from 'src/components/index';\nimport { noOp } from 'src/utils/common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst BreadcrumbItem = styled(AntdBreadcrumb.Item)`\n  ${({ theme, isClickable, isHidden }) => css`\n    cursor: ${isClickable ? 'pointer' : 'auto'};\n    color: ${theme.colors.grayscale.light1};\n    transition: color ease-in ${theme.transitionTiming}s;\n    .ant-breadcrumb > span:last-child > & {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    &:hover {\n      color: ${isClickable ? theme.colors.grayscale.dark1 : 'inherit'};\n    }\n    visibility: ${isHidden ? 'hidden' : 'visible'};\n  `}\n`;\nexport const useDrillByBreadcrumbs = (breadcrumbsData, onBreadcrumbClick = noOp) => useMemo(() => {\n  // the last breadcrumb is not clickable\n  const isClickable = (index) => index < breadcrumbsData.length - 1;\n  const isHidden = (breadcumb) => ensureIsArray(breadcumb.groupby).length === 0 &&\n  ensureIsArray(breadcumb.filters).length === 0;\n  const getBreadcrumbText = (breadcrumb) => `${ensureIsArray(breadcrumb.groupby).\n  map((column) => column.verbose_name || column.column_name).\n  join(', ')} ${breadcrumb.filters ?\n  `(${breadcrumb.filters.\n  map((filter) => filter.formattedVal || filter.val).\n  join(', ')})` :\n  ''}`;\n  return ___EmotionJSX(AntdBreadcrumb, { css: (theme) => css`\n          margin: ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n        ` },\n  breadcrumbsData.\n  map((breadcrumb, index) => ___EmotionJSX(BreadcrumbItem, { key: index, isClickable: isClickable(index), isHidden: isHidden(breadcrumb), onClick: isClickable(index) ?\n    () => onBreadcrumbClick(breadcrumb, index) :\n    noOp, \"data-test\": \"drill-by-breadcrumb-item\" },\n  getBreadcrumbText(breadcrumb)\n  )).\n  filter((item) => item.props.isHidden === false)\n  );\n}, [breadcrumbsData, onBreadcrumbClick]);__signature__(useDrillByBreadcrumbs, \"useMemo{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(BreadcrumbItem, \"BreadcrumbItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/DrillBy/useDrillByBreadcrumbs.tsx\");reactHotLoader.register(useDrillByBreadcrumbs, \"useDrillByBreadcrumbs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/DrillBy/useDrillByBreadcrumbs.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","css","ensureIsArray","styled","AntdBreadcrumb","noOp","jsx","___EmotionJSX","BreadcrumbItem","Item","theme","isClickable","isHidden","colors","grayscale","light1","transitionTiming","dark1","useDrillByBreadcrumbs","breadcrumbsData","onBreadcrumbClick","index","length","breadcumb","groupby","filters","getBreadcrumbText","breadcrumb","map","column","verbose_name","column_name","join","filter","formattedVal","val","gridUnit","key","onClick","item","props","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Chart/DrillBy/useDrillByBreadcrumbs.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport {\n  BinaryQueryObjectFilterClause,\n  Column,\n  css,\n  ensureIsArray,\n  styled,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport { AntdBreadcrumb } from 'src/components/index';\nimport { noOp } from 'src/utils/common';\n\nexport interface DrillByBreadcrumb {\n  groupby: Column | Column[];\n  filters?: BinaryQueryObjectFilterClause[];\n}\n\nconst BreadcrumbItem = styled(AntdBreadcrumb.Item)<{\n  isClickable: boolean;\n  isHidden: boolean;\n}>`\n  ${({ theme, isClickable, isHidden }) => css`\n    cursor: ${isClickable ? 'pointer' : 'auto'};\n    color: ${theme.colors.grayscale.light1};\n    transition: color ease-in ${theme.transitionTiming}s;\n    .ant-breadcrumb > span:last-child > & {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    &:hover {\n      color: ${isClickable ? theme.colors.grayscale.dark1 : 'inherit'};\n    }\n    visibility: ${isHidden ? 'hidden' : 'visible'};\n  `}\n`;\n\nexport const useDrillByBreadcrumbs = (\n  breadcrumbsData: DrillByBreadcrumb[],\n  onBreadcrumbClick: (\n    breadcrumb: DrillByBreadcrumb,\n    index: number,\n  ) => void = noOp,\n) =>\n  useMemo(() => {\n    // the last breadcrumb is not clickable\n    const isClickable = (index: number) => index < breadcrumbsData.length - 1;\n    const isHidden = (breadcumb: DrillByBreadcrumb) =>\n      ensureIsArray(breadcumb.groupby).length === 0 &&\n      ensureIsArray(breadcumb.filters).length === 0;\n    const getBreadcrumbText = (breadcrumb: DrillByBreadcrumb) =>\n      `${ensureIsArray(breadcrumb.groupby)\n        .map(column => column.verbose_name || column.column_name)\n        .join(', ')} ${\n        breadcrumb.filters\n          ? `(${breadcrumb.filters\n              .map(filter => filter.formattedVal || filter.val)\n              .join(', ')})`\n          : ''\n      }`;\n    return (\n      <AntdBreadcrumb\n        css={(theme: SupersetTheme) => css`\n          margin: ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n        `}\n      >\n        {breadcrumbsData\n          .map((breadcrumb, index) => (\n            <BreadcrumbItem\n              key={index}\n              isClickable={isClickable(index)}\n              isHidden={isHidden(breadcrumb)}\n              onClick={\n                isClickable(index)\n                  ? () => onBreadcrumbClick(breadcrumb, index)\n                  : noOp\n              }\n              data-test=\"drill-by-breadcrumb-item\"\n            >\n              {getBreadcrumbText(breadcrumb)}\n            </BreadcrumbItem>\n          ))\n          .filter(item => item.props.isHidden === false)}\n      </AntdBreadcrumb>\n    );\n  }, [breadcrumbsData, onBreadcrumbClick]);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}