{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions } from '@superset-ui/chart-controls';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DefaultSelectRenderer({ current, options, onChange }) {\n  return ___EmotionJSX(\"span\", { className: \"dt-select-page-size form-inline\" },\n  t('Show'), ' ',\n  ___EmotionJSX(\"select\", { className: \"form-control input-sm\", value: current, onBlur: () => {}, onChange: (e) => {\n      onChange(Number(e.target.value));\n    } },\n  options.map((option) => {\n    const [size, text] = Array.isArray(option) ?\n    option :\n    [option, option];\n    return ___EmotionJSX(\"option\", { key: size, value: size },\n    text\n    );\n  })\n  ), ' ',\n  t('entries')\n  );\n}\nfunction getOptionValue(x) {\n  return Array.isArray(x) ? x[0] : x;\n}const _default = /*#__PURE__*/\nReact.memo(function SelectPageSize({ total, options: sizeOptions, current: currentSize, selectRenderer, onChange }) {\n  const sizeOptionValues = sizeOptions.map(getOptionValue);\n  let options = [...sizeOptions];\n  // insert current size to list\n  if (currentSize !== undefined && (\n  currentSize !== total || !sizeOptionValues.includes(0)) &&\n  !sizeOptionValues.includes(currentSize)) {\n    options = [...sizeOptions];\n    options.splice(sizeOptionValues.findIndex((x) => x > currentSize), 0, formatSelectOptions([currentSize])[0]);\n  }\n  const current = currentSize === undefined ? sizeOptionValues[0] : currentSize;\n  const SelectRenderer = selectRenderer || DefaultSelectRenderer;\n  return ___EmotionJSX(SelectRenderer, { current: current, options: options, onChange: onChange });\n});export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultSelectRenderer, \"DefaultSelectRenderer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/SelectPageSize.tsx\");reactHotLoader.register(getOptionValue, \"getOptionValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/SelectPageSize.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/SelectPageSize.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","t","formatSelectOptions","jsx","___EmotionJSX","DefaultSelectRenderer","current","options","onChange","className","value","onBlur","e","Number","target","map","option","size","text","Array","isArray","key","getOptionValue","x","_default","memo","SelectPageSize","total","sizeOptions","currentSize","selectRenderer","sizeOptionValues","undefined","includes","splice","findIndex","SelectRenderer","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-table/src/DataTable/components/SelectPageSize.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions } from '@superset-ui/chart-controls';\n\nexport type SizeOption = [number, string];\n\nexport interface SelectPageSizeRendererProps {\n  current: number;\n  options: SizeOption[];\n  onChange: SelectPageSizeProps['onChange'];\n}\n\nfunction DefaultSelectRenderer({\n  current,\n  options,\n  onChange,\n}: SelectPageSizeRendererProps) {\n  return (\n    <span className=\"dt-select-page-size form-inline\">\n      {t('Show')}{' '}\n      <select\n        className=\"form-control input-sm\"\n        value={current}\n        onBlur={() => {}}\n        onChange={e => {\n          onChange(Number((e.target as HTMLSelectElement).value));\n        }}\n      >\n        {options.map(option => {\n          const [size, text] = Array.isArray(option)\n            ? option\n            : [option, option];\n          return (\n            <option key={size} value={size}>\n              {text}\n            </option>\n          );\n        })}\n      </select>{' '}\n      {t('entries')}\n    </span>\n  );\n}\n\nexport interface SelectPageSizeProps extends SelectPageSizeRendererProps {\n  total?: number;\n  selectRenderer?: typeof DefaultSelectRenderer;\n  onChange: (pageSize: number) => void;\n}\n\nfunction getOptionValue(x: SizeOption) {\n  return Array.isArray(x) ? x[0] : x;\n}\n\nexport default React.memo(function SelectPageSize({\n  total,\n  options: sizeOptions,\n  current: currentSize,\n  selectRenderer,\n  onChange,\n}: SelectPageSizeProps) {\n  const sizeOptionValues = sizeOptions.map(getOptionValue);\n  let options = [...sizeOptions];\n  // insert current size to list\n  if (\n    currentSize !== undefined &&\n    (currentSize !== total || !sizeOptionValues.includes(0)) &&\n    !sizeOptionValues.includes(currentSize)\n  ) {\n    options = [...sizeOptions];\n    options.splice(\n      sizeOptionValues.findIndex(x => x > currentSize),\n      0,\n      formatSelectOptions([currentSize])[0],\n    );\n  }\n  const current = currentSize === undefined ? sizeOptionValues[0] : currentSize;\n  const SelectRenderer = selectRenderer || DefaultSelectRenderer;\n  return (\n    <SelectRenderer current={current} options={options} onChange={onChange} />\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}