{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getAllControlsState, getFormDataFromControls } from './controlUtils';\nimport { controls } from './controls';\n\nfunction handleDeprecatedControls(formData) {\n  // Reaffectation / handling of deprecated controls\n  /* eslint-disable no-param-reassign */\n\n  // y_axis_zero was a boolean forcing 0 to be part of the Y Axis\n  if (formData.y_axis_zero) {\n    formData.y_axis_bounds = [0, null];\n  }\n}\n\nexport function getControlsState(state, inputFormData) {var _state$common;\n  /*\n   * Gets a new controls object to put in the state. The controls object\n   * is similar to the configuration control with only the controls\n   * related to the current viz_type, materializes mapStateToProps functions,\n   * adds value keys coming from inputFormData passed here. This can't be an action creator\n   * just yet because it's used in both the explore and dashboard views.\n   * */\n  // Getting a list of active control names for the current viz\n  const formData = { ...inputFormData };\n  const vizType =\n  formData.viz_type || ((_state$common = state.common) == null ? void 0 : _state$common.conf.DEFAULT_VIZ_TYPE) || 'table';\n\n  handleDeprecatedControls(formData);\n  const controlsState = getAllControlsState(\n    vizType,\n    state.datasource.type,\n    state,\n    formData\n  );\n\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  if (controlPanelConfig.onInit) {\n    return controlPanelConfig.onInit(controlsState);\n  }\n\n  return controlsState;\n}\n\nexport function applyDefaultFormData(inputFormData) {\n  const datasourceType = inputFormData.datasource.split('__')[1];\n  const vizType = inputFormData.viz_type;\n  const controlsState = getAllControlsState(\n    vizType,\n    datasourceType,\n    null,\n    inputFormData\n  );\n  const controlFormData = getFormDataFromControls(controlsState);\n\n  const formData = {};\n  Object.keys(controlsState).\n  concat(Object.keys(inputFormData)).\n  forEach((controlName) => {\n    if (inputFormData[controlName] === undefined) {\n      formData[controlName] = controlFormData[controlName];\n    } else {\n      formData[controlName] = inputFormData[controlName];\n    }\n  });\n\n  return formData;\n}\n\nconst defaultControls = { ...controls };\nObject.keys(controls).forEach((f) => {\n  defaultControls[f].value = controls[f].default;\n});\n\nconst defaultState = {\n  controls: defaultControls,\n  form_data: getFormDataFromControls(defaultControls)\n};\n\nexport { defaultControls, defaultState };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(handleDeprecatedControls, \"handleDeprecatedControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(getControlsState, \"getControlsState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(applyDefaultFormData, \"applyDefaultFormData\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultControls, \"defaultControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js\");reactHotLoader.register(defaultState, \"defaultState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getChartControlPanelRegistry","getAllControlsState","getFormDataFromControls","controls","handleDeprecatedControls","formData","y_axis_zero","y_axis_bounds","getControlsState","state","inputFormData","_state$common","vizType","viz_type","common","conf","DEFAULT_VIZ_TYPE","controlsState","datasource","type","controlPanelConfig","get","onInit","applyDefaultFormData","datasourceType","split","controlFormData","Object","keys","concat","forEach","controlName","undefined","defaultControls","f","value","default","defaultState","form_data","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/store.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getAllControlsState, getFormDataFromControls } from './controlUtils';\nimport { controls } from './controls';\n\nfunction handleDeprecatedControls(formData) {\n  // Reaffectation / handling of deprecated controls\n  /* eslint-disable no-param-reassign */\n\n  // y_axis_zero was a boolean forcing 0 to be part of the Y Axis\n  if (formData.y_axis_zero) {\n    formData.y_axis_bounds = [0, null];\n  }\n}\n\nexport function getControlsState(state, inputFormData) {\n  /*\n   * Gets a new controls object to put in the state. The controls object\n   * is similar to the configuration control with only the controls\n   * related to the current viz_type, materializes mapStateToProps functions,\n   * adds value keys coming from inputFormData passed here. This can't be an action creator\n   * just yet because it's used in both the explore and dashboard views.\n   * */\n  // Getting a list of active control names for the current viz\n  const formData = { ...inputFormData };\n  const vizType =\n    formData.viz_type || state.common?.conf.DEFAULT_VIZ_TYPE || 'table';\n\n  handleDeprecatedControls(formData);\n  const controlsState = getAllControlsState(\n    vizType,\n    state.datasource.type,\n    state,\n    formData,\n  );\n\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  if (controlPanelConfig.onInit) {\n    return controlPanelConfig.onInit(controlsState);\n  }\n\n  return controlsState;\n}\n\nexport function applyDefaultFormData(inputFormData) {\n  const datasourceType = inputFormData.datasource.split('__')[1];\n  const vizType = inputFormData.viz_type;\n  const controlsState = getAllControlsState(\n    vizType,\n    datasourceType,\n    null,\n    inputFormData,\n  );\n  const controlFormData = getFormDataFromControls(controlsState);\n\n  const formData = {};\n  Object.keys(controlsState)\n    .concat(Object.keys(inputFormData))\n    .forEach(controlName => {\n      if (inputFormData[controlName] === undefined) {\n        formData[controlName] = controlFormData[controlName];\n      } else {\n        formData[controlName] = inputFormData[controlName];\n      }\n    });\n\n  return formData;\n}\n\nconst defaultControls = { ...controls };\nObject.keys(controls).forEach(f => {\n  defaultControls[f].value = controls[f].default;\n});\n\nconst defaultState = {\n  controls: defaultControls,\n  form_data: getFormDataFromControls(defaultControls),\n};\n\nexport { defaultControls, defaultState };\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,4BAA4B,QAAQ,mBAAmB;AAChE,SAASC,mBAAmB,EAAEC,uBAAuB,QAAQ,gBAAgB;AAC7E,SAASC,QAAQ,QAAQ,YAAY;;AAErC,SAASC,wBAAwBA,CAACC,QAAQ,EAAE;EAC1C;EACA;;EAEA;EACA,IAAIA,QAAQ,CAACC,WAAW,EAAE;IACxBD,QAAQ,CAACE,aAAa,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;EACpC;AACF;;AAEA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,aAAa,EAAE,KAAAC,aAAA;EACrD;AACF;AACA;AACA;AACA;AACA;AACA;EACE;EACA,MAAMN,QAAQ,GAAG,EAAE,GAAGK,aAAa,CAAC,CAAC;EACrC,MAAME,OAAO;EACXP,QAAQ,CAACQ,QAAQ,MAAAF,aAAA,GAAIF,KAAK,CAACK,MAAM,qBAAZH,aAAA,CAAcI,IAAI,CAACC,gBAAgB,KAAI,OAAO;;EAErEZ,wBAAwB,CAACC,QAAQ,CAAC;EAClC,MAAMY,aAAa,GAAGhB,mBAAmB;IACvCW,OAAO;IACPH,KAAK,CAACS,UAAU,CAACC,IAAI;IACrBV,KAAK;IACLJ;EACF,CAAC;;EAED,MAAMe,kBAAkB,GAAGpB,4BAA4B,CAAC,CAAC,CAACqB,GAAG,CAACT,OAAO,CAAC,IAAI,CAAC,CAAC;EAC5E,IAAIQ,kBAAkB,CAACE,MAAM,EAAE;IAC7B,OAAOF,kBAAkB,CAACE,MAAM,CAACL,aAAa,CAAC;EACjD;;EAEA,OAAOA,aAAa;AACtB;;AAEA,OAAO,SAASM,oBAAoBA,CAACb,aAAa,EAAE;EAClD,MAAMc,cAAc,GAAGd,aAAa,CAACQ,UAAU,CAACO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAMb,OAAO,GAAGF,aAAa,CAACG,QAAQ;EACtC,MAAMI,aAAa,GAAGhB,mBAAmB;IACvCW,OAAO;IACPY,cAAc;IACd,IAAI;IACJd;EACF,CAAC;EACD,MAAMgB,eAAe,GAAGxB,uBAAuB,CAACe,aAAa,CAAC;;EAE9D,MAAMZ,QAAQ,GAAG,CAAC,CAAC;EACnBsB,MAAM,CAACC,IAAI,CAACX,aAAa,CAAC;EACvBY,MAAM,CAACF,MAAM,CAACC,IAAI,CAAClB,aAAa,CAAC,CAAC;EAClCoB,OAAO,CAAC,CAAAC,WAAW,KAAI;IACtB,IAAIrB,aAAa,CAACqB,WAAW,CAAC,KAAKC,SAAS,EAAE;MAC5C3B,QAAQ,CAAC0B,WAAW,CAAC,GAAGL,eAAe,CAACK,WAAW,CAAC;IACtD,CAAC,MAAM;MACL1B,QAAQ,CAAC0B,WAAW,CAAC,GAAGrB,aAAa,CAACqB,WAAW,CAAC;IACpD;EACF,CAAC,CAAC;;EAEJ,OAAO1B,QAAQ;AACjB;;AAEA,MAAM4B,eAAe,GAAG,EAAE,GAAG9B,QAAQ,CAAC,CAAC;AACvCwB,MAAM,CAACC,IAAI,CAACzB,QAAQ,CAAC,CAAC2B,OAAO,CAAC,CAAAI,CAAC,KAAI;EACjCD,eAAe,CAACC,CAAC,CAAC,CAACC,KAAK,GAAGhC,QAAQ,CAAC+B,CAAC,CAAC,CAACE,OAAO;AAChD,CAAC,CAAC;;AAEF,MAAMC,YAAY,GAAG;EACnBlC,QAAQ,EAAE8B,eAAe;EACzBK,SAAS,EAAEpC,uBAAuB,CAAC+B,eAAe;AACpD,CAAC;;AAED,SAASA,eAAe,EAAEI,YAAY,GAAG,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAJ,OAAA,GAAAJ,SAAA,MAAAO,cAAA,WAAAA,cAAA,CAAAE,QAAA,CA1EhCrC,wBAAwB,6GAAAmC,cAAA,CAAAE,QAAA,CAUjBjC,gBAAgB,qGAAA+B,cAAA,CAAAE,QAAA,CA6BhBlB,oBAAoB,yGAAAgB,cAAA,CAAAE,QAAA,CAyB9BR,eAAe,oGAAAM,cAAA,CAAAE,QAAA,CAKfJ,YAAY,yHAAAK,WAAA,UAAAF,oBAAA,mBAAAA,oBAAA,CAAAE,WAAA,GAAAV,SAAA,CAAAU,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}