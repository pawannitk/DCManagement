{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { t, css, useTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormLabel } from 'src/components/Form';\nimport Icons from 'src/components/Icons';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\nconst ControlHeader = ({ name, label, description, validationErrors = [], renderTrigger = false, rightNode, leftNode, onClick, hovered = false, tooltipOnClick = () => {}, warning, danger }) => {\n  const { gridUnit, colors } = useTheme();\n  const hasHadNoErrors = useRef(false);\n  const labelColor = useMemo(() => {\n    if (!validationErrors.length) {\n      hasHadNoErrors.current = true;\n    }\n    if (hasHadNoErrors.current) {\n      if (validationErrors.length) {\n        return colors.error.base;\n      }\n      return 'unset';\n    }\n    return colors.alert.base;\n  }, [colors.error.base, colors.alert.base, validationErrors.length]);\n  if (!label) {\n    return null;\n  }\n  const renderOptionalIcons = () => {\n    if (!hovered) {\n      return null;\n    }\n    return ___EmotionJSX(\"span\", { css: () => css`\n          position: absolute;\n          top: 50%;\n          right: 0;\n          padding-left: ${gridUnit}px;\n          transform: translate(100%, -50%);\n          white-space: nowrap;\n        ` },\n    description && ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(Tooltip, { id: \"description-tooltip\", title: description, placement: \"top\" },\n    ___EmotionJSX(Icons.InfoCircleOutlined, { css: iconStyles, onClick: tooltipOnClick })\n    ), ' '\n    ),\n    renderTrigger && ___EmotionJSX(\"span\", null,\n    ___EmotionJSX(InfoTooltipWithTrigger, { label: t('bolt'), tooltip: t('Changing this control takes effect instantly'), placement: \"top\", icon: \"bolt\" }), ' '\n    )\n    );\n  };\n  return ___EmotionJSX(\"div\", { className: \"ControlHeader\", \"data-test\": `${name}-header` },\n  ___EmotionJSX(\"div\", { className: \"pull-left\" },\n  ___EmotionJSX(FormLabel, { css: (theme) => css`\n            margin-bottom: ${theme.gridUnit * 0.5}px;\n            position: relative;\n          ` },\n  leftNode && ___EmotionJSX(\"span\", null, leftNode),\n  ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, onClick: onClick, style: { cursor: onClick ? 'pointer' : '' } },\n  label\n  ), ' ',\n  warning && ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: warning },\n  ___EmotionJSX(Icons.AlertSolid, { iconColor: colors.alert.base, iconSize: \"s\" })\n  ), ' '\n  ),\n  danger && ___EmotionJSX(\"span\", null,\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: danger },\n  ___EmotionJSX(Icons.ErrorSolid, { iconColor: colors.error.base, iconSize: \"s\" })\n  ), ' '\n  ),\n  (validationErrors == null ? void 0 : validationErrors.length) > 0 && ___EmotionJSX(\"span\", { \"data-test\": \"error-tooltip\" },\n  ___EmotionJSX(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: validationErrors == null ? void 0 : validationErrors.join(' ') },\n  ___EmotionJSX(Icons.ExclamationCircleOutlined, { css: css`\n                    ${iconStyles};\n                    color: ${labelColor};\n                  ` })\n  ), ' '\n  ),\n  renderOptionalIcons()\n  )\n  ),\n  rightNode && ___EmotionJSX(\"div\", { className: \"pull-right\" }, rightNode),\n  ___EmotionJSX(\"div\", { className: \"clearfix\" })\n  );\n};__signature__(ControlHeader, \"useTheme{{ gridUnit, colors }}\\nuseRef{hasHadNoErrors}\\nuseMemo{labelColor}\", () => [useTheme]);const _default =\nControlHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(iconStyles, \"iconStyles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");reactHotLoader.register(ControlHeader, \"ControlHeader\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","useRef","t","css","useTheme","InfoTooltipWithTrigger","Tooltip","FormLabel","Icons","jsx","___EmotionJSX","iconStyles","ControlHeader","name","label","description","validationErrors","renderTrigger","rightNode","leftNode","onClick","hovered","tooltipOnClick","warning","danger","gridUnit","colors","hasHadNoErrors","labelColor","length","current","error","base","alert","renderOptionalIcons","id","title","placement","InfoCircleOutlined","tooltip","icon","className","theme","role","tabIndex","style","cursor","AlertSolid","iconColor","iconSize","ErrorSolid","join","ExclamationCircleOutlined","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ControlHeader.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, ReactNode, useMemo, useRef } from 'react';\nimport { t, css, useTheme, SupersetTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormLabel } from 'src/components/Form';\nimport Icons from 'src/components/Icons';\n\ntype ValidationError = string;\n\nexport type ControlHeaderProps = {\n  name?: string;\n  label?: ReactNode;\n  description?: ReactNode;\n  validationErrors?: ValidationError[];\n  renderTrigger?: boolean;\n  rightNode?: ReactNode;\n  leftNode?: ReactNode;\n  onClick?: () => void;\n  hovered?: boolean;\n  tooltipOnClick?: () => void;\n  warning?: string;\n  danger?: string;\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst ControlHeader: FC<ControlHeaderProps> = ({\n  name,\n  label,\n  description,\n  validationErrors = [],\n  renderTrigger = false,\n  rightNode,\n  leftNode,\n  onClick,\n  hovered = false,\n  tooltipOnClick = () => {},\n  warning,\n  danger,\n}) => {\n  const { gridUnit, colors } = useTheme();\n  const hasHadNoErrors = useRef(false);\n  const labelColor = useMemo(() => {\n    if (!validationErrors.length) {\n      hasHadNoErrors.current = true;\n    }\n\n    if (hasHadNoErrors.current) {\n      if (validationErrors.length) {\n        return colors.error.base;\n      }\n\n      return 'unset';\n    }\n\n    return colors.alert.base;\n  }, [colors.error.base, colors.alert.base, validationErrors.length]);\n\n  if (!label) {\n    return null;\n  }\n\n  const renderOptionalIcons = () => {\n    if (!hovered) {\n      return null;\n    }\n\n    return (\n      <span\n        css={() => css`\n          position: absolute;\n          top: 50%;\n          right: 0;\n          padding-left: ${gridUnit}px;\n          transform: translate(100%, -50%);\n          white-space: nowrap;\n        `}\n      >\n        {description && (\n          <span>\n            <Tooltip\n              id=\"description-tooltip\"\n              title={description}\n              placement=\"top\"\n            >\n              <Icons.InfoCircleOutlined\n                css={iconStyles}\n                onClick={tooltipOnClick}\n              />\n            </Tooltip>{' '}\n          </span>\n        )}\n        {renderTrigger && (\n          <span>\n            <InfoTooltipWithTrigger\n              label={t('bolt')}\n              tooltip={t('Changing this control takes effect instantly')}\n              placement=\"top\"\n              icon=\"bolt\"\n            />{' '}\n          </span>\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"ControlHeader\" data-test={`${name}-header`}>\n      <div className=\"pull-left\">\n        <FormLabel\n          css={(theme: SupersetTheme) => css`\n            margin-bottom: ${theme.gridUnit * 0.5}px;\n            position: relative;\n          `}\n        >\n          {leftNode && <span>{leftNode}</span>}\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={onClick}\n            style={{ cursor: onClick ? 'pointer' : '' }}\n          >\n            {label}\n          </span>{' '}\n          {warning && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={warning}>\n                <Icons.AlertSolid iconColor={colors.alert.base} iconSize=\"s\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {danger && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={danger}>\n                <Icons.ErrorSolid iconColor={colors.error.base} iconSize=\"s\" />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {validationErrors?.length > 0 && (\n            <span data-test=\"error-tooltip\">\n              <Tooltip\n                id=\"error-tooltip\"\n                placement=\"top\"\n                title={validationErrors?.join(' ')}\n              >\n                <Icons.ExclamationCircleOutlined\n                  css={css`\n                    ${iconStyles};\n                    color: ${labelColor};\n                  `}\n                />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {renderOptionalIcons()}\n        </FormLabel>\n      </div>\n      {rightNode && <div className=\"pull-right\">{rightNode}</div>}\n      <div className=\"clearfix\" />\n    </div>\n  );\n};\n\nexport default ControlHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}