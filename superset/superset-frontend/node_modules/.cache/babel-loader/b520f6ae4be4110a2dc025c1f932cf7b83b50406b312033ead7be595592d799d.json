{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RegistryWithDefaultKey, OverwritePolicy } from '../models';\nimport TimeFormats, { LOCAL_PREFIX } from './TimeFormats';\nimport createD3TimeFormatter from './factories/createD3TimeFormatter';\nexport default class TimeFormatterRegistry extends RegistryWithDefaultKey {\n  constructor() {\n    super({\n      initialDefaultKey: TimeFormats.DATABASE_DATETIME,\n      name: 'TimeFormatter',\n      overwritePolicy: OverwritePolicy.Warn\n    });\n  }\n  get(format) {\n    const targetFormat = `${format === null || typeof format === 'undefined' || format === '' ?\n    this.defaultKey :\n    format}`.trim();\n    if (this.has(targetFormat)) {\n      return super.get(targetFormat);\n    }\n    // Create new formatter if does not exist\n    const useLocalTime = targetFormat.startsWith(LOCAL_PREFIX);\n    const formatString = targetFormat.replace(LOCAL_PREFIX, '');\n    const formatter = createD3TimeFormatter({ formatString, useLocalTime });\n    this.registerValue(targetFormat, formatter);\n    return formatter;\n  }\n  format(format, value) {\n    return this.get(format)(value);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TimeFormatterRegistry, \"TimeFormatterRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["RegistryWithDefaultKey","OverwritePolicy","TimeFormats","LOCAL_PREFIX","createD3TimeFormatter","TimeFormatterRegistry","constructor","initialDefaultKey","DATABASE_DATETIME","name","overwritePolicy","Warn","get","format","targetFormat","defaultKey","trim","has","useLocalTime","startsWith","formatString","replace","formatter","registerValue","value","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/time-format/TimeFormatterRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RegistryWithDefaultKey, OverwritePolicy } from '../models';\nimport TimeFormats, { LOCAL_PREFIX } from './TimeFormats';\nimport createD3TimeFormatter from './factories/createD3TimeFormatter';\nimport TimeFormatter from './TimeFormatter';\n\nexport default class TimeFormatterRegistry extends RegistryWithDefaultKey<\n  TimeFormatter,\n  TimeFormatter\n> {\n  constructor() {\n    super({\n      initialDefaultKey: TimeFormats.DATABASE_DATETIME,\n      name: 'TimeFormatter',\n      overwritePolicy: OverwritePolicy.Warn,\n    });\n  }\n\n  get(format?: string) {\n    const targetFormat = `${\n      format === null || typeof format === 'undefined' || format === ''\n        ? this.defaultKey\n        : format\n    }`.trim();\n\n    if (this.has(targetFormat)) {\n      return super.get(targetFormat) as TimeFormatter;\n    }\n\n    // Create new formatter if does not exist\n    const useLocalTime = targetFormat.startsWith(LOCAL_PREFIX);\n    const formatString = targetFormat.replace(LOCAL_PREFIX, '');\n    const formatter = createD3TimeFormatter({ formatString, useLocalTime });\n    this.registerValue(targetFormat, formatter);\n\n    return formatter;\n  }\n\n  format(format: string | undefined, value: Date | null | undefined): string {\n    return this.get(format)(value);\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,sBAAsB,EAAEC,eAAe,QAAQ,WAAW;AACnE,OAAOC,WAAW,IAAIC,YAAY,QAAQ,eAAe;AACzD,OAAOC,qBAAqB,MAAM,mCAAmC;AAGrE,eAAc,MAAOC,qBAAsB,SAAQL,sBAGlD;EACCM,YAAA;IACE,KAAK,CAAC;MACJC,iBAAiB,EAAEL,WAAW,CAACM,iBAAiB;MAChDC,IAAI,EAAE,eAAe;MACrBC,eAAe,EAAET,eAAe,CAACU;KAClC,CAAC;EACJ;EAEAC,GAAGA,CAACC,MAAe;IACjB,MAAMC,YAAY,GAAG,GACnBD,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,WAAW,IAAIA,MAAM,KAAK,EAAE;IAC7D,IAAI,CAACE,UAAU;IACfF,MACN,EAAE,CAACG,IAAI,EAAE;IAET,IAAI,IAAI,CAACC,GAAG,CAACH,YAAY,CAAC,EAAE;MAC1B,OAAO,KAAK,CAACF,GAAG,CAACE,YAAY,CAAkB;;IAGjD;IACA,MAAMI,YAAY,GAAGJ,YAAY,CAACK,UAAU,CAAChB,YAAY,CAAC;IAC1D,MAAMiB,YAAY,GAAGN,YAAY,CAACO,OAAO,CAAClB,YAAY,EAAE,EAAE,CAAC;IAC3D,MAAMmB,SAAS,GAAGlB,qBAAqB,CAAC,EAAEgB,YAAY,EAAEF,YAAY,EAAE,CAAC;IACvE,IAAI,CAACK,aAAa,CAACT,YAAY,EAAEQ,SAAS,CAAC;IAE3C,OAAOA,SAAS;EAClB;EAEAT,MAAMA,CAACA,MAA0B,EAAEW,KAA8B;IAC/D,OAAO,IAAI,CAACZ,GAAG,CAACC,MAAM,CAAC,CAACW,KAAK,CAAC;EAChC,CAAC;EAAAC,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAnCoB5B,qBAAsB,gLAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}