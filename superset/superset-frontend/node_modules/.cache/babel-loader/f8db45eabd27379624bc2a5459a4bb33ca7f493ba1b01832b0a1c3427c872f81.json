{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _pick from \"lodash/pick\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport shortid from 'shortid';\nimport { QueryState, styled, t, tn, useTheme, usePrevious, css, getNumberFormatter, getExtensionsRegistry } from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { EXPLORE_CHART_DEFAULT } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport Card from 'src/components/Card';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { addQueryEditor, clearQueryResults, CtasEnum, fetchQueryResults, reFetchQueryResults, reRunQuery } from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport Icons from 'src/components/Icons';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar LimitingFactor;\n(function (LimitingFactor) {\n  LimitingFactor[\"Query\"] = \"QUERY\";\n  LimitingFactor[\"QueryAndDropdown\"] = \"QUERY_AND_DROPDOWN\";\n  LimitingFactor[\"Dropdown\"] = \"DROPDOWN\";\n  LimitingFactor[\"NotLimited\"] = \"NOT_LIMITED\";\n})(LimitingFactor || (LimitingFactor = {}));\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${({ theme }) => theme.gridUnit * 25}px;\n  [role='alert'] {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\nconst ReturnedRows = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  line-height: 1;\n`;\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n`;\nconst ROWS_CHIP_WIDTH = 100;\nconst GAP = 8;\nconst extensionsRegistry = getExtensionsRegistry();\nconst ResultSet = ({ cache = false, csv = true, database = {}, displayLimit, height, queryId, search = true, showSql = false, showSqlInline = false, visualize = true, defaultQueryLimit }) => {var _extensionsRegistry$g, _query$results2, _query$extra$progress, _query$extra2;\n  const user = useSelector(({ user }) => user, shallowEqual);\n  const query = useSelector(({ sqlLab: { queries } }) => _pick(queries[queryId], [\n  'id',\n  'errorMessage',\n  'cached',\n  'results',\n  'resultsKey',\n  'dbId',\n  'tab',\n  'sql',\n  'templateParams',\n  'schema',\n  'rows',\n  'queryLimit',\n  'limitingFactor',\n  'trackingUrl',\n  'state',\n  'errors',\n  'link',\n  'ctas',\n  'ctas_method',\n  'tempSchema',\n  'tempTable',\n  'isDataPreview',\n  'progress',\n  'extra']\n  ), shallowEqual);\n  const ResultTable = (_extensionsRegistry$g = extensionsRegistry.get('sqleditor.extension.resultTable')) != null ? _extensionsRegistry$g :\n  FilterableTable;\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (query.errorMessage &&\n    query.errorMessage.indexOf('session timed out') > 0) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n  const fetchResults = (q) => {\n    dispatch(fetchQueryResults(q, displayLimit));\n  };\n  const prevQuery = usePrevious(query);\n  useEffect(() => {var _query$results, _query$results$data;\n    if (cache && query.cached && (query == null ? void 0 : (_query$results = query.results) == null ? void 0 : (_query$results$data = _query$results.data) == null ? void 0 : _query$results$data.length) > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== (prevQuery == null ? void 0 : prevQuery.resultsKey)) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n  const calculateAlertRefHeight = (alertElement) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else\n    {\n      setAlertIsOpen(false);\n    }\n  };\n  const popSelectStar = (tempSchema, tempTable) => {\n    const qe = {\n      id: shortid.generate(),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}`\n    };\n    dispatch(addQueryEditor(qe));\n  };\n  const changeSearch = (event) => {\n    setSearchText(event.target.value);\n  };\n  const createExploreResultsOnClick = async (clickEvent) => {\n    const { results } = query;\n    const openInNewWindow = clickEvent.metaKey;\n    if (results != null && results.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map((column) => column.column_name)\n        }\n      });\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key\n      });\n      if (openInNewWindow) {\n        window.open(url, '_blank', 'noreferrer');\n      } else\n      {\n        history.push(url);\n      }\n    } else\n    {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n  const getExportCsvUrl = (clientId) => `/api/v1/sqllab/export/${clientId}/`;\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n      const datasource = {\n        columns: query.results.columns,\n        name: (query == null ? void 0 : query.tab) || 'Untitled',\n        dbId: query == null ? void 0 : query.dbId,\n        sql: query == null ? void 0 : query.sql,\n        templateParams: query == null ? void 0 : query.templateParams,\n        schema: query == null ? void 0 : query.schema\n      };\n      return ___EmotionJSX(ResultSetControls, null,\n      ___EmotionJSX(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save & Explore'), buttonTextOnOverwrite: t('Overwrite & Explore'), modalDescription: t('Save this query as a virtual dataset to continue exploring'), datasource: datasource }),\n      ___EmotionJSX(ResultSetButtons, null,\n      visualize && (database == null ? void 0 : database.allows_virtual_table_explore) && ___EmotionJSX(ExploreResultsButton, { database: database, onClick: createExploreResultsOnClick }),\n      csv && ___EmotionJSX(Button, { buttonSize: \"small\", href: getExportCsvUrl(query.id) },\n      ___EmotionJSX(\"i\", { className: \"fa fa-file-text-o\" }), \" \", t('Download to CSV')\n      ),\n\n      ___EmotionJSX(CopyToClipboard, { text: prepareCopyToClipboardTabularData(data, columns), wrapped: false, copyNode: ___EmotionJSX(Button, { buttonSize: \"small\" },\n        ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }), \" \", t('Copy to Clipboard')\n        ), hideTooltip: true })\n      ),\n      search && ___EmotionJSX(\"input\", { type: \"text\", onChange: changeSearch, value: searchText, className: \"form-control input-sm\", placeholder: t('Filter results') })\n      );\n    }\n    return ___EmotionJSX(\"div\", null);\n  };\n  const renderRowsReturned = (alertMessage) => {var _user$roles, _results$data;\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage = '';\n    const limitReached = results == null ? void 0 : results.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!(user != null && (_user$roles = user.roles) != null && _user$roles.Admin);\n    const rowsCount = Math.min(rows || 0, (results == null ? void 0 : (_results$data = results.data) == null ? void 0 : _results$data.length) || 0);\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t('The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n      'Please add additional limits/filters or download to csv to see more rows up to ' +\n      'the %(limit)d limit.', { rows: rowsCount, limit }),\n      withoutAdmin: t('The number of results displayed is limited to %(rows)d. ' +\n      'Please add additional limits/filters, download to csv, or contact an admin ' +\n      'to see more rows up to the %(limit)d limit.', { rows: rowsCount, limit })\n    };\n    const shouldUseDefaultDropdownAlert = limit === defaultQueryLimit && limitingFactor === LimitingFactor.Dropdown;\n    if (limitingFactor === LimitingFactor.Query && csv) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query', { rows });\n    } else\n    if (limitingFactor === LimitingFactor.Dropdown &&\n    !shouldUseDefaultDropdownAlert) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the limit dropdown.', { rows });\n    } else\n    if (limitingFactor === LimitingFactor.QueryAndDropdown) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query and limit dropdown.', { rows });\n    }\n    const formattedRowCount = getNumberFormatter()(rows);\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows\n    });\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n    if (alertMessage) {\n      return ___EmotionJSX(React.Fragment, null,\n      !limitReached && shouldUseDefaultDropdownAlert && ___EmotionJSX(\"div\", { ref: calculateAlertRefHeight },\n      ___EmotionJSX(Alert, { type: \"warning\", message: t('%(rows)d rows returned', { rows }), onClose: () => setAlertIsOpen(false), description: t('The number of rows displayed is limited to %(rows)d by the dropdown.', { rows }) })\n      ),\n      limitReached && ___EmotionJSX(\"div\", { ref: calculateAlertRefHeight },\n      ___EmotionJSX(Alert, { type: \"warning\", onClose: () => setAlertIsOpen(false), message: t('%(rows)d rows returned', { rows: rowsCount }), description: isAdmin ?\n        displayMaxRowsReachedMessage.withAdmin :\n        displayMaxRowsReachedMessage.withoutAdmin })\n      )\n      );\n    }\n    const showRowsReturned = showSqlInline || !limitReached && !shouldUseDefaultDropdownAlert;\n    return ___EmotionJSX(React.Fragment, null,\n    showRowsReturned && ___EmotionJSX(ReturnedRows, null,\n    ___EmotionJSX(Tooltip, { id: \"sqllab-rowcount-tooltip\", title: tooltipText, placement: \"left\" },\n    ___EmotionJSX(Label, { css: css`\n                  line-height: ${theme.typography.sizes.l}px;\n                ` },\n    limitMessage && ___EmotionJSX(Icons.ExclamationCircleOutlined, { css: css`\n                      font-size: ${theme.typography.sizes.m}px;\n                      margin-right: ${theme.gridUnit}px;\n                    ` }),\n    tn('%s row', '%s rows', rows, formattedRowCount)\n    )\n    )\n    )\n    );\n  };\n  const limitReached = query == null ? void 0 : (_query$results2 = query.results) == null ? void 0 : _query$results2.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database != null && database.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n  let trackingUrl;\n  if (query.trackingUrl &&\n  query.state !== QueryState.Success &&\n  query.state !== QueryState.Fetching) {\n    trackingUrl = ___EmotionJSX(Button, { className: \"sql-result-track-job\", buttonSize: \"small\", href: query.trackingUrl, target: \"_blank\" },\n    query.state === QueryState.Running ?\n    t('Track job') :\n    t('See query details')\n    );\n  }\n  if (showSql) {\n    sql = ___EmotionJSX(HighlightedSql, _extends({ sql: query.sql }, showSqlInline && { maxLines: 1, maxWidth: 60 }));\n  }\n  if (query.state === QueryState.Stopped) {\n    return ___EmotionJSX(Alert, { type: \"warning\", message: t('Query was stopped') });\n  }\n  if (query.state === QueryState.Failed) {var _query$extra, _query$extra$errors, _query$errors;\n    return ___EmotionJSX(ResultlessStyles, null,\n    ___EmotionJSX(ErrorMessageWithStackTrace, { title: t('Database error'), error: (query == null ? void 0 : (_query$extra = query.extra) == null ? void 0 : (_query$extra$errors = _query$extra.errors) == null ? void 0 : _query$extra$errors[0]) || (query == null ? void 0 : (_query$errors = query.errors) == null ? void 0 : _query$errors[0]), subtitle: ___EmotionJSX(MonospaceDiv, null, query.errorMessage), copyText: query.errorMessage || undefined, link: query.link, source: \"sqllab\" }),\n    trackingUrl\n    );\n  }\n  if (query.state === QueryState.Success && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.View) {\n      object = 'View';\n    }\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(Alert, { type: \"info\", message: ___EmotionJSX(React.Fragment, null,\n      t(object), \" [\",\n      ___EmotionJSX(\"strong\", null,\n      tempSchema ? `${tempSchema}.` : '',\n      tempTable\n      ), \"] \",\n      t('was created'), \" \\xA0\",\n      ___EmotionJSX(ButtonGroup, null,\n      ___EmotionJSX(Button, { buttonSize: \"small\", css: /*#__PURE__*/_css({ marginRight: theme.gridUnit }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ResultSet;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), onClick: () => popSelectStar(tempSchema, tempTable) },\n      t('Query in a new tab')\n      ),\n      ___EmotionJSX(ExploreCtasResultsButton, { table: tempTable, schema: tempSchema, dbId: exploreDBId })\n      )\n      ) })\n    );\n  }\n  if (query.state === QueryState.Success && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen ?\n    height - alertContainerHeight :\n    height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else\n    if (results != null && results.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns ?\n      results.expanded_columns.map((col) => col.column_name) :\n      [];\n      const allowHTML = getItem(LocalStorageKeys.SqllabIsRenderHtmlEnabled, false);\n      return ___EmotionJSX(ResultContainer, null,\n      renderControls(),\n      showSql && showSqlInline ? ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"div\", { css: css`\n                  display: flex;\n                  justify-content: space-between;\n                  gap: ${GAP}px;\n                ` },\n      ___EmotionJSX(Card, { css: [\n        css`\n                      height: 28px;\n                      width: calc(100% - ${ROWS_CHIP_WIDTH + GAP}px);\n                      code {\n                        width: 100%;\n                        overflow: hidden;\n                        white-space: nowrap !important;\n                        text-overflow: ellipsis;\n                        display: block;\n                      }\n                    `, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ResultSet;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"] },\n\n      sql\n      ),\n      renderRowsReturned(false)\n      ),\n      renderRowsReturned(true)\n      ) : ___EmotionJSX(React.Fragment, null,\n      renderRowsReturned(false),\n      renderRowsReturned(true),\n      sql\n      ),\n      ___EmotionJSX(ResultTable, { data: data, queryId: query.id, orderedColumnKeys: results.columns.map((col) => col.column_name), height: rowsHeight, filterText: searchText, expandedColumns: expandedColumns, allowHTML: allowHTML })\n      );\n    }\n    if (data && data.length === 0) {\n      return ___EmotionJSX(Alert, { type: \"warning\", message: t('The query returned no data') });\n    }\n  }\n  if (query.cached || query.state === QueryState.Success && !query.results) {\n    if (query.isDataPreview) {\n      return ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => dispatch(reFetchQueryResults({\n          ...query,\n          isDataPreview: true\n        })) },\n      t('Fetch data preview')\n      );\n    }\n    if (query.resultsKey) {\n      return ___EmotionJSX(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => fetchResults(query) },\n      t('Refetch results')\n      );\n    }\n  }\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = ___EmotionJSX(ProgressBar, { percent: parseInt(query.progress.toFixed(0), 10), striped: true });\n  }\n  const progressMsg = (_query$extra$progress = query == null ? void 0 : (_query$extra2 = query.extra) == null ? void 0 : _query$extra2.progress) != null ? _query$extra$progress : null;\n  return ___EmotionJSX(ResultlessStyles, null,\n  ___EmotionJSX(\"div\", null, !progressBar && ___EmotionJSX(Loading, { position: \"normal\" })),\n\n  ___EmotionJSX(\"div\", null, query.progress === 100 && ___EmotionJSX(Loading, { position: \"normal\" })),\n  ___EmotionJSX(QueryStateLabel, { query: query }),\n  ___EmotionJSX(\"div\", null, progressMsg && ___EmotionJSX(Alert, { type: \"success\", message: progressMsg })),\n  ___EmotionJSX(\"div\", null, query.progress !== 100 && progressBar),\n  trackingUrl && ___EmotionJSX(\"div\", null, trackingUrl)\n  );\n};__signature__(ResultSet, \"useSelector{user}\\nuseSelector{query}\\nuseTheme{theme}\\nuseState{[searchText, setSearchText]('')}\\nuseState{[cachedData, setCachedData]([])}\\nuseState{[showSaveDatasetModal, setShowSaveDatasetModal](false)}\\nuseState{[alertIsOpen, setAlertIsOpen](false)}\\nuseHistory{history}\\nuseDispatch{dispatch}\\nuseCallback{reRunQueryIfSessionTimeoutErrorOnMount}\\nuseEffect{}\\nusePrevious{prevQuery}\\nuseEffect{}\", () => [useSelector, useSelector, useTheme, useHistory, useDispatch, usePrevious]);const _default = /*#__PURE__*/\nReact.memo(ResultSet);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LimitingFactor, \"LimitingFactor\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultContainer, \"ResultContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultlessStyles, \"ResultlessStyles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(MonospaceDiv, \"MonospaceDiv\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ReturnedRows, \"ReturnedRows\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSetControls, \"ResultSetControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSetButtons, \"ResultSetButtons\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ROWS_CHIP_WIDTH, \"ROWS_CHIP_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(GAP, \"GAP\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSet, \"ResultSet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useEffect","useState","shallowEqual","useDispatch","useSelector","useHistory","ButtonGroup","Alert","Button","shortid","QueryState","styled","t","tn","useTheme","usePrevious","css","getNumberFormatter","getExtensionsRegistry","ErrorMessageWithStackTrace","SaveDatasetModal","EXPLORE_CHART_DEFAULT","mountExploreUrl","postFormData","ProgressBar","Loading","Card","Label","Tooltip","FilterableTable","CopyToClipboard","addDangerToast","prepareCopyToClipboardTabularData","getItem","LocalStorageKeys","addQueryEditor","clearQueryResults","CtasEnum","fetchQueryResults","reFetchQueryResults","reRunQuery","URL_PARAMS","Icons","ExploreCtasResultsButton","ExploreResultsButton","HighlightedSql","QueryStateLabel","jsx","___EmotionJSX","LimitingFactor","ResultContainer","div","theme","gridUnit","ResultlessStyles","MonospaceDiv","typography","families","monospace","ReturnedRows","sizes","s","ResultSetControls","ResultSetButtons","ROWS_CHIP_WIDTH","GAP","extensionsRegistry","ResultSet","cache","csv","database","displayLimit","height","queryId","search","showSql","showSqlInline","visualize","defaultQueryLimit","_extensionsRegistry$g","_query$results2","_query$extra$progress","_query$extra2","user","query","sqlLab","queries","_pick","ResultTable","get","searchText","setSearchText","cachedData","setCachedData","showSaveDatasetModal","setShowSaveDatasetModal","alertIsOpen","setAlertIsOpen","history","dispatch","reRunQueryIfSessionTimeoutErrorOnMount","errorMessage","indexOf","fetchResults","q","prevQuery","_query$results","_query$results$data","cached","results","data","length","resultsKey","calculateAlertRefHeight","alertElement","popSelectStar","tempSchema","tempTable","qe","id","generate","name","autorun","dbId","sql","changeSearch","event","target","value","createExploreResultsOnClick","clickEvent","openInNewWindow","metaKey","query_id","key","datasource","all_columns","columns","map","column","column_name","url","formDataKey","window","open","push","getExportCsvUrl","clientId","renderControls","tab","templateParams","schema","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","modalDescription","allows_virtual_table_explore","onClick","buttonSize","href","className","text","wrapped","copyNode","hideTooltip","type","onChange","placeholder","renderRowsReturned","alertMessage","_user$roles","_results$data","rows","queryLimit","limitingFactor","limitMessage","limitReached","displayLimitReached","limit","isAdmin","roles","Admin","rowsCount","Math","min","displayMaxRowsReachedMessage","withAdmin","withoutAdmin","shouldUseDefaultDropdownAlert","Dropdown","Query","QueryAndDropdown","formattedRowCount","rowsReturnedMessage","tooltipText","Fragment","ref","message","onClose","description","showRowsReturned","title","placement","l","ExclamationCircleOutlined","m","exploreDBId","explore_database_id","trackingUrl","state","Success","Fetching","Running","_extends","maxLines","maxWidth","Stopped","Failed","_query$extra","_query$extra$errors","_query$errors","error","extra","errors","subtitle","copyText","undefined","link","source","ctas","object","ctas_method","View","_css","marginRight","process","env","NODE_ENV","table","rowMessageHeight","alertContainerHeight","rowsHeight","expandedColumns","expanded_columns","col","allowHTML","SqllabIsRenderHtmlEnabled","orderedColumnKeys","filterText","isDataPreview","buttonStyle","progressBar","progress","percent","parseInt","toFixed","striped","progressMsg","position","__signature__","_default","memo","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/ResultSet/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { pick } from 'lodash';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport shortid from 'shortid';\nimport {\n  QueryState,\n  styled,\n  t,\n  tn,\n  useTheme,\n  usePrevious,\n  css,\n  getNumberFormatter,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport {\n  ISaveableDatasource,\n  ISimpleColumn,\n  SaveDatasetModal,\n} from 'src/SqlLab/components/SaveDatasetModal';\nimport { EXPLORE_CHART_DEFAULT, SqlLabRootState } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport Card from 'src/components/Card';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport {\n  addQueryEditor,\n  clearQueryResults,\n  CtasEnum,\n  fetchQueryResults,\n  reFetchQueryResults,\n  reRunQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport Icons from 'src/components/Icons';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';\n\nenum LimitingFactor {\n  Query = 'QUERY',\n  QueryAndDropdown = 'QUERY_AND_DROPDOWN',\n  Dropdown = 'DROPDOWN',\n  NotLimited = 'NOT_LIMITED',\n}\n\nexport interface ResultSetProps {\n  cache?: boolean;\n  csv?: boolean;\n  database?: Record<string, any>;\n  displayLimit: number;\n  height: number;\n  queryId: string;\n  search?: boolean;\n  showSql?: boolean;\n  showSqlInline?: boolean;\n  visualize?: boolean;\n  defaultQueryLimit: number;\n}\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${({ theme }) => theme.gridUnit * 25}px;\n  [role='alert'] {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nconst ReturnedRows = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  line-height: 1;\n`;\n\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n`;\n\nconst ROWS_CHIP_WIDTH = 100;\nconst GAP = 8;\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst ResultSet = ({\n  cache = false,\n  csv = true,\n  database = {},\n  displayLimit,\n  height,\n  queryId,\n  search = true,\n  showSql = false,\n  showSqlInline = false,\n  visualize = true,\n  defaultQueryLimit,\n}: ResultSetProps) => {\n  const user = useSelector(({ user }: SqlLabRootState) => user, shallowEqual);\n  const query = useSelector(\n    ({ sqlLab: { queries } }: SqlLabRootState) =>\n      pick(queries[queryId], [\n        'id',\n        'errorMessage',\n        'cached',\n        'results',\n        'resultsKey',\n        'dbId',\n        'tab',\n        'sql',\n        'templateParams',\n        'schema',\n        'rows',\n        'queryLimit',\n        'limitingFactor',\n        'trackingUrl',\n        'state',\n        'errors',\n        'link',\n        'ctas',\n        'ctas_method',\n        'tempSchema',\n        'tempTable',\n        'isDataPreview',\n        'progress',\n        'extra',\n      ]),\n    shallowEqual,\n  );\n  const ResultTable =\n    extensionsRegistry.get('sqleditor.extension.resultTable') ??\n    FilterableTable;\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState<Record<string, unknown>[]>([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (\n      query.errorMessage &&\n      query.errorMessage.indexOf('session timed out') > 0\n    ) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n\n  const fetchResults = (q: typeof query) => {\n    dispatch(fetchQueryResults(q, displayLimit));\n  };\n\n  const prevQuery = usePrevious(query);\n  useEffect(() => {\n    if (cache && query.cached && query?.results?.data?.length > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== prevQuery?.resultsKey) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n\n  const calculateAlertRefHeight = (alertElement: HTMLElement | null) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else {\n      setAlertIsOpen(false);\n    }\n  };\n\n  const popSelectStar = (tempSchema: string | null, tempTable: string) => {\n    const qe = {\n      id: shortid.generate(),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}`,\n    };\n    dispatch(addQueryEditor(qe));\n  };\n\n  const changeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(event.target.value);\n  };\n\n  const createExploreResultsOnClick = async (clickEvent: React.MouseEvent) => {\n    const { results } = query;\n\n    const openInNewWindow = clickEvent.metaKey;\n\n    if (results?.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map(column => column.column_name),\n        },\n      });\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key,\n      });\n      if (openInNewWindow) {\n        window.open(url, '_blank', 'noreferrer');\n      } else {\n        history.push(url);\n      }\n    } else {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n\n  const getExportCsvUrl = (clientId: string) =>\n    `/api/v1/sqllab/export/${clientId}/`;\n\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n\n      const datasource: ISaveableDatasource = {\n        columns: query.results.columns as ISimpleColumn[],\n        name: query?.tab || 'Untitled',\n        dbId: query?.dbId,\n        sql: query?.sql,\n        templateParams: query?.templateParams,\n        schema: query?.schema,\n      };\n\n      return (\n        <ResultSetControls>\n          <SaveDatasetModal\n            visible={showSaveDatasetModal}\n            onHide={() => setShowSaveDatasetModal(false)}\n            buttonTextOnSave={t('Save & Explore')}\n            buttonTextOnOverwrite={t('Overwrite & Explore')}\n            modalDescription={t(\n              'Save this query as a virtual dataset to continue exploring',\n            )}\n            datasource={datasource}\n          />\n          <ResultSetButtons>\n            {visualize && database?.allows_virtual_table_explore && (\n              <ExploreResultsButton\n                database={database}\n                onClick={createExploreResultsOnClick}\n              />\n            )}\n            {csv && (\n              <Button buttonSize=\"small\" href={getExportCsvUrl(query.id)}>\n                <i className=\"fa fa-file-text-o\" /> {t('Download to CSV')}\n              </Button>\n            )}\n\n            <CopyToClipboard\n              text={prepareCopyToClipboardTabularData(data, columns)}\n              wrapped={false}\n              copyNode={\n                <Button buttonSize=\"small\">\n                  <i className=\"fa fa-clipboard\" /> {t('Copy to Clipboard')}\n                </Button>\n              }\n              hideTooltip\n            />\n          </ResultSetButtons>\n          {search && (\n            <input\n              type=\"text\"\n              onChange={changeSearch}\n              value={searchText}\n              className=\"form-control input-sm\"\n              placeholder={t('Filter results')}\n            />\n          )}\n        </ResultSetControls>\n      );\n    }\n    return <div />;\n  };\n\n  const renderRowsReturned = (alertMessage: boolean) => {\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage = '';\n    const limitReached = results?.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!user?.roles?.Admin;\n    const rowsCount = Math.min(rows || 0, results?.data?.length || 0);\n\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t(\n        'The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n          'Please add additional limits/filters or download to csv to see more rows up to ' +\n          'the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n      withoutAdmin: t(\n        'The number of results displayed is limited to %(rows)d. ' +\n          'Please add additional limits/filters, download to csv, or contact an admin ' +\n          'to see more rows up to the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n    };\n    const shouldUseDefaultDropdownAlert =\n      limit === defaultQueryLimit && limitingFactor === LimitingFactor.Dropdown;\n\n    if (limitingFactor === LimitingFactor.Query && csv) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query',\n        { rows },\n      );\n    } else if (\n      limitingFactor === LimitingFactor.Dropdown &&\n      !shouldUseDefaultDropdownAlert\n    ) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the limit dropdown.',\n        { rows },\n      );\n    } else if (limitingFactor === LimitingFactor.QueryAndDropdown) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query and limit dropdown.',\n        { rows },\n      );\n    }\n    const formattedRowCount = getNumberFormatter()(rows);\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows,\n    });\n\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n\n    if (alertMessage) {\n      return (\n        <>\n          {!limitReached && shouldUseDefaultDropdownAlert && (\n            <div ref={calculateAlertRefHeight}>\n              <Alert\n                type=\"warning\"\n                message={t('%(rows)d rows returned', { rows })}\n                onClose={() => setAlertIsOpen(false)}\n                description={t(\n                  'The number of rows displayed is limited to %(rows)d by the dropdown.',\n                  { rows },\n                )}\n              />\n            </div>\n          )}\n          {limitReached && (\n            <div ref={calculateAlertRefHeight}>\n              <Alert\n                type=\"warning\"\n                onClose={() => setAlertIsOpen(false)}\n                message={t('%(rows)d rows returned', { rows: rowsCount })}\n                description={\n                  isAdmin\n                    ? displayMaxRowsReachedMessage.withAdmin\n                    : displayMaxRowsReachedMessage.withoutAdmin\n                }\n              />\n            </div>\n          )}\n        </>\n      );\n    }\n    const showRowsReturned =\n      showSqlInline || (!limitReached && !shouldUseDefaultDropdownAlert);\n\n    return (\n      <>\n        {showRowsReturned && (\n          <ReturnedRows>\n            <Tooltip\n              id=\"sqllab-rowcount-tooltip\"\n              title={tooltipText}\n              placement=\"left\"\n            >\n              <Label\n                css={css`\n                  line-height: ${theme.typography.sizes.l}px;\n                `}\n              >\n                {limitMessage && (\n                  <Icons.ExclamationCircleOutlined\n                    css={css`\n                      font-size: ${theme.typography.sizes.m}px;\n                      margin-right: ${theme.gridUnit}px;\n                    `}\n                  />\n                )}\n                {tn('%s row', '%s rows', rows, formattedRowCount)}\n              </Label>\n            </Tooltip>\n          </ReturnedRows>\n        )}\n      </>\n    );\n  };\n\n  const limitReached = query?.results?.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database?.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n\n  let trackingUrl;\n  if (\n    query.trackingUrl &&\n    query.state !== QueryState.Success &&\n    query.state !== QueryState.Fetching\n  ) {\n    trackingUrl = (\n      <Button\n        className=\"sql-result-track-job\"\n        buttonSize=\"small\"\n        href={query.trackingUrl}\n        target=\"_blank\"\n      >\n        {query.state === QueryState.Running\n          ? t('Track job')\n          : t('See query details')}\n      </Button>\n    );\n  }\n\n  if (showSql) {\n    sql = (\n      <HighlightedSql\n        sql={query.sql}\n        {...(showSqlInline && { maxLines: 1, maxWidth: 60 })}\n      />\n    );\n  }\n\n  if (query.state === QueryState.Stopped) {\n    return <Alert type=\"warning\" message={t('Query was stopped')} />;\n  }\n\n  if (query.state === QueryState.Failed) {\n    return (\n      <ResultlessStyles>\n        <ErrorMessageWithStackTrace\n          title={t('Database error')}\n          error={query?.extra?.errors?.[0] || query?.errors?.[0]}\n          subtitle={<MonospaceDiv>{query.errorMessage}</MonospaceDiv>}\n          copyText={query.errorMessage || undefined}\n          link={query.link}\n          source=\"sqllab\"\n        />\n        {trackingUrl}\n      </ResultlessStyles>\n    );\n  }\n\n  if (query.state === QueryState.Success && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.View) {\n      object = 'View';\n    }\n    return (\n      <div>\n        <Alert\n          type=\"info\"\n          message={\n            <>\n              {t(object)} [\n              <strong>\n                {tempSchema ? `${tempSchema}.` : ''}\n                {tempTable}\n              </strong>\n              ] {t('was created')} &nbsp;\n              <ButtonGroup>\n                <Button\n                  buttonSize=\"small\"\n                  css={{ marginRight: theme.gridUnit }}\n                  onClick={() => popSelectStar(tempSchema, tempTable)}\n                >\n                  {t('Query in a new tab')}\n                </Button>\n                <ExploreCtasResultsButton\n                  table={tempTable}\n                  schema={tempSchema}\n                  dbId={exploreDBId}\n                />\n              </ButtonGroup>\n            </>\n          }\n        />\n      </div>\n    );\n  }\n\n  if (query.state === QueryState.Success && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen\n      ? height - alertContainerHeight\n      : height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else if (results?.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns\n        ? results.expanded_columns.map(col => col.column_name)\n        : [];\n      const allowHTML = getItem(\n        LocalStorageKeys.SqllabIsRenderHtmlEnabled,\n        false,\n      );\n      return (\n        <ResultContainer>\n          {renderControls()}\n          {showSql && showSqlInline ? (\n            <>\n              <div\n                css={css`\n                  display: flex;\n                  justify-content: space-between;\n                  gap: ${GAP}px;\n                `}\n              >\n                <Card\n                  css={[\n                    css`\n                      height: 28px;\n                      width: calc(100% - ${ROWS_CHIP_WIDTH + GAP}px);\n                      code {\n                        width: 100%;\n                        overflow: hidden;\n                        white-space: nowrap !important;\n                        text-overflow: ellipsis;\n                        display: block;\n                      }\n                    `,\n                  ]}\n                >\n                  {sql}\n                </Card>\n                {renderRowsReturned(false)}\n              </div>\n              {renderRowsReturned(true)}\n            </>\n          ) : (\n            <>\n              {renderRowsReturned(false)}\n              {renderRowsReturned(true)}\n              {sql}\n            </>\n          )}\n          <ResultTable\n            data={data}\n            queryId={query.id}\n            orderedColumnKeys={results.columns.map(col => col.column_name)}\n            height={rowsHeight}\n            filterText={searchText}\n            expandedColumns={expandedColumns}\n            allowHTML={allowHTML}\n          />\n        </ResultContainer>\n      );\n    }\n    if (data && data.length === 0) {\n      return <Alert type=\"warning\" message={t('The query returned no data')} />;\n    }\n  }\n\n  if (query.cached || (query.state === QueryState.Success && !query.results)) {\n    if (query.isDataPreview) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() =>\n            dispatch(\n              reFetchQueryResults({\n                ...query,\n                isDataPreview: true,\n              }),\n            )\n          }\n        >\n          {t('Fetch data preview')}\n        </Button>\n      );\n    }\n    if (query.resultsKey) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() => fetchResults(query)}\n        >\n          {t('Refetch results')}\n        </Button>\n      );\n    }\n  }\n\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = (\n      <ProgressBar percent={parseInt(query.progress.toFixed(0), 10)} striped />\n    );\n  }\n\n  const progressMsg = query?.extra?.progress ?? null;\n\n  return (\n    <ResultlessStyles>\n      <div>{!progressBar && <Loading position=\"normal\" />}</div>\n      {/* show loading bar whenever progress bar is completed but needs time to render */}\n      <div>{query.progress === 100 && <Loading position=\"normal\" />}</div>\n      <QueryStateLabel query={query} />\n      <div>{progressMsg && <Alert type=\"success\" message={progressMsg} />}</div>\n      <div>{query.progress !== 100 && progressBar}</div>\n      {trackingUrl && <div>{trackingUrl}</div>}\n    </ResultlessStyles>\n  );\n};\n\nexport default React.memo(ResultSet);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}