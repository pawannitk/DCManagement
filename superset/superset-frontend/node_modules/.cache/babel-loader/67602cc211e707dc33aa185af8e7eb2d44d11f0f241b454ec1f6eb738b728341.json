{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { CronPicker } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar ScheduleType;\n(function (ScheduleType) {\n  ScheduleType[\"Picker\"] = \"picker\";\n  ScheduleType[\"Input\"] = \"input\";\n})(ScheduleType || (ScheduleType = {}));\nconst SCHEDULE_TYPE_OPTIONS = [\n{\n  label: t('Recurring (every)'),\n  value: ScheduleType.Picker\n},\n{\n  label: t('CRON Schedule'),\n  value: ScheduleType.Input\n}];\n\nexport const AlertReportCronScheduler = ({ value, onChange }) => {\n  const theme = useTheme();\n  const inputRef = useRef(null);\n  const [scheduleFormat, setScheduleFormat] = useState(ScheduleType.Picker);\n  const customSetValue = useCallback((newValue) => {var _inputRef$current;\n    onChange(newValue);\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.setValue(newValue);\n  }, [inputRef, onChange]);\n  const handleBlur = useCallback((event) => {\n    onChange(event.target.value);\n  }, [onChange]);\n  const handlePressEnter = useCallback(() => {var _inputRef$current2;\n    onChange(((_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.input.value) || '');\n  }, [onChange]);\n  const [error, onError] = useState();\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Schedule type'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")\n  ),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(Select, { ariaLabel: t('Schedule type'), placeholder: t('Schedule type'), onChange: (e) => {\n      setScheduleFormat(e);\n    }, value: scheduleFormat, options: SCHEDULE_TYPE_OPTIONS })\n  )\n  ),\n\n  ___EmotionJSX(StyledInputContainer, { \"data-test\": \"input-content\", className: \"styled-input\" },\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('Schedule'),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")\n  ),\n  scheduleFormat === ScheduleType.Input && ___EmotionJSX(Input, { type: \"text\", name: \"crontab\", ref: inputRef, style: error ? { borderColor: theme.colors.error.base } : {}, placeholder: t('CRON expression'), value: value, onBlur: handleBlur, onChange: (e) => customSetValue(e.target.value), onPressEnter: handlePressEnter }),\n  scheduleFormat === ScheduleType.Picker && ___EmotionJSX(CronPicker, { clearButton: false, value: value, setValue: customSetValue, displayError: scheduleFormat === ScheduleType.Picker, onError: onError })\n  )\n  );\n};__signature__(AlertReportCronScheduler, \"useTheme{theme}\\nuseRef{inputRef}\\nuseState{[scheduleFormat, setScheduleFormat](ScheduleType.Picker)}\\nuseCallback{customSetValue}\\nuseCallback{handleBlur}\\nuseCallback{handlePressEnter}\\nuseState{[error, onError]}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ScheduleType, \"ScheduleType\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx\");reactHotLoader.register(SCHEDULE_TYPE_OPTIONS, \"SCHEDULE_TYPE_OPTIONS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx\");reactHotLoader.register(AlertReportCronScheduler, \"AlertReportCronScheduler\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useCallback","useRef","t","useTheme","Select","Input","CronPicker","StyledInputContainer","jsx","___EmotionJSX","ScheduleType","SCHEDULE_TYPE_OPTIONS","label","value","Picker","AlertReportCronScheduler","onChange","theme","inputRef","scheduleFormat","setScheduleFormat","customSetValue","newValue","_inputRef$current","current","setValue","handleBlur","event","target","handlePressEnter","_inputRef$current2","input","error","onError","Fragment","className","ariaLabel","placeholder","e","options","type","name","ref","style","borderColor","colors","base","onBlur","onPressEnter","clearButton","displayError","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/AlertReportCronScheduler.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FocusEvent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { AntdInput, Select } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nexport interface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nenum ScheduleType {\n  Picker = 'picker',\n  Input = 'input',\n}\n\nconst SCHEDULE_TYPE_OPTIONS = [\n  {\n    label: t('Recurring (every)'),\n    value: ScheduleType.Picker,\n  },\n  {\n    label: t('CRON Schedule'),\n    value: ScheduleType.Input,\n  },\n];\n\nexport const AlertReportCronScheduler: React.FC<\n  AlertReportCronSchedulerProps\n> = ({ value, onChange }) => {\n  const theme = useTheme();\n  const inputRef = useRef<AntdInput>(null);\n  const [scheduleFormat, setScheduleFormat] = useState<ScheduleType>(\n    ScheduleType.Picker,\n  );\n\n  const customSetValue = useCallback(\n    (newValue: string) => {\n      onChange(newValue);\n      inputRef.current?.setValue(newValue);\n    },\n    [inputRef, onChange],\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      onChange(event.target.value);\n    },\n    [onChange],\n  );\n\n  const handlePressEnter = useCallback(() => {\n    onChange(inputRef.current?.input.value || '');\n  }, [onChange]);\n\n  const [error, onError] = useState<CronError>();\n\n  return (\n    <>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('Schedule type')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <Select\n            ariaLabel={t('Schedule type')}\n            placeholder={t('Schedule type')}\n            onChange={(e: ScheduleType) => {\n              setScheduleFormat(e);\n            }}\n            value={scheduleFormat}\n            options={SCHEDULE_TYPE_OPTIONS}\n          />\n        </div>\n      </StyledInputContainer>\n\n      <StyledInputContainer data-test=\"input-content\" className=\"styled-input\">\n        <div className=\"control-label\">\n          {t('Schedule')}\n          <span className=\"required\">*</span>\n        </div>\n        {scheduleFormat === ScheduleType.Input && (\n          <Input\n            type=\"text\"\n            name=\"crontab\"\n            ref={inputRef}\n            style={error ? { borderColor: theme.colors.error.base } : {}}\n            placeholder={t('CRON expression')}\n            value={value}\n            onBlur={handleBlur}\n            onChange={e => customSetValue(e.target.value)}\n            onPressEnter={handlePressEnter}\n          />\n        )}\n        {scheduleFormat === ScheduleType.Picker && (\n          <CronPicker\n            clearButton={false}\n            value={value}\n            setValue={customSetValue}\n            displayError={scheduleFormat === ScheduleType.Picker}\n            onError={onError}\n          />\n        )}\n      </StyledInputContainer>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}