{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { calculatePickingColors } from './geojson-binary';\n\nfunction createEmptyLayerProps() {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(features, featuresDiff) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    pointFeatures,\n    lineFeatures,\n    polygonFeatures,\n    polygonOutlineFeatures\n  } = features;\n  layerProps.points.data = pointFeatures;\n\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n\n  layerProps.points.getPosition = getCoordinates;\n  layerProps.lines.data = lineFeatures;\n\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n\n  layerProps.lines.getPath = getCoordinates;\n  layerProps.polygons.data = polygonFeatures;\n\n  layerProps.polygons._dataDiff = featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n\n  layerProps.polygons.getPolygon = getCoordinates;\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n\n  layerProps.polygonsOutline._dataDiff = featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n\n  layerProps.polygonsOutline.getPath = getCoordinates;\n  return layerProps;\n}\nexport function createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    points,\n    lines,\n    polygons\n  } = geojsonBinary;\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: { ...points.attributes,\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  };\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: { ...lines.attributes,\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  };\n  layerProps.lines._pathType = 'open';\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: { ...polygons.attributes,\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygons._normalize = false;\n\n  if (polygons.triangles) {\n    layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: { ...polygons.attributes,\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygonsOutline._pathType = 'open';\n  return layerProps;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createEmptyLayerProps, \"createEmptyLayerProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");reactHotLoader.register(getCoordinates, \"getCoordinates\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");reactHotLoader.register(createLayerPropsFromFeatures, \"createLayerPropsFromFeatures\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");reactHotLoader.register(createLayerPropsFromBinary, \"createLayerPropsFromBinary\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["calculatePickingColors","createEmptyLayerProps","points","lines","polygons","polygonsOutline","getCoordinates","f","geometry","coordinates","createLayerPropsFromFeatures","features","featuresDiff","layerProps","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","data","_dataDiff","getPosition","getPath","getPolygon","createLayerPropsFromBinary","geojsonBinary","encodePickingColor","customPickingColors","length","positions","value","size","attributes","instancePickingColors","properties","numericProps","featureIds","pathIndices","startIndices","_pathType","polygonIndices","pickingColors","_normalize","triangles","indices","primitivePolygonIndices","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/geojson-layer/geojson-layer-props.ts"],"sourcesContent":["import {BinaryAttribute, LayerData, LayerProps} from '@deck.gl/core';\nimport {PolygonLayerProps, ScatterplotLayerProps} from '..';\nimport {calculatePickingColors} from './geojson-binary';\nimport {BinaryFeatures} from '@loaders.gl/schema';\nimport {SeparatedGeometries} from './geojson';\n\n// TODO: PathLayer is not yet typed\ntype PathLayerProps = LayerProps & Record<string, any>;\n\ntype SubLayersProps = {\n  points: Partial<ScatterplotLayerProps>;\n  lines: Partial<PathLayerProps>;\n  polygons: Partial<PolygonLayerProps>;\n  polygonsOutline: Partial<PathLayerProps>;\n};\n\ntype ExtendedBinaryFeatures = {\n  [P in keyof BinaryFeatures]: BinaryFeatures[P] & {attributes?: Record<string, BinaryAttribute>};\n};\n\nfunction createEmptyLayerProps(): SubLayersProps {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(\n  features: SeparatedGeometries,\n  featuresDiff\n): SubLayersProps {\n  const layerProps = createEmptyLayerProps();\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = features;\n\n  layerProps.points.data = pointFeatures;\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n  layerProps.points.getPosition = getCoordinates;\n\n  layerProps.lines.data = lineFeatures;\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n  layerProps.lines.getPath = getCoordinates;\n\n  layerProps.polygons.data = polygonFeatures;\n  layerProps.polygons._dataDiff =\n    featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n  layerProps.polygons.getPolygon = getCoordinates;\n\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n  layerProps.polygonsOutline._dataDiff =\n    featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n  layerProps.polygonsOutline.getPath = getCoordinates;\n\n  return layerProps;\n}\n\nexport function createLayerPropsFromBinary(\n  geojsonBinary: Required<ExtendedBinaryFeatures>,\n  encodePickingColor\n): SubLayersProps {\n  // The binary data format is documented here\n  // https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n  // It is the default output from the `MVTLoader` and can also be obtained\n  // from GeoJSON by using the `geojsonToBinary` utility function.\n  const layerProps = createEmptyLayerProps();\n  const {points, lines, polygons} = geojsonBinary;\n\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      ...points.attributes,\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points!\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  } as LayerData<any>;\n\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      ...lines.attributes,\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines!\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  } as LayerData<any>;\n  layerProps.lines._pathType = 'open';\n\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygons._normalize = false;\n  if (polygons.triangles) {\n    (layerProps.polygons.data as any).attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygonsOutline._pathType = 'open';\n\n  return layerProps;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}