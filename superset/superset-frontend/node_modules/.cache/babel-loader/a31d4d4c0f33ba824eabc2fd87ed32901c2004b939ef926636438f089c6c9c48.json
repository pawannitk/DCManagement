{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { LayerExtension, _mergeShaders as mergeShaders } from '@deck.gl/core';\nimport { dashShaders, offsetShaders } from './shaders.glsl';\nimport { dist } from 'gl-matrix/vec3';\nconst defaultProps = {\n  getDashArray: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getOffset: {\n    type: 'accessor',\n    value: 0\n  },\n  dashJustified: false,\n  dashGapPickable: false\n};\nexport default class PathStyleExtension extends LayerExtension {\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  } = {}) {\n    super({\n      dash: dash || highPrecisionDash,\n      offset,\n      highPrecisionDash\n    });\n  }\n\n  isEnabled(layer) {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(extension) {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    let result = {};\n\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n\n    if (!attributeManager || !extension.isEnabled(this)) {\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {\n          size: 2,\n          accessor: 'getDashArray'\n        }\n      });\n    }\n\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {\n          size: 1,\n          accessor: 'getOffset'\n        }\n      });\n    }\n  }\n\n  updateState(params, extension) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(path) {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n    let p;\n    let prevP;\n\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n\n    return result;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\n_defineProperty(PathStyleExtension, \"defaultProps\", defaultProps);\n\n_defineProperty(PathStyleExtension, \"extensionName\", 'PathStyleExtension');;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/path-style/path-style-extension.js\");reactHotLoader.register(PathStyleExtension, \"PathStyleExtension\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/path-style/path-style-extension.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["LayerExtension","_mergeShaders","mergeShaders","dashShaders","offsetShaders","dist","defaultProps","getDashArray","type","value","getOffset","dashJustified","dashGapPickable","PathStyleExtension","constructor","dash","offset","highPrecisionDash","isEnabled","layer","state","getShaders","extension","result","opts","initializeState","context","attributeManager","getAttributeManager","addInstanced","instanceDashArrays","size","accessor","instanceDashOffsets","transform","getDashOffsets","bind","instanceOffsets","updateState","params","uniforms","dashAlignMode","props","Boolean","model","setUniforms","path","positionSize","positionFormat","isNested","Array","isArray","geometrySize","length","p","prevP","i","slice","projectPosition","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","register","leaveModule","reactHotLoaderGlobal","undefined","module"],"sources":["../../../src/path-style/path-style-extension.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _mergeShaders as mergeShaders} from '@deck.gl/core';\nimport {dashShaders, offsetShaders} from './shaders.glsl';\nimport {dist} from 'gl-matrix/vec3';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getDashArray: {type: 'accessor', value: [0, 0]},\n  getOffset: {type: 'accessor', value: 0},\n  dashJustified: false,\n  dashGapPickable: false\n};\n\nexport type PathStyleExtensionProps<DataT = any> = {\n  /**\n   * Accessor for the dash array to draw each path with: `[dashSize, gapSize]` relative to the width of the path.\n   * Requires the `dash` option to be on.\n   */\n  getDashArray?: Accessor<DataT, [number, number]>;\n  /**\n   * Accessor for the offset to draw each path with, relative to the width of the path.\n   * Negative offset is to the left hand side, and positive offset is to the right hand side.\n   * @default 0\n   */\n  getOffset?: Accessor<DataT, number>;\n  /**\n   * If `true`, adjust gaps for the dashes to align at both ends.\n   * @default false\n   */\n  dashJustified?: boolean;\n  /**\n   * If `true`, gaps between solid strokes are pickable. If `false`, only the solid strokes are pickable.\n   * @default false\n   */\n  dashGapPickable?: boolean;\n};\n\ntype PathStyleExtensionOptions = {\n  /**\n   * Add capability to render dashed lines.\n   * @default false\n   */\n  dash: boolean;\n  /**\n   * Add capability to offset lines.\n   * @default false\n   */\n  offset: boolean;\n  /**\n   * Improve dash rendering quality in certain circumstances. Note that this option introduces additional performance overhead.\n   * @default false\n   */\n  highPrecisionDash: boolean;\n};\n\n/** Adds selected features to the `PathLayer` and composite layers that render the `PathLayer`. */\nexport default class PathStyleExtension extends LayerExtension<PathStyleExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'PathStyleExtension';\n\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  }: Partial<PathStyleExtensionOptions> = {}) {\n    super({dash: dash || highPrecisionDash, offset, highPrecisionDash});\n  }\n\n  isEnabled(layer: Layer<PathStyleExtensionProps>): boolean {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(this: Layer<PathStyleExtensionProps>, extension: this): any {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    // Merge shader injection\n    let result = {};\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(this: Layer<PathStyleExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager || !extension.isEnabled(this)) {\n      // This extension only works with the PathLayer\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {size: 2, accessor: 'getDashArray'}\n      });\n    }\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {size: 1, accessor: 'getOffset'}\n      });\n    }\n  }\n\n  updateState(\n    this: Layer<PathStyleExtensionProps>,\n    params: UpdateParameters<Layer<PathStyleExtensionProps>>,\n    extension: this\n  ) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms: any = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(this: Layer<PathStyleExtensionProps>, path: number[] | number[][]): number[] {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n\n    let p;\n    let prevP;\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}