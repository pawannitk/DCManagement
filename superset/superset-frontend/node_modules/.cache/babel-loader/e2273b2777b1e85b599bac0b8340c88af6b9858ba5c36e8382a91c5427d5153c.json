{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createSelector } from 'reselect';\nimport { convertKeysToCamelCase } from '../..';\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\nexport default class ChartProps {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  constructor(config = {}) {this.annotationData = void 0;this.datasource = void 0;this.rawDatasource = void 0;this.initialValues = void 0;this.formData = void 0;this.rawFormData = void 0;this.height = void 0;this.hooks = void 0;this.ownState = void 0;this.filterState = void 0;this.legendState = void 0;this.queriesData = void 0;this.width = void 0;this.behaviors = void 0;this.displaySettings = void 0;this.appSection = void 0;this.isRefreshing = void 0;this.inputRef = void 0;this.inContextMenu = void 0;this.emitCrossFilters = void 0;this.theme = void 0;\n    const { annotationData = {}, datasource = {}, formData = {}, hooks = {}, ownState = {}, filterState = {}, legendState, initialValues = {}, queriesData = [], behaviors = [], displaySettings = {}, width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT, appSection, isRefreshing, inputRef, inContextMenu = false, emitCrossFilters = false, theme } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource);\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.legendState = legendState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}} // eslint-disable-next-line func-name-matching\nChartProps.createSelector = void 0;ChartProps.createSelector = function create() {\n  return createSelector((input) => input.annotationData, (input) => input.datasource, (input) => input.formData, (input) => input.height, (input) => input.hooks, (input) => input.initialValues, (input) => input.queriesData, (input) => input.width, (input) => input.ownState, (input) => input.filterState, (input) => input.legendState, (input) => input.behaviors, (input) => input.displaySettings, (input) => input.appSection, (input) => input.isRefreshing, (input) => input.inputRef, (input) => input.inContextMenu, (input) => input.emitCrossFilters, (input) => input.theme, (annotationData, datasource, formData, height, hooks, initialValues, queriesData, width, ownState, filterState, legendState, behaviors, displaySettings, appSection, isRefreshing, inputRef, inContextMenu, emitCrossFilters, theme) => new ChartProps({\n    annotationData,\n    datasource,\n    formData,\n    height,\n    hooks,\n    initialValues,\n    queriesData,\n    ownState,\n    filterState,\n    legendState,\n    width,\n    behaviors,\n    displaySettings,\n    appSection,\n    isRefreshing,\n    inputRef,\n    inContextMenu,\n    emitCrossFilters,\n    theme\n  }));\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_WIDTH, \"DEFAULT_WIDTH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts\");reactHotLoader.register(DEFAULT_HEIGHT, \"DEFAULT_HEIGHT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts\");reactHotLoader.register(ChartProps, \"ChartProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["createSelector","convertKeysToCamelCase","DEFAULT_WIDTH","DEFAULT_HEIGHT","ChartProps","constructor","config","annotationData","datasource","rawDatasource","initialValues","formData","rawFormData","height","hooks","ownState","filterState","legendState","queriesData","width","behaviors","displaySettings","appSection","isRefreshing","inputRef","inContextMenu","emitCrossFilters","theme","__reactstandin__regenerateByEval","key","code","eval","create","input","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/chart/models/ChartProps.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** Type checking is disabled for this file due to reselect only supporting\n * TS declarations for selectors with up to 12 arguments. */\n// @ts-nocheck\nimport { RefObject } from 'react';\nimport { createSelector } from 'reselect';\nimport {\n  AppSection,\n  Behavior,\n  convertKeysToCamelCase,\n  Datasource,\n  FilterState,\n  JsonObject,\n} from '../..';\nimport {\n  HandlerFunction,\n  LegendState,\n  PlainObject,\n  SetDataMaskHook,\n} from '../types/Base';\nimport { QueryData, DataRecordFilters } from '..';\nimport { SupersetTheme } from '../../style';\n\n// TODO: more specific typing for these fields of ChartProps\ntype AnnotationData = PlainObject;\ntype SnakeCaseDatasource = PlainObject;\ntype CamelCaseFormData = PlainObject;\ntype SnakeCaseFormData = PlainObject;\ntype RawFormData = CamelCaseFormData | SnakeCaseFormData;\n\ntype ChartPropsSelector = (c: ChartPropsConfig) => ChartProps;\n\n/** Optional field for event handlers, renderers */\ntype Hooks = {\n  /**\n   * sync active filters between chart and dashboard, \"add\" actually\n   * also handles \"change\" and \"remove\".\n   */\n  onAddFilter?: (newFilters: DataRecordFilters, merge?: boolean) => void;\n  /** handle right click */\n  onContextMenu?: HandlerFunction;\n  /** handle errors */\n  onError?: HandlerFunction;\n  /** handle legend state changes */\n  onLegendStateChanged?: HandlerFunction;\n  /** use the vis as control to update state */\n  setControlValue?: HandlerFunction;\n  /** handle external filters */\n  setDataMask?: SetDataMaskHook;\n  /** handle tooltip */\n  setTooltip?: HandlerFunction;\n} & PlainObject;\n\n/**\n * Preferred format for ChartProps config\n */\nexport interface ChartPropsConfig {\n  annotationData?: AnnotationData;\n  /** Datasource metadata */\n  datasource?: SnakeCaseDatasource;\n  initialValues?: DataRecordFilters;\n  /** Main configuration of the chart */\n  formData?: RawFormData;\n  /** Chart height */\n  height?: number;\n  /** Programmatic overrides such as event handlers, renderers */\n  hooks?: Hooks;\n  /** The data returned for all queries objects in the request */\n  queriesData?: QueryData[];\n  /** Chart width */\n  width?: number;\n  /** Own chart state that saved in dashboard */\n  ownState?: JsonObject;\n  /** Filter state that saved in dashboard */\n  filterState?: FilterState;\n  /** Legend state */\n  legendState?: LegendState;\n  /** Set of actual behaviors that this instance of chart should use */\n  behaviors?: Behavior[];\n  /** Chart display settings related to current view context */\n  displaySettings?: JsonObject;\n  /** Application section of the chart on the screen (in what components/screen it placed) */\n  appSection?: AppSection;\n  /** is the chart refreshing its contents */\n  isRefreshing?: boolean;\n  /** chart ref */\n  inputRef?: RefObject<any>;\n  /** Theme object */\n  theme: SupersetTheme;\n}\n\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\n\nexport default class ChartProps<FormData extends RawFormData = RawFormData> {\n  static createSelector: () => ChartPropsSelector;\n\n  annotationData: AnnotationData;\n\n  datasource: Datasource;\n\n  rawDatasource: SnakeCaseDatasource;\n\n  initialValues: DataRecordFilters;\n\n  formData: CamelCaseFormData;\n\n  rawFormData: FormData;\n\n  height: number;\n\n  hooks: Hooks;\n\n  ownState: JsonObject;\n\n  filterState: FilterState;\n\n  legendState?: LegendState;\n\n  queriesData: QueryData[];\n\n  width: number;\n\n  behaviors: Behavior[];\n\n  displaySettings?: JsonObject;\n\n  appSection?: AppSection;\n\n  isRefreshing?: boolean;\n\n  inputRef?: RefObject<any>;\n\n  inContextMenu?: boolean;\n\n  emitCrossFilters?: boolean;\n\n  theme: SupersetTheme;\n\n  constructor(config: ChartPropsConfig & { formData?: FormData } = {}) {\n    const {\n      annotationData = {},\n      datasource = {},\n      formData = {} as FormData,\n      hooks = {},\n      ownState = {},\n      filterState = {},\n      legendState,\n      initialValues = {},\n      queriesData = [],\n      behaviors = [],\n      displaySettings = {},\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu = false,\n      emitCrossFilters = false,\n      theme,\n    } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource) as Datasource;\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.legendState = legendState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  }\n}\n\n// eslint-disable-next-line func-name-matching\nChartProps.createSelector = function create(): ChartPropsSelector {\n  return createSelector(\n    (input: ChartPropsConfig) => input.annotationData,\n    input => input.datasource,\n    input => input.formData,\n    input => input.height,\n    input => input.hooks,\n    input => input.initialValues,\n    input => input.queriesData,\n    input => input.width,\n    input => input.ownState,\n    input => input.filterState,\n    input => input.legendState,\n    input => input.behaviors,\n    input => input.displaySettings,\n    input => input.appSection,\n    input => input.isRefreshing,\n    input => input.inputRef,\n    input => input.inContextMenu,\n    input => input.emitCrossFilters,\n    input => input.theme,\n    (\n      annotationData,\n      datasource,\n      formData,\n      height,\n      hooks,\n      initialValues,\n      queriesData,\n      width,\n      ownState,\n      filterState,\n      legendState,\n      behaviors,\n      displaySettings,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu,\n      emitCrossFilters,\n      theme,\n    ) =>\n      new ChartProps({\n        annotationData,\n        datasource,\n        formData,\n        height,\n        hooks,\n        initialValues,\n        queriesData,\n        ownState,\n        filterState,\n        legendState,\n        width,\n        behaviors,\n        displaySettings,\n        appSection,\n        isRefreshing,\n        inputRef,\n        inContextMenu,\n        emitCrossFilters,\n        theme,\n      }),\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}