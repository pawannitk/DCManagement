{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { StyledInputContainer } from '../AlertReportModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst StyledNotificationMethod = styled.div`\n  margin-bottom: 10px;\n\n  .input-container {\n    textarea {\n      height: auto;\n    }\n\n    &.error {\n      input {\n        border-color: ${({ theme }) => theme.colors.error.base};\n      }\n    }\n  }\n\n  .inline-container {\n    margin-bottom: 10px;\n\n    > div {\n      margin: 0;\n    }\n\n    .delete-button {\n      margin-left: 10px;\n      padding-top: 3px;\n    }\n  }\n`;\nconst TRANSLATIONS = {\n  EMAIL_SUBJECT_NAME: t('Email subject name (optional)'),\n  EMAIL_SUBJECT_ERROR_TEXT: t('Please enter valid text. Spaces alone are not permitted.')\n};\nexport const NotificationMethod = ({ setting = null, index, onUpdate, onRemove, onInputChange, email_subject, defaultSubject, setErrorSubject }) => {\n  const { method, recipients, options } = setting || {};\n  const [recipientValue, setRecipientValue] = useState(recipients || '');\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n  if (!setting) {\n    return null;\n  }\n  const onMethodChange = (method) => {\n    // Since we're swapping the method, reset the recipients\n    setRecipientValue('');\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        method,\n        recipients: ''\n      };\n      onUpdate(index, updatedSetting);\n    }\n  };\n  const onRecipientsChange = (event) => {\n    const { target } = event;\n    setRecipientValue(target.value);\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        recipients: target.value\n      };\n      onUpdate(index, updatedSetting);\n    }\n  };\n  const onSubjectChange = (event) => {\n    const { value } = event.target;\n    if (onInputChange) {\n      onInputChange(event);\n    }\n    const hasError = value.length > 0 && value.trim().length === 0;\n    setError(hasError);\n    if (setErrorSubject) {\n      setErrorSubject(hasError);\n    }\n  };\n  // Set recipients\n  if (!!recipients && recipientValue !== recipients) {\n    setRecipientValue(recipients);\n  }\n  return ___EmotionJSX(StyledNotificationMethod, null,\n  ___EmotionJSX(\"div\", { className: \"inline-container\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" }, t('Notification Method')),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(Select, { ariaLabel: t('Delivery method'), \"data-test\": \"select-delivery-method\", onChange: onMethodChange, placeholder: t('Select Delivery Method'), options: (options || []).map((method) => ({\n      label: method,\n      value: method\n    })), value: method }),\n  index !== 0 && !!onRemove ? ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"delete-button\", onClick: () => onRemove(index) },\n  ___EmotionJSX(Icons.Trash, { iconColor: theme.colors.grayscale.base })\n  ) : null\n  )\n  )\n  ),\n  method !== undefined ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", { className: \"inline-container\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  method === 'Email' ? ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  TRANSLATIONS.EMAIL_SUBJECT_NAME\n  ),\n  ___EmotionJSX(\"div\", { className: `input-container ${error ? 'error' : ''}` },\n  ___EmotionJSX(\"input\", { type: \"text\", name: \"email_subject\", value: email_subject, placeholder: defaultSubject, onChange: onSubjectChange })\n  ),\n  error && ___EmotionJSX(\"div\", { style: {\n      color: theme.colors.error.base,\n      fontSize: theme.gridUnit * 3\n    } },\n  TRANSLATIONS.EMAIL_SUBJECT_ERROR_TEXT\n  )\n  ) : null\n  )\n  ),\n  ___EmotionJSX(\"div\", { className: \"inline-container\" },\n  ___EmotionJSX(StyledInputContainer, null,\n  ___EmotionJSX(\"div\", { className: \"control-label\" },\n  t('%s recipients', method),\n  ___EmotionJSX(\"span\", { className: \"required\" }, \"*\")\n  ),\n  ___EmotionJSX(\"div\", { className: \"input-container\" },\n  ___EmotionJSX(\"textarea\", { name: \"recipients\", \"data-test\": \"recipients\", value: recipientValue, onChange: onRecipientsChange })\n  ),\n  ___EmotionJSX(\"div\", { className: \"helper\" },\n  t('Recipients are separated by \",\" or \";\"')\n  )\n  )\n  )\n  ) : null\n  );\n};__signature__(NotificationMethod, \"useState{[recipientValue, setRecipientValue](recipients || '')}\\nuseState{[error, setError](false)}\\nuseTheme{theme}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledNotificationMethod, \"StyledNotificationMethod\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/NotificationMethod.tsx\");reactHotLoader.register(TRANSLATIONS, \"TRANSLATIONS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/NotificationMethod.tsx\");reactHotLoader.register(NotificationMethod, \"NotificationMethod\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/NotificationMethod.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","styled","t","useTheme","Select","Icons","StyledInputContainer","jsx","___EmotionJSX","StyledNotificationMethod","div","theme","colors","error","base","TRANSLATIONS","EMAIL_SUBJECT_NAME","EMAIL_SUBJECT_ERROR_TEXT","NotificationMethod","setting","index","onUpdate","onRemove","onInputChange","email_subject","defaultSubject","setErrorSubject","method","recipients","options","recipientValue","setRecipientValue","setError","onMethodChange","updatedSetting","onRecipientsChange","event","target","value","onSubjectChange","hasError","length","trim","className","ariaLabel","onChange","placeholder","map","label","role","tabIndex","onClick","Trash","iconColor","grayscale","undefined","Fragment","type","name","style","color","fontSize","gridUnit","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/features/alerts/components/NotificationMethod.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption, NotificationSetting } from '../types';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nconst StyledNotificationMethod = styled.div`\n  margin-bottom: 10px;\n\n  .input-container {\n    textarea {\n      height: auto;\n    }\n\n    &.error {\n      input {\n        border-color: ${({ theme }) => theme.colors.error.base};\n      }\n    }\n  }\n\n  .inline-container {\n    margin-bottom: 10px;\n\n    > div {\n      margin: 0;\n    }\n\n    .delete-button {\n      margin-left: 10px;\n      padding-top: 3px;\n    }\n  }\n`;\n\ninterface NotificationMethodProps {\n  setting?: NotificationSetting | null;\n  index: number;\n  onUpdate?: (index: number, updatedSetting: NotificationSetting) => void;\n  onRemove?: (index: number) => void;\n  onInputChange?: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => void;\n  email_subject: string;\n  defaultSubject: string;\n  setErrorSubject: (hasError: boolean) => void;\n}\n\nconst TRANSLATIONS = {\n  EMAIL_SUBJECT_NAME: t('Email subject name (optional)'),\n  EMAIL_SUBJECT_ERROR_TEXT: t(\n    'Please enter valid text. Spaces alone are not permitted.',\n  ),\n};\n\nexport const NotificationMethod: FunctionComponent<NotificationMethodProps> = ({\n  setting = null,\n  index,\n  onUpdate,\n  onRemove,\n  onInputChange,\n  email_subject,\n  defaultSubject,\n  setErrorSubject,\n}) => {\n  const { method, recipients, options } = setting || {};\n  const [recipientValue, setRecipientValue] = useState<string>(\n    recipients || '',\n  );\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  if (!setting) {\n    return null;\n  }\n\n  const onMethodChange = (method: NotificationMethodOption) => {\n    // Since we're swapping the method, reset the recipients\n    setRecipientValue('');\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        method,\n        recipients: '',\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  const onRecipientsChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    setRecipientValue(target.value);\n\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        recipients: target.value,\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  const onSubjectChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const { value } = event.target;\n\n    if (onInputChange) {\n      onInputChange(event);\n    }\n\n    const hasError = value.length > 0 && value.trim().length === 0;\n    setError(hasError);\n    if (setErrorSubject) {\n      setErrorSubject(hasError);\n    }\n  };\n\n  // Set recipients\n  if (!!recipients && recipientValue !== recipients) {\n    setRecipientValue(recipients);\n  }\n\n  return (\n    <StyledNotificationMethod>\n      <div className=\"inline-container\">\n        <StyledInputContainer>\n          <div className=\"control-label\">{t('Notification Method')}</div>\n          <div className=\"input-container\">\n            <Select\n              ariaLabel={t('Delivery method')}\n              data-test=\"select-delivery-method\"\n              onChange={onMethodChange}\n              placeholder={t('Select Delivery Method')}\n              options={(options || []).map(\n                (method: NotificationMethodOption) => ({\n                  label: method,\n                  value: method,\n                }),\n              )}\n              value={method}\n            />\n            {index !== 0 && !!onRemove ? (\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"delete-button\"\n                onClick={() => onRemove(index)}\n              >\n                <Icons.Trash iconColor={theme.colors.grayscale.base} />\n              </span>\n            ) : null}\n          </div>\n        </StyledInputContainer>\n      </div>\n      {method !== undefined ? (\n        <>\n          <div className=\"inline-container\">\n            <StyledInputContainer>\n              {method === 'Email' ? (\n                <>\n                  <div className=\"control-label\">\n                    {TRANSLATIONS.EMAIL_SUBJECT_NAME}\n                  </div>\n                  <div className={`input-container ${error ? 'error' : ''}`}>\n                    <input\n                      type=\"text\"\n                      name=\"email_subject\"\n                      value={email_subject}\n                      placeholder={defaultSubject}\n                      onChange={onSubjectChange}\n                    />\n                  </div>\n                  {error && (\n                    <div\n                      style={{\n                        color: theme.colors.error.base,\n                        fontSize: theme.gridUnit * 3,\n                      }}\n                    >\n                      {TRANSLATIONS.EMAIL_SUBJECT_ERROR_TEXT}\n                    </div>\n                  )}\n                </>\n              ) : null}\n            </StyledInputContainer>\n          </div>\n          <div className=\"inline-container\">\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {t('%s recipients', method)}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <textarea\n                  name=\"recipients\"\n                  data-test=\"recipients\"\n                  value={recipientValue}\n                  onChange={onRecipientsChange}\n                />\n              </div>\n              <div className=\"helper\">\n                {t('Recipients are separated by \",\" or \";\"')}\n              </div>\n            </StyledInputContainer>\n          </div>\n        </>\n      ) : null}\n    </StyledNotificationMethod>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}