{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { getInitialDataMask } from './reducer';\nexport const CLEAR_DATA_MASK_STATE = 'CLEAR_DATA_MASK_STATE';\nexport const UPDATE_DATA_MASK = 'UPDATE_DATA_MASK';\nexport const INIT_DATAMASK = 'INIT_DATAMASK';\nexport const SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE = 'SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE';\nexport const SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL = 'SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL';\nexport function setDataMaskForFilterConfigComplete(filterConfig, filters) {\n  return {\n    type: SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE,\n    filterConfig,\n    filters\n  };\n}\nexport function updateDataMask(filterId, dataMask) {\n  return {\n    type: UPDATE_DATA_MASK,\n    filterId,\n    dataMask\n  };\n}\nexport function clearDataMask(filterId) {\n  return updateDataMask(filterId, getInitialDataMask(filterId));\n}\nexport function clearDataMaskState() {\n  return {\n    type: CLEAR_DATA_MASK_STATE\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CLEAR_DATA_MASK_STATE, \"CLEAR_DATA_MASK_STATE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(UPDATE_DATA_MASK, \"UPDATE_DATA_MASK\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(INIT_DATAMASK, \"INIT_DATAMASK\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE, \"SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL, \"SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(setDataMaskForFilterConfigComplete, \"setDataMaskForFilterConfigComplete\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(updateDataMask, \"updateDataMask\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(clearDataMask, \"clearDataMask\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");reactHotLoader.register(clearDataMaskState, \"clearDataMaskState\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getInitialDataMask","CLEAR_DATA_MASK_STATE","UPDATE_DATA_MASK","INIT_DATAMASK","SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE","SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL","setDataMaskForFilterConfigComplete","filterConfig","filters","type","updateDataMask","filterId","dataMask","clearDataMask","clearDataMaskState","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dataMask/actions.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DataMask, FilterConfiguration, Filters } from '@superset-ui/core';\nimport { getInitialDataMask } from './reducer';\n\nexport const CLEAR_DATA_MASK_STATE = 'CLEAR_DATA_MASK_STATE';\nexport interface ClearDataMaskState {\n  type: typeof CLEAR_DATA_MASK_STATE;\n}\n\nexport const UPDATE_DATA_MASK = 'UPDATE_DATA_MASK';\nexport interface UpdateDataMask {\n  type: typeof UPDATE_DATA_MASK;\n  filterId: string | number;\n  dataMask: DataMask;\n}\n\nexport const INIT_DATAMASK = 'INIT_DATAMASK';\nexport interface INITDATAMASK {\n  type: typeof INIT_DATAMASK;\n  dataMask: DataMask;\n}\n\nexport const SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE =\n  'SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE';\n\nexport interface SetDataMaskForFilterConfigComplete {\n  type: typeof SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE;\n  filterConfig: FilterConfiguration;\n  filters?: Filters;\n}\n\nexport const SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL =\n  'SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL';\n\nexport interface SetDataMaskForFilterConfigFail {\n  type: typeof SET_DATA_MASK_FOR_FILTER_CONFIG_FAIL;\n  filterConfig: FilterConfiguration;\n}\nexport function setDataMaskForFilterConfigComplete(\n  filterConfig: FilterConfiguration,\n  filters?: Filters,\n): SetDataMaskForFilterConfigComplete {\n  return {\n    type: SET_DATA_MASK_FOR_FILTER_CONFIG_COMPLETE,\n    filterConfig,\n    filters,\n  };\n}\nexport function updateDataMask(\n  filterId: string | number,\n  dataMask: DataMask,\n): UpdateDataMask {\n  return {\n    type: UPDATE_DATA_MASK,\n    filterId,\n    dataMask,\n  };\n}\n\nexport function clearDataMask(filterId: string | number) {\n  return updateDataMask(filterId, getInitialDataMask(filterId));\n}\n\nexport function clearDataMaskState(): ClearDataMaskState {\n  return {\n    type: CLEAR_DATA_MASK_STATE,\n  };\n}\n\nexport type AnyDataMaskAction =\n  | ClearDataMaskState\n  | UpdateDataMask\n  | SetDataMaskForFilterConfigFail\n  | SetDataMaskForFilterConfigComplete;\n"],"mappings":"uSAmBA,SAASA,kBAAkB,QAAQ,WAAW;AAE9C,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAK5D,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAOlD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAM5C,OAAO,MAAMC,wCAAwC,GACnD,0CAA0C;AAQ5C,OAAO,MAAMC,oCAAoC,GAC/C,sCAAsC;AAMxC,OAAM,SAAUC,kCAAkCA,CAChDC,YAAiC,EACjCC,OAAiB;EAEjB,OAAO;IACLC,IAAI,EAAEL,wCAAwC;IAC9CG,YAAY;IACZC;GACD;AACH;AACA,OAAM,SAAUE,cAAcA,CAC5BC,QAAyB,EACzBC,QAAkB;EAElB,OAAO;IACLH,IAAI,EAAEP,gBAAgB;IACtBS,QAAQ;IACRC;GACD;AACH;AAEA,OAAM,SAAUC,aAAaA,CAACF,QAAyB;EACrD,OAAOD,cAAc,CAACC,QAAQ,EAAEX,kBAAkB,CAACW,QAAQ,CAAC,CAAC;AAC/D;AAEA,OAAM,SAAUG,kBAAkBA,CAAA;EAChC,OAAO;IACLL,IAAI,EAAER;GACP;AACH,CAAC,mBAAAc,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA/DYlB,qBAAqB,6GAAAc,cAAA,CAAAI,QAAA,CAKrBjB,gBAAgB,wGAAAa,cAAA,CAAAI,QAAA,CAOhBhB,aAAa,qGAAAY,cAAA,CAAAI,QAAA,CAMbf,wCAAwC,gIAAAW,cAAA,CAAAI,QAAA,CASxCd,oCAAoC,4HAAAU,cAAA,CAAAI,QAAA,CAOjCb,kCAAkC,0HAAAS,cAAA,CAAAI,QAAA,CAUlCT,cAAc,sGAAAK,cAAA,CAAAI,QAAA,CAWdN,aAAa,qGAAAE,cAAA,CAAAI,QAAA,CAIbL,kBAAkB,kIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}