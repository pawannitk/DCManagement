{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef();\n  const [{ width, height }, setChartPanelSize] = useState({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = (ref.current.getBoundingClientRect == null ? void 0 : ref.current.getBoundingClientRect()) || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize\n  });\n  return {\n    ref,\n    observerRef,\n    width,\n    height\n  };\n}__signature__(useResizeDetectorByObserver, \"useRef{ref}\\nuseState{[{ width, height }, setChartPanelSize]({})}\\nuseCallback{onResize}\\nuseResizeDetector{{ ref: observerRef }}\", () => [useResizeDetector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useResizeDetectorByObserver, \"useResizeDetectorByObserver\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/useResizeDetectorByObserver.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useCallback","useRef","useResizeDetector","useResizeDetectorByObserver","ref","width","height","setChartPanelSize","onResize","current","getBoundingClientRect","observerRef","refreshMode","refreshRate","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/ExploreChartPanel/useResizeDetectorByObserver.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef<HTMLDivElement>();\n  const [{ width, height }, setChartPanelSize] = useState<{\n    width?: number;\n    height?: number;\n  }>({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = ref.current.getBoundingClientRect?.() || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize,\n  });\n\n  return {\n    ref,\n    observerRef,\n    width,\n    height,\n  };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACrD,SAASC,iBAAiB,QAAQ,uBAAuB;AAEzD,eAAc,SAAUC,2BAA2BA,CAAA;EACjD,MAAMC,GAAG,GAAGH,MAAM,EAAkB;EACpC,MAAM,CAAC,EAAEI,KAAK,EAAEC,MAAM,EAAE,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAGpD,EAAE,CAAC;EACN,MAAMS,QAAQ,GAAGR,WAAW,CAAC,MAAK;IAChC,IAAII,GAAG,CAACK,OAAO,EAAE;MACf,MAAM,EAAEJ,KAAK,EAAEC,MAAM,EAAE,GAAG,CAAAF,GAAG,CAACK,OAAO,CAACC,qBAAqB,oBAAjCN,GAAG,CAACK,OAAO,CAACC,qBAAqB,CAAE,CAAE,KAAI,EAAE;MACrEH,iBAAiB,CAAC,EAAEF,KAAK,EAAEC,MAAM,EAAE,CAAC;;EAExC,CAAC,EAAE,EAAE,CAAC;EACN,MAAM,EAAEF,GAAG,EAAEO,WAAW,EAAE,GAAGT,iBAAiB,CAAC;IAC7CU,WAAW,EAAE,UAAU;IACvBC,WAAW,EAAE,GAAG;IAChBL;GACD,CAAC;EAEF,OAAO;IACLJ,GAAG;IACHO,WAAW;IACXN,KAAK;IACLC;GACD;AACH,CAACQ,aAAA,CAxBuBX,2BAA2B,8IAYpBD,iBAAiB,sBAAAa,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAZxBhB,2BAA2B,2LAAAiB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}