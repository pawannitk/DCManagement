{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport View from './view';\nimport OrthographicViewport from '../viewports/orthographic-viewport';\nimport OrthographicController from '../controllers/orthographic-controller';\nexport default class OrthographicView extends View {\n  get ViewportType() {\n    return OrthographicViewport;\n  }\n\n  get ControllerType() {\n    return OrthographicController;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\n_defineProperty(OrthographicView, \"displayName\", 'OrthographicView');;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OrthographicView, \"OrthographicView\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/core/dist/esm/views/orthographic-view.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["View","OrthographicViewport","OrthographicController","OrthographicView","ViewportType","ControllerType","__reactstandin__regenerateByEval","key","code","eval","leaveModule","reactHotLoaderGlobal","undefined","module"],"sources":["../../../src/views/orthographic-view.ts"],"sourcesContent":["import View, {CommonViewState} from './view';\nimport OrthographicViewport from '../viewports/orthographic-viewport';\nimport OrthographicController from '../controllers/orthographic-controller';\n\nexport type OrthographicViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number] | [number, number];\n  /**  The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large.\n   *   To apply independent zoom levels to the X and Y axes, supply an array `[zoomX, zoomY]`. Default `0`. */\n  zoom?: number | [number, number];\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n} & CommonViewState;\n\ntype OrthographicViewProps = {\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to use top-left coordinates (`true`) or bottom-left coordinates (`false`). Default `true`. */\n  flipY?: boolean;\n};\n\nexport default class OrthographicView extends View<OrthographicViewState, OrthographicViewProps> {\n  static displayName = 'OrthographicView';\n\n  get ViewportType() {\n    return OrthographicViewport;\n  }\n\n  get ControllerType() {\n    return OrthographicController;\n  }\n}\n"],"mappings":";AAAA,OAAOA,IAAP,MAAoC,QAApC;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AAuBA,eAAe,MAAMC,gBAAN,SAA+BH,IAA/B,CAAkF;EAG/E,IAAZI,YAAYA,CAAA,EAAG;IACjB,OAAOH,oBAAP;EACD;;EAEiB,IAAdI,cAAcA,CAAA,EAAG;IACnB,OAAOH,sBAAP;EACD;EAAAI,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,GAT8F;;gBAA5EL,gB,iBACE,kB,mLADFA,gBAAN,0MAAAO,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}