{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { interpolateRgb, piecewise, quantize } from 'd3-interpolate';\nimport { scaleSequential, scaleLinear } from 'd3-scale';\nimport SchemeWrapper from './SchemeWrapper';\n\nfunction isArrayOfArray(x) {\n  return Array.isArray(x[x.length - 1]);\n}\n\nexport default class ContinuousSchemeWrapper extends SchemeWrapper {\n  get colors() {\n    if ('colors' in this.scheme && typeof this.scheme.colors !== 'undefined') {\n      return this.scheme.colors;\n    }\n\n    return this.getColors();\n  }\n\n  get interpolator() {\n    if ('interpolator' in this.scheme && typeof this.scheme.interpolator !== 'undefined') {\n      return this.scheme.interpolator;\n    }\n\n    const colors = this.scheme.colors;\n    return piecewise(interpolateRgb, (isArrayOfArray(colors) ? colors[colors.length - 1] : colors).slice());\n  }\n  /**\n   * Get colors from this scheme\n   * @param numColors number of colors to return.\n   * Will interpolate the current scheme to match the number of colors requested\n   * @param extent The extent of the color range to use.\n   * For example [0.2, 1] will rescale the color scheme\n   * such that color values in the range [0, 0.2) are excluded from the scheme.\n   */\n\n\n  getColors(numColors = 2, extent = [0, 1]) {\n    if ('colors' in this.scheme && typeof this.scheme.colors !== 'undefined' && extent[0] === 0 && extent[1] === 1) {\n      const {\n        colors\n      } = this.scheme;\n\n      if (isArrayOfArray(colors)) {\n        if (typeof colors[numColors] !== 'undefined') {\n          return colors[numColors].slice();\n        }\n      } else if (numColors === colors.length) {\n        return colors.slice();\n      }\n    }\n\n    const {\n      interpolator\n    } = this;\n    const adjustExtent = scaleLinear().range(extent).clamp(true);\n    return quantize((t) => interpolator(adjustExtent(t)), numColors);\n  }\n\n  createScaleLinear() {\n    // The manual casting is necessary until @types/d3-scale is corrected\n    // In recent version of d3-scale the output from scaleSequential is compatible with linear scale\n    // (It has .range(),  ...)\n    return scaleSequential(this.interpolator);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isArrayOfArray, \"isArrayOfArray\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/ContinuousSchemeWrapper.js\");reactHotLoader.register(ContinuousSchemeWrapper, \"ContinuousSchemeWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/ContinuousSchemeWrapper.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["interpolateRgb","piecewise","quantize","scaleSequential","scaleLinear","SchemeWrapper","isArrayOfArray","x","Array","isArray","length","ContinuousSchemeWrapper","colors","scheme","getColors","interpolator","slice","numColors","extent","adjustExtent","range","clamp","t","createScaleLinear","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/node_modules/@encodable/color/esm/scheme/wrappers/ContinuousSchemeWrapper.js"],"sourcesContent":["import { interpolateRgb, piecewise, quantize } from 'd3-interpolate';\nimport { scaleSequential, scaleLinear } from 'd3-scale';\nimport SchemeWrapper from './SchemeWrapper';\n\nfunction isArrayOfArray(x) {\n  return Array.isArray(x[x.length - 1]);\n}\n\nexport default class ContinuousSchemeWrapper extends SchemeWrapper {\n  get colors() {\n    if ('colors' in this.scheme && typeof this.scheme.colors !== 'undefined') {\n      return this.scheme.colors;\n    }\n\n    return this.getColors();\n  }\n\n  get interpolator() {\n    if ('interpolator' in this.scheme && typeof this.scheme.interpolator !== 'undefined') {\n      return this.scheme.interpolator;\n    }\n\n    const colors = this.scheme.colors;\n    return piecewise(interpolateRgb, (isArrayOfArray(colors) ? colors[colors.length - 1] : colors).slice());\n  }\n  /**\n   * Get colors from this scheme\n   * @param numColors number of colors to return.\n   * Will interpolate the current scheme to match the number of colors requested\n   * @param extent The extent of the color range to use.\n   * For example [0.2, 1] will rescale the color scheme\n   * such that color values in the range [0, 0.2) are excluded from the scheme.\n   */\n\n\n  getColors(numColors = 2, extent = [0, 1]) {\n    if ('colors' in this.scheme && typeof this.scheme.colors !== 'undefined' && extent[0] === 0 && extent[1] === 1) {\n      const {\n        colors\n      } = this.scheme;\n\n      if (isArrayOfArray(colors)) {\n        if (typeof colors[numColors] !== 'undefined') {\n          return colors[numColors].slice();\n        }\n      } else if (numColors === colors.length) {\n        return colors.slice();\n      }\n    }\n\n    const {\n      interpolator\n    } = this;\n    const adjustExtent = scaleLinear().range(extent).clamp(true);\n    return quantize(t => interpolator(adjustExtent(t)), numColors);\n  }\n\n  createScaleLinear() {\n    // The manual casting is necessary until @types/d3-scale is corrected\n    // In recent version of d3-scale the output from scaleSequential is compatible with linear scale\n    // (It has .range(),  ...)\n    return scaleSequential(this.interpolator);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}