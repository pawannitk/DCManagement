{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst StyledInput = styled(Input)`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  height: 26px;\n  padding-left: ${({ theme }) => theme.gridUnit * 2.5}px;\n`;\n\nexport const DndColumnSelectPopoverTitle = ({\n  title,\n  onChange,\n  isEditDisabled,\n  hasCustomLabel\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseOut = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  const onClick = useCallback(() => {\n    setIsEditMode(true);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    setIsEditMode(false);\n  }, []);\n\n  const onInputBlur = useCallback(\n    (e) => {\n      if (e.target.value === '') {\n        onChange(e);\n      }\n      onBlur();\n    },\n    [onBlur, onChange]\n  );\n\n  const defaultLabel = t('My column');\n\n  if (isEditDisabled) {\n    return ___EmotionJSX(\"span\", null, title || defaultLabel);\n  }\n\n  return isEditMode ?\n  ___EmotionJSX(StyledInput, {\n    type: \"text\",\n    placeholder: title,\n    value: hasCustomLabel ? title : '',\n    autoFocus: true,\n    onChange: onChange,\n    onBlur: onInputBlur }\n  ) :\n\n  ___EmotionJSX(Tooltip, { placement: \"top\", title: t('Click to edit label') },\n  ___EmotionJSX(\"span\", {\n    className: \"AdhocMetricEditPopoverTitle inline-editable\",\n    \"data-test\": \"AdhocMetricEditTitle#trigger\",\n    onMouseOver: onMouseOver,\n    onMouseOut: onMouseOut,\n    onClick: onClick,\n    onBlur: onBlur,\n    role: \"button\",\n    tabIndex: 0 },\n\n  title || defaultLabel, \"\\xA0\",\n\n  ___EmotionJSX(\"i\", {\n    className: \"fa fa-pencil\",\n    style: { color: isHovered ? 'black' : 'grey' } }\n  )\n  )\n  );\n\n};__signature__(DndColumnSelectPopoverTitle, \"useState{[isHovered, setIsHovered](false)}\\nuseState{[isEditMode, setIsEditMode](false)}\\nuseCallback{onMouseOver}\\nuseCallback{onMouseOut}\\nuseCallback{onClick}\\nuseCallback{onBlur}\\nuseCallback{onInputBlur}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledInput, \"StyledInput\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndColumnSelectPopoverTitle.jsx\");reactHotLoader.register(DndColumnSelectPopoverTitle, \"DndColumnSelectPopoverTitle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndColumnSelectPopoverTitle.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useState","t","styled","Input","Tooltip","jsx","___EmotionJSX","StyledInput","theme","borderRadius","gridUnit","DndColumnSelectPopoverTitle","title","onChange","isEditDisabled","hasCustomLabel","isHovered","setIsHovered","isEditMode","setIsEditMode","onMouseOver","onMouseOut","onClick","onBlur","onInputBlur","e","target","value","defaultLabel","type","placeholder","autoFocus","placement","className","role","tabIndex","style","color","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndColumnSelectPopoverTitle.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useState } from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledInput = styled(Input)`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  height: 26px;\n  padding-left: ${({ theme }) => theme.gridUnit * 2.5}px;\n`;\n\nexport const DndColumnSelectPopoverTitle = ({\n  title,\n  onChange,\n  isEditDisabled,\n  hasCustomLabel,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseOut = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  const onClick = useCallback(() => {\n    setIsEditMode(true);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    setIsEditMode(false);\n  }, []);\n\n  const onInputBlur = useCallback(\n    e => {\n      if (e.target.value === '') {\n        onChange(e);\n      }\n      onBlur();\n    },\n    [onBlur, onChange],\n  );\n\n  const defaultLabel = t('My column');\n\n  if (isEditDisabled) {\n    return <span>{title || defaultLabel}</span>;\n  }\n\n  return isEditMode ? (\n    <StyledInput\n      type=\"text\"\n      placeholder={title}\n      value={hasCustomLabel ? title : ''}\n      autoFocus\n      onChange={onChange}\n      onBlur={onInputBlur}\n    />\n  ) : (\n    <Tooltip placement=\"top\" title={t('Click to edit label')}>\n      <span\n        className=\"AdhocMetricEditPopoverTitle inline-editable\"\n        data-test=\"AdhocMetricEditTitle#trigger\"\n        onMouseOver={onMouseOver}\n        onMouseOut={onMouseOut}\n        onClick={onClick}\n        onBlur={onBlur}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {title || defaultLabel}\n        &nbsp;\n        <i\n          className=\"fa fa-pencil\"\n          style={{ color: isHovered ? 'black' : 'grey' }}\n        />\n      </span>\n    </Tooltip>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}