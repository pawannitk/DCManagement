{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * @param key The name of the row's attribute used to compare values for alphabetical sorting\n * @param a First row object to compare\n * @param b Second row object to compare\n * @returns number\n */\nexport const alphabeticalSort = (key, a, b) => {var _a$key;return a == null ? void 0 : (_a$key = a[key]) == null ? void 0 : _a$key.localeCompare == null ? void 0 : _a$key.localeCompare(b == null ? void 0 : b[key]);};\n/**\n * @param key The name of the row's attribute used to compare values for numerical sorting\n * @param a First row object to compare\n * @param b Second row object to compare\n * @returns number\n */\nexport const numericalSort = (key, a, b) => (a == null ? void 0 : a[key]) - (b == null ? void 0 : b[key]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(alphabeticalSort, \"alphabeticalSort\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/sorters.ts\");reactHotLoader.register(numericalSort, \"numericalSort\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/sorters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["alphabeticalSort","key","a","b","_a$key","localeCompare","numericalSort","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/Table/sorters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * @param key The name of the row's attribute used to compare values for alphabetical sorting\n * @param a First row object to compare\n * @param b Second row object to compare\n * @returns number\n */\nexport const alphabeticalSort = (key: string, a: object, b: object): number =>\n  a?.[key]?.localeCompare?.(b?.[key]);\n\n/**\n * @param key The name of the row's attribute used to compare values for numerical sorting\n * @param a First row object to compare\n * @param b Second row object to compare\n * @returns number\n */\nexport const numericalSort = (key: string, a: object, b: object): number =>\n  a?.[key] - b?.[key];\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAMA,OAAO,MAAMA,gBAAgB,GAAGA,CAACC,GAAW,EAAEC,CAAS,EAAEC,CAAS,UAAAC,MAAA,QAChEF,CAAC,qBAAAE,MAAA,GAADF,CAAC,CAAGD,GAAG,CAAC,qBAARG,MAAA,CAAUC,aAAa,oBAAvBD,MAAA,CAAUC,aAAa,CAAGF,CAAC,oBAADA,CAAC,CAAGF,GAAG,CAAC,CAAC;AAErC;;;;;;AAMA,OAAO,MAAMK,aAAa,GAAGA,CAACL,GAAW,EAAEC,CAAS,EAAEC,CAAS,KAC7D,CAAAD,CAAC,oBAADA,CAAC,CAAGD,GAAG,CAAC,KAAGE,CAAC,oBAADA,CAAC,CAAGF,GAAG,CAAC,EAAC,mBAAAM,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAVTX,gBAAgB,gHAAAO,cAAA,CAAAI,QAAA,CAShBL,aAAa,qIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}