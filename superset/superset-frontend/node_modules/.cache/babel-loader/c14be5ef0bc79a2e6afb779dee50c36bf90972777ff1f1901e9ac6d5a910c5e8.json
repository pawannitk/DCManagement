{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\n\nimport { SupersetClient, usePrevious } from '@superset-ui/core';\nimport { DeckGLContainerStyledWrapper } from '../DeckGLContainer';\nimport { getExploreLongUrl } from '../utils/explore';\nimport layerGenerators from '../layers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DeckMulti = (props) => {\n  const containerRef = useRef();\n  const [viewport, setViewport] = useState();\n  const [subSlicesLayers, setSubSlicesLayers] = useState({});\n  const setTooltip = useCallback((tooltip) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n  const loadLayers = useCallback((formData, payload, viewport) => {\n    setViewport(viewport);\n    setSubSlicesLayers({});\n    payload.data.slices.forEach((subslice) => {\n      // Filters applied to multi_deck are passed down to underlying charts\n      // note that dashboard contextual information (filter_immune_slices and such) aren't\n      // taken into consideration here\n      const filters = [\n      ...(subslice.form_data.filters || []),\n      ...(formData.filters || []),\n      ...(formData.extra_filters || [])];\n\n      const subsliceCopy = {\n        ...subslice,\n        form_data: {\n          ...subslice.form_data,\n          filters\n        }\n      };\n      const url = getExploreLongUrl(subsliceCopy.form_data, 'json');\n      if (url) {\n        SupersetClient.get({\n          endpoint: url\n        }).\n        then(({ json }) => {\n          const layer = layerGenerators[subsliceCopy.form_data.viz_type](subsliceCopy.form_data, json, props.onAddFilter, setTooltip, props.datasource, [], props.onSelect);\n          setSubSlicesLayers((subSlicesLayers) => ({\n            ...subSlicesLayers,\n            [subsliceCopy.slice_id]: layer\n          }));\n        }).\n        catch(() => {});\n      }\n    });\n  }, [props.datasource, props.onAddFilter, props.onSelect, setTooltip]);\n  const prevDeckSlices = usePrevious(props.formData.deck_slices);\n  useEffect(() => {\n    const { formData, payload } = props;\n    const hasChanges = !_isEqual(prevDeckSlices, formData.deck_slices);\n    if (hasChanges) {\n      loadLayers(formData, payload);\n    }\n  }, [loadLayers, prevDeckSlices, props]);\n  const { payload, formData, setControlValue, height, width } = props;\n  const layers = Object.values(subSlicesLayers);\n  return ___EmotionJSX(DeckGLContainerStyledWrapper, { ref: containerRef, mapboxApiAccessToken: payload.data.mapboxApiKey, viewport: viewport || props.viewport, layers: layers, mapStyle: formData.mapbox_style, setControlValue: setControlValue, onViewportChange: setViewport, height: height, width: width });\n};__signature__(DeckMulti, \"useRef{containerRef}\\nuseState{[viewport, setViewport]}\\nuseState{[subSlicesLayers, setSubSlicesLayers]({})}\\nuseCallback{setTooltip}\\nuseCallback{loadLayers}\\nusePrevious{prevDeckSlices}\\nuseEffect{}\", () => [usePrevious]);const _default = /*#__PURE__*/\nmemo(DeckMulti);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DeckMulti, \"DeckMulti\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/Multi/Multi.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/Multi/Multi.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","memo","useCallback","useEffect","useRef","useState","SupersetClient","usePrevious","DeckGLContainerStyledWrapper","getExploreLongUrl","layerGenerators","jsx","___EmotionJSX","DeckMulti","props","containerRef","viewport","setViewport","subSlicesLayers","setSubSlicesLayers","setTooltip","tooltip","current","loadLayers","formData","payload","data","slices","forEach","subslice","filters","form_data","extra_filters","subsliceCopy","url","get","endpoint","then","json","layer","viz_type","onAddFilter","datasource","onSelect","slice_id","catch","prevDeckSlices","deck_slices","hasChanges","_isEqual","setControlValue","height","width","layers","Object","values","ref","mapboxApiAccessToken","mapboxApiKey","mapStyle","mapbox_style","onViewportChange","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/Multi/Multi.tsx"],"sourcesContent":["/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { isEqual } from 'lodash';\nimport {\n  Datasource,\n  HandlerFunction,\n  JsonObject,\n  JsonValue,\n  QueryFormData,\n  SupersetClient,\n  usePrevious,\n} from '@superset-ui/core';\nimport { Layer } from 'deck.gl/typed';\n\nimport {\n  DeckGLContainerHandle,\n  DeckGLContainerStyledWrapper,\n} from '../DeckGLContainer';\nimport { getExploreLongUrl } from '../utils/explore';\nimport layerGenerators from '../layers';\nimport { Viewport } from '../utils/fitViewport';\nimport { TooltipProps } from '../components/Tooltip';\n\nexport type DeckMultiProps = {\n  formData: QueryFormData;\n  payload: JsonObject;\n  setControlValue: (control: string, value: JsonValue) => void;\n  viewport: Viewport;\n  onAddFilter: HandlerFunction;\n  height: number;\n  width: number;\n  datasource: Datasource;\n  onSelect: () => void;\n};\n\nconst DeckMulti = (props: DeckMultiProps) => {\n  const containerRef = useRef<DeckGLContainerHandle>();\n\n  const [viewport, setViewport] = useState<Viewport>();\n  const [subSlicesLayers, setSubSlicesLayers] = useState<Record<number, Layer>>(\n    {},\n  );\n\n  const setTooltip = useCallback((tooltip: TooltipProps['tooltip']) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n\n  const loadLayers = useCallback(\n    (formData: QueryFormData, payload: JsonObject, viewport?: Viewport) => {\n      setViewport(viewport);\n      setSubSlicesLayers({});\n      payload.data.slices.forEach(\n        (subslice: { slice_id: number } & JsonObject) => {\n          // Filters applied to multi_deck are passed down to underlying charts\n          // note that dashboard contextual information (filter_immune_slices and such) aren't\n          // taken into consideration here\n          const filters = [\n            ...(subslice.form_data.filters || []),\n            ...(formData.filters || []),\n            ...(formData.extra_filters || []),\n          ];\n          const subsliceCopy = {\n            ...subslice,\n            form_data: {\n              ...subslice.form_data,\n              filters,\n            },\n          };\n\n          const url = getExploreLongUrl(subsliceCopy.form_data, 'json');\n\n          if (url) {\n            SupersetClient.get({\n              endpoint: url,\n            })\n              .then(({ json }) => {\n                const layer = layerGenerators[subsliceCopy.form_data.viz_type](\n                  subsliceCopy.form_data,\n                  json,\n                  props.onAddFilter,\n                  setTooltip,\n                  props.datasource,\n                  [],\n                  props.onSelect,\n                );\n                setSubSlicesLayers(subSlicesLayers => ({\n                  ...subSlicesLayers,\n                  [subsliceCopy.slice_id]: layer,\n                }));\n              })\n              .catch(() => {});\n          }\n        },\n      );\n    },\n    [props.datasource, props.onAddFilter, props.onSelect, setTooltip],\n  );\n\n  const prevDeckSlices = usePrevious(props.formData.deck_slices);\n  useEffect(() => {\n    const { formData, payload } = props;\n    const hasChanges = !isEqual(prevDeckSlices, formData.deck_slices);\n    if (hasChanges) {\n      loadLayers(formData, payload);\n    }\n  }, [loadLayers, prevDeckSlices, props]);\n\n  const { payload, formData, setControlValue, height, width } = props;\n  const layers = Object.values(subSlicesLayers);\n\n  return (\n    <DeckGLContainerStyledWrapper\n      ref={containerRef}\n      mapboxApiAccessToken={payload.data.mapboxApiKey}\n      viewport={viewport || props.viewport}\n      layers={layers}\n      mapStyle={formData.mapbox_style}\n      setControlValue={setControlValue}\n      onViewportChange={setViewport}\n      height={height}\n      width={width}\n    />\n  );\n};\n\nexport default memo(DeckMulti);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}