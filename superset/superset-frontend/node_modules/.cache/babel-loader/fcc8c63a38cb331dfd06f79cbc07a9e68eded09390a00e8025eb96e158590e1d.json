{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { TOOLTIP_OVERFLOW_MARGIN, TOOLTIP_POINTER_MARGIN } from '../constants';\nexport function getDefaultTooltip(refs) {\n  return {\n    appendToBody: true,\n    borderColor: 'transparent',\n    position: (canvasMousePos, params, tooltipDom, rect, sizes) => {var _refs$divRef, _refs$divRef$current;\n      // algorithm partially based on this snippet:\n      // https://github.com/apache/echarts/issues/5004#issuecomment-559668309\n      // The chart canvas position\n      const divRect = (_refs$divRef = refs.divRef) == null ? void 0 : (_refs$divRef$current = _refs$divRef.current) == null ? void 0 : _refs$divRef$current.getBoundingClientRect();\n      // The mouse coordinates relative to the whole window\n      // The first parameter to the position function is the mouse position relative to the canvas\n      const mouseX = canvasMousePos[0] + ((divRect == null ? void 0 : divRect.x) || 0);\n      const mouseY = canvasMousePos[1] + ((divRect == null ? void 0 : divRect.y) || 0);\n      // The width and height of the tooltip dom element\n      const tooltipWidth = sizes.contentSize[0];\n      const tooltipHeight = sizes.contentSize[1];\n      // Start by placing the tooltip top and right relative to the mouse position\n      let xPos = mouseX + TOOLTIP_POINTER_MARGIN;\n      let yPos = mouseY - TOOLTIP_POINTER_MARGIN - tooltipHeight;\n      // The tooltip is overflowing past the right edge of the window\n      if (xPos + tooltipWidth >= document.documentElement.clientWidth) {\n        // Attempt to place the tooltip to the left of the mouse position\n        xPos = mouseX - TOOLTIP_POINTER_MARGIN - tooltipWidth;\n        // The tooltip is overflowing past the left edge of the window\n        if (xPos <= 0)\n          // Place the tooltip a fixed distance from the left edge of the window\n          xPos = TOOLTIP_OVERFLOW_MARGIN;\n      }\n      // The tooltip is overflowing past the top edge of the window\n      if (yPos <= 0) {\n        // Attempt to place the tooltip to the bottom of the mouse position\n        yPos = mouseY + TOOLTIP_POINTER_MARGIN;\n        // The tooltip is overflowing past the bottom edge of the window\n        if (yPos + tooltipHeight >= document.documentElement.clientHeight)\n          // Place the tooltip a fixed distance from the top edge of the window\n          yPos = TOOLTIP_OVERFLOW_MARGIN;\n      }\n      // Return the position (converted back to a relative position on the canvas)\n      return [xPos - ((divRect == null ? void 0 : divRect.x) || 0), yPos - ((divRect == null ? void 0 : divRect.y) || 0)];\n    }\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDefaultTooltip, \"getDefaultTooltip\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/tooltip.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["TOOLTIP_OVERFLOW_MARGIN","TOOLTIP_POINTER_MARGIN","getDefaultTooltip","refs","appendToBody","borderColor","position","canvasMousePos","params","tooltipDom","rect","sizes","_refs$divRef","_refs$divRef$current","divRect","divRef","current","getBoundingClientRect","mouseX","x","mouseY","y","tooltipWidth","contentSize","tooltipHeight","xPos","yPos","document","documentElement","clientWidth","clientHeight","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/utils/tooltip.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CallbackDataParams } from 'echarts/types/src/util/types';\nimport { TOOLTIP_OVERFLOW_MARGIN, TOOLTIP_POINTER_MARGIN } from '../constants';\nimport { Refs } from '../types';\n\nexport function getDefaultTooltip(refs: Refs) {\n  return {\n    appendToBody: true,\n    borderColor: 'transparent',\n    position: (\n      canvasMousePos: [number, number],\n      params: CallbackDataParams,\n      tooltipDom: HTMLDivElement | null,\n      rect: any,\n      sizes: { contentSize: [number, number]; viewSize: [number, number] },\n    ) => {\n      // algorithm partially based on this snippet:\n      // https://github.com/apache/echarts/issues/5004#issuecomment-559668309\n\n      // The chart canvas position\n      const divRect = refs.divRef?.current?.getBoundingClientRect();\n\n      // The mouse coordinates relative to the whole window\n      // The first parameter to the position function is the mouse position relative to the canvas\n      const mouseX = canvasMousePos[0] + (divRect?.x || 0);\n      const mouseY = canvasMousePos[1] + (divRect?.y || 0);\n\n      // The width and height of the tooltip dom element\n      const tooltipWidth = sizes.contentSize[0];\n      const tooltipHeight = sizes.contentSize[1];\n\n      // Start by placing the tooltip top and right relative to the mouse position\n      let xPos = mouseX + TOOLTIP_POINTER_MARGIN;\n      let yPos = mouseY - TOOLTIP_POINTER_MARGIN - tooltipHeight;\n\n      // The tooltip is overflowing past the right edge of the window\n      if (xPos + tooltipWidth >= document.documentElement.clientWidth) {\n        // Attempt to place the tooltip to the left of the mouse position\n        xPos = mouseX - TOOLTIP_POINTER_MARGIN - tooltipWidth;\n\n        // The tooltip is overflowing past the left edge of the window\n        if (xPos <= 0)\n          // Place the tooltip a fixed distance from the left edge of the window\n          xPos = TOOLTIP_OVERFLOW_MARGIN;\n      }\n\n      // The tooltip is overflowing past the top edge of the window\n      if (yPos <= 0) {\n        // Attempt to place the tooltip to the bottom of the mouse position\n        yPos = mouseY + TOOLTIP_POINTER_MARGIN;\n\n        // The tooltip is overflowing past the bottom edge of the window\n        if (yPos + tooltipHeight >= document.documentElement.clientHeight)\n          // Place the tooltip a fixed distance from the top edge of the window\n          yPos = TOOLTIP_OVERFLOW_MARGIN;\n      }\n\n      // Return the position (converted back to a relative position on the canvas)\n      return [xPos - (divRect?.x || 0), yPos - (divRect?.y || 0)];\n    },\n  };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAoBA,SAASA,uBAAuB,EAAEC,sBAAsB,QAAQ,cAAc;AAG9E,OAAM,SAAUC,iBAAiBA,CAACC,IAAU;EAC1C,OAAO;IACLC,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE,aAAa;IAC1BC,QAAQ,EAAEA,CACRC,cAAgC,EAChCC,MAA0B,EAC1BC,UAAiC,EACjCC,IAAS,EACTC,KAAoE,KAClE,KAAAC,YAAA,EAAAC,oBAAA;MACF;MACA;MAEA;MACA,MAAMC,OAAO,IAAAF,YAAA,GAAGT,IAAI,CAACY,MAAM,sBAAAF,oBAAA,GAAXD,YAAA,CAAaI,OAAO,qBAApBH,oBAAA,CAAsBI,qBAAqB,EAAE;MAE7D;MACA;MACA,MAAMC,MAAM,GAAGX,cAAc,CAAC,CAAC,CAAC,IAAI,CAAAO,OAAO,oBAAPA,OAAO,CAAEK,CAAC,KAAI,CAAC,CAAC;MACpD,MAAMC,MAAM,GAAGb,cAAc,CAAC,CAAC,CAAC,IAAI,CAAAO,OAAO,oBAAPA,OAAO,CAAEO,CAAC,KAAI,CAAC,CAAC;MAEpD;MACA,MAAMC,YAAY,GAAGX,KAAK,CAACY,WAAW,CAAC,CAAC,CAAC;MACzC,MAAMC,aAAa,GAAGb,KAAK,CAACY,WAAW,CAAC,CAAC,CAAC;MAE1C;MACA,IAAIE,IAAI,GAAGP,MAAM,GAAGjB,sBAAsB;MAC1C,IAAIyB,IAAI,GAAGN,MAAM,GAAGnB,sBAAsB,GAAGuB,aAAa;MAE1D;MACA,IAAIC,IAAI,GAAGH,YAAY,IAAIK,QAAQ,CAACC,eAAe,CAACC,WAAW,EAAE;QAC/D;QACAJ,IAAI,GAAGP,MAAM,GAAGjB,sBAAsB,GAAGqB,YAAY;QAErD;QACA,IAAIG,IAAI,IAAI,CAAC;UACX;UACAA,IAAI,GAAGzB,uBAAuB;;MAGlC;MACA,IAAI0B,IAAI,IAAI,CAAC,EAAE;QACb;QACAA,IAAI,GAAGN,MAAM,GAAGnB,sBAAsB;QAEtC;QACA,IAAIyB,IAAI,GAAGF,aAAa,IAAIG,QAAQ,CAACC,eAAe,CAACE,YAAY;UAC/D;UACAJ,IAAI,GAAG1B,uBAAuB;;MAGlC;MACA,OAAO,CAACyB,IAAI,IAAI,CAAAX,OAAO,oBAAPA,OAAO,CAAEK,CAAC,KAAI,CAAC,CAAC,EAAEO,IAAI,IAAI,CAAAZ,OAAO,oBAAPA,OAAO,CAAEO,CAAC,KAAI,CAAC,CAAC,CAAC;IAC7D;GACD;AACH,CAAC,mBAAAU,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxDejC,iBAAiB,2JAAAkC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}