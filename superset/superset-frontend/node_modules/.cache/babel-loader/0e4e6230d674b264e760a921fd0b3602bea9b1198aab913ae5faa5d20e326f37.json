{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DTTM_ALIAS, getColumnLabel, isQueryFormColumn } from '@superset-ui/core';\nexport const isXAxisSet = (formData) => isQueryFormColumn(formData.x_axis);\nexport const getXAxisColumn = (formData) => {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!(formData.granularity_sqla || formData.x_axis)) {\n    return undefined;\n  }\n  if (isXAxisSet(formData)) {\n    return formData.x_axis;\n  }\n  return DTTM_ALIAS;\n};\nexport const getXAxisLabel = (formData) => {\n  const col = getXAxisColumn(formData);\n  if (col) {\n    return getColumnLabel(col);\n  }\n  return undefined;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isXAxisSet, \"isXAxisSet\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/getXAxis.ts\");reactHotLoader.register(getXAxisColumn, \"getXAxisColumn\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/getXAxis.ts\");reactHotLoader.register(getXAxisLabel, \"getXAxisLabel\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/getXAxis.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["DTTM_ALIAS","getColumnLabel","isQueryFormColumn","isXAxisSet","formData","x_axis","getXAxisColumn","granularity_sqla","undefined","getXAxisLabel","col","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/getXAxis.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DTTM_ALIAS,\n  getColumnLabel,\n  isQueryFormColumn,\n  QueryFormData,\n  QueryFormColumn,\n  Optional,\n} from '@superset-ui/core';\n\nexport const isXAxisSet = (formData: QueryFormData) =>\n  isQueryFormColumn(formData.x_axis);\n\nexport const getXAxisColumn = (\n  formData: QueryFormData,\n): Optional<QueryFormColumn> => {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!(formData.granularity_sqla || formData.x_axis)) {\n    return undefined;\n  }\n\n  if (isXAxisSet(formData)) {\n    return formData.x_axis;\n  }\n  return DTTM_ALIAS;\n};\n\nexport const getXAxisLabel = (formData: QueryFormData): Optional<string> => {\n  const col = getXAxisColumn(formData);\n  if (col) {\n    return getColumnLabel(col);\n  }\n  return undefined;\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,UAAU,EACVC,cAAc,EACdC,iBAAiB,QAIZ,mBAAmB;AAE1B,OAAO,MAAMC,UAAU,GAAGA,CAACC,QAAuB,KAChDF,iBAAiB,CAACE,QAAQ,CAACC,MAAM,CAAC;AAEpC,OAAO,MAAMC,cAAc,GAAGA,CAC5BF,QAAuB,KACM;EAC7B;EACA,IAAI,EAAEA,QAAQ,CAACG,gBAAgB,IAAIH,QAAQ,CAACC,MAAM,CAAC,EAAE;IACnD,OAAOG,SAAS;;EAGlB,IAAIL,UAAU,CAACC,QAAQ,CAAC,EAAE;IACxB,OAAOA,QAAQ,CAACC,MAAM;;EAExB,OAAOL,UAAU;AACnB,CAAC;AAED,OAAO,MAAMS,aAAa,GAAGA,CAACL,QAAuB,KAAsB;EACzE,MAAMM,GAAG,GAAGJ,cAAc,CAACF,QAAQ,CAAC;EACpC,IAAIM,GAAG,EAAE;IACP,OAAOT,cAAc,CAACS,GAAG,CAAC;;EAE5B,OAAOF,SAAS;AAClB,CAAC,CAAC,mBAAAG,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAL,SAAA,MAAAG,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAvBWX,UAAU,0HAAAQ,cAAA,CAAAG,QAAA,CAGVR,cAAc,8HAAAK,cAAA,CAAAG,QAAA,CAcdL,aAAa,qJAAAM,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAP,SAAA,CAAAO,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}