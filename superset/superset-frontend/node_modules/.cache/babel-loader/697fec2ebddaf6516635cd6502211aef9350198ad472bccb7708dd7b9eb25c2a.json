{"ast":null,"code":"import _isPlainObject from \"lodash/isPlainObject\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SafeMarkdown, styled, t } from '@superset-ui/core';\nimport Handlebars from 'handlebars';\nimport moment from 'moment';\nimport React, { useMemo, useState } from 'react';\n\nimport Helpers from 'just-handlebars-helpers';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const HandlebarsViewer = ({ templateSource, data }) => {var _common$conf$HTML_SAN, _common$conf, _common$conf2;\n  const [renderedTemplate, setRenderedTemplate] = useState('');\n  const [error, setError] = useState('');\n  const appContainer = document.getElementById('app');\n  const { common } = JSON.parse((appContainer == null ? void 0 : appContainer.getAttribute('data-bootstrap')) || '{}');\n  const htmlSanitization = (_common$conf$HTML_SAN = common == null ? void 0 : (_common$conf = common.conf) == null ? void 0 : _common$conf.HTML_SANITIZATION) != null ? _common$conf$HTML_SAN : true;\n  const htmlSchemaOverrides = (common == null ? void 0 : (_common$conf2 = common.conf) == null ? void 0 : _common$conf2.HTML_SANITIZATION_SCHEMA_EXTENSIONS) || {};\n  useMemo(() => {\n    try {\n      const template = Handlebars.compile(templateSource);\n      const result = template(data);\n      setRenderedTemplate(result);\n      setError('');\n    }\n    catch (error) {\n      setRenderedTemplate('');\n      setError(error.message);\n    }\n  }, [templateSource, data]);\n  const Error = styled.pre`\n    white-space: pre-wrap;\n  `;\n  if (error) {\n    return ___EmotionJSX(Error, null, error);\n  }\n  if (renderedTemplate) {\n    return ___EmotionJSX(SafeMarkdown, { source: renderedTemplate, htmlSanitization: htmlSanitization, htmlSchemaOverrides: htmlSchemaOverrides });\n  }\n  return ___EmotionJSX(\"p\", null, t('Loading...'));\n};\n//  usage: {{dateFormat my_date format=\"MMMM YYYY\"}}\n__signature__(HandlebarsViewer, \"useState{[renderedTemplate, setRenderedTemplate]('')}\\nuseState{[error, setError]('')}\\nuseMemo{}\");Handlebars.registerHelper('dateFormat', function (context, block) {\n  const f = block.hash.format || 'YYYY-MM-DD';\n  return moment(context).format(f);\n});\n// usage: {{  }}\nHandlebars.registerHelper('stringify', (obj, obj2) => {\n  // calling without an argument\n  if (obj2 === undefined)\n  throw Error('Please call with an object. Example: `stringify myObj`');\n  return _isPlainObject(obj) ? JSON.stringify(obj) : String(obj);\n});\nHelpers.registerHelpers(Handlebars);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(HandlebarsViewer, \"HandlebarsViewer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/components/Handlebars/HandlebarsViewer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["SafeMarkdown","styled","t","Handlebars","moment","React","useMemo","useState","Helpers","jsx","___EmotionJSX","HandlebarsViewer","templateSource","data","_common$conf$HTML_SAN","_common$conf","_common$conf2","renderedTemplate","setRenderedTemplate","error","setError","appContainer","document","getElementById","common","JSON","parse","getAttribute","htmlSanitization","conf","HTML_SANITIZATION","htmlSchemaOverrides","HTML_SANITIZATION_SCHEMA_EXTENSIONS","template","compile","result","message","Error","pre","source","__signature__","registerHelper","context","block","f","hash","format","obj","obj2","undefined","_isPlainObject","stringify","String","registerHelpers","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-handlebars/src/components/Handlebars/HandlebarsViewer.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SafeMarkdown, styled, t } from '@superset-ui/core';\nimport Handlebars from 'handlebars';\nimport moment from 'moment';\nimport React, { useMemo, useState } from 'react';\nimport { isPlainObject } from 'lodash';\nimport Helpers from 'just-handlebars-helpers';\n\nexport interface HandlebarsViewerProps {\n  templateSource: string;\n  data: any;\n}\n\nexport const HandlebarsViewer = ({\n  templateSource,\n  data,\n}: HandlebarsViewerProps) => {\n  const [renderedTemplate, setRenderedTemplate] = useState('');\n  const [error, setError] = useState('');\n  const appContainer = document.getElementById('app');\n  const { common } = JSON.parse(\n    appContainer?.getAttribute('data-bootstrap') || '{}',\n  );\n  const htmlSanitization = common?.conf?.HTML_SANITIZATION ?? true;\n  const htmlSchemaOverrides =\n    common?.conf?.HTML_SANITIZATION_SCHEMA_EXTENSIONS || {};\n\n  useMemo(() => {\n    try {\n      const template = Handlebars.compile(templateSource);\n      const result = template(data);\n      setRenderedTemplate(result);\n      setError('');\n    } catch (error) {\n      setRenderedTemplate('');\n      setError(error.message);\n    }\n  }, [templateSource, data]);\n\n  const Error = styled.pre`\n    white-space: pre-wrap;\n  `;\n\n  if (error) {\n    return <Error>{error}</Error>;\n  }\n\n  if (renderedTemplate) {\n    return (\n      <SafeMarkdown\n        source={renderedTemplate}\n        htmlSanitization={htmlSanitization}\n        htmlSchemaOverrides={htmlSchemaOverrides}\n      />\n    );\n  }\n  return <p>{t('Loading...')}</p>;\n};\n\n//  usage: {{dateFormat my_date format=\"MMMM YYYY\"}}\nHandlebars.registerHelper('dateFormat', function (context, block) {\n  const f = block.hash.format || 'YYYY-MM-DD';\n  return moment(context).format(f);\n});\n\n// usage: {{  }}\nHandlebars.registerHelper('stringify', (obj: any, obj2: any) => {\n  // calling without an argument\n  if (obj2 === undefined)\n    throw Error('Please call with an object. Example: `stringify myObj`');\n  return isPlainObject(obj) ? JSON.stringify(obj) : String(obj);\n});\n\nHelpers.registerHelpers(Handlebars);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}