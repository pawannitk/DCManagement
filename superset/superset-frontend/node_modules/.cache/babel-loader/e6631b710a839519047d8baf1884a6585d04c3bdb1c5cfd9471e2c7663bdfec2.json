{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Behavior, SuperChart, AppSection, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { INPUT_HEIGHT, INPUT_WIDTH, TIME_FILTER_INPUT_WIDTH } from './constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst DefaultValue = ({ hasDefaultValue, filterId, hasDataset, form, setDataMask, formData, enableNoResults }) => {var _form$getFieldValue, _formFilter$defaultDa, _formFilter$defaultDa2, _formFilter$defaultDa3;\n  const formFilter = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId];\n  const queriesData = formFilter == null ? void 0 : formFilter.defaultValueQueriesData;\n  const loading = hasDataset && queriesData === null;\n  const value = formFilter == null ? void 0 : (_formFilter$defaultDa = formFilter.defaultDataMask) == null ? void 0 : (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) == null ? void 0 : _formFilter$defaultDa2.value;\n  const isMissingRequiredValue = hasDefaultValue && (value === null || value === undefined);\n  return loading ? ___EmotionJSX(Loading, { position: \"inline-centered\" }) : ___EmotionJSX(SuperChart, { height: INPUT_HEIGHT, width: (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' ?\n    TIME_FILTER_INPUT_WIDTH :\n    INPUT_WIDTH, appSection: AppSection.FilterConfigModal, behaviors: [Behavior.NativeFilter], formData: formData\n    // For charts that don't have datasource we need workaround for empty placeholder\n    , queriesData: hasDataset ? formFilter == null ? void 0 : formFilter.defaultValueQueriesData : [{ data: [{}] }], chartType: formFilter == null ? void 0 : formFilter.filterType, hooks: { setDataMask }, enableNoResults: enableNoResults, filterState: {\n      ...(formFilter == null ? void 0 : (_formFilter$defaultDa3 = formFilter.defaultDataMask) == null ? void 0 : _formFilter$defaultDa3.filterState),\n      validateMessage: isMissingRequiredValue && t('Value is required'),\n      validateStatus: isMissingRequiredValue && 'error'\n    } });\n};const _default =\nDefaultValue;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultValue, \"DefaultValue\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","Behavior","SuperChart","AppSection","t","Loading","INPUT_HEIGHT","INPUT_WIDTH","TIME_FILTER_INPUT_WIDTH","jsx","___EmotionJSX","DefaultValue","hasDefaultValue","filterId","hasDataset","form","setDataMask","formData","enableNoResults","_form$getFieldValue","_formFilter$defaultDa","_formFilter$defaultDa2","_formFilter$defaultDa3","formFilter","getFieldValue","queriesData","defaultValueQueriesData","loading","value","defaultDataMask","filterState","isMissingRequiredValue","undefined","position","height","width","filterType","appSection","FilterConfigModal","behaviors","NativeFilter","data","chartType","hooks","validateMessage","validateStatus","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/DefaultValue.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC } from 'react';\nimport {\n  Behavior,\n  SetDataMaskHook,\n  SuperChart,\n  AppSection,\n  t,\n} from '@superset-ui/core';\nimport { FormInstance } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { NativeFiltersForm } from '../types';\nimport { getFormData } from '../../utils';\nimport {\n  INPUT_HEIGHT,\n  INPUT_WIDTH,\n  TIME_FILTER_INPUT_WIDTH,\n} from './constants';\n\ntype DefaultValueProps = {\n  hasDefaultValue: boolean;\n  filterId: string;\n  setDataMask: SetDataMaskHook;\n  hasDataset: boolean;\n  form: FormInstance<NativeFiltersForm>;\n  formData: ReturnType<typeof getFormData>;\n  enableNoResults: boolean;\n};\n\nconst DefaultValue: FC<DefaultValueProps> = ({\n  hasDefaultValue,\n  filterId,\n  hasDataset,\n  form,\n  setDataMask,\n  formData,\n  enableNoResults,\n}) => {\n  const formFilter = form.getFieldValue('filters')?.[filterId];\n  const queriesData = formFilter?.defaultValueQueriesData;\n  const loading = hasDataset && queriesData === null;\n  const value = formFilter?.defaultDataMask?.filterState?.value;\n  const isMissingRequiredValue =\n    hasDefaultValue && (value === null || value === undefined);\n  return loading ? (\n    <Loading position=\"inline-centered\" />\n  ) : (\n    <SuperChart\n      height={INPUT_HEIGHT}\n      width={\n        formFilter?.filterType === 'filter_time'\n          ? TIME_FILTER_INPUT_WIDTH\n          : INPUT_WIDTH\n      }\n      appSection={AppSection.FilterConfigModal}\n      behaviors={[Behavior.NativeFilter]}\n      formData={formData}\n      // For charts that don't have datasource we need workaround for empty placeholder\n      queriesData={\n        hasDataset ? formFilter?.defaultValueQueriesData : [{ data: [{}] }]\n      }\n      chartType={formFilter?.filterType}\n      hooks={{ setDataMask }}\n      enableNoResults={enableNoResults}\n      filterState={{\n        ...formFilter?.defaultDataMask?.filterState,\n        validateMessage: isMissingRequiredValue && t('Value is required'),\n        validateStatus: isMissingRequiredValue && 'error',\n      }}\n    />\n  );\n};\n\nexport default DefaultValue;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAa,MAAM,OAAO;AACjC,SACEC,QAAQ,EAERC,UAAU,EACVC,UAAU,EACVC,CAAC,QACI,mBAAmB;AAE1B,OAAOC,OAAO,MAAM,wBAAwB;AAG5C,SACEC,YAAY,EACZC,WAAW,EACXC,uBAAuB,QAClB,aAAa,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAYrB,MAAMC,YAAY,GAA0BA,CAAC,EAC3CC,eAAe,EACfC,QAAQ,EACRC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,QAAQ,EACRC,eAAe,EAChB,KAAI,KAAAC,mBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACH,MAAMC,UAAU,IAAAJ,mBAAA,GAAGJ,IAAI,CAACS,aAAa,CAAC,SAAS,CAAC,qBAA7BL,mBAAA,CAAgCN,QAAQ,CAAC;EAC5D,MAAMY,WAAW,GAAGF,UAAU,oBAAVA,UAAU,CAAEG,uBAAuB;EACvD,MAAMC,OAAO,GAAGb,UAAU,IAAIW,WAAW,KAAK,IAAI;EAClD,MAAMG,KAAK,GAAGL,UAAU,qBAAAH,qBAAA,GAAVG,UAAU,CAAEM,eAAe,sBAAAR,sBAAA,GAA3BD,qBAAA,CAA6BU,WAAW,qBAAxCT,sBAAA,CAA0CO,KAAK;EAC7D,MAAMG,sBAAsB,GAC1BnB,eAAe,KAAKgB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKI,SAAS,CAAC;EAC5D,OAAOL,OAAO,GACZjB,aAAA,CAACL,OAAO,IAAC4B,QAAQ,EAAC,iBAAiB,GAAG,GAEtCvB,aAAA,CAACR,UAAU,IACTgC,MAAM,EAAE5B,YAAa,EACrB6B,KAAK,EACH,CAAAZ,UAAU,oBAAVA,UAAU,CAAEa,UAAU,MAAK,aAAa;IACpC5B,uBAAuB;IACvBD,WACL,EACD8B,UAAU,EAAElC,UAAU,CAACmC,iBAAkB,EACzCC,SAAS,EAAE,CAACtC,QAAQ,CAACuC,YAAY,CAAE,EACnCvB,QAAQ,EAAEA;IACV;IAAA,EACAQ,WAAW,EACTX,UAAU,GAAGS,UAAU,oBAAVA,UAAU,CAAEG,uBAAuB,GAAG,CAAC,EAAEe,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CACnE,EACDC,SAAS,EAAEnB,UAAU,oBAAVA,UAAU,CAAEa,UAAW,EAClCO,KAAK,EAAE,EAAE3B,WAAW,EAAG,EACvBE,eAAe,EAAEA,eAAgB,EACjCY,WAAW,EAAE;MACX,IAAGP,UAAU,qBAAAD,sBAAA,GAAVC,UAAU,CAAEM,eAAe,qBAA3BP,sBAAA,CAA6BQ,WAAW;MAC3Cc,eAAe,EAAEb,sBAAsB,IAAI3B,CAAC,CAAC,mBAAmB,CAAC;MACjEyC,cAAc,EAAEd,sBAAsB,IAAI;KAC1C,GAEL;AACH,CAAC,CAAC,MAAAe,QAAA;AAEanC,YAAY,CAA3B,eAAAmC,QAAA,CAA4B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAjB,SAAA,MAAAe,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5CtBvC,YAAY,yKAAAoC,cAAA,CAAAG,QAAA,CAAAJ,QAAA,4LAAAK,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAnB,SAAA,CAAAmB,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}