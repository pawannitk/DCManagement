{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { TABS_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  DASHBOARD_ROOT_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID } from\n'src/dashboard/util/constants';\nimport dropOverflowsParent from 'src/dashboard/util/dropOverflowsParent';\nimport findParentId from 'src/dashboard/util/findParentId';\nimport isInDifferentFilterScopes from 'src/dashboard/util/isInDifferentFilterScopes';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) =>\n  (dispatch, getState) => {\n    const result = action(...args);\n    if (typeof result === 'function') {\n      dispatch(result(dispatch, getState));\n    } else {\n      dispatch(result);\n    }\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    const isComponentLevelEvent =\n    result.type === UPDATE_COMPONENTS &&\n    result.payload &&\n    result.payload.nextComponents;\n    // trigger dashboardFilters state update if dashboard layout is changed.\n    if (!isComponentLevelEvent) {\n      const components = dashboardLayout.present;\n      dispatch(updateLayoutComponents(components));\n    }\n\n    if (!dashboardState.hasUnsavedChanges) {\n      dispatch(setUnsavedChanges(true));\n    }\n  };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n  (nextComponents) => ({\n    type: UPDATE_COMPONENTS,\n    payload: {\n      nextComponents\n    }\n  })\n);\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n      updateComponents({\n        [DASHBOARD_HEADER_ID]: {\n          ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n          meta: {\n            text\n          }\n        }\n      })\n    );\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text\n  };\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId\n  }\n}));\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction((dropResult) => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult\n  }\n}));\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction((dropResult) => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult\n  }\n}));\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {}\n}));\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height\n          }\n        }\n      };\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction((dropResult) => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult\n  }\n}));\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n      dropResult,\n      getState().dashboardLayout.present\n    );\n\n    if (overflowsParent) {\n      return dispatch(\n        addWarningToast(\n          t(\n            `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`\n          )\n        )\n      );\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n    dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n    // Add additional allow-to-drop logic for tag/tags source.\n    // We only allow\n    // - top-level tab => top-level tab: rearrange top-level tab order\n    // - nested tab => top-level tab: allow row tab become top-level tab\n    // Dashboard does not allow top-level tab become nested tab, to avoid\n    // nested tab inside nested tab.\n    source.type === TABS_TYPE &&\n    destination.type === TABS_TYPE &&\n    source.id === rootChildId &&\n    destination.id !== rootChildId)\n    {\n      return dispatch(\n        addWarningToast(t('Can not move top level tab into nested tabs'))\n      );\n    } else if (\n    destination &&\n    source &&\n    !(\n    // ensure it has moved\n    destination.id === source.id && destination.index === source.index))\n\n    {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n      (sourceComponent.type === TABS_TYPE ||\n      sourceComponent.type === ROW_TYPE) &&\n      sourceComponent.children &&\n      sourceComponent.children.length === 0)\n      {\n        const parentId = findParentId({\n          childId: source.id,\n          layout\n        });\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n      isInDifferentFilterScopes({\n        dashboardFilters,\n        source: (sourceComponent.parents || []).concat(source.id),\n        destination: (destinationComponent.parents || []).concat(\n          destination.id\n        )\n      }))\n      {\n        dispatch(\n          addWarningToast(\n            t('This chart has been moved to a different filter scope.')\n          )\n        );\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n    dashboardLayout.past.length === 0 &&\n    !dashboardState.maxUndoHistoryExceeded &&\n    !dashboardState.updatedColorScheme)\n    {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\n  UndoActionCreators.redo\n);\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(UPDATE_COMPONENTS, \"UPDATE_COMPONENTS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(setUnsavedChangesAfterAction, \"setUnsavedChangesAfterAction\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(updateComponents, \"updateComponents\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(updateDashboardTitle, \"updateDashboardTitle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DASHBOARD_TITLE_CHANGED, \"DASHBOARD_TITLE_CHANGED\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(dashboardTitleChanged, \"dashboardTitleChanged\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DELETE_COMPONENT, \"DELETE_COMPONENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(deleteComponent, \"deleteComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(CREATE_COMPONENT, \"CREATE_COMPONENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(createComponent, \"createComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(CREATE_TOP_LEVEL_TABS, \"CREATE_TOP_LEVEL_TABS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(createTopLevelTabs, \"createTopLevelTabs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(DELETE_TOP_LEVEL_TABS, \"DELETE_TOP_LEVEL_TABS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(deleteTopLevelTabs, \"deleteTopLevelTabs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(RESIZE_COMPONENT, \"RESIZE_COMPONENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(resizeComponent, \"resizeComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(MOVE_COMPONENT, \"MOVE_COMPONENT\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(moveComponent, \"moveComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(HANDLE_COMPONENT_DROP, \"HANDLE_COMPONENT_DROP\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(handleComponentDrop, \"handleComponentDrop\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(undoLayoutAction, \"undoLayoutAction\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(redoLayoutAction, \"redoLayoutAction\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");reactHotLoader.register(UPDATE_COMPONENTS_PARENTS_LIST, \"UPDATE_COMPONENTS_PARENTS_LIST\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ActionCreators","UndoActionCreators","t","addWarningToast","TABS_TYPE","ROW_TYPE","DASHBOARD_ROOT_ID","NEW_COMPONENTS_SOURCE_ID","DASHBOARD_HEADER_ID","dropOverflowsParent","findParentId","isInDifferentFilterScopes","updateLayoutComponents","setUnsavedChanges","UPDATE_COMPONENTS","setUnsavedChangesAfterAction","action","args","dispatch","getState","result","dashboardLayout","dashboardState","isComponentLevelEvent","type","payload","nextComponents","components","present","hasUnsavedChanges","updateComponents","updateDashboardTitle","text","meta","DASHBOARD_TITLE_CHANGED","dashboardTitleChanged","DELETE_COMPONENT","deleteComponent","id","parentId","CREATE_COMPONENT","createComponent","dropResult","CREATE_TOP_LEVEL_TABS","createTopLevelTabs","DELETE_TOP_LEVEL_TABS","deleteTopLevelTabs","RESIZE_COMPONENT","resizeComponent","width","height","undoableLayout","dashboard","component","widthChanged","heightChanged","updatedComponents","MOVE_COMPONENT","moveComponent","HANDLE_COMPONENT_DROP","handleComponentDrop","overflowsParent","source","destination","droppedOnRoot","isNewComponent","dashboardRoot","rootChildId","children","index","dashboardFilters","layout","sourceComponent","destinationComponent","length","childId","parents","concat","undoLayoutAction","undo","past","maxUndoHistoryExceeded","updatedColorScheme","redoLayoutAction","redo","UPDATE_COMPONENTS_PARENTS_LIST","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/dashboardLayout.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\nimport { TABS_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  DASHBOARD_ROOT_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from 'src/dashboard/util/constants';\nimport dropOverflowsParent from 'src/dashboard/util/dropOverflowsParent';\nimport findParentId from 'src/dashboard/util/findParentId';\nimport isInDifferentFilterScopes from 'src/dashboard/util/isInDifferentFilterScopes';\nimport { updateLayoutComponents } from './dashboardFilters';\nimport { setUnsavedChanges } from './dashboardState';\n\n// Component CRUD -------------------------------------------------------------\nexport const UPDATE_COMPONENTS = 'UPDATE_COMPONENTS';\n\n// this is a helper that takes an action as input and dispatches\n// an additional setUnsavedChanges(true) action after the dispatch in the case\n// that dashboardState.hasUnsavedChanges is false.\nfunction setUnsavedChangesAfterAction(action) {\n  return (...args) =>\n    (dispatch, getState) => {\n      const result = action(...args);\n      if (typeof result === 'function') {\n        dispatch(result(dispatch, getState));\n      } else {\n        dispatch(result);\n      }\n\n      const { dashboardLayout, dashboardState } = getState();\n\n      const isComponentLevelEvent =\n        result.type === UPDATE_COMPONENTS &&\n        result.payload &&\n        result.payload.nextComponents;\n      // trigger dashboardFilters state update if dashboard layout is changed.\n      if (!isComponentLevelEvent) {\n        const components = dashboardLayout.present;\n        dispatch(updateLayoutComponents(components));\n      }\n\n      if (!dashboardState.hasUnsavedChanges) {\n        dispatch(setUnsavedChanges(true));\n      }\n    };\n}\n\nexport const updateComponents = setUnsavedChangesAfterAction(\n  nextComponents => ({\n    type: UPDATE_COMPONENTS,\n    payload: {\n      nextComponents,\n    },\n  }),\n);\n\nexport function updateDashboardTitle(text) {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    dispatch(\n      updateComponents({\n        [DASHBOARD_HEADER_ID]: {\n          ...dashboardLayout.present[DASHBOARD_HEADER_ID],\n          meta: {\n            text,\n          },\n        },\n      }),\n    );\n  };\n}\n\nexport const DASHBOARD_TITLE_CHANGED = 'DASHBOARD_TITLE_CHANGED';\n\n// call this one when it's not an undo-able action\nexport function dashboardTitleChanged(text) {\n  return {\n    type: DASHBOARD_TITLE_CHANGED,\n    text,\n  };\n}\n\nexport const DELETE_COMPONENT = 'DELETE_COMPONENT';\nexport const deleteComponent = setUnsavedChangesAfterAction((id, parentId) => ({\n  type: DELETE_COMPONENT,\n  payload: {\n    id,\n    parentId,\n  },\n}));\n\nexport const CREATE_COMPONENT = 'CREATE_COMPONENT';\nexport const createComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\n// Tabs -----------------------------------------------------------------------\nexport const CREATE_TOP_LEVEL_TABS = 'CREATE_TOP_LEVEL_TABS';\nexport const createTopLevelTabs = setUnsavedChangesAfterAction(dropResult => ({\n  type: CREATE_TOP_LEVEL_TABS,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const DELETE_TOP_LEVEL_TABS = 'DELETE_TOP_LEVEL_TABS';\nexport const deleteTopLevelTabs = setUnsavedChangesAfterAction(() => ({\n  type: DELETE_TOP_LEVEL_TABS,\n  payload: {},\n}));\n\n// Resize ---------------------------------------------------------------------\nexport const RESIZE_COMPONENT = 'RESIZE_COMPONENT';\nexport function resizeComponent({ id, width, height }) {\n  return (dispatch, getState) => {\n    const { dashboardLayout: undoableLayout } = getState();\n    const { present: dashboard } = undoableLayout;\n    const component = dashboard[id];\n    const widthChanged = width && component.meta.width !== width;\n    const heightChanged = height && component.meta.height !== height;\n    if (component && (widthChanged || heightChanged)) {\n      // update the size of this component\n      const updatedComponents = {\n        [id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            width: width || component.meta.width,\n            height: height || component.meta.height,\n          },\n        },\n      };\n\n      dispatch(updateComponents(updatedComponents));\n    }\n  };\n}\n\n// Drag and drop --------------------------------------------------------------\nexport const MOVE_COMPONENT = 'MOVE_COMPONENT';\nconst moveComponent = setUnsavedChangesAfterAction(dropResult => ({\n  type: MOVE_COMPONENT,\n  payload: {\n    dropResult,\n  },\n}));\n\nexport const HANDLE_COMPONENT_DROP = 'HANDLE_COMPONENT_DROP';\nexport function handleComponentDrop(dropResult) {\n  return (dispatch, getState) => {\n    const overflowsParent = dropOverflowsParent(\n      dropResult,\n      getState().dashboardLayout.present,\n    );\n\n    if (overflowsParent) {\n      return dispatch(\n        addWarningToast(\n          t(\n            `There is not enough space for this component. Try decreasing its width, or increasing the destination width.`,\n          ),\n        ),\n      );\n    }\n\n    const { source, destination } = dropResult;\n    const droppedOnRoot = destination && destination.id === DASHBOARD_ROOT_ID;\n    const isNewComponent = source.id === NEW_COMPONENTS_SOURCE_ID;\n    const dashboardRoot = getState().dashboardLayout.present[DASHBOARD_ROOT_ID];\n    const rootChildId =\n      dashboardRoot && dashboardRoot.children ? dashboardRoot.children[0] : '';\n\n    if (droppedOnRoot) {\n      dispatch(createTopLevelTabs(dropResult));\n    } else if (destination && isNewComponent) {\n      dispatch(createComponent(dropResult));\n    } else if (\n      // Add additional allow-to-drop logic for tag/tags source.\n      // We only allow\n      // - top-level tab => top-level tab: rearrange top-level tab order\n      // - nested tab => top-level tab: allow row tab become top-level tab\n      // Dashboard does not allow top-level tab become nested tab, to avoid\n      // nested tab inside nested tab.\n      source.type === TABS_TYPE &&\n      destination.type === TABS_TYPE &&\n      source.id === rootChildId &&\n      destination.id !== rootChildId\n    ) {\n      return dispatch(\n        addWarningToast(t('Can not move top level tab into nested tabs')),\n      );\n    } else if (\n      destination &&\n      source &&\n      !(\n        // ensure it has moved\n        (destination.id === source.id && destination.index === source.index)\n      )\n    ) {\n      dispatch(moveComponent(dropResult));\n    }\n\n    // call getState() again down here in case redux state is stale after\n    // previous dispatch(es)\n    const { dashboardFilters, dashboardLayout: undoableLayout } = getState();\n\n    // if we moved a child from a Tab or Row parent and it was the only child, delete the parent.\n    if (!isNewComponent) {\n      const { present: layout } = undoableLayout;\n      const sourceComponent = layout[source.id] || {};\n      const destinationComponent = layout[destination.id] || {};\n      if (\n        (sourceComponent.type === TABS_TYPE ||\n          sourceComponent.type === ROW_TYPE) &&\n        sourceComponent.children &&\n        sourceComponent.children.length === 0\n      ) {\n        const parentId = findParentId({\n          childId: source.id,\n          layout,\n        });\n        dispatch(deleteComponent(source.id, parentId));\n      }\n\n      // show warning if item has been moved between different scope\n      if (\n        isInDifferentFilterScopes({\n          dashboardFilters,\n          source: (sourceComponent.parents || []).concat(source.id),\n          destination: (destinationComponent.parents || []).concat(\n            destination.id,\n          ),\n        })\n      ) {\n        dispatch(\n          addWarningToast(\n            t('This chart has been moved to a different filter scope.'),\n          ),\n        );\n      }\n    }\n\n    return null;\n  };\n}\n\n// Undo redo ------------------------------------------------------------------\nexport function undoLayoutAction() {\n  return (dispatch, getState) => {\n    dispatch(UndoActionCreators.undo());\n\n    const { dashboardLayout, dashboardState } = getState();\n\n    if (\n      dashboardLayout.past.length === 0 &&\n      !dashboardState.maxUndoHistoryExceeded &&\n      !dashboardState.updatedColorScheme\n    ) {\n      dispatch(setUnsavedChanges(false));\n    }\n  };\n}\n\nexport const redoLayoutAction = setUnsavedChangesAfterAction(\n  UndoActionCreators.redo,\n);\n\n// Update component parents list ----------------------------------------------\nexport const UPDATE_COMPONENTS_PARENTS_LIST = 'UPDATE_COMPONENTS_PARENTS_LIST';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}