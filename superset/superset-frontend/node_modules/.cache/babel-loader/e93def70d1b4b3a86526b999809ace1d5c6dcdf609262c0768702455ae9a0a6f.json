{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { t, useTruncation } from '@superset-ui/core';\nimport { useFilterScope } from './useFilterScope';\nimport { Row, RowLabel, RowTruncationCount, RowValue, TooltipList, TooltipSectionLabel } from './Styles';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst getTooltipSection = (items, label) => Array.isArray(items) && items.length > 0 ? ___EmotionJSX(React.Fragment, null,\n___EmotionJSX(TooltipSectionLabel, null, label, \":\"),\n___EmotionJSX(TooltipList, null,\nitems.map((item) => ___EmotionJSX(\"li\", null, item))\n)\n) : null;\nexport const ScopeRow = /*#__PURE__*/React.memo(__signature__(({ filter }) => {\n  const scope = useFilterScope(filter);\n  const [scopeRef, plusRef, elementsTruncated, hasHiddenElements] = useTruncation();\n  const tooltipText = useMemo(() => {\n    if (elementsTruncated === 0 || !scope) {\n      return null;\n    }\n    if (scope.all) {\n      return ___EmotionJSX(\"span\", null, t('All charts'));\n    }\n    return ___EmotionJSX(\"div\", null,\n    getTooltipSection(scope.tabs, t('Tabs')),\n    getTooltipSection(scope.charts, t('Charts'))\n    );\n  }, [elementsTruncated, scope]);\n  return ___EmotionJSX(Row, null,\n  ___EmotionJSX(RowLabel, null, t('Scope')),\n  ___EmotionJSX(TooltipWithTruncation, { title: tooltipText },\n  ___EmotionJSX(RowValue, { ref: scopeRef },\n  scope ?\n  Object.values(scope).\n  flat().\n  map((element, index) => ___EmotionJSX(\"span\", { key: element },\n  index === 0 ? element : `, ${element}`\n  )) :\n  t('None')\n  ),\n  hasHiddenElements && ___EmotionJSX(RowTruncationCount, { ref: plusRef }, \"+\",\n  elementsTruncated\n  )\n  )\n  );\n}, \"useFilterScope{scope}\\nuseTruncation{[scopeRef, plusRef, elementsTruncated, hasHiddenElements]}\\nuseMemo{tooltipText}\", () => [useFilterScope, useTruncation]));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTooltipSection, \"getTooltipSection\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx\");reactHotLoader.register(ScopeRow, \"ScopeRow\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","t","useTruncation","useFilterScope","Row","RowLabel","RowTruncationCount","RowValue","TooltipList","TooltipSectionLabel","TooltipWithTruncation","jsx","___EmotionJSX","getTooltipSection","items","label","Array","isArray","length","Fragment","map","item","ScopeRow","memo","__signature__","filter","scope","scopeRef","plusRef","elementsTruncated","hasHiddenElements","tooltipText","all","tabs","charts","title","ref","Object","values","flat","element","index","key","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { t, useTruncation } from '@superset-ui/core';\nimport { useFilterScope } from './useFilterScope';\nimport {\n  Row,\n  RowLabel,\n  RowTruncationCount,\n  RowValue,\n  TooltipList,\n  TooltipSectionLabel,\n} from './Styles';\nimport { FilterCardRowProps } from './types';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';\n\nconst getTooltipSection = (items: string[] | undefined, label: string) =>\n  Array.isArray(items) && items.length > 0 ? (\n    <>\n      <TooltipSectionLabel>{label}:</TooltipSectionLabel>\n      <TooltipList>\n        {items.map(item => (\n          <li>{item}</li>\n        ))}\n      </TooltipList>\n    </>\n  ) : null;\n\nexport const ScopeRow = React.memo(({ filter }: FilterCardRowProps) => {\n  const scope = useFilterScope(filter);\n\n  const [scopeRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n  const tooltipText = useMemo(() => {\n    if (elementsTruncated === 0 || !scope) {\n      return null;\n    }\n    if (scope.all) {\n      return <span>{t('All charts')}</span>;\n    }\n    return (\n      <div>\n        {getTooltipSection(scope.tabs, t('Tabs'))}\n        {getTooltipSection(scope.charts, t('Charts'))}\n      </div>\n    );\n  }, [elementsTruncated, scope]);\n\n  return (\n    <Row>\n      <RowLabel>{t('Scope')}</RowLabel>\n      <TooltipWithTruncation title={tooltipText}>\n        <RowValue ref={scopeRef}>\n          {scope\n            ? Object.values(scope)\n                .flat()\n                .map((element, index) => (\n                  <span key={element}>\n                    {index === 0 ? element : `, ${element}`}\n                  </span>\n                ))\n            : t('None')}\n        </RowValue>\n        {hasHiddenElements && (\n          <RowTruncationCount ref={plusRef}>\n            +{elementsTruncated}\n          </RowTruncationCount>\n        )}\n      </TooltipWithTruncation>\n    </Row>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}