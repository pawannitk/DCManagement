{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { registryDelete, registryGet, registryGetAll, registrySetComponent } from '../../utils/functionalRegistry';\n/*\n  This is registry that contains list of dynamic dashboard components that can be added in addition to main components\n */\nconst DashboardComponentsRegistry = (initComponents = []) => {\n  const state = {\n    registry: {},\n    registryKeys: []\n  };\n  const set = registrySetComponent(state);\n  initComponents.forEach(({ key, item }) => {\n    set(key, item);\n  });\n  return {\n    set,\n    get: registryGet(state),\n    delete: registryDelete(state),\n    getAll: registryGetAll(state)\n  };\n};const _default =\nDashboardComponentsRegistry;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DashboardComponentsRegistry, \"DashboardComponentsRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["registryDelete","registryGet","registryGetAll","registrySetComponent","DashboardComponentsRegistry","initComponents","state","registry","registryKeys","set","forEach","key","item","get","delete","getAll","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/visualizations/dashboardComponents/DashboardComponentsRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ComponentItem,\n  ComponentRegistry,\n  FunctionalRegistryState,\n  registryDelete,\n  registryGet,\n  registryGetAll,\n  RegistryMetadata,\n  registrySetComponent,\n} from '../../utils/functionalRegistry';\n\nexport interface DashboardComponentsRegistryMetadata extends RegistryMetadata {\n  iconName: string;\n}\n\n/*\n  This is registry that contains list of dynamic dashboard components that can be added in addition to main components\n */\n\nconst DashboardComponentsRegistry = (\n  initComponents: { key: string; item: ComponentItem }[] = [],\n) => {\n  const state: FunctionalRegistryState<\n    ComponentRegistry<DashboardComponentsRegistryMetadata>\n  > = {\n    registry: {},\n    registryKeys: [],\n  };\n\n  const set = registrySetComponent(state);\n\n  initComponents.forEach(({ key, item }) => {\n    set(key, item);\n  });\n\n  return {\n    set,\n    get: registryGet(state),\n    delete: registryDelete(state),\n    getAll: registryGetAll(state),\n  };\n};\n\nexport default DashboardComponentsRegistry;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAIEA,cAAc,EACdC,WAAW,EACXC,cAAc,EAEdC,oBAAoB,QACf,gCAAgC;AAMvC;;;AAIA,MAAMC,2BAA2B,GAAGA,CAClCC,cAAA,GAAyD,EAAE,KACzD;EACF,MAAMC,KAAK,GAEP;IACFC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;GACf;EAED,MAAMC,GAAG,GAAGN,oBAAoB,CAACG,KAAK,CAAC;EAEvCD,cAAc,CAACK,OAAO,CAAC,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAE,KAAI;IACvCH,GAAG,CAACE,GAAG,EAAEC,IAAI,CAAC;EAChB,CAAC,CAAC;EAEF,OAAO;IACLH,GAAG;IACHI,GAAG,EAAEZ,WAAW,CAACK,KAAK,CAAC;IACvBQ,MAAM,EAAEd,cAAc,CAACM,KAAK,CAAC;IAC7BS,MAAM,EAAEb,cAAc,CAACI,KAAK;GAC7B;AACH,CAAC,CAAC,MAAAU,QAAA;AAEaZ,2BAA2B,CAA1C,eAAAY,QAAA,CAA2C,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxBrCjB,2BAA2B,iKAAAa,cAAA,CAAAI,QAAA,CAAAL,QAAA,qKAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}