{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {}\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField\n  });\n  const editingList = activeFilterField ?\n  [activeFilterField] :\n  checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach((filterField) => {\n    (filterScopeMap[filterField].checked || []).forEach((chartId) => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key] ?\n  filterScopeMap[key].expanded :\n  getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded\n    }\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildFilterScopeTreeEntry, \"buildFilterScopeTreeEntry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getFilterScopeNodesTree","getFilterScopeParentNodes","getKeyForFilterScopeTree","getSelectedChartIdForFilterScopeTree","buildFilterScopeTreeEntry","checkedFilterFields","activeFilterField","filterScopeMap","layout","key","editingList","selectedChartId","nodes","components","filterFields","checkedChartIdSet","Set","forEach","filterField","checked","chartId","add","expanded","nodesFiltered","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/util/buildFilterScopeTreeEntry.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport getFilterScopeNodesTree from './getFilterScopeNodesTree';\nimport getFilterScopeParentNodes from './getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from './getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from './getSelectedChartIdForFilterScopeTree';\n\nexport default function buildFilterScopeTreeEntry({\n  checkedFilterFields = [],\n  activeFilterField,\n  filterScopeMap = {},\n  layout = {},\n}) {\n  const key = getKeyForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const editingList = activeFilterField\n    ? [activeFilterField]\n    : checkedFilterFields;\n  const selectedChartId = getSelectedChartIdForFilterScopeTree({\n    checkedFilterFields,\n    activeFilterField,\n  });\n  const nodes = getFilterScopeNodesTree({\n    components: layout,\n    filterFields: editingList,\n    selectedChartId,\n  });\n  const checkedChartIdSet = new Set();\n  editingList.forEach(filterField => {\n    (filterScopeMap[filterField].checked || []).forEach(chartId => {\n      checkedChartIdSet.add(`${chartId}:${filterField}`);\n    });\n  });\n  const checked = [...checkedChartIdSet];\n  const expanded = filterScopeMap[key]\n    ? filterScopeMap[key].expanded\n    : getFilterScopeParentNodes(nodes, 1);\n\n  return {\n    [key]: {\n      nodes,\n      nodesFiltered: [...nodes],\n      checked,\n      expanded,\n    },\n  };\n}\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,oCAAoC,MAAM,wCAAwC;;AAEzF,eAAe,SAASC,yBAAyBA,CAAC;EAChDC,mBAAmB,GAAG,EAAE;EACxBC,iBAAiB;EACjBC,cAAc,GAAG,CAAC,CAAC;EACnBC,MAAM,GAAG,CAAC;AACZ,CAAC,EAAE;EACD,MAAMC,GAAG,GAAGP,wBAAwB,CAAC;IACnCG,mBAAmB;IACnBC;EACF,CAAC,CAAC;EACF,MAAMI,WAAW,GAAGJ,iBAAiB;EACjC,CAACA,iBAAiB,CAAC;EACnBD,mBAAmB;EACvB,MAAMM,eAAe,GAAGR,oCAAoC,CAAC;IAC3DE,mBAAmB;IACnBC;EACF,CAAC,CAAC;EACF,MAAMM,KAAK,GAAGZ,uBAAuB,CAAC;IACpCa,UAAU,EAAEL,MAAM;IAClBM,YAAY,EAAEJ,WAAW;IACzBC;EACF,CAAC,CAAC;EACF,MAAMI,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACnCN,WAAW,CAACO,OAAO,CAAC,CAAAC,WAAW,KAAI;IACjC,CAACX,cAAc,CAACW,WAAW,CAAC,CAACC,OAAO,IAAI,EAAE,EAAEF,OAAO,CAAC,CAAAG,OAAO,KAAI;MAC7DL,iBAAiB,CAACM,GAAG,CAAE,GAAED,OAAQ,IAAGF,WAAY,EAAC,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,MAAMC,OAAO,GAAG,CAAC,GAAGJ,iBAAiB,CAAC;EACtC,MAAMO,QAAQ,GAAGf,cAAc,CAACE,GAAG,CAAC;EAChCF,cAAc,CAACE,GAAG,CAAC,CAACa,QAAQ;EAC5BrB,yBAAyB,CAACW,KAAK,EAAE,CAAC,CAAC;;EAEvC,OAAO;IACL,CAACH,GAAG,GAAG;MACLG,KAAK;MACLW,aAAa,EAAE,CAAC,GAAGX,KAAK,CAAC;MACzBO,OAAO;MACPG;IACF;EACF,CAAC;AACH,CAAC,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzCuBxB,yBAAyB,iKAAAyB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}