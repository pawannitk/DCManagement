{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport Loading from '../Loading';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nfunction DefaultPlaceholder({ width, height, showLoadingForImport = false, placeholderStyle: style }) {\n  return (\n    // since `width` defaults to 100%, we can display the placeholder once\n    // height is specified.\n    height && ___EmotionJSX(\"div\", { key: \"async-asm-placeholder\", style: { width, height, ...style } },\n    showLoadingForImport && ___EmotionJSX(Loading, { position: \"floating\" })\n    ) ||\n    // `|| null` is for in case of height=0.\n    null);\n}\n/**\n * Asynchronously import an ES module as a React component, render a placeholder\n * first (if provided) and re-render once import is complete.\n */\nexport default function AsyncEsmComponent(\n/**\n * A promise generator that returns the React component to render.\n */\nloadComponent,\n/**\n * Placeholder while still importing.\n */\nplaceholder = DefaultPlaceholder) {\n  let promise;\n  let component;\n  /**\n   * Safely wait for promise, make sure the loader function only execute once.\n   */\n  function waitForPromise() {\n    if (!promise) {\n      // load component on initialization\n      promise =\n      loadComponent instanceof Promise ? loadComponent : loadComponent();\n    }\n    if (!component) {\n      promise.then((result) => {\n        component = result.default ||\n        result;\n      });\n    }\n    return promise;\n  }\n  const AsyncComponent = /*#__PURE__*/forwardRef(__signature__(function AsyncComponent(props, ref) {\n    const [loaded, setLoaded] = useState(component !== undefined);\n    useEffect(() => {\n      let isMounted = true;\n      if (!loaded) {\n        // update state to trigger a re-render\n        waitForPromise().then(() => {\n          if (isMounted) {\n            setLoaded(true);\n          }\n        });\n      }\n      return () => {\n        isMounted = false;\n      };\n    });\n    const Component = component || placeholder;\n    return Component ?\n    // placeholder does not get the ref\n    ___EmotionJSX(Component, _extends({ ref: Component === component ? ref : null }, props)) : null;\n  }, \"useState{[loaded, setLoaded](component !== undefined)}\\nuseEffect{}\"));\n  // preload the async component before rendering\n  AsyncComponent.preload = waitForPromise;\n  return AsyncComponent;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DefaultPlaceholder, \"DefaultPlaceholder\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/AsyncEsmComponent/index.tsx\");reactHotLoader.register(AsyncEsmComponent, \"AsyncEsmComponent\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/AsyncEsmComponent/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useEffect","useState","forwardRef","Loading","jsx","___EmotionJSX","DefaultPlaceholder","width","height","showLoadingForImport","placeholderStyle","style","key","position","AsyncEsmComponent","loadComponent","placeholder","promise","component","waitForPromise","Promise","then","result","default","AsyncComponent","__signature__","props","ref","loaded","setLoaded","undefined","isMounted","Component","_extends","preload","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/AsyncEsmComponent/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  CSSProperties,\n  useEffect,\n  useState,\n  RefObject,\n  forwardRef,\n} from 'react';\nimport Loading from '../Loading';\n\nexport type PlaceholderProps = {\n  showLoadingForImport?: boolean;\n  width?: string | number;\n  height?: string | number;\n  placeholderStyle?: CSSProperties;\n} & {\n  [key: string]: any;\n};\n\nfunction DefaultPlaceholder({\n  width,\n  height,\n  showLoadingForImport = false,\n  placeholderStyle: style,\n}: PlaceholderProps) {\n  return (\n    // since `width` defaults to 100%, we can display the placeholder once\n    // height is specified.\n    (height && (\n      <div key=\"async-asm-placeholder\" style={{ width, height, ...style }}>\n        {showLoadingForImport && <Loading position=\"floating\" />}\n      </div>\n    )) ||\n    // `|| null` is for in case of height=0.\n    null\n  );\n}\n\n/**\n * Asynchronously import an ES module as a React component, render a placeholder\n * first (if provided) and re-render once import is complete.\n */\nexport default function AsyncEsmComponent<\n  P = PlaceholderProps,\n  M = React.ComponentType<P> | { default: React.ComponentType<P> },\n>(\n  /**\n   * A promise generator that returns the React component to render.\n   */\n  loadComponent: Promise<M> | (() => Promise<M>),\n  /**\n   * Placeholder while still importing.\n   */\n  placeholder: React.ComponentType<\n    PlaceholderProps & Partial<P>\n  > | null = DefaultPlaceholder,\n) {\n  // component props + placeholder props\n  type FullProps = P & PlaceholderProps;\n  let promise: Promise<M> | undefined;\n  let component: React.ComponentType<FullProps>;\n\n  /**\n   * Safely wait for promise, make sure the loader function only execute once.\n   */\n  function waitForPromise() {\n    if (!promise) {\n      // load component on initialization\n      promise =\n        loadComponent instanceof Promise ? loadComponent : loadComponent();\n    }\n    if (!component) {\n      promise.then(result => {\n        component = ((result as { default?: React.ComponentType<P> }).default ||\n          result) as React.ComponentType<FullProps>;\n      });\n    }\n    return promise;\n  }\n\n  type AsyncComponent = React.ForwardRefExoticComponent<\n    React.PropsWithoutRef<FullProps> &\n      React.RefAttributes<React.ComponentType<FullProps>>\n  > & {\n    preload?: typeof waitForPromise;\n  };\n\n  const AsyncComponent: AsyncComponent = forwardRef(function AsyncComponent(\n    props: FullProps,\n    ref: RefObject<React.ComponentType<FullProps>>,\n  ) {\n    const [loaded, setLoaded] = useState(component !== undefined);\n    useEffect(() => {\n      let isMounted = true;\n      if (!loaded) {\n        // update state to trigger a re-render\n        waitForPromise().then(() => {\n          if (isMounted) {\n            setLoaded(true);\n          }\n        });\n      }\n      return () => {\n        isMounted = false;\n      };\n    });\n    const Component = component || placeholder;\n    return Component ? (\n      // placeholder does not get the ref\n      <Component ref={Component === component ? ref : null} {...props} />\n    ) : null;\n  });\n  // preload the async component before rendering\n  AsyncComponent.preload = waitForPromise;\n\n  return AsyncComponent as AsyncComponent & {\n    preload: typeof waitForPromise;\n  };\n}\n"],"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAEVC,SAAS,EACTC,QAAQ,EAERC,UAAU,QACL,OAAO;AACd,OAAOC,OAAO,MAAM,YAAY,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAWjC,SAASC,kBAAkBA,CAAC,EAC1BC,KAAK,EACLC,MAAM,EACNC,oBAAoB,GAAG,KAAK,EAC5BC,gBAAgB,EAAEC,KAAK,EACN;EACjB;IACE;IACA;IACCH,MAAM,IACLH,aAAA,UAAKO,GAAG,EAAC,uBAAuB,EAACD,KAAK,EAAE,EAAEJ,KAAK,EAAEC,MAAM,EAAE,GAAGG,KAAK,EAAG;IACjEF,oBAAoB,IAAIJ,aAAA,CAACF,OAAO,IAACU,QAAQ,EAAC,UAAU;IAClD,CACN;IACD;IACA,IAAI;AAER;AAEA;;;;AAIA,eAAc,SAAUC,iBAAiBA;AAIvC;;;AAGAC,aAA8C;AAC9C;;;AAGAC,WAAA,GAEWV,kBAAkB;EAI7B,IAAIW,OAA+B;EACnC,IAAIC,SAAyC;EAE7C;;;EAGA,SAASC,cAAcA,CAAA;IACrB,IAAI,CAACF,OAAO,EAAE;MACZ;MACAA,OAAO;MACLF,aAAa,YAAYK,OAAO,GAAGL,aAAa,GAAGA,aAAa,EAAE;;IAEtE,IAAI,CAACG,SAAS,EAAE;MACdD,OAAO,CAACI,IAAI,CAAC,CAAAC,MAAM,KAAG;QACpBJ,SAAS,GAAKI,MAA+C,CAACC,OAAO;QACnED,MAAyC;MAC7C,CAAC,CAAC;;IAEJ,OAAOL,OAAO;EAChB;EASA,MAAMO,cAAc,gBAAmBtB,UAAU,CAAAuB,aAAA,CAAC,SAASD,cAAcA,CACvEE,KAAgB,EAChBC,GAA8C;IAE9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAACiB,SAAS,KAAKY,SAAS,CAAC;IAC7D9B,SAAS,CAAC,MAAK;MACb,IAAI+B,SAAS,GAAG,IAAI;MACpB,IAAI,CAACH,MAAM,EAAE;QACX;QACAT,cAAc,EAAE,CAACE,IAAI,CAAC,MAAK;UACzB,IAAIU,SAAS,EAAE;YACbF,SAAS,CAAC,IAAI,CAAC;;QAEnB,CAAC,CAAC;;MAEJ,OAAO,MAAK;QACVE,SAAS,GAAG,KAAK;MACnB,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,SAAS,GAAGd,SAAS,IAAIF,WAAW;IAC1C,OAAOgB,SAAS;IACd;IACA3B,aAAA,CAAC2B,SAAS,EAAAC,QAAA,GAACN,GAAG,EAAEK,SAAS,KAAKd,SAAS,GAAGS,GAAG,GAAG,IAAK,IAAKD,KAAK,CAAC,CAAG,GACjE,IAAI;EACV,CAAC,yEAAC;EACF;EACAF,cAAc,CAACU,OAAO,GAAGf,cAAc;EAEvC,OAAOK,cAEN;AACH,CAAC,mBAAAW,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAb,OAAA,GAAAO,SAAA,MAAAK,cAAA,WAAAA,cAAA,CAAAE,QAAA,CAnGQ/B,kBAAkB,6HAAA6B,cAAA,CAAAE,QAAA,CAuBHvB,iBAAiB,oJAAAwB,WAAA,UAAAF,oBAAA,mBAAAA,oBAAA,CAAAE,WAAA,GAAAR,SAAA,CAAAQ,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}