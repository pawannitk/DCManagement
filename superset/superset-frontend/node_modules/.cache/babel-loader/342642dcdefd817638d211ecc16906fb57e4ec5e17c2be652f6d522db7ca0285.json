{"ast":null,"code":"import _omit from \"lodash/omit\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport { isAdhocColumn, isPhysicalColumn } from './types';\nimport { isXAxisSet } from './getXAxis';\nexport function normalizeTimeColumn(formData, queryObject) {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!isXAxisSet(formData)) {\n    return queryObject;\n  }\n  const { columns: _columns, extras: _extras } = queryObject;\n  const mutatedColumns = [...(_columns || [])];\n  const axisIdx = _columns == null ? void 0 : _columns.findIndex((col) => isPhysicalColumn(col) &&\n  isPhysicalColumn(formData.x_axis) &&\n  col === formData.x_axis ||\n  isAdhocColumn(col) &&\n  isAdhocColumn(formData.x_axis) &&\n  col.sqlExpression === formData.x_axis.sqlExpression);\n  if (axisIdx !== undefined &&\n  axisIdx > -1 &&\n  formData.x_axis &&\n  Array.isArray(_columns)) {\n    if (isAdhocColumn(_columns[axisIdx])) {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras == null ? void 0 : _extras.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        ..._columns[axisIdx]\n      };\n    } else\n    {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras == null ? void 0 : _extras.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        sqlExpression: formData.x_axis,\n        label: formData.x_axis,\n        expressionType: 'SQL'\n      };\n    }\n    const newQueryObject = _omit(queryObject, ['is_timeseries']);\n    newQueryObject.columns = mutatedColumns;\n    return newQueryObject;\n  }\n  // fallback, return original queryObject\n  return queryObject;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(normalizeTimeColumn, \"normalizeTimeColumn\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/normalizeTimeColumn.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","isAdhocColumn","isPhysicalColumn","isXAxisSet","normalizeTimeColumn","formData","queryObject","columns","_columns","extras","_extras","mutatedColumns","axisIdx","findIndex","col","x_axis","sqlExpression","Array","isArray","timeGrain","time_grain_sqla","columnType","label","expressionType","newQueryObject","_omit","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/query/normalizeTimeColumn.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { omit } from 'lodash';\n\nimport {\n  AdhocColumn,\n  isAdhocColumn,\n  isPhysicalColumn,\n  QueryFormColumn,\n  QueryFormData,\n  QueryObject,\n} from './types';\nimport { isXAxisSet } from './getXAxis';\n\nexport function normalizeTimeColumn(\n  formData: QueryFormData,\n  queryObject: QueryObject,\n): QueryObject {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!isXAxisSet(formData)) {\n    return queryObject;\n  }\n\n  const { columns: _columns, extras: _extras } = queryObject;\n  const mutatedColumns: QueryFormColumn[] = [...(_columns || [])];\n  const axisIdx = _columns?.findIndex(\n    col =>\n      (isPhysicalColumn(col) &&\n        isPhysicalColumn(formData.x_axis) &&\n        col === formData.x_axis) ||\n      (isAdhocColumn(col) &&\n        isAdhocColumn(formData.x_axis) &&\n        col.sqlExpression === formData.x_axis.sqlExpression),\n  );\n  if (\n    axisIdx !== undefined &&\n    axisIdx > -1 &&\n    formData.x_axis &&\n    Array.isArray(_columns)\n  ) {\n    if (isAdhocColumn(_columns[axisIdx])) {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras?.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        ...(_columns[axisIdx] as AdhocColumn),\n      };\n    } else {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras?.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        sqlExpression: formData.x_axis,\n        label: formData.x_axis,\n        expressionType: 'SQL',\n      };\n    }\n\n    const newQueryObject = omit(queryObject, ['is_timeseries']);\n    newQueryObject.columns = mutatedColumns;\n\n    return newQueryObject;\n  }\n\n  // fallback, return original queryObject\n  return queryObject;\n}\n"],"mappings":"iCAAA;;;;;;;;;;;;;;;;;GAAA,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAoBA,SAEEC,aAAa,EACbC,gBAAgB,QAIX,SAAS;AAChB,SAASC,UAAU,QAAQ,YAAY;AAEvC,OAAM,SAAUC,mBAAmBA,CACjCC,QAAuB,EACvBC,WAAwB;EAExB;EACA,IAAI,CAACH,UAAU,CAACE,QAAQ,CAAC,EAAE;IACzB,OAAOC,WAAW;;EAGpB,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE,GAAGJ,WAAW;EAC1D,MAAMK,cAAc,GAAsB,CAAC,IAAIH,QAAQ,IAAI,EAAE,CAAC,CAAC;EAC/D,MAAMI,OAAO,GAAGJ,QAAQ,oBAARA,QAAQ,CAAEK,SAAS,CACjC,CAAAC,GAAG,KACAZ,gBAAgB,CAACY,GAAG,CAAC;EACpBZ,gBAAgB,CAACG,QAAQ,CAACU,MAAM,CAAC;EACjCD,GAAG,KAAKT,QAAQ,CAACU,MAAM;EACxBd,aAAa,CAACa,GAAG,CAAC;EACjBb,aAAa,CAACI,QAAQ,CAACU,MAAM,CAAC;EAC9BD,GAAG,CAACE,aAAa,KAAKX,QAAQ,CAACU,MAAM,CAACC,aAAc,CACzD;EACD,IACEJ,OAAO,KAAKjB,SAAS;EACrBiB,OAAO,GAAG,CAAC,CAAC;EACZP,QAAQ,CAACU,MAAM;EACfE,KAAK,CAACC,OAAO,CAACV,QAAQ,CAAC,EACvB;IACA,IAAIP,aAAa,CAACO,QAAQ,CAACI,OAAO,CAAC,CAAC,EAAE;MACpCD,cAAc,CAACC,OAAO,CAAC,GAAG;QACxBO,SAAS,EAAET,OAAO,oBAAPA,OAAO,CAAEU,eAAe;QACnCC,UAAU,EAAE,WAAW;QACvB,GAAIb,QAAQ,CAACI,OAAO;OACrB;KACF;IAAM;MACLD,cAAc,CAACC,OAAO,CAAC,GAAG;QACxBO,SAAS,EAAET,OAAO,oBAAPA,OAAO,CAAEU,eAAe;QACnCC,UAAU,EAAE,WAAW;QACvBL,aAAa,EAAEX,QAAQ,CAACU,MAAM;QAC9BO,KAAK,EAAEjB,QAAQ,CAACU,MAAM;QACtBQ,cAAc,EAAE;OACjB;;IAGH,MAAMC,cAAc,GAAGC,KAAA,CAAKnB,WAAW,EAAE,CAAC,eAAe,CAAC,CAAC;IAC3DkB,cAAc,CAACjB,OAAO,GAAGI,cAAc;IAEvC,OAAOa,cAAc;;EAGvB;EACA,OAAOlB,WAAW;AACpB,CAAC,mBAAAoB,cAAA,UAAAhC,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAA+B,cAAA,WAAAA,cAAA,CAAAC,QAAA,CAlDevB,mBAAmB,sKAAAwB,WAAA,UAAAlC,oBAAA,mBAAAA,oBAAA,CAAAkC,WAAA,GAAAjC,SAAA,CAAAiC,WAAA,IAAAA,WAAA,CAAAhC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}