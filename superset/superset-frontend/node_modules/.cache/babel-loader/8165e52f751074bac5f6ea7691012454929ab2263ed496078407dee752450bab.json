{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { css } from '@superset-ui/core';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport Chart from 'src/dashboard/containers/Chart';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport { Draggable } from 'src/dashboard/components/dnd/DragDroppable';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\nimport useFilterFocusHighlightStyles from 'src/dashboard/util/useFilterFocusHighlightStyles';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE, GRID_MIN_COLUMN_COUNT, GRID_MIN_ROW_UNITS } from 'src/dashboard/util/constants';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const CHART_MARGIN = 32;\nconst fullSizeStyle = css`\n  && {\n    position: fixed;\n    z-index: 3000;\n    left: 0;\n    top: 0;\n  }\n`;\nconst ChartHolder = ({ id, parentId, component, parentComponent, index, depth, availableColumnCount, columnWidth, onResizeStart, onResize, onResizeStop, editMode, isComponentVisible, dashboardId, fullSizeChartId, getComponentById = () => undefined, deleteComponent, updateComponents, handleComponentDrop, setFullSizeChartId, isInView }) => {\n  const { chartId } = component.meta;\n  const isFullSize = fullSizeChartId === chartId;\n  const focusHighlightStyles = useFilterFocusHighlightStyles(chartId);\n  const dashboardState = useSelector((state) => state.dashboardState);\n  const [extraControls, setExtraControls] = useState({});\n  const [outlinedComponentId, setOutlinedComponentId] = useState();\n  const [outlinedColumnName, setOutlinedColumnName] = useState();\n  const [currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated] = useState(0);\n  const directPathToChild = useMemo(() => {var _dashboardState$direc;return (_dashboardState$direc = dashboardState == null ? void 0 : dashboardState.directPathToChild) != null ? _dashboardState$direc : [];}, [dashboardState]);\n  const directPathLastUpdated = useMemo(() => {var _dashboardState$direc2;return (_dashboardState$direc2 = dashboardState == null ? void 0 : dashboardState.directPathLastUpdated) != null ? _dashboardState$direc2 : 0;}, [dashboardState]);\n  const infoFromPath = useMemo(() => getChartAndLabelComponentIdFromPath(directPathToChild), [directPathToChild]);\n  // Calculate if the chart should be outlined\n  useEffect(() => {\n    const { label: columnName, chart: chartComponentId } = infoFromPath;\n    if (directPathLastUpdated !== currentDirectPathLastUpdated &&\n    component.id === chartComponentId) {\n      setCurrentDirectPathLastUpdated(directPathLastUpdated);\n      setOutlinedComponentId(component.id);\n      setOutlinedColumnName(columnName);\n    }\n  }, [\n  component,\n  currentDirectPathLastUpdated,\n  directPathLastUpdated,\n  infoFromPath]\n  );\n  // Remove the chart outline after a defined time\n  useEffect(() => {\n    let timerId;\n    if (outlinedComponentId) {\n      timerId = setTimeout(() => {\n        setOutlinedComponentId(undefined);\n        setOutlinedColumnName(undefined);\n      }, 2000);\n    }\n    return () => {\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n    };\n  }, [outlinedComponentId]);\n  const widthMultiple = useMemo(() => {var _getComponentById, _getComponentById$met, _parentComponent$pare;\n    const columnParentWidth = (_getComponentById = getComponentById((_parentComponent$pare = parentComponent.parents) == null ? void 0 : _parentComponent$pare.find((parent) => parent.startsWith(COLUMN_TYPE)))) == null ? void 0 : (_getComponentById$met = _getComponentById.meta) == null ? void 0 : _getComponentById$met.width;\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else\n    if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n    return widthMultiple;\n  }, [\n  component,\n  getComponentById,\n  parentComponent.meta.width,\n  parentComponent.parents,\n  parentComponent.type]\n  );\n  const { chartWidth, chartHeight } = useMemo(() => {\n    let chartWidth = 0;\n    let chartHeight = 0;\n    if (isFullSize) {\n      chartWidth = window.innerWidth - CHART_MARGIN;\n      chartHeight = window.innerHeight - CHART_MARGIN;\n    } else\n    {\n      chartWidth = Math.floor(widthMultiple * columnWidth +\n      (widthMultiple - 1) * GRID_GUTTER_SIZE -\n      CHART_MARGIN);\n      chartHeight = Math.floor(component.meta.height * GRID_BASE_UNIT - CHART_MARGIN);\n    }\n    return {\n      chartWidth,\n      chartHeight\n    };\n  }, [columnWidth, component, isFullSize, widthMultiple]);\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n  const handleUpdateSliceName = useCallback((nextName) => {\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName\n        }\n      }\n    });\n  }, [component, updateComponents]);\n  const handleToggleFullSize = useCallback(() => {\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }, [chartId, isFullSize, setFullSizeChartId]);\n  const handleExtraControl = useCallback((name, value) => {\n    setExtraControls((current) => ({\n      ...current,\n      [name]: value\n    }));\n  }, []);\n  return ___EmotionJSX(Draggable, { component: component, parentComponent: parentComponent, orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row', index: index, depth: depth, onDrop: handleComponentDrop, disableDragDrop: false, editMode: editMode },\n  ({ dragSourceRef }) => ___EmotionJSX(ResizableContainer, { id: component.id, adjustableWidth: parentComponent.type === ROW_TYPE, adjustableHeight: true, widthStep: columnWidth, widthMultiple: widthMultiple, heightStep: GRID_BASE_UNIT, heightMultiple: component.meta.height, minWidthMultiple: GRID_MIN_COLUMN_COUNT, minHeightMultiple: GRID_MIN_ROW_UNITS, maxWidthMultiple: availableColumnCount + widthMultiple, onResizeStart: onResizeStart, onResize: onResize, onResizeStop: onResizeStop, editMode: editMode },\n  ___EmotionJSX(\"div\", { ref: dragSourceRef, \"data-test\": \"dashboard-component-chart-holder\", style: focusHighlightStyles, css: isFullSize ? fullSizeStyle : undefined, className: cx('dashboard-component', 'dashboard-component-chart-holder',\n    // The following class is added to support custom dashboard styling via the CSS editor\n    `dashboard-chart-id-${chartId}`, outlinedComponentId ? 'fade-in' : 'fade-out') },\n  !editMode && ___EmotionJSX(AnchorLink, { id: component.id, scrollIntoView: outlinedComponentId === component.id }),\n  !!outlinedComponentId && ___EmotionJSX(\"style\", null,\n  `label[for=${outlinedColumnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n                  }`\n  ),\n  ___EmotionJSX(Chart, { componentId: component.id, id: component.meta.chartId, dashboardId: dashboardId, width: chartWidth, height: chartHeight, sliceName: component.meta.sliceNameOverride ||\n    component.meta.sliceName ||\n    '', updateSliceName: handleUpdateSliceName, isComponentVisible: isComponentVisible, handleToggleFullSize: handleToggleFullSize, isFullSize: isFullSize, setControlValue: handleExtraControl, extraControls: extraControls, isInView: isInView }),\n  editMode && ___EmotionJSX(HoverMenu, { position: \"top\" },\n  ___EmotionJSX(\"div\", { \"data-test\": \"dashboard-delete-component-button\" },\n  ___EmotionJSX(DeleteComponentButton, { onDelete: handleDeleteComponent })\n  )\n  )\n  )\n  )\n  );\n};__signature__(ChartHolder, \"useFilterFocusHighlightStyles{focusHighlightStyles}\\nuseSelector{dashboardState}\\nuseState{[extraControls, setExtraControls]({})}\\nuseState{[outlinedComponentId, setOutlinedComponentId]}\\nuseState{[outlinedColumnName, setOutlinedColumnName]}\\nuseState{[currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated](0)}\\nuseMemo{directPathToChild}\\nuseMemo{directPathLastUpdated}\\nuseMemo{infoFromPath}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{widthMultiple}\\nuseMemo{{ chartWidth, chartHeight }}\\nuseCallback{handleDeleteComponent}\\nuseCallback{handleUpdateSliceName}\\nuseCallback{handleToggleFullSize}\\nuseCallback{handleExtraControl}\", () => [useFilterFocusHighlightStyles, useSelector]);const _default =\nChartHolder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_MARGIN, \"CHART_MARGIN\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");reactHotLoader.register(fullSizeStyle, \"fullSizeStyle\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");reactHotLoader.register(ChartHolder, \"ChartHolder\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useMemo","useCallback","useEffect","cx","useSelector","css","AnchorLink","Chart","DeleteComponentButton","Draggable","HoverMenu","ResizableContainer","getChartAndLabelComponentIdFromPath","useFilterFocusHighlightStyles","COLUMN_TYPE","ROW_TYPE","GRID_BASE_UNIT","GRID_GUTTER_SIZE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","jsx","___EmotionJSX","CHART_MARGIN","fullSizeStyle","ChartHolder","id","parentId","component","parentComponent","index","depth","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","editMode","isComponentVisible","dashboardId","fullSizeChartId","getComponentById","undefined","deleteComponent","updateComponents","handleComponentDrop","setFullSizeChartId","isInView","chartId","meta","isFullSize","focusHighlightStyles","dashboardState","state","extraControls","setExtraControls","outlinedComponentId","setOutlinedComponentId","outlinedColumnName","setOutlinedColumnName","currentDirectPathLastUpdated","setCurrentDirectPathLastUpdated","directPathToChild","_dashboardState$direc","directPathLastUpdated","_dashboardState$direc2","infoFromPath","label","columnName","chart","chartComponentId","timerId","setTimeout","clearTimeout","widthMultiple","_getComponentById","_getComponentById$met","_parentComponent$pare","columnParentWidth","parents","find","parent","startsWith","width","type","chartWidth","chartHeight","window","innerWidth","innerHeight","Math","floor","height","handleDeleteComponent","handleUpdateSliceName","nextName","sliceNameOverride","handleToggleFullSize","handleExtraControl","name","value","current","orientation","onDrop","disableDragDrop","dragSourceRef","adjustableWidth","adjustableHeight","widthStep","heightStep","heightMultiple","minWidthMultiple","minHeightMultiple","maxWidthMultiple","ref","style","className","scrollIntoView","componentId","sliceName","updateSliceName","setControlValue","position","onDelete","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { ResizeCallback, ResizeStartCallback } from 're-resizable';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { css } from '@superset-ui/core';\nimport { LayoutItem, RootState } from 'src/dashboard/types';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport Chart from 'src/dashboard/containers/Chart';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport { Draggable } from 'src/dashboard/components/dnd/DragDroppable';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\nimport useFilterFocusHighlightStyles from 'src/dashboard/util/useFilterFocusHighlightStyles';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  GRID_BASE_UNIT,\n  GRID_GUTTER_SIZE,\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n} from 'src/dashboard/util/constants';\n\nexport const CHART_MARGIN = 32;\n\ninterface ChartHolderProps {\n  id: string;\n  parentId: string;\n  dashboardId: number;\n  component: LayoutItem;\n  parentComponent: LayoutItem;\n  getComponentById?: (id?: string) => LayoutItem | undefined;\n  index: number;\n  depth: number;\n  editMode: boolean;\n  directPathLastUpdated?: number;\n  fullSizeChartId: number | null;\n  isComponentVisible: boolean;\n\n  // grid related\n  availableColumnCount: number;\n  columnWidth: number;\n  onResizeStart: ResizeStartCallback;\n  onResize: ResizeCallback;\n  onResizeStop: ResizeCallback;\n\n  // dnd\n  deleteComponent: (id: string, parentId: string) => void;\n  updateComponents: Function;\n  handleComponentDrop: (...args: unknown[]) => unknown;\n  setFullSizeChartId: (chartId: number | null) => void;\n  isInView: boolean;\n}\n\nconst fullSizeStyle = css`\n  && {\n    position: fixed;\n    z-index: 3000;\n    left: 0;\n    top: 0;\n  }\n`;\n\nconst ChartHolder: React.FC<ChartHolderProps> = ({\n  id,\n  parentId,\n  component,\n  parentComponent,\n  index,\n  depth,\n  availableColumnCount,\n  columnWidth,\n  onResizeStart,\n  onResize,\n  onResizeStop,\n  editMode,\n  isComponentVisible,\n  dashboardId,\n  fullSizeChartId,\n  getComponentById = () => undefined,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop,\n  setFullSizeChartId,\n  isInView,\n}) => {\n  const { chartId } = component.meta;\n  const isFullSize = fullSizeChartId === chartId;\n\n  const focusHighlightStyles = useFilterFocusHighlightStyles(chartId);\n  const dashboardState = useSelector(\n    (state: RootState) => state.dashboardState,\n  );\n  const [extraControls, setExtraControls] = useState<Record<string, unknown>>(\n    {},\n  );\n  const [outlinedComponentId, setOutlinedComponentId] = useState<string>();\n  const [outlinedColumnName, setOutlinedColumnName] = useState<string>();\n  const [currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated] =\n    useState(0);\n\n  const directPathToChild = useMemo(\n    () => dashboardState?.directPathToChild ?? [],\n    [dashboardState],\n  );\n\n  const directPathLastUpdated = useMemo(\n    () => dashboardState?.directPathLastUpdated ?? 0,\n    [dashboardState],\n  );\n\n  const infoFromPath = useMemo(\n    () => getChartAndLabelComponentIdFromPath(directPathToChild) as any,\n    [directPathToChild],\n  );\n\n  // Calculate if the chart should be outlined\n  useEffect(() => {\n    const { label: columnName, chart: chartComponentId } = infoFromPath;\n\n    if (\n      directPathLastUpdated !== currentDirectPathLastUpdated &&\n      component.id === chartComponentId\n    ) {\n      setCurrentDirectPathLastUpdated(directPathLastUpdated);\n      setOutlinedComponentId(component.id);\n      setOutlinedColumnName(columnName);\n    }\n  }, [\n    component,\n    currentDirectPathLastUpdated,\n    directPathLastUpdated,\n    infoFromPath,\n  ]);\n\n  // Remove the chart outline after a defined time\n  useEffect(() => {\n    let timerId: NodeJS.Timeout | undefined;\n    if (outlinedComponentId) {\n      timerId = setTimeout(() => {\n        setOutlinedComponentId(undefined);\n        setOutlinedColumnName(undefined);\n      }, 2000);\n    }\n\n    return () => {\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n    };\n  }, [outlinedComponentId]);\n\n  const widthMultiple = useMemo(() => {\n    const columnParentWidth = getComponentById(\n      parentComponent.parents?.find(parent => parent.startsWith(COLUMN_TYPE)),\n    )?.meta?.width;\n\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n\n    return widthMultiple;\n  }, [\n    component,\n    getComponentById,\n    parentComponent.meta.width,\n    parentComponent.parents,\n    parentComponent.type,\n  ]);\n\n  const { chartWidth, chartHeight } = useMemo(() => {\n    let chartWidth = 0;\n    let chartHeight = 0;\n\n    if (isFullSize) {\n      chartWidth = window.innerWidth - CHART_MARGIN;\n      chartHeight = window.innerHeight - CHART_MARGIN;\n    } else {\n      chartWidth = Math.floor(\n        widthMultiple * columnWidth +\n          (widthMultiple - 1) * GRID_GUTTER_SIZE -\n          CHART_MARGIN,\n      );\n      chartHeight = Math.floor(\n        component.meta.height * GRID_BASE_UNIT - CHART_MARGIN,\n      );\n    }\n\n    return {\n      chartWidth,\n      chartHeight,\n    };\n  }, [columnWidth, component, isFullSize, widthMultiple]);\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n\n  const handleUpdateSliceName = useCallback(\n    (nextName: string) => {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            sliceNameOverride: nextName,\n          },\n        },\n      });\n    },\n    [component, updateComponents],\n  );\n\n  const handleToggleFullSize = useCallback(() => {\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }, [chartId, isFullSize, setFullSizeChartId]);\n\n  const handleExtraControl = useCallback((name: string, value: unknown) => {\n    setExtraControls(current => ({\n      ...current,\n      [name]: value,\n    }));\n  }, []);\n\n  return (\n    <Draggable\n      component={component}\n      parentComponent={parentComponent}\n      orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n      index={index}\n      depth={depth}\n      onDrop={handleComponentDrop}\n      disableDragDrop={false}\n      editMode={editMode}\n    >\n      {({ dragSourceRef }) => (\n        <ResizableContainer\n          id={component.id}\n          adjustableWidth={parentComponent.type === ROW_TYPE}\n          adjustableHeight\n          widthStep={columnWidth}\n          widthMultiple={widthMultiple}\n          heightStep={GRID_BASE_UNIT}\n          heightMultiple={component.meta.height}\n          minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n          minHeightMultiple={GRID_MIN_ROW_UNITS}\n          maxWidthMultiple={availableColumnCount + widthMultiple}\n          onResizeStart={onResizeStart}\n          onResize={onResize}\n          onResizeStop={onResizeStop}\n          editMode={editMode}\n        >\n          <div\n            ref={dragSourceRef}\n            data-test=\"dashboard-component-chart-holder\"\n            style={focusHighlightStyles}\n            css={isFullSize ? fullSizeStyle : undefined}\n            className={cx(\n              'dashboard-component',\n              'dashboard-component-chart-holder',\n              // The following class is added to support custom dashboard styling via the CSS editor\n              `dashboard-chart-id-${chartId}`,\n              outlinedComponentId ? 'fade-in' : 'fade-out',\n            )}\n          >\n            {!editMode && (\n              <AnchorLink\n                id={component.id}\n                scrollIntoView={outlinedComponentId === component.id}\n              />\n            )}\n            {!!outlinedComponentId && (\n              <style>\n                {`label[for=${outlinedColumnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n                  }`}\n              </style>\n            )}\n            <Chart\n              componentId={component.id}\n              id={component.meta.chartId}\n              dashboardId={dashboardId}\n              width={chartWidth}\n              height={chartHeight}\n              sliceName={\n                component.meta.sliceNameOverride ||\n                component.meta.sliceName ||\n                ''\n              }\n              updateSliceName={handleUpdateSliceName}\n              isComponentVisible={isComponentVisible}\n              handleToggleFullSize={handleToggleFullSize}\n              isFullSize={isFullSize}\n              setControlValue={handleExtraControl}\n              extraControls={extraControls}\n              isInView={isInView}\n            />\n            {editMode && (\n              <HoverMenu position=\"top\">\n                <div data-test=\"dashboard-delete-component-button\">\n                  <DeleteComponentButton onDelete={handleDeleteComponent} />\n                </div>\n              </HoverMenu>\n            )}\n          </div>\n        </ResizableContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default ChartHolder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}