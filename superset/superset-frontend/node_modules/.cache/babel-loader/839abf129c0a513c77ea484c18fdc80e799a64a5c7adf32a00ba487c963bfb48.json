{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { project } from '@deck.gl/core';\nconst vs = \"\\nuniform vec4 mask_bounds;\\nuniform bool mask_maskByInstance;\\nvec2 mask_getCoords(vec4 position) {\\n  return (position.xy - mask_bounds.xy) / (mask_bounds.zw - mask_bounds.xy);\\n}\\n\";\nconst fs = \"\\nuniform sampler2D mask_texture;\\nuniform int mask_channel;\\nuniform bool mask_enabled;\\nuniform bool mask_inverted;\\nbool mask_isInBounds(vec2 texCoords) {\\n  if (!mask_enabled) {\\n    return true;\\n  }\\n  vec4 maskColor = texture2D(mask_texture, texCoords);\\n  float maskValue = 1.0;\\n  if (mask_channel == 0) {\\n    maskValue = maskColor.r;\\n  } else if (mask_channel == 1) {\\n    maskValue = maskColor.g;\\n  } else if (mask_channel == 2) {\\n    maskValue = maskColor.b;\\n  } else if (mask_channel == 3) {\\n    maskValue = maskColor.a;\\n  }\\n\\n  if (mask_inverted) {\\n    return maskValue >= 0.5;\\n  } else {\\n    return maskValue < 0.5;\\n  }\\n}\\n\";\nconst inject = {\n  'vs:#decl': \"\\nvarying vec2 mask_texCoords;\\n\",\n  'vs:#main-end': \"\\n   vec4 mask_common_position;\\n   if (mask_maskByInstance) {\\n     mask_common_position = project_position(vec4(geometry.worldPosition, 1.0));\\n   } else {\\n     mask_common_position = geometry.position;\\n   }\\n   mask_texCoords = mask_getCoords(mask_common_position);\\n\",\n  'fs:#decl': \"\\nvarying vec2 mask_texCoords;\\n\",\n  'fs:#main-start': \"\\n  if (mask_enabled) {\\n    bool mask = mask_isInBounds(mask_texCoords);\\n\\n    // Debug: show extent of render target\\n    // gl_FragColor = vec4(mask_texCoords, 0.0, 1.0);\\n    gl_FragColor = texture2D(mask_texture, mask_texCoords);\\n\\n    if (!mask) discard;\\n  }\\n\"\n};\n\nconst getMaskUniforms = (opts) => {\n  if (opts && 'maskMap' in opts) {\n    return {\n      mask_texture: opts.maskMap\n    };\n  }\n\n  return {};\n};const _default =\n\n{\n  name: 'mask',\n  dependencies: [project],\n  vs,\n  fs,\n  inject,\n  getUniforms: getMaskUniforms\n};export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(vs, \"vs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/mask/shader-module.js\");reactHotLoader.register(fs, \"fs\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/mask/shader-module.js\");reactHotLoader.register(inject, \"inject\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/mask/shader-module.js\");reactHotLoader.register(getMaskUniforms, \"getMaskUniforms\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/mask/shader-module.js\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/extensions/dist/esm/mask/shader-module.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["project","vs","fs","inject","getMaskUniforms","opts","mask_texture","maskMap","_default","name","dependencies","getUniforms","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["../../../src/mask/shader-module.ts"],"sourcesContent":["import {project} from '@deck.gl/core';\nimport type {_ShaderModule as ShaderModule} from '@deck.gl/core';\nimport type {Texture2D} from '@luma.gl/webgl';\n\nconst vs = `\nuniform vec4 mask_bounds;\nuniform bool mask_maskByInstance;\nvec2 mask_getCoords(vec4 position) {\n  return (position.xy - mask_bounds.xy) / (mask_bounds.zw - mask_bounds.xy);\n}\n`;\n\nconst fs = `\nuniform sampler2D mask_texture;\nuniform int mask_channel;\nuniform bool mask_enabled;\nuniform bool mask_inverted;\nbool mask_isInBounds(vec2 texCoords) {\n  if (!mask_enabled) {\n    return true;\n  }\n  vec4 maskColor = texture2D(mask_texture, texCoords);\n  float maskValue = 1.0;\n  if (mask_channel == 0) {\n    maskValue = maskColor.r;\n  } else if (mask_channel == 1) {\n    maskValue = maskColor.g;\n  } else if (mask_channel == 2) {\n    maskValue = maskColor.b;\n  } else if (mask_channel == 3) {\n    maskValue = maskColor.a;\n  }\n\n  if (mask_inverted) {\n    return maskValue >= 0.5;\n  } else {\n    return maskValue < 0.5;\n  }\n}\n`;\n\nconst inject = {\n  'vs:#decl': `\nvarying vec2 mask_texCoords;\n`,\n  'vs:#main-end': `\n   vec4 mask_common_position;\n   if (mask_maskByInstance) {\n     mask_common_position = project_position(vec4(geometry.worldPosition, 1.0));\n   } else {\n     mask_common_position = geometry.position;\n   }\n   mask_texCoords = mask_getCoords(mask_common_position);\n`,\n  'fs:#decl': `\nvarying vec2 mask_texCoords;\n`,\n  'fs:#main-start': `\n  if (mask_enabled) {\n    bool mask = mask_isInBounds(mask_texCoords);\n\n    // Debug: show extent of render target\n    // gl_FragColor = vec4(mask_texCoords, 0.0, 1.0);\n    gl_FragColor = texture2D(mask_texture, mask_texCoords);\n\n    if (!mask) discard;\n  }\n`\n};\n\ntype MaskModuleSettings = {\n  maskMap?: Texture2D;\n};\n\n/* eslint-disable camelcase */\nconst getMaskUniforms = (opts?: MaskModuleSettings | {}): Record<string, any> => {\n  if (opts && 'maskMap' in opts) {\n    return {\n      mask_texture: opts.maskMap\n    };\n  }\n  return {};\n};\n\nexport default {\n  name: 'mask',\n  dependencies: [project],\n  vs,\n  fs,\n  inject,\n  getUniforms: getMaskUniforms\n} as ShaderModule<MaskModuleSettings>;\n"],"mappings":"uSAAA,SAAQA,OAAR,QAAsB,eAAtB;AAIA,MAAMC,EAAE,4LAAR;AAQA,MAAMC,EAAE,gpBAAR;AA6BA,MAAMC,MAAM,GAAG;EACb,8CADa;EAIb,kSAJa;EAab,8CAba;EAgBb;AAhBa,CAAf;;AAkCA,MAAMC,eAAe,GAAIA,CAAAC,IAAD,KAAyD;EAC/E,IAAIA,IAAI,IAAI,aAAaA,IAAzB,EAA+B;IAC7B,OAAO;MACLC,YAAY,EAAED,IAAI,CAACE;IADd,CAAP;EAGD;;EACD,OAAO,EAAP;AACD,CAPD,OAAAC,QAAA;;AASe;EACbC,IAAI,EAAE,MADO;EAEbC,YAAY,EAAE,CAACV,OAAD,CAFD;EAGbC,EAHa;EAIbC,EAJa;EAKbC,MALa;EAMbQ,WAAW,EAAEP;AANA,CAAf,gBAAAI,QAAA,oBAAAI,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAhFMf,EAAE,qKAAAW,cAAA,CAAAI,QAAA,CAQFd,EAAE,qKAAAU,cAAA,CAAAI,QAAA,CA6BFb,MAAM,yKAAAS,cAAA,CAAAI,QAAA,CAkCNZ,eAAe,kLAAAQ,cAAA,CAAAI,QAAA,CAAAR,QAAA,kMAAAS,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}