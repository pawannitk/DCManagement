{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { getColumnLabel, getNumberFormatter, getTimeFormatter } from '@superset-ui/core';\nimport Echart from '../components/Echart';\nimport { formatSeriesName } from '../utils/series';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function EchartsGraph({ height, width, echartOptions, formData, onContextMenu, setDataMask, filterState, emitCrossFilters, refs, coltypeMapping }) {\n  const getCrossFilterDataMask = (node) => {\n    if (!(node != null && node.name) || !(node != null && node.col)) {\n      return undefined;\n    }\n    const { name, col } = node;\n    const selected = Object.values((filterState == null ? void 0 : filterState.selectedValues) || {});\n    let values;\n    if (selected.includes(name)) {\n      values = selected.filter((v) => v !== name);\n    } else\n    {\n      values = [name];\n    }\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length ?\n          [\n          {\n            col,\n            op: 'IN',\n            val: values\n          }] :\n\n          []\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? values : null\n        }\n      },\n      isCurrentValueSelected: selected.includes(name)\n    };\n  };\n  const eventHandlers = {\n    click: (e) => {var _getCrossFilterDataMa;\n      if (!emitCrossFilters || !setDataMask) {\n        return;\n      }\n      e.event.stop();\n      const data = echartOptions.series[0].data;\n      const node = data.find((item) => item.id === e.data.id);\n      const dataMask = (_getCrossFilterDataMa = getCrossFilterDataMask(node)) == null ? void 0 : _getCrossFilterDataMa.dataMask;\n      if (dataMask) {\n        setDataMask(dataMask);\n      }\n    },\n    contextmenu: (e) => {\n      const handleNodeClick = (data) => {\n        const node = data.find((item) => item.id === e.data.id);\n        if (node != null && node.name) {\n          return [\n          {\n            col: node.col,\n            op: '==',\n            val: node.name,\n            formattedVal: node.name\n          }];\n\n        }\n        return undefined;\n      };\n      const handleEdgeClick = (data) => {var _data$find, _data$find2;\n        const sourceValue = (_data$find = data.find((item) => item.id === e.data.source)) == null ? void 0 : _data$find.name;\n        const targetValue = (_data$find2 = data.find((item) => item.id === e.data.target)) == null ? void 0 : _data$find2.name;\n        if (sourceValue && targetValue) {\n          return [\n          {\n            col: formData.source,\n            op: '==',\n            val: sourceValue,\n            formattedVal: sourceValue\n          },\n          {\n            col: formData.target,\n            op: '==',\n            val: targetValue,\n            formattedVal: targetValue\n          }];\n\n        }\n        return undefined;\n      };\n      if (onContextMenu) {\n        e.event.stop();\n        const pointerEvent = e.event.event;\n        const data = echartOptions.series[0].data;\n        const drillToDetailFilters = e.dataType === 'node' ? handleNodeClick(data) : handleEdgeClick(data);\n        const node = data.find((item) => item.id === e.data.id);\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: getCrossFilterDataMask(node),\n          drillBy: node && {\n            filters: [\n            {\n              col: node.col,\n              op: '==',\n              val: node.name,\n              formattedVal: formatSeriesName(node.name, {\n                timeFormatter: getTimeFormatter(formData.dateFormat),\n                numberFormatter: getNumberFormatter(formData.numberFormat),\n                coltype: coltypeMapping == null ? void 0 : coltypeMapping[getColumnLabel(node.col)]\n              })\n            }],\n\n            groupbyFieldName: node.col === formData.source ? 'source' : 'target'\n          }\n        });\n      }\n    }\n  };\n  return ___EmotionJSX(Echart, { refs: refs, height: height, width: width, echartOptions: echartOptions, eventHandlers: eventHandlers });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EchartsGraph, \"EchartsGraph\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Graph/EchartsGraph.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","getColumnLabel","getNumberFormatter","getTimeFormatter","Echart","formatSeriesName","jsx","___EmotionJSX","EchartsGraph","height","width","echartOptions","formData","onContextMenu","setDataMask","filterState","emitCrossFilters","refs","coltypeMapping","getCrossFilterDataMask","node","name","col","undefined","selected","Object","values","selectedValues","includes","filter","v","dataMask","extraFormData","filters","length","op","val","value","isCurrentValueSelected","eventHandlers","click","e","_getCrossFilterDataMa","event","stop","data","series","find","item","id","contextmenu","handleNodeClick","formattedVal","handleEdgeClick","_data$find","_data$find2","sourceValue","source","targetValue","target","pointerEvent","drillToDetailFilters","dataType","clientX","clientY","drillToDetail","crossFilter","drillBy","timeFormatter","dateFormat","numberFormatter","numberFormat","coltype","groupbyFieldName","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Graph/EchartsGraph.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport {\n  getColumnLabel,\n  getNumberFormatter,\n  getTimeFormatter,\n} from '@superset-ui/core';\nimport { EventHandlers } from '../types';\nimport Echart from '../components/Echart';\nimport { GraphChartTransformedProps } from './types';\nimport { formatSeriesName } from '../utils/series';\n\ntype DataRow = {\n  source?: string;\n  target?: string;\n  id?: string;\n  col: string;\n  name: string;\n};\ntype Data = DataRow[];\ntype Event = {\n  name: string;\n  event: { stop: () => void; event: PointerEvent };\n  data: DataRow;\n  dataType: 'node' | 'edge';\n};\n\nexport default function EchartsGraph({\n  height,\n  width,\n  echartOptions,\n  formData,\n  onContextMenu,\n  setDataMask,\n  filterState,\n  emitCrossFilters,\n  refs,\n  coltypeMapping,\n}: GraphChartTransformedProps) {\n  const getCrossFilterDataMask = (node: DataRow | undefined) => {\n    if (!node?.name || !node?.col) {\n      return undefined;\n    }\n    const { name, col } = node;\n    const selected = Object.values(\n      filterState?.selectedValues || {},\n    ) as string[];\n    let values: string[];\n    if (selected.includes(name)) {\n      values = selected.filter(v => v !== name);\n    } else {\n      values = [name];\n    }\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length\n            ? [\n                {\n                  col,\n                  op: 'IN' as const,\n                  val: values,\n                },\n              ]\n            : [],\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? values : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(name),\n    };\n  };\n  const eventHandlers: EventHandlers = {\n    click: (e: Event) => {\n      if (!emitCrossFilters || !setDataMask) {\n        return;\n      }\n      e.event.stop();\n      const data = (echartOptions as any).series[0].data as Data;\n      const node = data.find(item => item.id === e.data.id);\n      const dataMask = getCrossFilterDataMask(node)?.dataMask;\n      if (dataMask) {\n        setDataMask(dataMask);\n      }\n    },\n    contextmenu: (e: Event) => {\n      const handleNodeClick = (data: Data) => {\n        const node = data.find(item => item.id === e.data.id);\n        if (node?.name) {\n          return [\n            {\n              col: node.col,\n              op: '==' as const,\n              val: node.name,\n              formattedVal: node.name,\n            },\n          ];\n        }\n        return undefined;\n      };\n      const handleEdgeClick = (data: Data) => {\n        const sourceValue = data.find(item => item.id === e.data.source)?.name;\n        const targetValue = data.find(item => item.id === e.data.target)?.name;\n        if (sourceValue && targetValue) {\n          return [\n            {\n              col: formData.source,\n              op: '==' as const,\n              val: sourceValue,\n              formattedVal: sourceValue,\n            },\n            {\n              col: formData.target,\n              op: '==' as const,\n              val: targetValue,\n              formattedVal: targetValue,\n            },\n          ];\n        }\n        return undefined;\n      };\n      if (onContextMenu) {\n        e.event.stop();\n        const pointerEvent = e.event.event;\n        const data = (echartOptions as any).series[0].data as Data;\n        const drillToDetailFilters =\n          e.dataType === 'node' ? handleNodeClick(data) : handleEdgeClick(data);\n        const node = data.find(item => item.id === e.data.id);\n\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: getCrossFilterDataMask(node),\n          drillBy: node && {\n            filters: [\n              {\n                col: node.col,\n                op: '==',\n                val: node.name,\n                formattedVal: formatSeriesName(node.name, {\n                  timeFormatter: getTimeFormatter(formData.dateFormat),\n                  numberFormatter: getNumberFormatter(formData.numberFormat),\n                  coltype: coltypeMapping?.[getColumnLabel(node.col)],\n                }),\n              },\n            ],\n            groupbyFieldName:\n              node.col === formData.source ? 'source' : 'target',\n          },\n        });\n      }\n    },\n  };\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}