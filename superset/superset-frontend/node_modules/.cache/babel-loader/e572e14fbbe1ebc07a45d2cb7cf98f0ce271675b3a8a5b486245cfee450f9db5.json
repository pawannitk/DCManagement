{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { RegistryWithDefaultKey, OverwritePolicy } from '../models';\nimport { DEFAULT_D3_FORMAT } from './D3FormatConfig';\nimport createD3NumberFormatter from './factories/createD3NumberFormatter';\nimport createSmartNumberFormatter from './factories/createSmartNumberFormatter';\nimport NumberFormats from './NumberFormats';\nexport default class NumberFormatterRegistry extends RegistryWithDefaultKey {\n\n  constructor() {\n    super({\n      name: 'NumberFormatter',\n      overwritePolicy: OverwritePolicy.Warn\n    });this.d3Format = void 0;\n    this.registerValue(NumberFormats.SMART_NUMBER, createSmartNumberFormatter());\n    this.registerValue(NumberFormats.SMART_NUMBER_SIGNED, createSmartNumberFormatter({ signed: true }));\n    this.setDefaultKey(NumberFormats.SMART_NUMBER);\n    this.d3Format = DEFAULT_D3_FORMAT;\n  }\n  setD3Format(d3Format) {\n    this.d3Format = { ...DEFAULT_D3_FORMAT, ...d3Format };\n    return this;\n  }\n  get(formatterId) {\n    const targetFormat = `${formatterId === null ||\n    typeof formatterId === 'undefined' ||\n    formatterId === '' ?\n    this.defaultKey :\n    formatterId}`.trim();\n    if (this.has(targetFormat)) {\n      return super.get(targetFormat);\n    }\n    // Create new formatter if does not exist\n    const formatter = createD3NumberFormatter({\n      formatString: targetFormat,\n      locale: this.d3Format\n    });\n    this.registerValue(targetFormat, formatter);\n    return formatter;\n  }\n  format(formatterId, value) {\n    return this.get(formatterId)(value);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NumberFormatterRegistry, \"NumberFormatterRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/NumberFormatterRegistry.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["RegistryWithDefaultKey","OverwritePolicy","DEFAULT_D3_FORMAT","createD3NumberFormatter","createSmartNumberFormatter","NumberFormats","NumberFormatterRegistry","constructor","name","overwritePolicy","Warn","d3Format","registerValue","SMART_NUMBER","SMART_NUMBER_SIGNED","signed","setDefaultKey","setD3Format","get","formatterId","targetFormat","defaultKey","trim","has","formatter","formatString","locale","format","value","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/number-format/NumberFormatterRegistry.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FormatLocaleDefinition } from 'd3-format';\nimport { RegistryWithDefaultKey, OverwritePolicy } from '../models';\nimport { DEFAULT_D3_FORMAT } from './D3FormatConfig';\nimport createD3NumberFormatter from './factories/createD3NumberFormatter';\nimport createSmartNumberFormatter from './factories/createSmartNumberFormatter';\nimport NumberFormats from './NumberFormats';\nimport NumberFormatter from './NumberFormatter';\n\nexport default class NumberFormatterRegistry extends RegistryWithDefaultKey<\n  NumberFormatter,\n  NumberFormatter\n> {\n  d3Format: FormatLocaleDefinition;\n\n  constructor() {\n    super({\n      name: 'NumberFormatter',\n      overwritePolicy: OverwritePolicy.Warn,\n    });\n\n    this.registerValue(\n      NumberFormats.SMART_NUMBER,\n      createSmartNumberFormatter(),\n    );\n    this.registerValue(\n      NumberFormats.SMART_NUMBER_SIGNED,\n      createSmartNumberFormatter({ signed: true }),\n    );\n    this.setDefaultKey(NumberFormats.SMART_NUMBER);\n    this.d3Format = DEFAULT_D3_FORMAT;\n  }\n\n  setD3Format(d3Format: Partial<FormatLocaleDefinition>) {\n    this.d3Format = { ...DEFAULT_D3_FORMAT, ...d3Format };\n    return this;\n  }\n\n  get(formatterId?: string) {\n    const targetFormat = `${\n      formatterId === null ||\n      typeof formatterId === 'undefined' ||\n      formatterId === ''\n        ? this.defaultKey\n        : formatterId\n    }`.trim();\n\n    if (this.has(targetFormat)) {\n      return super.get(targetFormat) as NumberFormatter;\n    }\n\n    // Create new formatter if does not exist\n    const formatter = createD3NumberFormatter({\n      formatString: targetFormat,\n      locale: this.d3Format,\n    });\n    this.registerValue(targetFormat, formatter);\n\n    return formatter;\n  }\n\n  format(\n    formatterId: string | undefined,\n    value: number | null | undefined,\n  ): string {\n    return this.get(formatterId)(value);\n  }\n}\n"],"mappings":"uSAmBA,SAASA,sBAAsB,EAAEC,eAAe,QAAQ,WAAW;AACnE,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,OAAOC,uBAAuB,MAAM,qCAAqC;AACzE,OAAOC,0BAA0B,MAAM,wCAAwC;AAC/E,OAAOC,aAAa,MAAM,iBAAiB;AAG3C,eAAc,MAAOC,uBAAwB,SAAQN,sBAGpD;;EAGCO,YAAA;IACE,KAAK,CAAC;MACJC,IAAI,EAAE,iBAAiB;MACvBC,eAAe,EAAER,eAAe,CAACS;KAClC,CAAC,CAAC,KANLC,QAAQ;IAQN,IAAI,CAACC,aAAa,CAChBP,aAAa,CAACQ,YAAY,EAC1BT,0BAA0B,EAAE,CAC7B;IACD,IAAI,CAACQ,aAAa,CAChBP,aAAa,CAACS,mBAAmB,EACjCV,0BAA0B,CAAC,EAAEW,MAAM,EAAE,IAAI,EAAE,CAAC,CAC7C;IACD,IAAI,CAACC,aAAa,CAACX,aAAa,CAACQ,YAAY,CAAC;IAC9C,IAAI,CAACF,QAAQ,GAAGT,iBAAiB;EACnC;EAEAe,WAAWA,CAACN,QAAyC;IACnD,IAAI,CAACA,QAAQ,GAAG,EAAE,GAAGT,iBAAiB,EAAE,GAAGS,QAAQ,EAAE;IACrD,OAAO,IAAI;EACb;EAEAO,GAAGA,CAACC,WAAoB;IACtB,MAAMC,YAAY,GAAG,GACnBD,WAAW,KAAK,IAAI;IACpB,OAAOA,WAAW,KAAK,WAAW;IAClCA,WAAW,KAAK,EAAE;IACd,IAAI,CAACE,UAAU;IACfF,WACN,EAAE,CAACG,IAAI,EAAE;IAET,IAAI,IAAI,CAACC,GAAG,CAACH,YAAY,CAAC,EAAE;MAC1B,OAAO,KAAK,CAACF,GAAG,CAACE,YAAY,CAAoB;;IAGnD;IACA,MAAMI,SAAS,GAAGrB,uBAAuB,CAAC;MACxCsB,YAAY,EAAEL,YAAY;MAC1BM,MAAM,EAAE,IAAI,CAACf;KACd,CAAC;IACF,IAAI,CAACC,aAAa,CAACQ,YAAY,EAAEI,SAAS,CAAC;IAE3C,OAAOA,SAAS;EAClB;EAEAG,MAAMA,CACJR,WAA+B,EAC/BS,KAAgC;IAEhC,OAAO,IAAI,CAACV,GAAG,CAACC,WAAW,CAAC,CAACS,KAAK,CAAC;EACrC,CAAC;EAAAC,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1DoB/B,uBAAwB,sLAAAgC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}