{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'src/components';\nimport Button from 'src/components/Button';\nimport Tabs from 'src/components/Tabs';\nimport { legacyValidateInteger, styled, t } from '@superset-ui/core';\nimport ControlHeader from '../../ControlHeader';\nimport TextControl from '../TextControl';\nimport ColorPickerControl from '../ColorPickerControl';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar ContourTypes;\n(function (ContourTypes) {\n  ContourTypes[\"Isoline\"] = \"ISOLINE\";\n  ContourTypes[\"Isoband\"] = \"ISOBAND\";\n})(ContourTypes || (ContourTypes = {}));\nconst ContourActionsContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst StyledRow = styled(Row)`\n  width: 100%;\n  gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst isIsoband = (contour) => {\n  if (Object.keys(contour).length < 4) {\n    return false;\n  }\n  return contour.upperThreshold && contour.lowerThreshold;\n};\nconst getTabKey = (contour) => contour && isIsoband(contour) ? ContourTypes.Isoband : ContourTypes.Isoline;\nconst determineErrorMap = (tab, contour) => {\n  const errorMap = {\n    lowerThreshold: [],\n    upperThreshold: [],\n    strokeWidth: [],\n    color: []\n  };\n  // Isoline and Isoband validation\n  const lowerThresholdError = legacyValidateInteger(contour.lowerThreshold);\n  if (lowerThresholdError)\n  errorMap.lowerThreshold.push(lowerThresholdError);\n  // Isoline only validation\n  if (tab === ContourTypes.Isoline) {\n    const strokeWidthError = legacyValidateInteger(contour.strokeWidth);\n    if (strokeWidthError)\n    errorMap.strokeWidth.push(strokeWidthError);\n  }\n  // Isoband only validation\n  if (tab === ContourTypes.Isoband) {\n    const upperThresholdError = legacyValidateInteger(contour.upperThreshold);\n    if (upperThresholdError)\n    errorMap.upperThreshold.push(upperThresholdError);\n    if (!upperThresholdError &&\n    !lowerThresholdError &&\n    contour.upperThreshold &&\n    contour.lowerThreshold) {\n      const lower = parseFloat(contour.lowerThreshold);\n      const upper = parseFloat(contour.upperThreshold);\n      if (lower >= upper) {\n        errorMap.lowerThreshold.push(t('Lower threshold must be lower than upper threshold'));\n        errorMap.upperThreshold.push(t('Upper threshold must be greater than lower threshold'));\n      }\n    }\n  }\n  return errorMap;\n};\nconst convertContourToNumeric = (contour) => {\n  const formattedContour = { ...contour };\n  const numericKeys = ['lowerThreshold', 'upperThreshold', 'strokeWidth'];\n  numericKeys.forEach((key) => {\n    formattedContour[key] = Number(formattedContour[key]);\n  });\n  return formattedContour;\n};\nconst formatIsoline = (contour) => ({\n  color: contour.color,\n  lowerThreshold: contour.lowerThreshold,\n  upperThreshold: undefined,\n  strokeWidth: contour.strokeWidth\n});\nconst formatIsoband = (contour) => ({\n  color: contour.color,\n  lowerThreshold: contour.lowerThreshold,\n  upperThreshold: contour.upperThreshold,\n  strokeWidth: undefined\n});\nconst DEFAULT_CONTOUR = {\n  lowerThreshold: undefined,\n  upperThreshold: undefined,\n  color: undefined,\n  strokeWidth: undefined\n};\nconst ContourPopoverControl = ({ value: initialValue, onSave, onClose }) => {\n  const [currentTab, setCurrentTab] = useState(getTabKey(initialValue));\n  const [contour, setContour] = useState(initialValue || DEFAULT_CONTOUR);\n  const [validationErrors, setValidationErrors] = useState(determineErrorMap(getTabKey(initialValue), initialValue || DEFAULT_CONTOUR));\n  const [isComplete, setIsComplete] = useState(false);\n  useEffect(() => {\n    const isIsoband = currentTab === ContourTypes.Isoband;\n    const validLower = Boolean(contour.lowerThreshold) || contour.lowerThreshold === 0;\n    const validUpper = Boolean(contour.upperThreshold) || contour.upperThreshold === 0;\n    const validStrokeWidth = Boolean(contour.strokeWidth) || contour.strokeWidth === 0;\n    const validColor = typeof contour.color === 'object' &&\n    'r' in contour.color &&\n    typeof contour.color.r === 'number' &&\n    'g' in contour.color &&\n    typeof contour.color.g === 'number' &&\n    'b' in contour.color &&\n    typeof contour.color.b === 'number' &&\n    'a' in contour.color &&\n    typeof contour.color.a === 'number';\n    const errors = determineErrorMap(currentTab, contour);\n    if (errors !== validationErrors)\n    setValidationErrors(errors);\n    const sectionIsComplete = isIsoband ?\n    validLower && validUpper && validColor :\n    validLower && validColor && validStrokeWidth;\n    if (sectionIsComplete !== isComplete)\n    setIsComplete(sectionIsComplete);\n  }, [contour, currentTab]);\n  const onTabChange = (activeKey) => {\n    setCurrentTab(activeKey);\n  };\n  const updateStrokeWidth = (value) => {\n    const newContour = { ...contour };\n    newContour.strokeWidth = value;\n    setContour(newContour);\n  };\n  const updateColor = (rgb) => {\n    const newContour = { ...contour };\n    newContour.color = { ...rgb, a: 100 };\n    setContour(newContour);\n  };\n  const updateLowerThreshold = (value) => {\n    const newContour = { ...contour };\n    newContour.lowerThreshold = value;\n    setContour(newContour);\n  };\n  const updateUpperThreshold = (value) => {\n    const newContour = { ...contour };\n    newContour.upperThreshold = value;\n    setContour(newContour);\n  };\n  const containsErrors = () => {\n    const keys = Object.keys(validationErrors);\n    return keys.some((key) => validationErrors[key].length > 0);\n  };\n  const handleSave = () => {\n    if (isComplete && onSave) {\n      const newContour = currentTab === ContourTypes.Isoline ?\n      formatIsoline(contour) :\n      formatIsoband(contour);\n      onSave(convertContourToNumeric(newContour));\n      if (onClose)\n      onClose();\n    }\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Tabs, { id: \"contour-edit-tabs\", onChange: onTabChange, defaultActiveKey: getTabKey(initialValue) },\n  ___EmotionJSX(Tabs.TabPane, { className: \"adhoc-filter-edit-tab\", key: ContourTypes.Isoline, tab: t('Isoline') },\n  ___EmotionJSX(\"div\", { key: ContourTypes.Isoline, className: \"isoline-popover-section\" },\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoline-threshold\", label: t('Threshold'), description: t('Defines the value that determines the boundary between different regions or levels in the data '), validationErrors: validationErrors.lowerThreshold, hovered: true }),\n  ___EmotionJSX(TextControl, { value: contour.lowerThreshold, onChange: updateLowerThreshold })\n  )\n  ),\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoline-stroke-width\", label: t('Stroke Width'), description: t('The width of the Isoline in pixels'), validationErrors: validationErrors.strokeWidth, hovered: true }),\n  ___EmotionJSX(TextControl, { value: contour.strokeWidth || '', onChange: updateStrokeWidth })\n  ),\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoline-color\", label: t('Color'), description: t('The color of the isoline'), validationErrors: validationErrors.color, hovered: true }),\n  ___EmotionJSX(ColorPickerControl, { value: typeof contour === 'object' && (contour == null ? void 0 : contour.color), onChange: updateColor })\n  )\n  )\n  )\n  ),\n  ___EmotionJSX(Tabs.TabPane, { className: \"adhoc-filter-edit-tab\", key: ContourTypes.Isoband, tab: t('Isoband') },\n  ___EmotionJSX(\"div\", { key: ContourTypes.Isoband, className: \"isoline-popover-section\" },\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoband-threshold-lower\", label: t('Lower Threshold'), description: t('The lower limit of the threshold range of the Isoband'), validationErrors: validationErrors.lowerThreshold, hovered: true }),\n  ___EmotionJSX(TextControl, { value: contour.lowerThreshold || '', onChange: updateLowerThreshold })\n  ),\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoband-threshold-upper\", label: t('Upper Threshold'), description: t('The upper limit of the threshold range of the Isoband'), validationErrors: validationErrors.upperThreshold, hovered: true }),\n  ___EmotionJSX(TextControl, { value: contour.upperThreshold || '', onChange: updateUpperThreshold })\n  )\n  ),\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { flex: \"1\" },\n  ___EmotionJSX(ControlHeader, { name: \"isoband-color\", label: t('Color'), description: t('The color of the isoband'), validationErrors: validationErrors.color, hovered: true }),\n  ___EmotionJSX(ColorPickerControl, { value: contour == null ? void 0 : contour.color, onChange: updateColor })\n  )\n  )\n  )\n  )\n  ),\n  ___EmotionJSX(ContourActionsContainer, null,\n  ___EmotionJSX(Button, { buttonSize: \"small\", onClick: onClose, cta: true },\n  t('Close')\n  ),\n  ___EmotionJSX(Button, { \"data-test\": \"adhoc-filter-edit-popover-save-button\", disabled: !isComplete || containsErrors(), buttonStyle: \"primary\", buttonSize: \"small\", className: \"m-r-5\", onClick: handleSave, cta: true },\n  t('Save')\n  )\n  )\n  );\n};__signature__(ContourPopoverControl, \"useState{[currentTab, setCurrentTab](getTabKey(initialValue))}\\nuseState{[contour, setContour](initialValue || DEFAULT_CONTOUR)}\\nuseState{[validationErrors, setValidationErrors](determineErrorMap(getTabKey(initialValue), initialValue || DEFAULT_CONTOUR))}\\nuseState{[isComplete, setIsComplete](false)}\\nuseEffect{}\");const _default =\nContourPopoverControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ContourTypes, \"ContourTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(ContourActionsContainer, \"ContourActionsContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(StyledRow, \"StyledRow\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(isIsoband, \"isIsoband\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(getTabKey, \"getTabKey\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(determineErrorMap, \"determineErrorMap\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(convertContourToNumeric, \"convertContourToNumeric\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(formatIsoline, \"formatIsoline\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(formatIsoband, \"formatIsoband\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(DEFAULT_CONTOUR, \"DEFAULT_CONTOUR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(ContourPopoverControl, \"ContourPopoverControl\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Button","Tabs","legacyValidateInteger","styled","t","ControlHeader","TextControl","ColorPickerControl","jsx","___EmotionJSX","ContourTypes","ContourActionsContainer","div","theme","gridUnit","StyledRow","isIsoband","contour","Object","keys","length","upperThreshold","lowerThreshold","getTabKey","Isoband","Isoline","determineErrorMap","tab","errorMap","strokeWidth","color","lowerThresholdError","push","strokeWidthError","upperThresholdError","lower","parseFloat","upper","convertContourToNumeric","formattedContour","numericKeys","forEach","key","Number","formatIsoline","undefined","formatIsoband","DEFAULT_CONTOUR","ContourPopoverControl","value","initialValue","onSave","onClose","currentTab","setCurrentTab","setContour","validationErrors","setValidationErrors","isComplete","setIsComplete","validLower","Boolean","validUpper","validStrokeWidth","validColor","r","g","b","a","errors","sectionIsComplete","onTabChange","activeKey","updateStrokeWidth","newContour","updateColor","rgb","updateLowerThreshold","updateUpperThreshold","containsErrors","some","handleSave","Fragment","id","onChange","defaultActiveKey","TabPane","className","flex","name","label","description","hovered","buttonSize","onClick","cta","disabled","buttonStyle","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ContourControl/ContourPopoverControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'src/components';\nimport Button from 'src/components/Button';\nimport Tabs from 'src/components/Tabs';\nimport { legacyValidateInteger, styled, t } from '@superset-ui/core';\nimport ControlHeader from '../../ControlHeader';\nimport TextControl from '../TextControl';\nimport ColorPickerControl from '../ColorPickerControl';\nimport {\n  ContourPopoverControlProps,\n  ColorType,\n  ContourType,\n  ErrorMapType,\n} from './types';\n\nenum ContourTypes {\n  Isoline = 'ISOLINE',\n  Isoband = 'ISOBAND',\n}\n\nconst ContourActionsContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst StyledRow = styled(Row)`\n  width: 100%;\n  gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst isIsoband = (contour: ContourType) => {\n  if (Object.keys(contour).length < 4) {\n    return false;\n  }\n  return contour.upperThreshold && contour.lowerThreshold;\n};\n\nconst getTabKey = (contour: ContourType | undefined) =>\n  contour && isIsoband(contour) ? ContourTypes.Isoband : ContourTypes.Isoline;\n\nconst determineErrorMap = (tab: string, contour: ContourType) => {\n  const errorMap: ErrorMapType = {\n    lowerThreshold: [],\n    upperThreshold: [],\n    strokeWidth: [],\n    color: [],\n  };\n  // Isoline and Isoband validation\n  const lowerThresholdError = legacyValidateInteger(contour.lowerThreshold);\n  if (lowerThresholdError) errorMap.lowerThreshold.push(lowerThresholdError);\n\n  // Isoline only validation\n  if (tab === ContourTypes.Isoline) {\n    const strokeWidthError = legacyValidateInteger(contour.strokeWidth);\n    if (strokeWidthError) errorMap.strokeWidth.push(strokeWidthError);\n  }\n\n  // Isoband only validation\n  if (tab === ContourTypes.Isoband) {\n    const upperThresholdError = legacyValidateInteger(contour.upperThreshold);\n    if (upperThresholdError) errorMap.upperThreshold.push(upperThresholdError);\n    if (\n      !upperThresholdError &&\n      !lowerThresholdError &&\n      contour.upperThreshold &&\n      contour.lowerThreshold\n    ) {\n      const lower = parseFloat(contour.lowerThreshold);\n      const upper = parseFloat(contour.upperThreshold);\n      if (lower >= upper) {\n        errorMap.lowerThreshold.push(\n          t('Lower threshold must be lower than upper threshold'),\n        );\n        errorMap.upperThreshold.push(\n          t('Upper threshold must be greater than lower threshold'),\n        );\n      }\n    }\n  }\n  return errorMap;\n};\n\nconst convertContourToNumeric = (contour: ContourType) => {\n  const formattedContour = { ...contour };\n  const numericKeys = ['lowerThreshold', 'upperThreshold', 'strokeWidth'];\n  numericKeys.forEach(key => {\n    formattedContour[key] = Number(formattedContour[key]);\n  });\n  return formattedContour;\n};\n\nconst formatIsoline = (contour: ContourType) => ({\n  color: contour.color,\n  lowerThreshold: contour.lowerThreshold,\n  upperThreshold: undefined,\n  strokeWidth: contour.strokeWidth,\n});\n\nconst formatIsoband = (contour: ContourType) => ({\n  color: contour.color,\n  lowerThreshold: contour.lowerThreshold,\n  upperThreshold: contour.upperThreshold,\n  strokeWidth: undefined,\n});\n\nconst DEFAULT_CONTOUR = {\n  lowerThreshold: undefined,\n  upperThreshold: undefined,\n  color: undefined,\n  strokeWidth: undefined,\n};\n\nconst ContourPopoverControl = ({\n  value: initialValue,\n  onSave,\n  onClose,\n}: ContourPopoverControlProps) => {\n  const [currentTab, setCurrentTab] = useState(getTabKey(initialValue));\n  const [contour, setContour] = useState(initialValue || DEFAULT_CONTOUR);\n  const [validationErrors, setValidationErrors] = useState(\n    determineErrorMap(getTabKey(initialValue), initialValue || DEFAULT_CONTOUR),\n  );\n  const [isComplete, setIsComplete] = useState(false);\n\n  useEffect(() => {\n    const isIsoband = currentTab === ContourTypes.Isoband;\n    const validLower =\n      Boolean(contour.lowerThreshold) || contour.lowerThreshold === 0;\n    const validUpper =\n      Boolean(contour.upperThreshold) || contour.upperThreshold === 0;\n    const validStrokeWidth =\n      Boolean(contour.strokeWidth) || contour.strokeWidth === 0;\n    const validColor =\n      typeof contour.color === 'object' &&\n      'r' in contour.color &&\n      typeof contour.color.r === 'number' &&\n      'g' in contour.color &&\n      typeof contour.color.g === 'number' &&\n      'b' in contour.color &&\n      typeof contour.color.b === 'number' &&\n      'a' in contour.color &&\n      typeof contour.color.a === 'number';\n\n    const errors = determineErrorMap(currentTab, contour);\n    if (errors !== validationErrors) setValidationErrors(errors);\n\n    const sectionIsComplete = isIsoband\n      ? validLower && validUpper && validColor\n      : validLower && validColor && validStrokeWidth;\n\n    if (sectionIsComplete !== isComplete) setIsComplete(sectionIsComplete);\n  }, [contour, currentTab]);\n\n  const onTabChange = (activeKey: any) => {\n    setCurrentTab(activeKey);\n  };\n\n  const updateStrokeWidth = (value: number | string) => {\n    const newContour = { ...contour };\n    newContour.strokeWidth = value;\n    setContour(newContour);\n  };\n\n  const updateColor = (rgb: ColorType) => {\n    const newContour = { ...contour };\n    newContour.color = { ...rgb, a: 100 };\n    setContour(newContour);\n  };\n\n  const updateLowerThreshold = (value: number | string) => {\n    const newContour = { ...contour };\n    newContour.lowerThreshold = value;\n    setContour(newContour);\n  };\n\n  const updateUpperThreshold = (value: number | string) => {\n    const newContour = { ...contour };\n    newContour.upperThreshold = value;\n    setContour(newContour);\n  };\n\n  const containsErrors = () => {\n    const keys = Object.keys(validationErrors);\n    return keys.some(key => validationErrors[key].length > 0);\n  };\n\n  const handleSave = () => {\n    if (isComplete && onSave) {\n      const newContour =\n        currentTab === ContourTypes.Isoline\n          ? formatIsoline(contour)\n          : formatIsoband(contour);\n      onSave(convertContourToNumeric(newContour));\n      if (onClose) onClose();\n    }\n  };\n\n  return (\n    <>\n      <Tabs\n        id=\"contour-edit-tabs\"\n        onChange={onTabChange}\n        defaultActiveKey={getTabKey(initialValue)}\n      >\n        <Tabs.TabPane\n          className=\"adhoc-filter-edit-tab\"\n          key={ContourTypes.Isoline}\n          tab={t('Isoline')}\n        >\n          <div key={ContourTypes.Isoline} className=\"isoline-popover-section\">\n            <StyledRow>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoline-threshold\"\n                  label={t('Threshold')}\n                  description={t(\n                    'Defines the value that determines the boundary between different regions or levels in the data ',\n                  )}\n                  validationErrors={validationErrors.lowerThreshold}\n                  hovered\n                />\n                <TextControl\n                  value={contour.lowerThreshold}\n                  onChange={updateLowerThreshold}\n                />\n              </Col>\n            </StyledRow>\n            <StyledRow>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoline-stroke-width\"\n                  label={t('Stroke Width')}\n                  description={t('The width of the Isoline in pixels')}\n                  validationErrors={validationErrors.strokeWidth}\n                  hovered\n                />\n                <TextControl\n                  value={contour.strokeWidth || ''}\n                  onChange={updateStrokeWidth}\n                />\n              </Col>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoline-color\"\n                  label={t('Color')}\n                  description={t('The color of the isoline')}\n                  validationErrors={validationErrors.color}\n                  hovered\n                />\n                <ColorPickerControl\n                  value={typeof contour === 'object' && contour?.color}\n                  onChange={updateColor}\n                />\n              </Col>\n            </StyledRow>\n          </div>\n        </Tabs.TabPane>\n        <Tabs.TabPane\n          className=\"adhoc-filter-edit-tab\"\n          key={ContourTypes.Isoband}\n          tab={t('Isoband')}\n        >\n          <div key={ContourTypes.Isoband} className=\"isoline-popover-section\">\n            <StyledRow>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoband-threshold-lower\"\n                  label={t('Lower Threshold')}\n                  description={t(\n                    'The lower limit of the threshold range of the Isoband',\n                  )}\n                  validationErrors={validationErrors.lowerThreshold}\n                  hovered\n                />\n                <TextControl\n                  value={contour.lowerThreshold || ''}\n                  onChange={updateLowerThreshold}\n                />\n              </Col>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoband-threshold-upper\"\n                  label={t('Upper Threshold')}\n                  description={t(\n                    'The upper limit of the threshold range of the Isoband',\n                  )}\n                  validationErrors={validationErrors.upperThreshold}\n                  hovered\n                />\n                <TextControl\n                  value={contour.upperThreshold || ''}\n                  onChange={updateUpperThreshold}\n                />\n              </Col>\n            </StyledRow>\n            <StyledRow>\n              <Col flex=\"1\">\n                <ControlHeader\n                  name=\"isoband-color\"\n                  label={t('Color')}\n                  description={t('The color of the isoband')}\n                  validationErrors={validationErrors.color}\n                  hovered\n                />\n                <ColorPickerControl\n                  value={contour?.color}\n                  onChange={updateColor}\n                />\n              </Col>\n            </StyledRow>\n          </div>\n        </Tabs.TabPane>\n      </Tabs>\n      <ContourActionsContainer>\n        <Button buttonSize=\"small\" onClick={onClose} cta>\n          {t('Close')}\n        </Button>\n        <Button\n          data-test=\"adhoc-filter-edit-popover-save-button\"\n          disabled={!isComplete || containsErrors()}\n          buttonStyle=\"primary\"\n          buttonSize=\"small\"\n          className=\"m-r-5\"\n          onClick={handleSave}\n          cta\n        >\n          {t('Save')}\n        </Button>\n      </ContourActionsContainer>\n    </>\n  );\n};\n\nexport default ContourPopoverControl;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}