{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isFreeFormAdhocFilter, isSimpleAdhocFilter } from '@superset-ui/core';\nimport { OPERATOR_ENUM_TO_OPERATOR_TYPE, Operators } from 'src/explore/constants';\nimport { getSimpleSQLExpression } from 'src/explore/exploreUtils';\nexport const OPERATORS_TO_SQL = {\n  '==': '=',\n  '!=': '<>',\n  '>': '>',\n  '<': '<',\n  '>=': '>=',\n  '<=': '<=',\n  IN: 'IN',\n  'NOT IN': 'NOT IN',\n  LIKE: 'LIKE',\n  ILIKE: 'ILIKE',\n  REGEX: 'REGEX',\n  'IS NOT NULL': 'IS NOT NULL',\n  'IS NULL': 'IS NULL',\n  'IS TRUE': 'IS TRUE',\n  'IS FALSE': 'IS FALSE',\n  'LATEST PARTITION': ({ datasource }) => `= '{{ presto.latest_partition('${datasource.schema}.${datasource.datasource_name}') }}'`\n};\nexport const translateToSql = (adhocFilter, { useSimple } = { useSimple: false }) => {\n  if (isSimpleAdhocFilter(adhocFilter) || useSimple) {\n    const { subject, operator } = adhocFilter;\n    const comparator = 'comparator' in adhocFilter ? adhocFilter.comparator : undefined;\n    const op = operator &&\n    // 'LATEST PARTITION' supported callback only\n    operator ===\n    OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.LatestPartition].operation ?\n    OPERATORS_TO_SQL[operator](adhocFilter) :\n    OPERATORS_TO_SQL[operator];\n    return getSimpleSQLExpression(subject, op, comparator);\n  }\n  if (isFreeFormAdhocFilter(adhocFilter)) {\n    return adhocFilter.sqlExpression;\n  }\n  return '';\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OPERATORS_TO_SQL, \"OPERATORS_TO_SQL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/utils/translateToSQL.ts\");reactHotLoader.register(translateToSql, \"translateToSql\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/utils/translateToSQL.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["isFreeFormAdhocFilter","isSimpleAdhocFilter","OPERATOR_ENUM_TO_OPERATOR_TYPE","Operators","getSimpleSQLExpression","OPERATORS_TO_SQL","IN","LIKE","ILIKE","REGEX","LATEST PARTITION","datasource","schema","datasource_name","translateToSql","adhocFilter","useSimple","subject","operator","comparator","undefined","op","LatestPartition","operation","sqlExpression","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/FilterControl/utils/translateToSQL.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  isFreeFormAdhocFilter,\n  isSimpleAdhocFilter,\n  SimpleAdhocFilter,\n} from '@superset-ui/core';\nimport {\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n  Operators,\n} from 'src/explore/constants';\nimport { getSimpleSQLExpression } from 'src/explore/exploreUtils';\n\nexport const OPERATORS_TO_SQL = {\n  '==': '=',\n  '!=': '<>',\n  '>': '>',\n  '<': '<',\n  '>=': '>=',\n  '<=': '<=',\n  IN: 'IN',\n  'NOT IN': 'NOT IN',\n  LIKE: 'LIKE',\n  ILIKE: 'ILIKE',\n  REGEX: 'REGEX',\n  'IS NOT NULL': 'IS NOT NULL',\n  'IS NULL': 'IS NULL',\n  'IS TRUE': 'IS TRUE',\n  'IS FALSE': 'IS FALSE',\n  'LATEST PARTITION': ({\n    datasource,\n  }: {\n    datasource: { schema: string; datasource_name: string };\n  }) =>\n    `= '{{ presto.latest_partition('${datasource.schema}.${datasource.datasource_name}') }}'`,\n};\n\nexport const translateToSql = (\n  adhocFilter: AdhocFilter,\n  { useSimple }: { useSimple: boolean } = { useSimple: false },\n) => {\n  if (isSimpleAdhocFilter(adhocFilter) || useSimple) {\n    const { subject, operator } = adhocFilter as SimpleAdhocFilter;\n    const comparator =\n      'comparator' in adhocFilter ? adhocFilter.comparator : undefined;\n    const op =\n      operator &&\n      // 'LATEST PARTITION' supported callback only\n      operator ===\n        OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.LatestPartition].operation\n        ? OPERATORS_TO_SQL[operator](adhocFilter)\n        : OPERATORS_TO_SQL[operator];\n    return getSimpleSQLExpression(subject, op, comparator);\n  }\n  if (isFreeFormAdhocFilter(adhocFilter)) {\n    return adhocFilter.sqlExpression;\n  }\n  return '';\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,qBAAqB,EACrBC,mBAAmB,QAEd,mBAAmB;AAC1B,SACEC,8BAA8B,EAC9BC,SAAS,QACJ,uBAAuB;AAC9B,SAASC,sBAAsB,QAAQ,0BAA0B;AAEjE,OAAO,MAAMC,gBAAgB,GAAG;EAC9B,IAAI,EAAE,GAAG;EACT,IAAI,EAAE,IAAI;EACV,GAAG,EAAE,GAAG;EACR,GAAG,EAAE,GAAG;EACR,IAAI,EAAE,IAAI;EACV,IAAI,EAAE,IAAI;EACVC,EAAE,EAAE,IAAI;EACR,QAAQ,EAAE,QAAQ;EAClBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACd,aAAa,EAAE,aAAa;EAC5B,SAAS,EAAE,SAAS;EACpB,SAAS,EAAE,SAAS;EACpB,UAAU,EAAE,UAAU;EACtB,kBAAkB,EAAEC,CAAC,EACnBC,UAAU,EAGX,KACC,kCAAkCA,UAAU,CAACC,MAAM,IAAID,UAAU,CAACE,eAAe;CACpF;AAED,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,WAAwB,EACxB,EAAEC,SAAS,KAA6B,EAAEA,SAAS,EAAE,KAAK,EAAE,KAC1D;EACF,IAAIf,mBAAmB,CAACc,WAAW,CAAC,IAAIC,SAAS,EAAE;IACjD,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE,GAAGH,WAAgC;IAC9D,MAAMI,UAAU,GACd,YAAY,IAAIJ,WAAW,GAAGA,WAAW,CAACI,UAAU,GAAGC,SAAS;IAClE,MAAMC,EAAE,GACNH,QAAQ;IACR;IACAA,QAAQ;IACNhB,8BAA8B,CAACC,SAAS,CAACmB,eAAe,CAAC,CAACC,SAAS;IACjElB,gBAAgB,CAACa,QAAQ,CAAC,CAACH,WAAW,CAAC;IACvCV,gBAAgB,CAACa,QAAQ,CAAC;IAChC,OAAOd,sBAAsB,CAACa,OAAO,EAAEI,EAAE,EAAEF,UAAU,CAAC;;EAExD,IAAInB,qBAAqB,CAACe,WAAW,CAAC,EAAE;IACtC,OAAOA,WAAW,CAACS,aAAa;;EAElC,OAAO,EAAE;AACX,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAP,SAAA,MAAAK,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA7CWvB,gBAAgB,sJAAAoB,cAAA,CAAAG,QAAA,CAwBhBd,cAAc,4KAAAe,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAT,SAAA,CAAAS,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}