{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport { ensureIsArray, getMetricLabel, getXAxisLabel, isDefined } from '@superset-ui/core';\nimport { extractExtraMetrics } from './utils';\nexport const sortOperator = (formData, queryObject) => {\n  // the sortOperator only used in the barchart v2\n  const sortableLabels = [\n  getXAxisLabel(formData),\n  ...ensureIsArray(formData.metrics).map(getMetricLabel),\n  ...extractExtraMetrics(formData).map(getMetricLabel)].\n  filter(Boolean);\n  if (isDefined(formData == null ? void 0 : formData.x_axis_sort) &&\n  isDefined(formData == null ? void 0 : formData.x_axis_sort_asc) &&\n  sortableLabels.includes(formData.x_axis_sort) &&\n  // the sort operator doesn't support sort-by multiple series.\n  _isEmpty(formData.groupby)) {\n    if (formData.x_axis_sort === getXAxisLabel(formData)) {\n      return {\n        operation: 'sort',\n        options: {\n          is_sort_index: true,\n          ascending: formData.x_axis_sort_asc\n        }\n      };\n    }\n    return {\n      operation: 'sort',\n      options: {\n        by: formData.x_axis_sort,\n        ascending: formData.x_axis_sort_asc\n      }\n    };\n  }\n  return undefined;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(sortOperator, \"sortOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/sortOperator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","ensureIsArray","getMetricLabel","getXAxisLabel","isDefined","extractExtraMetrics","sortOperator","formData","queryObject","sortableLabels","metrics","map","filter","Boolean","x_axis_sort","x_axis_sort_asc","includes","_isEmpty","groupby","operation","options","is_sort_index","ascending","by","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/sortOperator.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { isEmpty } from 'lodash';\nimport {\n  ensureIsArray,\n  getMetricLabel,\n  getXAxisLabel,\n  isDefined,\n  PostProcessingSort,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { extractExtraMetrics } from './utils';\n\nexport const sortOperator: PostProcessingFactory<PostProcessingSort> = (\n  formData,\n  queryObject,\n) => {\n  // the sortOperator only used in the barchart v2\n  const sortableLabels = [\n    getXAxisLabel(formData),\n    ...ensureIsArray(formData.metrics).map(getMetricLabel),\n    ...extractExtraMetrics(formData).map(getMetricLabel),\n  ].filter(Boolean);\n\n  if (\n    isDefined(formData?.x_axis_sort) &&\n    isDefined(formData?.x_axis_sort_asc) &&\n    sortableLabels.includes(formData.x_axis_sort) &&\n    // the sort operator doesn't support sort-by multiple series.\n    isEmpty(formData.groupby)\n  ) {\n    if (formData.x_axis_sort === getXAxisLabel(formData)) {\n      return {\n        operation: 'sort',\n        options: {\n          is_sort_index: true,\n          ascending: formData.x_axis_sort_asc,\n        },\n      };\n    }\n\n    return {\n      operation: 'sort',\n      options: {\n        by: formData.x_axis_sort,\n        ascending: formData.x_axis_sort_asc,\n      },\n    };\n  }\n  return undefined;\n};\n"],"mappings":"uCAAA;;;;;;;;;;;;;;;;;GAAA,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAmBA,SACEC,aAAa,EACbC,cAAc,EACdC,aAAa,EACbC,SAAS,QAEJ,mBAAmB;AAE1B,SAASC,mBAAmB,QAAQ,SAAS;AAE7C,OAAO,MAAMC,YAAY,GAA8CA,CACrEC,QAAQ,EACRC,WAAW,KACT;EACF;EACA,MAAMC,cAAc,GAAG;EACrBN,aAAa,CAACI,QAAQ,CAAC;EACvB,GAAGN,aAAa,CAACM,QAAQ,CAACG,OAAO,CAAC,CAACC,GAAG,CAACT,cAAc,CAAC;EACtD,GAAGG,mBAAmB,CAACE,QAAQ,CAAC,CAACI,GAAG,CAACT,cAAc,CAAC,CACrD;EAACU,MAAM,CAACC,OAAO,CAAC;EAEjB,IACET,SAAS,CAACG,QAAQ,oBAARA,QAAQ,CAAEO,WAAW,CAAC;EAChCV,SAAS,CAACG,QAAQ,oBAARA,QAAQ,CAAEQ,eAAe,CAAC;EACpCN,cAAc,CAACO,QAAQ,CAACT,QAAQ,CAACO,WAAW,CAAC;EAC7C;EACAG,QAAA,CAAQV,QAAQ,CAACW,OAAO,CAAC,EACzB;IACA,IAAIX,QAAQ,CAACO,WAAW,KAAKX,aAAa,CAACI,QAAQ,CAAC,EAAE;MACpD,OAAO;QACLY,SAAS,EAAE,MAAM;QACjBC,OAAO,EAAE;UACPC,aAAa,EAAE,IAAI;UACnBC,SAAS,EAAEf,QAAQ,CAACQ;;OAEvB;;IAGH,OAAO;MACLI,SAAS,EAAE,MAAM;MACjBC,OAAO,EAAE;QACPG,EAAE,EAAEhB,QAAQ,CAACO,WAAW;QACxBQ,SAAS,EAAEf,QAAQ,CAACQ;;KAEvB;;EAEH,OAAOpB,SAAS;AAClB,CAAC,CAAC,mBAAA6B,cAAA,UAAA9B,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAA6B,cAAA,WAAAA,cAAA,CAAAC,QAAA,CArCWnB,YAAY,sKAAAoB,WAAA,UAAAhC,oBAAA,mBAAAA,oBAAA,CAAAgC,WAAA,GAAA/B,SAAA,CAAA+B,WAAA,IAAAA,WAAA,CAAA9B,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}