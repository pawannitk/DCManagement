{"ast":null,"code":"import _throttle from \"lodash/throttle\";import _kebabCase from \"lodash/kebabCase\"; /* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  smartDateVerboseFormatter,\n  t } from\n'@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns } from\n'./vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeBarChartWidth,\n  computeYDomain,\n  computeStackedYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateRichLineTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  generateAreaChartTooltipContent,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  tryNumify,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip } from\n'./utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType } from\n'./PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n{ text: 'No data', dy: '-.75em', class: 'header' },\n{\n  text: 'Adjust filters or check the Datasource.',\n  dy: '.75em',\n  class: 'body'\n}];\n\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container.\n  selectAll('.nv-noData').\n  data(NO_DATA_RENDER_DATA);\n\n  noDataText.\n  enter().\n  append('text').\n  attr('class', (d) => `nvd3 nv-noData ${d.class}`).\n  attr('dy', (d) => d.dy).\n  style('text-anchor', 'middle');\n\n  noDataText.\n  attr('x', x).\n  attr('y', y).\n  text((d) => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340\n};\n\nconst TIMESERIES_VIZ_TYPES = ['line', 'area', 'compare', 'bar', 'time_pivot'];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([\n    // pie\n    categoryAndValueXYType,\n    // dist-bar\n    PropTypes.shape({\n      key: PropTypes.string,\n      values: PropTypes.arrayOf(categoryAndValueXYType)\n    }),\n    // area, line, compare, bar\n    PropTypes.shape({\n      key: PropTypes.arrayOf(PropTypes.string),\n      values: PropTypes.arrayOf(numericXYType)\n    }),\n    // dual-line\n    PropTypes.shape({\n      classed: PropTypes.string,\n      key: PropTypes.string,\n      type: PropTypes.string,\n      values: PropTypes.arrayOf(numericXYType),\n      yAxis: PropTypes.number\n    }),\n    // box-plot\n    PropTypes.shape({\n      label: PropTypes.string,\n      values: PropTypes.arrayOf(boxPlotValueType)\n    }),\n    // bubble\n    PropTypes.shape({\n      key: PropTypes.string,\n      values: PropTypes.arrayOf(PropTypes.object)\n    })]\n    )\n  ),\n  // bullet\n  bulletDataType]\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n  'area',\n  'bar',\n  'box_plot',\n  'bubble',\n  'bullet',\n  'compare',\n  'column',\n  'dist_bar',\n  'line',\n  'time_pivot',\n  'pie']\n  ),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n  'key',\n  'value',\n  'percent',\n  'key_value',\n  'key_percent',\n  'key_value_percent']\n  ),\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter((layer) => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${_kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n    xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar']) ||\n    xTicksLayout === '45°' ?\n    45 :\n    0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter')\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n    isTruthy(showBrush) ||\n    showBrush === 'auto' &&\n    maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n    xTicksLayout !== '45°';\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models.\n        multiBarChart().\n        showControls(showControls).\n        reduceXTicks(reduceXTicks).\n        groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach((d) => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n            tryNumify(a.x) < tryNumify(b.x) ? -1 : 1\n            );\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType((d) => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, (d) => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter((d) => percentFormatter(d));\n            chart.labelType(\n              (d) => `${d.data.x}: ${percentFormatter(d.data.y / total)}`\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              (d) => `${numberFormatter(d)} (${percentFormatter(d / total)})`\n            );\n            chart.labelType(\n              (d) =>\n              `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                d.data.y / total\n              )})`\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator((d) =>\n        generateBubbleTooltipContent({\n          point: d.point,\n          entity,\n          xField,\n          yField,\n          sizeField,\n          xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n          yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n          sizeFormatter: formatter\n        })\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n        0,\n        d3.max(data, (d) => d3.max(d.values, (v) => v.size))]\n        );\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x((d) => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', (event) => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat((d) =>\n        d.length > MAX_NO_CHARACTERS_IN_LABEL ?\n        `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…` :\n        d\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n      (contribution || comparisonType === 'percentage') && (\n      !yAxisFormat ||\n      yAxisFormat === NumberFormats.SMART_NUMBER ||\n      yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED))\n      {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color((d) => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter)\n      );\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        (d) => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId)\n      );\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateRichLineTooltipContent(\n          d,\n          smartDateVerboseFormatter,\n          yAxisFormatter\n        )\n        );\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateCompareTooltipContent(d, yAxisFormatter)\n        );\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator((d) =>\n        generateAreaChartTooltipContent(\n          d,\n          smartDateVerboseFormatter,\n          yAxisFormatter,\n          chart\n        )\n        );\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateCompareTooltipContent(d, yAxisFormatter)\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg.\n    datum(data).\n    transition().\n    duration(500).\n    attr('height', height).\n    attr('width', width).\n    call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat((d) =>\n      d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : ''\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n      chart.yDomain &&\n      Array.isArray(yAxisBounds) &&\n      yAxisBounds.length === 2)\n      {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'expand')\n        {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n        (hasCustomMin || hasCustomMax) &&\n        vizType === 'area' &&\n        chart.style() === 'stream')\n        {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n          vizType === 'area' ||\n          isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg.\n      selectAll('.nv-point').\n      style('stroke-opacity', 1).\n      style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg.\n          selectAll('.nv-point').\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD)\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y'\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n        maxXAxisLabelHeight * Math.sin(Math.PI * xLabelRotation / 180) +\n        marginPad +\n        30;\n        margins.right =\n        maxXAxisLabelHeight * Math.cos(Math.PI * xLabelRotation / 180) +\n        marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers.\n        filter(\n          (layer) => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES\n        ).\n        reduce(\n          (bushel, a) =>\n          bushel.concat(\n            (annotationData[a.name] || []).map((series) => {\n              if (!series) {\n                return {};\n              }\n              const key = Array.isArray(series.key) ?\n              `${a.name}, ${series.key.join(', ')}` :\n              `${a.name}, ${series.key}`;\n\n              return {\n                ...series,\n                key,\n                color: a.color,\n                strokeWidth: a.width,\n                classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`\n              };\n            })\n          ),\n          []\n        );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n          generateTooltipClassName(chartId)]\n          );\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg.\n      datum(data).\n      transition().\n      duration(500).\n      attr('width', width).\n      attr('height', height).\n      call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        _throttle(() => hideTooltips(false), 250)\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          (a) => a.annotationType === ANNOTATION_TYPES.FORMULA\n        );\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, (d) => d.x);\n          xMax = d3.max(data[0].values, (d) => d.x);\n          xScale = d3.scale.\n          quantile().\n          domain([xMin, xMax]).\n          range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach((x) => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n              ...data.map((d) =>\n              Math.min(\n                ...d.values.slice(1).map((v, i) => v.x - d.values[i].x)\n              )\n              )\n            );\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map((fo) => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map((x) => ({\n                x,\n                y: evalExpression(expression, x)\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers.\n          filter(\n            (x) =>\n            x.annotationType === ANNOTATION_TYPES.EVENT &&\n            annotationData &&\n            annotationData[x.name]\n          ).\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add event annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-event-annotation-layer-${index}`);\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n            const tip = tipFactory({\n              ...e,\n              annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`\n            });\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue\n              };\n            }).\n            filter(\n              (record) =>\n              !Number.isNaN(record[e.timeColumn].getMilliseconds())\n            );\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('line').\n              data(records).\n              enter().\n              append('line').\n              attr({\n                x1: (d) => xScale(new Date(d[e.timeColumn])),\n                y1: 0,\n                x2: (d) => xScale(new Date(d[e.timeColumn])),\n                y2: annotationHeight\n              }).\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke', aColor).\n              style('stroke-width', e.width).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                annotations.\n                selectAll('line').\n                data(records).\n                attr({\n                  x1: (d) => xScale(new Date(d[e.timeColumn])),\n                  y1: 0,\n                  x2: (d) => xScale(new Date(d[e.timeColumn])),\n                  y2: annotationHeight,\n                  opacity: (d) => {\n                    const x = xScale(new Date(d[e.timeColumn]));\n\n                    return x > 0 && x < chartWidth ? 1 : 0;\n                  }\n                });\n              });\n            }\n          });\n\n          // Interval annotations\n          activeAnnotationLayers.\n          filter(\n            (x) =>\n            x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n            annotationData &&\n            annotationData[x.name]\n          ).\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add interval annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-interval-annotation-layer-${index}`);\n\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n            const tip = tipFactory(e);\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(moment.utc(r[e.timeColumn]));\n              const intervalEndValue = new Date(\n                moment.utc(r[e.intervalEndColumn])\n              );\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue,\n                [e.intervalEndColumn]: intervalEndValue\n              };\n            }).\n            filter(\n              (record) =>\n              !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n              !Number.isNaN(\n                record[e.intervalEndColumn].getMilliseconds()\n              )\n            );\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('rect').\n              data(records).\n              enter().\n              append('rect').\n              attr({\n                x: (d) =>\n                Math.min(\n                  xScale(new Date(d[e.timeColumn])),\n                  xScale(new Date(d[e.intervalEndColumn]))\n                ),\n                y: 0,\n                width: (d) =>\n                Math.max(\n                  Math.abs(\n                    xScale(new Date(d[e.intervalEndColumn])) -\n                    xScale(new Date(d[e.timeColumn]))\n                  ),\n                  1\n                ),\n                height: annotationHeight\n              }).\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke-width', e.width).\n              style('stroke', aColor).\n              style('fill', aColor).\n              style('fill-opacity', 0.2).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                annotations.\n                selectAll('rect').\n                data(records).\n                attr({\n                  x: (d) => xScale(new Date(d[e.timeColumn])),\n                  width: (d) => {\n                    const x1 = xScale(new Date(d[e.timeColumn]));\n                    const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                    return x2 - x1;\n                  }\n                });\n              });\n            }\n          });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point'\n          ).\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue'\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  __signature__(drawGraph, \"useInteractiveGuideline{}\\nuseInteractiveGuideline{}\\nuseInteractiveGuideline{}\");if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;const _default =\nnvd3Vis;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NO_DATA_RENDER_DATA, \"NO_DATA_RENDER_DATA\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getColor, \"getColor\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getScale, \"getScale\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_MARGIN_PAD, \"MAX_MARGIN_PAD\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MIN_HEIGHT_FOR_BRUSH, \"MIN_HEIGHT_FOR_BRUSH\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_NO_CHARACTERS_IN_LABEL, \"MAX_NO_CHARACTERS_IN_LABEL\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(BREAKPOINTS, \"BREAKPOINTS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(TIMESERIES_VIZ_TYPES, \"TIMESERIES_VIZ_TYPES\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(CHART_ID_PREFIX, \"CHART_ID_PREFIX\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(NOOP, \"NOOP\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(formatter, \"formatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(nvd3Vis, \"nvd3Vis\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","d3","moment","nv","PropTypes","CategoricalColorNamespace","evalExpression","getNumberFormatter","getTimeFormatter","isDefined","NumberFormats","smartDateVerboseFormatter","t","ANNOTATION_TYPES","applyNativeColumns","isTruthy","cleanColorInput","computeBarChartWidth","computeYDomain","computeStackedYDomain","drawBarValues","generateBubbleTooltipContent","generateCompareTooltipContent","generateRichLineTooltipContent","generateTimePivotTooltip","generateTooltipClassName","generateAreaChartTooltipContent","getMaxLabelSize","getTimeOrNumberFormatter","hideTooltips","tipFactory","tryNumify","removeTooltip","setAxisShowMaxMin","stringifyTimeRange","wrapTooltip","annotationLayerType","boxPlotValueType","bulletDataType","categoryAndValueXYType","rgbObjectType","numericXYType","numberOrAutoType","stringOrObjectWithLabelType","NO_DATA_RENDER_DATA","text","dy","class","utils","noData","chart","container","opt","options","margin","height","availableHeight","width","availableWidth","x","left","y","top","selectAll","remove","noDataText","data","enter","append","attr","d","style","getColor","getScale","MAX_MARGIN_PAD","MIN_HEIGHT_FOR_BRUSH","MAX_NO_CHARACTERS_IN_LABEL","BREAKPOINTS","small","TIMESERIES_VIZ_TYPES","CHART_ID_PREFIX","propTypes","oneOfType","arrayOf","shape","key","string","values","classed","type","yAxis","number","label","object","annotationData","annotationLayers","bottomMargin","colorScheme","comparisonType","contribution","bool","leftMargin","onError","func","showLegend","showMarkers","useRichTooltip","vizType","oneOf","xAxisFormat","numberFormat","xAxisLabel","xAxisShowMinMax","xIsLogScale","xTicksLayout","yAxisFormat","yAxisBounds","yAxisLabel","yAxisShowMinMax","yIsLogScale","orderBars","isBarStacked","showBarValue","reduceXTicks","showControls","showBrush","onBrushEnd","yAxis2Format","lineInterpolation","isDonut","isPieLabelOutside","pieLabelType","showLabels","areaStackedStyle","entity","maxBubbleSize","xField","yField","sizeField","baseColor","NOOP","formatter","nvd3Vis","element","props","maxWidth","maxHeight","markerLabels","markerLines","markerLineLabels","markers","rangeLabels","ranges","yAxis2ShowMinMax","sliceId","isExplore","document","querySelector","innerHTML","activeAnnotationLayers","filter","layer","show","chartContainer","chartId","parentElement","id","startsWith","colorKey","isVizTypes","types","includes","drawGraph","d3Element","select","_kebabCase","svg","empty","Math","min","isTimeSeries","staggerLabels","xLabelRotation","canShowBrush","numberFormatter","models","lineWithFocusChart","focus","bottom","focusHeight","xScale","time","scale","utc","lineChart","interpolate","clipEdge","multiBarChart","groupSpacing","xAxis","showMaxMin","stacked","forEach","newValues","sort","b","pieChart","valueFormat","donut","labelsOutside","labelThreshold","cornerRadius","labelType","total","sum","percentFormatter","PERCENT_2_POINT","tooltip","valueFormatter","cumulativeLineChart","useInteractiveGuideline","scatterChart","showDistX","showDistY","contentGenerator","point","xFormatter","yFormatter","sizeFormatter","pointRange","pointDomain","max","v","size","stackedAreaChart","boxPlotChart","maxBoxWidth","bulletChart","Error","dispatch","on","event","timeRange","extent","brush","rotateLabels","x2Axis","yScale","log","xAxisFormatter","interactiveLayer","headerFormatter","tickFormat","isXAxisString","length","slice","yAxisFormatter","SMART_NUMBER","SMART_NUMBER_SIGNED","PERCENT_1_POINT","y2Axis","ticks","r","g","color","alpha","rank","perc","colorFn","datum","transition","duration","call","log10","xTicks","applyYAxisBounds","yDomain","Array","isArray","customMin","customMax","hasCustomMin","Number","isNaN","hasCustomMax","trueMin","trueMax","stateChange","setTimeout","yAxis2","marginPad","ceil","margins","maxYAxisLabelWidth","maxXAxisLabelHeight","right","sin","PI","cos","parseInt","distance","axisLabel","axisLabelDistance","timeSeriesAnnotations","annotationType","TIME_SERIES","reduce","bushel","concat","name","map","series","join","strokeWidth","opacity","hideLine","push","classes","window","addEventListener","_throttle","formulas","FORMULA","xMax","xMin","quantile","domain","range","valueOf","linear","clamp","xValues","distinct","xVals","add","Set","period","i","dataPoints","formulaData","fo","value","expression","xAxis1","yAxis1","chartWidth","annotationHeight","EVENT","config","index","e","annotations","aColor","tip","annotationTipClass","sourceType","records","timeValue","Date","timeColumn","record","getMilliseconds","x1","y1","x2","y2","hide","INTERVAL","intervalEndValue","intervalEndColumn","abs","addGraph","displayName","_default","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { kebabCase, throttle } from 'lodash';\nimport d3 from 'd3';\nimport moment from 'moment';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  smartDateVerboseFormatter,\n  t,\n} from '@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns,\n} from './vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeBarChartWidth,\n  computeYDomain,\n  computeStackedYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateRichLineTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  generateAreaChartTooltipContent,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  tryNumify,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip,\n} from './utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType,\n} from './PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n  { text: 'No data', dy: '-.75em', class: 'header' },\n  {\n    text: 'Adjust filters or check the Datasource.',\n    dy: '.75em',\n    class: 'body',\n  },\n];\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container\n    .selectAll('.nv-noData')\n    .data(NO_DATA_RENDER_DATA);\n\n  noDataText\n    .enter()\n    .append('text')\n    .attr('class', d => `nvd3 nv-noData ${d.class}`)\n    .attr('dy', d => d.dy)\n    .style('text-anchor', 'middle');\n\n  noDataText\n    .attr('x', x)\n    .attr('y', y)\n    .text(d => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340,\n};\n\nconst TIMESERIES_VIZ_TYPES = ['line', 'area', 'compare', 'bar', 'time_pivot'];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        // pie\n        categoryAndValueXYType,\n        // dist-bar\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(categoryAndValueXYType),\n        }),\n        // area, line, compare, bar\n        PropTypes.shape({\n          key: PropTypes.arrayOf(PropTypes.string),\n          values: PropTypes.arrayOf(numericXYType),\n        }),\n        // dual-line\n        PropTypes.shape({\n          classed: PropTypes.string,\n          key: PropTypes.string,\n          type: PropTypes.string,\n          values: PropTypes.arrayOf(numericXYType),\n          yAxis: PropTypes.number,\n        }),\n        // box-plot\n        PropTypes.shape({\n          label: PropTypes.string,\n          values: PropTypes.arrayOf(boxPlotValueType),\n        }),\n        // bubble\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(PropTypes.object),\n        }),\n      ]),\n    ),\n    // bullet\n    bulletDataType,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  useRichTooltip: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n    'area',\n    'bar',\n    'box_plot',\n    'bubble',\n    'bullet',\n    'compare',\n    'column',\n    'dist_bar',\n    'line',\n    'time_pivot',\n    'pie',\n  ]),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'dist-bar' only\n  orderBars: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'column'\n  reduceXTicks: PropTypes.bool,\n  // 'bar', 'dist-bar' or 'area'\n  showControls: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n    'key',\n    'value',\n    'percent',\n    'key_value',\n    'key_percent',\n    'key_value_percent',\n  ]),\n  showLabels: PropTypes.bool,\n  // 'area' only\n  areaStackedStyle: PropTypes.string,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType,\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    areaStackedStyle,\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    orderBars,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    reduceXTicks = false,\n    showBarValue,\n    showBrush,\n    showControls,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    useRichTooltip,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId,\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter(layer => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  let width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height = vizType === 'bullet' ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation =\n      (xTicksLayout === 'auto' && isVizTypes(['column', 'dist_bar'])) ||\n      xTicksLayout === '45°'\n        ? 45\n        : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter'),\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n      isTruthy(showBrush) ||\n      (showBrush === 'auto' &&\n        maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n        xTicksLayout !== '45°');\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case 'line':\n        if (canShowBrush) {\n          chart = nv.models.lineWithFocusChart();\n          if (staggerLabels) {\n            // Give a bit more room to focus area if X axis ticks are staggered\n            chart.focus.margin({ bottom: 40 });\n            chart.focusHeight(80);\n          }\n          chart.focus.xScale(d3.time.scale.utc());\n        } else {\n          chart = nv.models.lineChart();\n        }\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        chart.clipEdge(false);\n        break;\n\n      case 'time_pivot':\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case 'bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .groupSpacing(0.1);\n\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        chart.xAxis.showMaxMin(false);\n        chart.stacked(isBarStacked);\n        break;\n\n      case 'dist_bar':\n        chart = nv.models\n          .multiBarChart()\n          .showControls(showControls)\n          .reduceXTicks(reduceXTicks)\n          .groupSpacing(0.1); // Distance between each group of bars.\n\n        chart.xAxis.showMaxMin(false);\n\n        chart.stacked(isBarStacked);\n        if (orderBars) {\n          data.forEach(d => {\n            const newValues = [...d.values]; // need to copy values to avoid redux store changed.\n            // eslint-disable-next-line no-param-reassign\n            d.values = newValues.sort((a, b) =>\n              tryNumify(a.x) < tryNumify(b.x) ? -1 : 1,\n            );\n          });\n        }\n        if (!reduceXTicks) {\n          width = computeBarChartWidth(data, isBarStacked, maxWidth);\n        }\n        chart.width(width);\n        break;\n\n      case 'pie':\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType(d => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, d => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT,\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter(d => percentFormatter(d));\n            chart.labelType(\n              d => `${d.data.x}: ${percentFormatter(d.data.y / total)}`,\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              d => `${numberFormatter(d)} (${percentFormatter(d / total)})`,\n            );\n            chart.labelType(\n              d =>\n                `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                  d.data.y / total,\n                )})`,\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case 'compare':\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case 'bubble':\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator(d =>\n          generateBubbleTooltipContent({\n            point: d.point,\n            entity,\n            xField,\n            yField,\n            sizeField,\n            xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n            yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n            sizeFormatter: formatter,\n          }),\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n          0,\n          d3.max(data, d => d3.max(d.values, v => v.size)),\n        ]);\n        break;\n\n      case 'area':\n        chart = nv.models.stackedAreaChart();\n        chart.showControls(showControls);\n        chart.style(areaStackedStyle);\n        chart.xScale(d3.time.scale.utc());\n        break;\n\n      case 'box_plot':\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x(d => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case 'bullet':\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', event => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== 'pie') {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes(['dist_bar', 'box_plot']);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat(d =>\n          d.length > MAX_NO_CHARACTERS_IN_LABEL\n            ? `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…`\n            : d,\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n        (contribution || comparisonType === 'percentage') &&\n        (!yAxisFormat ||\n          yAxisFormat === NumberFormats.SMART_NUMBER ||\n          yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED)\n      ) {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === 'time_pivot') {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color(d => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter),\n      );\n    } else if (vizType !== 'bullet') {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        d => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId),\n      );\n    }\n\n    if (isVizTypes(['line', 'area', 'bar', 'dist_bar']) && useRichTooltip) {\n      chart.useInteractiveGuideline(true);\n      if (vizType === 'line' || vizType === 'bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateRichLineTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n          ),\n        );\n      } else if (vizType === 'dist_bar') {\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateCompareTooltipContent(d, yAxisFormatter),\n        );\n      } else {\n        // area chart\n        chart.interactiveLayer.tooltip.contentGenerator(d =>\n          generateAreaChartTooltipContent(\n            d,\n            smartDateVerboseFormatter,\n            yAxisFormatter,\n            chart,\n          ),\n        );\n      }\n    }\n\n    if (isVizTypes(['compare'])) {\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateCompareTooltipContent(d, yAxisFormatter),\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg\n      .datum(data)\n      .transition()\n      .duration(500)\n      .attr('height', height)\n      .attr('width', width)\n      .call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat(d =>\n        d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '',\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n        chart.yDomain &&\n        Array.isArray(yAxisBounds) &&\n        yAxisBounds.length === 2\n      ) {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'expand'\n        ) {\n          // Because there are custom bounds, we need to override them back to 0%-100% since this\n          // is an expanded area chart\n          chart.yDomain([0, 1]);\n        } else if (\n          (hasCustomMin || hasCustomMax) &&\n          vizType === 'area' &&\n          chart.style() === 'stream'\n        ) {\n          // Because there are custom bounds, we need to override them back to the domain of the\n          // data since this is a stream area chart\n          chart.yDomain(computeStackedYDomain(data));\n        } else if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          let [trueMin, trueMax] = [0, 1];\n\n          // These viz types can be stacked\n          // They correspond to the nvd3 stackedAreaChart and multiBarChart\n          if (\n            vizType === 'area' ||\n            (isVizTypes(['bar', 'dist_bar']) && chart.stacked())\n          ) {\n            // This is a stacked area chart or a stacked bar chart\n            [trueMin, trueMax] = computeStackedYDomain(data);\n          } else {\n            [trueMin, trueMax] = computeYDomain(data);\n          }\n\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg\n        .selectAll('.nv-point')\n        .style('stroke-opacity', 1)\n        .style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg\n            .selectAll('.nv-point')\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD),\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y',\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n          maxXAxisLabelHeight * Math.sin((Math.PI * xLabelRotation) / 180) +\n          marginPad +\n          30;\n        margins.right =\n          maxXAxisLabelHeight * Math.cos((Math.PI * xLabelRotation) / 180) +\n          marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers\n          .filter(\n            layer => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES,\n          )\n          .reduce(\n            (bushel, a) =>\n              bushel.concat(\n                (annotationData[a.name] || []).map(series => {\n                  if (!series) {\n                    return {};\n                  }\n                  const key = Array.isArray(series.key)\n                    ? `${a.name}, ${series.key.join(', ')}`\n                    : `${a.name}, ${series.key}`;\n\n                  return {\n                    ...series,\n                    key,\n                    color: a.color,\n                    strokeWidth: a.width,\n                    classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`,\n                  };\n                }),\n              ),\n            [],\n          );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n            generateTooltipClassName(chartId),\n          ]);\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg\n        .datum(data)\n        .transition()\n        .duration(500)\n        .attr('width', width)\n        .attr('height', height)\n        .call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        throttle(() => hideTooltips(false), 250),\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          a => a.annotationType === ANNOTATION_TYPES.FORMULA,\n        );\n\n        let xMax;\n        let xMin;\n        let xScale;\n        if (vizType === 'bar') {\n          xMin = d3.min(data[0].values, d => d.x);\n          xMax = d3.max(data[0].values, d => d.x);\n          xScale = d3.scale\n            .quantile()\n            .domain([xMin, xMax])\n            .range(chart.xAxis.range());\n        } else {\n          xMin = chart.xAxis.scale().domain()[0].valueOf();\n          xMax = chart.xAxis.scale().domain()[1].valueOf();\n          if (chart.xScale) {\n            xScale = chart.xScale();\n          } else if (chart.xAxis.scale) {\n            xScale = chart.xAxis.scale();\n          } else {\n            xScale = d3.scale.linear();\n          }\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          if (vizType === 'bar') {\n            // For bar-charts we want one data point evaluated for every\n            // data point that will be displayed.\n            const distinct = data.reduce((xVals, d) => {\n              d.values.forEach(x => xVals.add(x.x));\n\n              return xVals;\n            }, new Set());\n            xValues.push(...distinct.values());\n            xValues.sort();\n          } else {\n            // For every other time visualization it should be ok, to have a\n            // data points in even intervals.\n            let period = Math.min(\n              ...data.map(d =>\n                Math.min(\n                  ...d.values.slice(1).map((v, i) => v.x - d.values[i].x),\n                ),\n              ),\n            );\n            const dataPoints = (xMax - xMin) / (period || 1);\n            // make sure that there are enough data points and not too many\n            period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n            period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n            xValues.push(xMin);\n            for (let x = xMin; x < xMax; x += period) {\n              xValues.push(x);\n            }\n            xValues.push(xMax);\n          }\n          const formulaData = formulas.map(fo => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map(x => ({\n                x,\n                y: evalExpression(expression, x),\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`,\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.EVENT &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add event annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-event-annotation-layer-${index}`);\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n              const tip = tipFactory({\n                ...e,\n                annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`,\n              });\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('line')\n                  .data(records)\n                  .enter()\n                  .append('line')\n                  .attr({\n                    x1: d => xScale(new Date(d[e.timeColumn])),\n                    y1: 0,\n                    x2: d => xScale(new Date(d[e.timeColumn])),\n                    y2: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke', aColor)\n                  .style('stroke-width', e.width)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                  annotations\n                    .selectAll('line')\n                    .data(records)\n                    .attr({\n                      x1: d => xScale(new Date(d[e.timeColumn])),\n                      y1: 0,\n                      x2: d => xScale(new Date(d[e.timeColumn])),\n                      y2: annotationHeight,\n                      opacity: d => {\n                        const x = xScale(new Date(d[e.timeColumn]));\n\n                        return x > 0 && x < chartWidth ? 1 : 0;\n                      },\n                    });\n                });\n              }\n            });\n\n          // Interval annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add interval annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-interval-annotation-layer-${index}`);\n\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n              const tip = tipFactory(e);\n\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(moment.utc(r[e.timeColumn]));\n                  const intervalEndValue = new Date(\n                    moment.utc(r[e.intervalEndColumn]),\n                  );\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                    [e.intervalEndColumn]: intervalEndValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n                    !Number.isNaN(\n                      record[e.intervalEndColumn].getMilliseconds(),\n                    ),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('rect')\n                  .data(records)\n                  .enter()\n                  .append('rect')\n                  .attr({\n                    x: d =>\n                      Math.min(\n                        xScale(new Date(d[e.timeColumn])),\n                        xScale(new Date(d[e.intervalEndColumn])),\n                      ),\n                    y: 0,\n                    width: d =>\n                      Math.max(\n                        Math.abs(\n                          xScale(new Date(d[e.intervalEndColumn])) -\n                            xScale(new Date(d[e.timeColumn])),\n                        ),\n                        1,\n                      ),\n                    height: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke-width', e.width)\n                  .style('stroke', aColor)\n                  .style('fill', aColor)\n                  .style('fill-opacity', 0.2)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                  annotations\n                    .selectAll('rect')\n                    .data(records)\n                    .attr({\n                      x: d => xScale(new Date(d[e.timeColumn])),\n                      width: d => {\n                        const x1 = xScale(new Date(d[e.timeColumn]));\n                        const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                        return x2 - x1;\n                      },\n                    });\n                });\n              }\n            });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point',\n          )\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue',\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;\n"],"mappings":"mFAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBA,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAmBA,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,EAAE,MAAM,WAAW;AAC1B,OAAOC,SAAS,MAAM,YAAY;AAClC;EACEC,yBAAyB;EACzBC,cAAc;EACdC,kBAAkB;EAClBC,gBAAgB;EAChBC,SAAS;EACTC,aAAa;EACbC,yBAAyB;EACzBC,CAAC;AACI,mBAAmB;;AAE1B,OAAO,2BAA2B;;AAElC;AACA,OAAOC,gBAAgB;EACrBC,kBAAkB;AACb,mCAAmC;AAC1C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;EACEC,eAAe;EACfC,oBAAoB;EACpBC,cAAc;EACdC,qBAAqB;EACrBC,aAAa;EACbC,4BAA4B;EAC5BC,6BAA6B;EAC7BC,8BAA8B;EAC9BC,wBAAwB;EACxBC,wBAAwB;EACxBC,+BAA+B;EAC/BC,eAAe;EACfC,wBAAwB;EACxBC,YAAY;EACZC,UAAU;EACVC,SAAS;EACTC,aAAa;EACbC,iBAAiB;EACjBC,kBAAkB;EAClBC,WAAW;AACN,SAAS;AAChB;EACEC,mBAAmB;EACnBC,gBAAgB;EAChBC,cAAc;EACdC,sBAAsB;EACtBC,aAAa;EACbC,aAAa;EACbC,gBAAgB;EAChBC,2BAA2B;AACtB,aAAa;;AAEpB,MAAMC,mBAAmB,GAAG;AAC1B,EAAEC,IAAI,EAAE,SAAS,EAAEC,EAAE,EAAE,QAAQ,EAAEC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAClD;EACEF,IAAI,EAAE,yCAAyC;EAC/CC,EAAE,EAAE,OAAO;EACXC,KAAK,EAAE;AACT,CAAC,CACF;;;AAED;AACA;AACA5C,EAAE,CAAC6C,KAAK,CAACC,MAAM,GAAG,SAASA,MAAMA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAClD,MAAMC,GAAG,GAAGF,KAAK,CAACG,OAAO,CAAC,CAAC;EAC3B,MAAMC,MAAM,GAAGF,GAAG,CAACE,MAAM,CAAC,CAAC;EAC3B,MAAMC,MAAM,GAAGpD,EAAE,CAAC6C,KAAK,CAACQ,eAAe,CAAC,IAAI,EAAEL,SAAS,EAAEG,MAAM,CAAC;EAChE,MAAMG,KAAK,GAAGtD,EAAE,CAAC6C,KAAK,CAACU,cAAc,CAAC,IAAI,EAAEP,SAAS,EAAEG,MAAM,CAAC;EAC9D,MAAMK,CAAC,GAAGL,MAAM,CAACM,IAAI,GAAGH,KAAK,GAAG,CAAC;EACjC,MAAMI,CAAC,GAAGP,MAAM,CAACQ,GAAG,GAAGP,MAAM,GAAG,CAAC;;EAEjC;EACAJ,SAAS,CAACY,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;EAEjC,MAAMC,UAAU,GAAGd,SAAS;EACzBY,SAAS,CAAC,YAAY,CAAC;EACvBG,IAAI,CAACtB,mBAAmB,CAAC;;EAE5BqB,UAAU;EACPE,KAAK,CAAC,CAAC;EACPC,MAAM,CAAC,MAAM,CAAC;EACdC,IAAI,CAAC,OAAO,EAAE,CAAAC,CAAC,KAAK,kBAAiBA,CAAC,CAACvB,KAAM,EAAC,CAAC;EAC/CsB,IAAI,CAAC,IAAI,EAAE,CAAAC,CAAC,KAAIA,CAAC,CAACxB,EAAE,CAAC;EACrByB,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;;EAEjCN,UAAU;EACPI,IAAI,CAAC,GAAG,EAAEV,CAAC,CAAC;EACZU,IAAI,CAAC,GAAG,EAAER,CAAC,CAAC;EACZhB,IAAI,CAAC,CAAAyB,CAAC,KAAIA,CAAC,CAACzB,IAAI,CAAC;AACtB,CAAC;;AAED,MAAM,EAAE2B,QAAQ,EAAEC,QAAQ,CAAC,CAAC,GAAGpE,yBAAyB;;AAExD;AACA,MAAMqE,cAAc,GAAG,EAAE;AACzB,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,0BAA0B,GAAG,EAAE;;AAErC,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE;AACT,CAAC;;AAED,MAAMC,oBAAoB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC;;AAE7E,MAAMC,eAAe,GAAG,WAAW;;AAEnC,MAAMC,SAAS,GAAG;EAChBf,IAAI,EAAE9D,SAAS,CAAC8E,SAAS,CAAC;EACxB9E,SAAS,CAAC+E,OAAO;IACf/E,SAAS,CAAC8E,SAAS,CAAC;IAClB;IACA3C,sBAAsB;IACtB;IACAnC,SAAS,CAACgF,KAAK,CAAC;MACdC,GAAG,EAAEjF,SAAS,CAACkF,MAAM;MACrBC,MAAM,EAAEnF,SAAS,CAAC+E,OAAO,CAAC5C,sBAAsB;IAClD,CAAC,CAAC;IACF;IACAnC,SAAS,CAACgF,KAAK,CAAC;MACdC,GAAG,EAAEjF,SAAS,CAAC+E,OAAO,CAAC/E,SAAS,CAACkF,MAAM,CAAC;MACxCC,MAAM,EAAEnF,SAAS,CAAC+E,OAAO,CAAC1C,aAAa;IACzC,CAAC,CAAC;IACF;IACArC,SAAS,CAACgF,KAAK,CAAC;MACdI,OAAO,EAAEpF,SAAS,CAACkF,MAAM;MACzBD,GAAG,EAAEjF,SAAS,CAACkF,MAAM;MACrBG,IAAI,EAAErF,SAAS,CAACkF,MAAM;MACtBC,MAAM,EAAEnF,SAAS,CAAC+E,OAAO,CAAC1C,aAAa,CAAC;MACxCiD,KAAK,EAAEtF,SAAS,CAACuF;IACnB,CAAC,CAAC;IACF;IACAvF,SAAS,CAACgF,KAAK,CAAC;MACdQ,KAAK,EAAExF,SAAS,CAACkF,MAAM;MACvBC,MAAM,EAAEnF,SAAS,CAAC+E,OAAO,CAAC9C,gBAAgB;IAC5C,CAAC,CAAC;IACF;IACAjC,SAAS,CAACgF,KAAK,CAAC;MACdC,GAAG,EAAEjF,SAAS,CAACkF,MAAM;MACrBC,MAAM,EAAEnF,SAAS,CAAC+E,OAAO,CAAC/E,SAAS,CAACyF,MAAM;IAC5C,CAAC,CAAC;IACH;EACH,CAAC;EACD;EACAvD,cAAc;EACf,CAAC;EACFmB,KAAK,EAAErD,SAAS,CAACuF,MAAM;EACvBpC,MAAM,EAAEnD,SAAS,CAACuF,MAAM;EACxBG,cAAc,EAAE1F,SAAS,CAACyF,MAAM;EAChCE,gBAAgB,EAAE3F,SAAS,CAAC+E,OAAO,CAAC/C,mBAAmB,CAAC;EACxD4D,YAAY,EAAEtD,gBAAgB;EAC9BuD,WAAW,EAAE7F,SAAS,CAACkF,MAAM;EAC7BY,cAAc,EAAE9F,SAAS,CAACkF,MAAM;EAChCa,YAAY,EAAE/F,SAAS,CAACgG,IAAI;EAC5BC,UAAU,EAAE3D,gBAAgB;EAC5B4D,OAAO,EAAElG,SAAS,CAACmG,IAAI;EACvBC,UAAU,EAAEpG,SAAS,CAACgG,IAAI;EAC1BK,WAAW,EAAErG,SAAS,CAACgG,IAAI;EAC3BM,cAAc,EAAEtG,SAAS,CAACgG,IAAI;EAC9BO,OAAO,EAAEvG,SAAS,CAACwG,KAAK,CAAC;EACvB,MAAM;EACN,KAAK;EACL,UAAU;EACV,QAAQ;EACR,QAAQ;EACR,SAAS;EACT,QAAQ;EACR,UAAU;EACV,MAAM;EACN,YAAY;EACZ,KAAK;EACN,CAAC;EACFC,WAAW,EAAEzG,SAAS,CAACkF,MAAM;EAC7BwB,YAAY,EAAE1G,SAAS,CAACkF,MAAM;EAC9ByB,UAAU,EAAE3G,SAAS,CAACkF,MAAM;EAC5B0B,eAAe,EAAE5G,SAAS,CAACgG,IAAI;EAC/Ba,WAAW,EAAE7G,SAAS,CAACgG,IAAI;EAC3Bc,YAAY,EAAE9G,SAAS,CAACwG,KAAK,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3DO,WAAW,EAAE/G,SAAS,CAACkF,MAAM;EAC7B8B,WAAW,EAAEhH,SAAS,CAAC+E,OAAO,CAAC/E,SAAS,CAACuF,MAAM,CAAC;EAChD0B,UAAU,EAAEjH,SAAS,CAACkF,MAAM;EAC5BgC,eAAe,EAAElH,SAAS,CAACgG,IAAI;EAC/BmB,WAAW,EAAEnH,SAAS,CAACgG,IAAI;EAC3B;EACAoB,SAAS,EAAEpH,SAAS,CAACgG,IAAI;EACzB;EACAqB,YAAY,EAAErH,SAAS,CAACgG,IAAI;EAC5BsB,YAAY,EAAEtH,SAAS,CAACgG,IAAI;EAC5B;EACAuB,YAAY,EAAEvH,SAAS,CAACgG,IAAI;EAC5B;EACAwB,YAAY,EAAExH,SAAS,CAACgG,IAAI;EAC5B;EACAyB,SAAS,EAAEzH,SAAS,CAACwG,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;EAC9DkB,UAAU,EAAE1H,SAAS,CAACmG,IAAI;EAC1B;EACAwB,YAAY,EAAE3H,SAAS,CAACkF,MAAM;EAC9B;EACA0C,iBAAiB,EAAE5H,SAAS,CAACkF,MAAM;EACnC;EACA2C,OAAO,EAAE7H,SAAS,CAACgG,IAAI;EACvB8B,iBAAiB,EAAE9H,SAAS,CAACgG,IAAI;EACjC+B,YAAY,EAAE/H,SAAS,CAACwG,KAAK,CAAC;EAC5B,KAAK;EACL,OAAO;EACP,SAAS;EACT,WAAW;EACX,aAAa;EACb,mBAAmB;EACpB,CAAC;EACFwB,UAAU,EAAEhI,SAAS,CAACgG,IAAI;EAC1B;EACAiC,gBAAgB,EAAEjI,SAAS,CAACkF,MAAM;EAClC;EACAgD,MAAM,EAAElI,SAAS,CAACkF,MAAM;EACxBiD,aAAa,EAAEnI,SAAS,CAACuF,MAAM;EAC/B6C,MAAM,EAAE7F,2BAA2B;EACnC8F,MAAM,EAAE9F,2BAA2B;EACnC+F,SAAS,EAAE/F,2BAA2B;EACtC;EACAgG,SAAS,EAAEnG;AACb,CAAC;;AAED,MAAMoG,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AACrB,MAAMC,SAAS,GAAGtI,kBAAkB,CAAC,CAAC;;AAEtC,SAASuI,OAAOA,CAACC,OAAO,EAAEC,KAAK,EAAE;EAC/B,MAAM;IACJ9E,IAAI;IACJT,KAAK,EAAEwF,QAAQ;IACf1F,MAAM,EAAE2F,SAAS;IACjBpD,cAAc;IACdC,gBAAgB,GAAG,EAAE;IACrBsC,gBAAgB;IAChBM,SAAS;IACT3C,YAAY;IACZC,WAAW;IACXC,cAAc;IACdC,YAAY;IACZmC,MAAM;IACNb,YAAY;IACZQ,OAAO;IACPC,iBAAiB;IACjB7B,UAAU;IACV2B,iBAAiB,GAAG,QAAQ;IAC5BmB,YAAY;IACZC,WAAW;IACXC,gBAAgB;IAChBC,OAAO;IACPf,aAAa;IACbT,UAAU,GAAGc,IAAI;IACjBtC,OAAO,GAAGsC,IAAI;IACdpB,SAAS;IACTW,YAAY;IACZoB,WAAW;IACXC,MAAM;IACN7B,YAAY,GAAG,KAAK;IACpBD,YAAY;IACZG,SAAS;IACTD,YAAY;IACZQ,UAAU;IACV5B,UAAU;IACVC,WAAW;IACXiC,SAAS;IACThC,cAAc;IACdC,OAAO;IACPE,WAAW;IACXC,YAAY;IACZC,UAAU;IACVC,eAAe,GAAG,KAAK;IACvBwB,MAAM;IACNvB,WAAW;IACXC,YAAY;IACZC,WAAW;IACXC,WAAW;IACXC,UAAU;IACVC,eAAe,GAAG,KAAK;IACvBmC,gBAAgB,GAAG,KAAK;IACxBhB,MAAM;IACNlB,WAAW;IACXmC;EACF,CAAC,GAAGV,KAAK;;EAET,MAAMW,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC,KAAK,IAAI;EACxE,MAAM1G,SAAS,GAAG4F,OAAO;EACzB5F,SAAS,CAAC2G,SAAS,GAAG,EAAE;EACxB,MAAMC,sBAAsB,GAAGhE,gBAAgB,CAACiE,MAAM,CAAC,CAAAC,KAAK,KAAIA,KAAK,CAACC,IAAI,CAAC;;EAE3E;EACA,IAAIC,cAAc,GAAGhH,SAAS;EAC9B,IAAIiH,OAAO,GAAG,IAAI;EAClB,OAAOD,cAAc,CAACE,aAAa,EAAE;IACnC,IAAIF,cAAc,CAACE,aAAa,CAACC,EAAE,CAACC,UAAU,CAACvF,eAAe,CAAC,EAAE;MAC/DoF,OAAO,GAAGD,cAAc,CAACE,aAAa,CAACC,EAAE;MACzC;IACF;;IAEAH,cAAc,GAAGA,cAAc,CAACE,aAAa;EAC/C;;EAEA,IAAInH,KAAK;EACT,IAAIO,KAAK,GAAGwF,QAAQ;EACpB,IAAIuB,QAAQ,GAAG,KAAK;;EAEpBrH,SAAS,CAACoB,KAAK,CAACd,KAAK,GAAI,GAAEwF,QAAS,IAAG;EACvC9F,SAAS,CAACoB,KAAK,CAAChB,MAAM,GAAI,GAAE2F,SAAU,IAAG;;EAEzC,SAASuB,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOA,KAAK,CAACC,QAAQ,CAAChE,OAAO,CAAC;EAChC;;EAEA,MAAMiE,SAAS,GAAG,SAASA,SAASA,CAAA,EAAG;IACrC,MAAMC,SAAS,GAAG5K,EAAE,CAAC6K,MAAM,CAAC/B,OAAO,CAAC;IACpC8B,SAAS,CAACrF,OAAO,CAAC,4BAA4B,EAAE,IAAI,CAAC;IACrDqF,SAAS,CAACrF,OAAO,CAAE,8BAA6BuF,UAAA,CAAUpE,OAAO,CAAE,EAAC,EAAE,IAAI,CAAC;IAC3E,IAAIqE,GAAG,GAAGH,SAAS,CAACC,MAAM,CAAC,KAAK,CAAC;IACjC,IAAIE,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE;MACfD,GAAG,GAAGH,SAAS,CAACzG,MAAM,CAAC,KAAK,CAAC;IAC/B;IACA,MAAMb,MAAM,GAAGoD,OAAO,KAAK,QAAQ,GAAGuE,IAAI,CAACC,GAAG,CAACjC,SAAS,EAAE,EAAE,CAAC,GAAGA,SAAS;IACzE,MAAMkC,YAAY,GAAGX,UAAU,CAAC1F,oBAAoB,CAAC;;IAErD;IACA,MAAMsG,aAAa,GAAGnE,YAAY,KAAK,WAAW;IAClD,MAAMoE,cAAc;IACjBpE,YAAY,KAAK,MAAM,IAAIuD,UAAU,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC9DvD,YAAY,KAAK,KAAK;IAClB,EAAE;IACF,CAAC;IACP,IAAIoE,cAAc,KAAK,EAAE,IAAIvK,QAAQ,CAAC8G,SAAS,CAAC,EAAE;MAChDvB,OAAO;QACL1F,CAAC,CAAC,iEAAiE;MACrE,CAAC;;MAED,OAAO,IAAI;IACb;;IAEA,MAAM2K,YAAY;IAChBxK,QAAQ,CAAC8G,SAAS,CAAC;IAClBA,SAAS,KAAK,MAAM;IACnBqB,SAAS,IAAIvE,oBAAoB;IACjCuC,YAAY,KAAK,KAAM;IAC3B,MAAMsE,eAAe,GAAGjL,kBAAkB,CAACuG,YAAY,CAAC;;IAExD,QAAQH,OAAO;MACb,KAAK,MAAM;QACT,IAAI4E,YAAY,EAAE;UAChBrI,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACC,kBAAkB,CAAC,CAAC;UACtC,IAAIL,aAAa,EAAE;YACjB;YACAnI,KAAK,CAACyI,KAAK,CAACrI,MAAM,CAAC,EAAEsI,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;YAClC1I,KAAK,CAAC2I,WAAW,CAAC,EAAE,CAAC;UACvB;UACA3I,KAAK,CAACyI,KAAK,CAACG,MAAM,CAAC7L,EAAE,CAAC8L,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,MAAM;UACL/I,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACS,SAAS,CAAC,CAAC;QAC/B;QACAhJ,KAAK,CAAC4I,MAAM,CAAC7L,EAAE,CAAC8L,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;QACjC/I,KAAK,CAACiJ,WAAW,CAACnE,iBAAiB,CAAC;QACpC9E,KAAK,CAACkJ,QAAQ,CAAC,KAAK,CAAC;QACrB;;MAEF,KAAK,YAAY;QACflJ,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACS,SAAS,CAAC,CAAC;QAC7BhJ,KAAK,CAAC4I,MAAM,CAAC7L,EAAE,CAAC8L,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;QACjC/I,KAAK,CAACiJ,WAAW,CAACnE,iBAAiB,CAAC;QACpC;;MAEF,KAAK,KAAK;QACR9E,KAAK,GAAG/C,EAAE,CAACsL,MAAM;QACdY,aAAa,CAAC,CAAC;QACfzE,YAAY,CAACA,YAAY,CAAC;QAC1B0E,YAAY,CAAC,GAAG,CAAC;;QAEpB,IAAI,CAAC3E,YAAY,EAAE;UACjBlE,KAAK,GAAGxC,oBAAoB,CAACiD,IAAI,EAAEuD,YAAY,EAAEwB,QAAQ,CAAC;QAC5D;QACA/F,KAAK,CAACO,KAAK,CAACA,KAAK,CAAC;QAClBP,KAAK,CAACqJ,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC;QAC7BtJ,KAAK,CAACuJ,OAAO,CAAChF,YAAY,CAAC;QAC3B;;MAEF,KAAK,UAAU;QACbvE,KAAK,GAAG/C,EAAE,CAACsL,MAAM;QACdY,aAAa,CAAC,CAAC;QACfzE,YAAY,CAACA,YAAY,CAAC;QAC1BD,YAAY,CAACA,YAAY,CAAC;QAC1B2E,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEtBpJ,KAAK,CAACqJ,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC;;QAE7BtJ,KAAK,CAACuJ,OAAO,CAAChF,YAAY,CAAC;QAC3B,IAAID,SAAS,EAAE;UACbtD,IAAI,CAACwI,OAAO,CAAC,CAAApI,CAAC,KAAI;YAChB,MAAMqI,SAAS,GAAG,CAAC,GAAGrI,CAAC,CAACiB,MAAM,CAAC,CAAC,CAAC;YACjC;YACAjB,CAAC,CAACiB,MAAM,GAAGoH,SAAS,CAACC,IAAI,CAAC,CAAC5M,CAAC,EAAE6M,CAAC;YAC7B9K,SAAS,CAAC/B,CAAC,CAAC2D,CAAC,CAAC,GAAG5B,SAAS,CAAC8K,CAAC,CAAClJ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG;YACzC,CAAC;UACH,CAAC,CAAC;QACJ;QACA,IAAI,CAACgE,YAAY,EAAE;UACjBlE,KAAK,GAAGxC,oBAAoB,CAACiD,IAAI,EAAEuD,YAAY,EAAEwB,QAAQ,CAAC;QAC5D;QACA/F,KAAK,CAACO,KAAK,CAACA,KAAK,CAAC;QAClB;;MAEF,KAAK,KAAK;QACRP,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACqB,QAAQ,CAAC,CAAC;QAC5BtC,QAAQ,GAAG,GAAG;QACdtH,KAAK,CAAC6J,WAAW,CAACvB,eAAe,CAAC;QAClC,IAAIvD,OAAO,EAAE;UACX/E,KAAK,CAAC8J,KAAK,CAAC,IAAI,CAAC;QACnB;QACA9J,KAAK,CAACkF,UAAU,CAACA,UAAU,CAAC;QAC5BlF,KAAK,CAAC+J,aAAa,CAAC/E,iBAAiB,CAAC;QACtC;QACAhF,KAAK,CAACgK,cAAc,CAAC,IAAI,CAAC;QAC1BhK,KAAK,CAACiK,YAAY,CAAC,IAAI,CAAC;;QAExB,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAACxC,QAAQ,CAACxC,YAAY,CAAC,EAAE;UACtDjF,KAAK,CAACkK,SAAS,CAACjF,YAAY,CAAC;QAC/B,CAAC,MAAM,IAAIA,YAAY,KAAK,WAAW,EAAE;UACvCjF,KAAK,CAACkK,SAAS,CAAC,CAAA9I,CAAC,KAAK,GAAEA,CAAC,CAACJ,IAAI,CAACP,CAAE,KAAI6H,eAAe,CAAClH,CAAC,CAACJ,IAAI,CAACL,CAAC,CAAE,EAAC,CAAC;QACnE,CAAC,MAAM;UACL;UACA,MAAMwJ,KAAK,GAAGpN,EAAE,CAACqN,GAAG,CAACpJ,IAAI,EAAE,CAAAI,CAAC,KAAIA,CAAC,CAACT,CAAC,CAAC;UACpC,MAAM0J,gBAAgB,GAAGhN,kBAAkB;YACzCG,aAAa,CAAC8M;UAChB,CAAC;UACD,IAAIrF,YAAY,KAAK,aAAa,EAAE;YAClCjF,KAAK,CAACuK,OAAO,CAACC,cAAc,CAAC,CAAApJ,CAAC,KAAIiJ,gBAAgB,CAACjJ,CAAC,CAAC,CAAC;YACtDpB,KAAK,CAACkK,SAAS;cACb,CAAA9I,CAAC,KAAK,GAAEA,CAAC,CAACJ,IAAI,CAACP,CAAE,KAAI4J,gBAAgB,CAACjJ,CAAC,CAACJ,IAAI,CAACL,CAAC,GAAGwJ,KAAK,CAAE;YAC1D,CAAC;UACH,CAAC,MAAM;YACL;YACAnK,KAAK,CAACuK,OAAO,CAACC,cAAc;cAC1B,CAAApJ,CAAC,KAAK,GAAEkH,eAAe,CAAClH,CAAC,CAAE,KAAIiJ,gBAAgB,CAACjJ,CAAC,GAAG+I,KAAK,CAAE;YAC7D,CAAC;YACDnK,KAAK,CAACkK,SAAS;cACb,CAAA9I,CAAC;cACE,GAAEA,CAAC,CAACJ,IAAI,CAACP,CAAE,KAAI6H,eAAe,CAAClH,CAAC,CAACJ,IAAI,CAACL,CAAC,CAAE,KAAI0J,gBAAgB;gBAC5DjJ,CAAC,CAACJ,IAAI,CAACL,CAAC,GAAGwJ;cACb,CAAE;YACN,CAAC;UACH;QACF;QACA;QACAnK,KAAK,CAACI,MAAM,CAAC,EAAEQ,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACxB;;MAEF,KAAK,QAAQ;QACXZ,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACY,aAAa,CAAC,CAAC,CAAC1E,YAAY,CAAC,KAAK,CAAC;QACrD;;MAEF,KAAK,SAAS;QACZzE,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACkC,mBAAmB,CAAC,CAAC;QACvCzK,KAAK,CAAC4I,MAAM,CAAC7L,EAAE,CAAC8L,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;QACjC/I,KAAK,CAAC0K,uBAAuB,CAAC,IAAI,CAAC;QACnC1K,KAAK,CAACqJ,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC;QAC7B;;MAEF,KAAK,QAAQ;QACXtJ,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACoC,YAAY,CAAC,CAAC;QAChC3K,KAAK,CAAC4K,SAAS,CAAC,KAAK,CAAC;QACtB5K,KAAK,CAAC6K,SAAS,CAAC,KAAK,CAAC;QACtB7K,KAAK,CAACuK,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;QAC9BjD,4BAA4B,CAAC;UAC3B4M,KAAK,EAAE3J,CAAC,CAAC2J,KAAK;UACd3F,MAAM;UACNE,MAAM;UACNC,MAAM;UACNC,SAAS;UACTwF,UAAU,EAAEtM,wBAAwB,CAACiF,WAAW,CAAC;UACjDsH,UAAU,EAAEvM,wBAAwB,CAACuF,WAAW,CAAC;UACjDiH,aAAa,EAAEvF;QACjB,CAAC;QACH,CAAC;QACD3F,KAAK,CAACmL,UAAU,CAAC,CAAC,CAAC,EAAE9F,aAAa,IAAI,CAAC,CAAC,CAAC;QACzCrF,KAAK,CAACoL,WAAW,CAAC;QAChB,CAAC;QACDrO,EAAE,CAACsO,GAAG,CAACrK,IAAI,EAAE,CAAAI,CAAC,KAAIrE,EAAE,CAACsO,GAAG,CAACjK,CAAC,CAACiB,MAAM,EAAE,CAAAiJ,CAAC,KAAIA,CAAC,CAACC,IAAI,CAAC,CAAC;QACjD,CAAC;QACF;;MAEF,KAAK,MAAM;QACTvL,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACiD,gBAAgB,CAAC,CAAC;QACpCxL,KAAK,CAAC0E,YAAY,CAACA,YAAY,CAAC;QAChC1E,KAAK,CAACqB,KAAK,CAAC8D,gBAAgB,CAAC;QAC7BnF,KAAK,CAAC4I,MAAM,CAAC7L,EAAE,CAAC8L,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,CAAC,CAAC;QACjC;;MAEF,KAAK,UAAU;QACbzB,QAAQ,GAAG,OAAO;QAClBtH,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACkD,YAAY,CAAC,CAAC;QAChCzL,KAAK,CAACS,CAAC,CAAC,CAAAW,CAAC,KAAIA,CAAC,CAACsB,KAAK,CAAC;QACrB1C,KAAK,CAAC0L,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB;;MAEF,KAAK,QAAQ;QACX1L,KAAK,GAAG/C,EAAE,CAACsL,MAAM,CAACoD,WAAW,CAAC,CAAC;QAC/B3K,IAAI,CAACqF,WAAW,GAAGA,WAAW;QAC9BrF,IAAI,CAACsF,MAAM,GAAGA,MAAM;QACpBtF,IAAI,CAACiF,YAAY,GAAGA,YAAY;QAChCjF,IAAI,CAACkF,WAAW,GAAGA,WAAW;QAC9BlF,IAAI,CAACmF,gBAAgB,GAAGA,gBAAgB;QACxCnF,IAAI,CAACoF,OAAO,GAAGA,OAAO;QACtB;;MAEF;QACE,MAAM,IAAIwF,KAAK,CAAE,sCAAqCnI,OAAQ,EAAC,CAAC;IACpE;IACA;IACAzD,KAAK,CAACI,MAAM,CAAC,EAAEM,IAAI,EAAE,CAAC,EAAEgI,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEpC,IAAIlE,YAAY,EAAE;MAChBtG,aAAa,CAAC4J,GAAG,EAAE9G,IAAI,EAAEuD,YAAY,EAAEN,WAAW,CAAC;MACnDjE,KAAK,CAAC6L,QAAQ,CAACC,EAAE,CAAC,2BAA2B,EAAE,MAAM;QACnD5N,aAAa,CAAC4J,GAAG,EAAE9G,IAAI,EAAEuD,YAAY,EAAEN,WAAW,CAAC;MACrD,CAAC,CAAC;IACJ;;IAEA,IAAIoE,YAAY,IAAIzD,UAAU,KAAKc,IAAI,EAAE;MACvC,IAAI1F,KAAK,CAACyI,KAAK,EAAE;QACfzI,KAAK,CAACyI,KAAK,CAACoD,QAAQ,CAACC,EAAE,CAAC,OAAO,EAAE,CAAAC,KAAK,KAAI;UACxC,MAAMC,SAAS,GAAGhN,kBAAkB,CAAC+M,KAAK,CAACE,MAAM,CAAC;UAClD,IAAID,SAAS,EAAE;YACbD,KAAK,CAACG,KAAK,CAACJ,EAAE,CAAC,UAAU,EAAE,MAAM;cAC/BlH,UAAU,CAACoH,SAAS,CAAC;YACvB,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ;IACF;;IAEA,IAAIhM,KAAK,CAACqJ,KAAK,IAAIrJ,KAAK,CAACqJ,KAAK,CAAClB,aAAa,EAAE;MAC5CnI,KAAK,CAACqJ,KAAK,CAAClB,aAAa,CAACA,aAAa,CAAC;IAC1C;IACA,IAAInI,KAAK,CAACqJ,KAAK,IAAIrJ,KAAK,CAACqJ,KAAK,CAAC8C,YAAY,EAAE;MAC3CnM,KAAK,CAACqJ,KAAK,CAAC8C,YAAY,CAAC/D,cAAc,CAAC;IAC1C;IACA,IAAIpI,KAAK,CAACoM,MAAM,IAAIpM,KAAK,CAACoM,MAAM,CAACjE,aAAa,EAAE;MAC9CnI,KAAK,CAACoM,MAAM,CAACjE,aAAa,CAACA,aAAa,CAAC;IAC3C;IACA,IAAInI,KAAK,CAACoM,MAAM,IAAIpM,KAAK,CAACoM,MAAM,CAACD,YAAY,EAAE;MAC7CnM,KAAK,CAACoM,MAAM,CAACD,YAAY,CAAC/D,cAAc,CAAC;IAC3C;;IAEA,IAAI,YAAY,IAAIpI,KAAK,IAAI,OAAOsD,UAAU,KAAK,WAAW,EAAE;MAC9D,IAAI/C,KAAK,GAAGoB,WAAW,CAACC,KAAK,IAAI6B,OAAO,KAAK,KAAK,EAAE;QAClDzD,KAAK,CAACsD,UAAU,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLtD,KAAK,CAACsD,UAAU,CAACA,UAAU,CAAC;MAC9B;IACF;;IAEA,IAAIe,WAAW,EAAE;MACfrE,KAAK,CAACqM,MAAM,CAACtP,EAAE,CAAC+L,KAAK,CAACwD,GAAG,CAAC,CAAC,CAAC;IAC9B;IACA,IAAIvI,WAAW,EAAE;MACf/D,KAAK,CAAC4I,MAAM,CAAC7L,EAAE,CAAC+L,KAAK,CAACwD,GAAG,CAAC,CAAC,CAAC;IAC9B;;IAEA,IAAIC,cAAc;IAClB,IAAIrE,YAAY,EAAE;MAChBqE,cAAc,GAAGjP,gBAAgB,CAACqG,WAAW,CAAC;MAC9C;MACA3D,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACkC,eAAe,CAAChP,yBAAyB,CAAC;IAC3E,CAAC,MAAM;MACL8O,cAAc,GAAG7N,wBAAwB,CAACiF,WAAW,CAAC;IACxD;IACA,IAAI3D,KAAK,CAACoM,MAAM,IAAIpM,KAAK,CAACoM,MAAM,CAACM,UAAU,EAAE;MAC3C1M,KAAK,CAACoM,MAAM,CAACM,UAAU,CAACH,cAAc,CAAC;IACzC;IACA,IAAIvM,KAAK,CAACqJ,KAAK,IAAIrJ,KAAK,CAACqJ,KAAK,CAACqD,UAAU,EAAE;MACzC,MAAMC,aAAa,GAAGpF,UAAU,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;MAC1D,IAAIoF,aAAa,EAAE;QACjB3M,KAAK,CAACqJ,KAAK,CAACqD,UAAU,CAAC,CAAAtL,CAAC;QACtBA,CAAC,CAACwL,MAAM,GAAGlL,0BAA0B;QAChC,GAAEN,CAAC,CAACyL,KAAK,CAAC,CAAC,EAAE7E,IAAI,CAACqD,GAAG,CAAC,CAAC,EAAE3J,0BAA0B,CAAC,CAAE,GAAE;QACzDN;QACN,CAAC;MACH,CAAC,MAAM;QACLpB,KAAK,CAACqJ,KAAK,CAACqD,UAAU,CAACH,cAAc,CAAC;MACxC;IACF;;IAEA,IAAIO,cAAc,GAAGpO,wBAAwB,CAACuF,WAAW,CAAC;IAC1D,IAAIjE,KAAK,CAACwC,KAAK,IAAIxC,KAAK,CAACwC,KAAK,CAACkK,UAAU,EAAE;MACzC;MACE,CAACzJ,YAAY,IAAID,cAAc,KAAK,YAAY;MAC/C,CAACiB,WAAW;MACXA,WAAW,KAAKzG,aAAa,CAACuP,YAAY;MAC1C9I,WAAW,KAAKzG,aAAa,CAACwP,mBAAmB,CAAC;MACpD;QACA;QACA;QACAF,cAAc,GAAGzP,kBAAkB,CAACG,aAAa,CAACyP,eAAe,CAAC;MACpE;MACAjN,KAAK,CAACwC,KAAK,CAACkK,UAAU,CAACI,cAAc,CAAC;IACxC;IACA,IAAI9M,KAAK,CAACkN,MAAM,IAAIlN,KAAK,CAACkN,MAAM,CAACR,UAAU,EAAE;MAC3C1M,KAAK,CAACkN,MAAM,CAACR,UAAU,CAACI,cAAc,CAAC;IACzC;;IAEA,IAAI9M,KAAK,CAACwC,KAAK,EAAE;MACfxC,KAAK,CAACwC,KAAK,CAAC2K,KAAK,CAAC,CAAC,CAAC;IACtB;IACA,IAAInN,KAAK,CAACkN,MAAM,EAAE;MAChBlN,KAAK,CAACkN,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvB;;IAEA;IACApO,iBAAiB,CAACiB,KAAK,CAACqJ,KAAK,EAAEvF,eAAe,CAAC;IAC/C/E,iBAAiB,CAACiB,KAAK,CAACoM,MAAM,EAAEtI,eAAe,CAAC;IAChD/E,iBAAiB,CAACiB,KAAK,CAACwC,KAAK,EAAE4B,eAAe,CAAC;IAC/CrF,iBAAiB,CAACiB,KAAK,CAACkN,MAAM,EAAE3G,gBAAgB,IAAInC,eAAe,CAAC;;IAEpE,IAAIX,OAAO,KAAK,YAAY,EAAE;MAC5B,IAAIgC,SAAS,EAAE;QACb,MAAM,EAAE2H,CAAC,EAAEC,CAAC,EAAE1D,CAAC,CAAC,CAAC,GAAGlE,SAAS;QAC7BzF,KAAK,CAACsN,KAAK,CAAC,CAAAlM,CAAC,KAAI;UACf,MAAMmM,KAAK,GAAGnM,CAAC,CAACoM,IAAI,GAAG,CAAC,GAAGpM,CAAC,CAACqM,IAAI,GAAG,GAAG,GAAG,CAAC;;UAE3C,OAAQ,QAAOL,CAAE,KAAIC,CAAE,KAAI1D,CAAE,KAAI4D,KAAM,GAAE;QAC3C,CAAC,CAAC;MACJ;;MAEAvN,KAAK,CAAC0K,uBAAuB,CAAC,IAAI,CAAC;MACnC1K,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;MAC/C9C,wBAAwB,CAAC8C,CAAC,EAAEmL,cAAc,EAAEO,cAAc;MAC5D,CAAC;IACH,CAAC,MAAM,IAAIrJ,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMiK,OAAO,GAAGnM,QAAQ,CAACwB,WAAW,CAAC;MACrC/C,KAAK,CAACsN,KAAK;QACT,CAAAlM,CAAC,KAAIA,CAAC,CAACkM,KAAK,IAAII,OAAO,CAAC5P,eAAe,CAACsD,CAAC,CAACkG,QAAQ,CAAC,CAAC,EAAEd,OAAO;MAC/D,CAAC;IACH;;IAEA,IAAIe,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,IAAI/D,cAAc,EAAE;MACrExD,KAAK,CAAC0K,uBAAuB,CAAC,IAAI,CAAC;MACnC,IAAIjH,OAAO,KAAK,MAAM,IAAIA,OAAO,KAAK,KAAK,EAAE;QAC3CzD,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;QAC/C/C,8BAA8B;UAC5B+C,CAAC;UACD3D,yBAAyB;UACzBqP;QACF;QACF,CAAC;MACH,CAAC,MAAM,IAAIrJ,OAAO,KAAK,UAAU,EAAE;QACjCzD,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;QAC/ChD,6BAA6B,CAACgD,CAAC,EAAE0L,cAAc;QACjD,CAAC;MACH,CAAC,MAAM;QACL;QACA9M,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;QAC/C5C,+BAA+B;UAC7B4C,CAAC;UACD3D,yBAAyB;UACzBqP,cAAc;UACd9M;QACF;QACF,CAAC;MACH;IACF;;IAEA,IAAIuH,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE;MAC3BvH,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACO,gBAAgB,CAAC,CAAA1J,CAAC;MAC/ChD,6BAA6B,CAACgD,CAAC,EAAE0L,cAAc;MACjD,CAAC;IACH;;IAEA;IACA9M,KAAK,CAACO,KAAK,CAACA,KAAK,CAAC;IAClBP,KAAK,CAACK,MAAM,CAACA,MAAM,CAAC;;IAEpByH,GAAG;IACA6F,KAAK,CAAC3M,IAAI,CAAC;IACX4M,UAAU,CAAC,CAAC;IACZC,QAAQ,CAAC,GAAG,CAAC;IACb1M,IAAI,CAAC,QAAQ,EAAEd,MAAM,CAAC;IACtBc,IAAI,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpBuN,IAAI,CAAC9N,KAAK,CAAC;;IAEd;IACA,IAAIqE,WAAW,EAAE;MACfrE,KAAK,CAACwC,KAAK,CAACkK,UAAU,CAAC,CAAAtL,CAAC;MACtBA,CAAC,KAAK,CAAC,IAAI4G,IAAI,CAAC+F,KAAK,CAAC3M,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG0L,cAAc,CAAC1L,CAAC,CAAC,GAAG;MAC3D,CAAC;IACH;;IAEA,IAAIgH,cAAc,GAAG,CAAC,EAAE;MACtB;MACA,MAAM4F,MAAM,GAAGlG,GAAG,CAACF,MAAM,CAAC,mBAAmB,CAAC,CAAC/G,SAAS,CAAC,GAAG,CAAC;MAC7DmN,MAAM,CAACnN,SAAS,CAAC,MAAM,CAAC,CAACM,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;IAC3C;;IAEA,MAAM8M,gBAAgB,GAAGA,CAAA,KAAM;MAC7B;MACEjO,KAAK,CAACkO,OAAO;MACbC,KAAK,CAACC,OAAO,CAAClK,WAAW,CAAC;MAC1BA,WAAW,CAAC0I,MAAM,KAAK,CAAC;MACxB;QACA,MAAM,CAACyB,SAAS,EAAEC,SAAS,CAAC,GAAGpK,WAAW;QAC1C,MAAMqK,YAAY,GAAGhR,SAAS,CAAC8Q,SAAS,CAAC,IAAI,CAACG,MAAM,CAACC,KAAK,CAACJ,SAAS,CAAC;QACrE,MAAMK,YAAY,GAAGnR,SAAS,CAAC+Q,SAAS,CAAC,IAAI,CAACE,MAAM,CAACC,KAAK,CAACH,SAAS,CAAC;;QAErE;QACE,CAACC,YAAY,IAAIG,YAAY;QAC7BjL,OAAO,KAAK,MAAM;QAClBzD,KAAK,CAACqB,KAAK,CAAC,CAAC,KAAK,QAAQ;QAC1B;UACA;UACA;UACArB,KAAK,CAACkO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;QACL,CAACK,YAAY,IAAIG,YAAY;QAC7BjL,OAAO,KAAK,MAAM;QAClBzD,KAAK,CAACqB,KAAK,CAAC,CAAC,KAAK,QAAQ;QAC1B;UACA;UACA;UACArB,KAAK,CAACkO,OAAO,CAACjQ,qBAAqB,CAAC+C,IAAI,CAAC,CAAC;QAC5C,CAAC,MAAM,IAAIuN,YAAY,IAAIG,YAAY,EAAE;UACvC;UACA1O,KAAK,CAACkO,OAAO,CAAC,CAACG,SAAS,EAAEC,SAAS,CAAC,CAAC;UACrCtO,KAAK,CAACkJ,QAAQ,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM,IAAIqF,YAAY,IAAIG,YAAY,EAAE;UACvC;UACA,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;UAE/B;UACA;UACA;UACEnL,OAAO,KAAK,MAAM;UACjB8D,UAAU,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,IAAIvH,KAAK,CAACuJ,OAAO,CAAC,CAAE;UACpD;YACA;YACA,CAACoF,OAAO,EAAEC,OAAO,CAAC,GAAG3Q,qBAAqB,CAAC+C,IAAI,CAAC;UAClD,CAAC,MAAM;YACL,CAAC2N,OAAO,EAAEC,OAAO,CAAC,GAAG5Q,cAAc,CAACgD,IAAI,CAAC;UAC3C;;UAEA,MAAMiH,GAAG,GAAGsG,YAAY,GAAGF,SAAS,GAAGM,OAAO;UAC9C,MAAMtD,GAAG,GAAGqD,YAAY,GAAGJ,SAAS,GAAGM,OAAO;UAC9C5O,KAAK,CAACkO,OAAO,CAAC,CAACjG,GAAG,EAAEoD,GAAG,CAAC,CAAC;UACzBrL,KAAK,CAACkJ,QAAQ,CAAC,IAAI,CAAC;QACtB;MACF;IACF,CAAC;IACD+E,gBAAgB,CAAC,CAAC;;IAElB;IACA,IAAIjO,KAAK,CAAC6L,QAAQ,IAAI7L,KAAK,CAAC6L,QAAQ,CAACgD,WAAW,EAAE;MAChD7O,KAAK,CAAC6L,QAAQ,CAACC,EAAE,CAAC,8BAA8B,EAAEmC,gBAAgB,CAAC;IACrE;;IAEA,IAAI1K,WAAW,EAAE;MACfuE,GAAG;MACAjH,SAAS,CAAC,WAAW,CAAC;MACtBQ,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;MAC1BA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;;MAE3B;MACA;MACArB,KAAK,CAAC6L,QAAQ,CAACC,EAAE,CAAC,yBAAyB,EAAE,MAAM;QACjDgD,UAAU,CAAC,MAAM;UACfhH,GAAG;UACAjH,SAAS,CAAC,WAAW,CAAC;UACtBQ,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;UAC1BA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7B,CAAC,EAAE,EAAE,CAAC;MACR,CAAC,CAAC;IACJ;;IAEA,IAAIrB,KAAK,CAACwC,KAAK,KAAK/F,SAAS,IAAIuD,KAAK,CAAC+O,MAAM,KAAKtS,SAAS,EAAE;MAC3D;MACA,MAAMuS,SAAS,GAAGhH,IAAI,CAACiH,IAAI;QACzBjH,IAAI,CAACC,GAAG,CAAClC,QAAQ,IAAIU,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,EAAEjF,cAAc;MAC/D,CAAC;MACD;MACA;MACA;MACA;MACA;MACA,MAAM0N,OAAO,GAAGlP,KAAK,CAACI,MAAM,CAAC,CAAC;MAC9B,IAAIJ,KAAK,CAACqJ,KAAK,EAAE;QACf6F,OAAO,CAACxG,MAAM,GAAG,EAAE;MACrB;MACA,MAAMyG,kBAAkB,GAAG1Q,eAAe;QACxCqJ,GAAG;QACH9H,KAAK,CAAC+O,MAAM,GAAG,OAAO,GAAG;MAC3B,CAAC;MACD,MAAMK,mBAAmB,GAAG3Q,eAAe,CAACqJ,GAAG,EAAE,MAAM,CAAC;MACxDoH,OAAO,CAACxO,IAAI,GAAGyO,kBAAkB,GAAGH,SAAS;;MAE7C,IAAI7K,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAE;QACnC+K,OAAO,CAACxO,IAAI,IAAI,EAAE;MACpB;MACA,IAAI8D,YAAY,EAAE;QAChB;QACA0K,OAAO,CAACtO,GAAG,IAAI,EAAE;MACnB;MACA,IAAIkD,eAAe,EAAE;QACnB;QACAoL,OAAO,CAACG,KAAK,GAAGrH,IAAI,CAACqD,GAAG,CAAC,EAAE,EAAE+D,mBAAmB,GAAG,CAAC,CAAC,GAAGJ,SAAS;MACnE;MACA,IAAI5G,cAAc,KAAK,EAAE,EAAE;QACzB8G,OAAO,CAACxG,MAAM;QACZ0G,mBAAmB,GAAGpH,IAAI,CAACsH,GAAG,CAAEtH,IAAI,CAACuH,EAAE,GAAGnH,cAAc,GAAI,GAAG,CAAC;QAChE4G,SAAS;QACT,EAAE;QACJE,OAAO,CAACG,KAAK;QACXD,mBAAmB,GAAGpH,IAAI,CAACwH,GAAG,CAAExH,IAAI,CAACuH,EAAE,GAAGnH,cAAc,GAAI,GAAG,CAAC;QAChE4G,SAAS;MACb,CAAC,MAAM,IAAI7G,aAAa,EAAE;QACxB+G,OAAO,CAACxG,MAAM,GAAG,EAAE;MACrB;;MAEA,IAAI5F,YAAY,IAAIA,YAAY,KAAK,MAAM,EAAE;QAC3CoM,OAAO,CAACxG,MAAM,GAAG+G,QAAQ,CAAC3M,YAAY,EAAE,EAAE,CAAC;MAC7C;MACA,IAAIK,UAAU,IAAIA,UAAU,KAAK,MAAM,EAAE;QACvC+L,OAAO,CAACxO,IAAI,GAAGyC,UAAU;MAC3B;;MAEA,IAAIU,UAAU,IAAIA,UAAU,KAAK,EAAE,IAAI7D,KAAK,CAACqJ,KAAK,EAAE;QAClD6F,OAAO,CAACxG,MAAM,IAAI,EAAE;QACpB,IAAIgH,QAAQ,GAAG,CAAC;QAChB,IAAIR,OAAO,CAACxG,MAAM,IAAI,CAAC8F,MAAM,CAACC,KAAK,CAACS,OAAO,CAACxG,MAAM,CAAC,EAAE;UACnDgH,QAAQ,GAAGR,OAAO,CAACxG,MAAM,GAAG,EAAE;QAChC;QACA;QACA;QACA1I,KAAK,CAACqJ,KAAK,CAACsG,SAAS,CAAC9L,UAAU,CAAC,CAAC+L,iBAAiB,CAACF,QAAQ,CAAC;MAC/D;;MAEA,IAAIvL,UAAU,IAAIA,UAAU,KAAK,EAAE,IAAInE,KAAK,CAACwC,KAAK,EAAE;QAClD,IAAIkN,QAAQ,GAAG,CAAC;QAChB,IAAIR,OAAO,CAACxO,IAAI,IAAI,CAAC8N,MAAM,CAACC,KAAK,CAACS,OAAO,CAACxO,IAAI,CAAC,EAAE;UAC/CgP,QAAQ,GAAGR,OAAO,CAACxO,IAAI,GAAG,EAAE;QAC9B;QACAV,KAAK,CAACwC,KAAK,CAACmN,SAAS,CAACxL,UAAU,CAAC,CAACyL,iBAAiB,CAACF,QAAQ,CAAC;MAC/D;MACA,IAAIxH,YAAY,IAAItF,cAAc,IAAIiE,sBAAsB,CAAC+F,MAAM,GAAG,CAAC,EAAE;QACvE;QACA,MAAMiD,qBAAqB,GAAGhJ,sBAAsB;QACjDC,MAAM;UACL,CAAAC,KAAK,KAAIA,KAAK,CAAC+I,cAAc,KAAKnS,gBAAgB,CAACoS;QACrD,CAAC;QACAC,MAAM;UACL,CAACC,MAAM,EAAEnT,CAAC;UACRmT,MAAM,CAACC,MAAM;YACX,CAACtN,cAAc,CAAC9F,CAAC,CAACqT,IAAI,CAAC,IAAI,EAAE,EAAEC,GAAG,CAAC,CAAAC,MAAM,KAAI;cAC3C,IAAI,CAACA,MAAM,EAAE;gBACX,OAAO,CAAC,CAAC;cACX;cACA,MAAMlO,GAAG,GAAGgM,KAAK,CAACC,OAAO,CAACiC,MAAM,CAAClO,GAAG,CAAC;cAChC,GAAErF,CAAC,CAACqT,IAAK,KAAIE,MAAM,CAAClO,GAAG,CAACmO,IAAI,CAAC,IAAI,CAAE,EAAC;cACpC,GAAExT,CAAC,CAACqT,IAAK,KAAIE,MAAM,CAAClO,GAAI,EAAC;;cAE9B,OAAO;gBACL,GAAGkO,MAAM;gBACTlO,GAAG;gBACHmL,KAAK,EAAExQ,CAAC,CAACwQ,KAAK;gBACdiD,WAAW,EAAEzT,CAAC,CAACyD,KAAK;gBACpB+B,OAAO,EAAG,GAAExF,CAAC,CAAC0T,OAAQ,IAAG1T,CAAC,CAACuE,KAAM,8CAA6CvE,CAAC,CAACyG,WAAY,YAAWzG,CAAC,CAAC2T,QAAS;cACpH,CAAC;YACH,CAAC;UACH,CAAC;UACH;QACF,CAAC;QACHzP,IAAI,CAAC0P,IAAI,CAAC,GAAGb,qBAAqB,CAAC;MACrC;;MAEA;MACA;MACA,IAAI3I,OAAO,EAAE;QACX,IAAIlH,KAAK,IAAIA,KAAK,CAACwM,gBAAgB,IAAIxM,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,EAAE;UACrEvK,KAAK,CAACwM,gBAAgB,CAACjC,OAAO,CAACoG,OAAO,CAAC;UACrCpS,wBAAwB,CAAC2I,OAAO,CAAC;UAClC,CAAC;QACJ;;QAEA,IAAIlH,KAAK,IAAIA,KAAK,CAACuK,OAAO,EAAE;UAC1BvK,KAAK,CAACuK,OAAO,CAACoG,OAAO,CAAC,CAACpS,wBAAwB,CAAC2I,OAAO,CAAC,CAAC,CAAC;QAC5D;MACF;;MAEA;MACAlH,KAAK,CAACI,MAAM,CAAC8O,OAAO,CAAC;MACrBpH,GAAG;MACA6F,KAAK,CAAC3M,IAAI,CAAC;MACX4M,UAAU,CAAC,CAAC;MACZC,QAAQ,CAAC,GAAG,CAAC;MACb1M,IAAI,CAAC,OAAO,EAAEZ,KAAK,CAAC;MACpBY,IAAI,CAAC,QAAQ,EAAEd,MAAM,CAAC;MACtByN,IAAI,CAAC9N,KAAK,CAAC;;MAEd;MACA;MACA4Q,MAAM,CAACC,gBAAgB;QACrB,QAAQ;QACRC,SAAA,CAAS,MAAMnS,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG;MACzC,CAAC;;MAED;MACA,IAAIuJ,YAAY,IAAIrB,sBAAsB,CAAC+F,MAAM,GAAG,CAAC,EAAE;QACrD;QACA,MAAMmE,QAAQ,GAAGlK,sBAAsB,CAACC,MAAM;UAC5C,CAAAhK,CAAC,KAAIA,CAAC,CAACgT,cAAc,KAAKnS,gBAAgB,CAACqT;QAC7C,CAAC;;QAED,IAAIC,IAAI;QACR,IAAIC,IAAI;QACR,IAAItI,MAAM;QACV,IAAInF,OAAO,KAAK,KAAK,EAAE;UACrByN,IAAI,GAAGnU,EAAE,CAACkL,GAAG,CAACjH,IAAI,CAAC,CAAC,CAAC,CAACqB,MAAM,EAAE,CAAAjB,CAAC,KAAIA,CAAC,CAACX,CAAC,CAAC;UACvCwQ,IAAI,GAAGlU,EAAE,CAACsO,GAAG,CAACrK,IAAI,CAAC,CAAC,CAAC,CAACqB,MAAM,EAAE,CAAAjB,CAAC,KAAIA,CAAC,CAACX,CAAC,CAAC;UACvCmI,MAAM,GAAG7L,EAAE,CAAC+L,KAAK;UACdqI,QAAQ,CAAC,CAAC;UACVC,MAAM,CAAC,CAACF,IAAI,EAAED,IAAI,CAAC,CAAC;UACpBI,KAAK,CAACrR,KAAK,CAACqJ,KAAK,CAACgI,KAAK,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM;UACLH,IAAI,GAAGlR,KAAK,CAACqJ,KAAK,CAACP,KAAK,CAAC,CAAC,CAACsI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;UAChDL,IAAI,GAAGjR,KAAK,CAACqJ,KAAK,CAACP,KAAK,CAAC,CAAC,CAACsI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;UAChD,IAAItR,KAAK,CAAC4I,MAAM,EAAE;YAChBA,MAAM,GAAG5I,KAAK,CAAC4I,MAAM,CAAC,CAAC;UACzB,CAAC,MAAM,IAAI5I,KAAK,CAACqJ,KAAK,CAACP,KAAK,EAAE;YAC5BF,MAAM,GAAG5I,KAAK,CAACqJ,KAAK,CAACP,KAAK,CAAC,CAAC;UAC9B,CAAC,MAAM;YACLF,MAAM,GAAG7L,EAAE,CAAC+L,KAAK,CAACyI,MAAM,CAAC,CAAC;UAC5B;QACF;QACA,IAAI3I,MAAM,IAAIA,MAAM,CAAC4I,KAAK,EAAE;UAC1B5I,MAAM,CAAC4I,KAAK,CAAC,IAAI,CAAC;QACpB;;QAEA,IAAIT,QAAQ,CAACnE,MAAM,GAAG,CAAC,EAAE;UACvB,MAAM6E,OAAO,GAAG,EAAE;UAClB,IAAIhO,OAAO,KAAK,KAAK,EAAE;YACrB;YACA;YACA,MAAMiO,QAAQ,GAAG1Q,IAAI,CAACgP,MAAM,CAAC,CAAC2B,KAAK,EAAEvQ,CAAC,KAAK;cACzCA,CAAC,CAACiB,MAAM,CAACmH,OAAO,CAAC,CAAA/I,CAAC,KAAIkR,KAAK,CAACC,GAAG,CAACnR,CAAC,CAACA,CAAC,CAAC,CAAC;;cAErC,OAAOkR,KAAK;YACd,CAAC,EAAE,IAAIE,GAAG,CAAC,CAAC,CAAC;YACbJ,OAAO,CAACf,IAAI,CAAC,GAAGgB,QAAQ,CAACrP,MAAM,CAAC,CAAC,CAAC;YAClCoP,OAAO,CAAC/H,IAAI,CAAC,CAAC;UAChB,CAAC,MAAM;YACL;YACA;YACA,IAAIoI,MAAM,GAAG9J,IAAI,CAACC,GAAG;cACnB,GAAGjH,IAAI,CAACoP,GAAG,CAAC,CAAAhP,CAAC;cACX4G,IAAI,CAACC,GAAG;gBACN,GAAG7G,CAAC,CAACiB,MAAM,CAACwK,KAAK,CAAC,CAAC,CAAC,CAACuD,GAAG,CAAC,CAAC9E,CAAC,EAAEyG,CAAC,KAAKzG,CAAC,CAAC7K,CAAC,GAAGW,CAAC,CAACiB,MAAM,CAAC0P,CAAC,CAAC,CAACtR,CAAC;cACxD;cACF;YACF,CAAC;YACD,MAAMuR,UAAU,GAAG,CAACf,IAAI,GAAGC,IAAI,KAAKY,MAAM,IAAI,CAAC,CAAC;YAChD;YACAA,MAAM,GAAGE,UAAU,GAAG,GAAG,GAAG,CAACf,IAAI,GAAGC,IAAI,IAAI,GAAG,GAAGY,MAAM;YACxDA,MAAM,GAAGE,UAAU,GAAG,GAAG,GAAG,CAACf,IAAI,GAAGC,IAAI,IAAI,GAAG,GAAGY,MAAM;YACxDL,OAAO,CAACf,IAAI,CAACQ,IAAI,CAAC;YAClB,KAAK,IAAIzQ,CAAC,GAAGyQ,IAAI,EAAEzQ,CAAC,GAAGwQ,IAAI,EAAExQ,CAAC,IAAIqR,MAAM,EAAE;cACxCL,OAAO,CAACf,IAAI,CAACjQ,CAAC,CAAC;YACjB;YACAgR,OAAO,CAACf,IAAI,CAACO,IAAI,CAAC;UACpB;UACA,MAAMgB,WAAW,GAAGlB,QAAQ,CAACX,GAAG,CAAC,CAAA8B,EAAE,KAAI;YACrC,MAAM,EAAEC,KAAK,EAAEC,UAAU,CAAC,CAAC,GAAGF,EAAE;YAChC,OAAO;cACL/P,GAAG,EAAE+P,EAAE,CAAC/B,IAAI;cACZ9N,MAAM,EAAEoP,OAAO,CAACrB,GAAG,CAAC,CAAA3P,CAAC,MAAK;gBACxBA,CAAC;gBACDE,CAAC,EAAEvD,cAAc,CAACgV,UAAU,EAAE3R,CAAC;cACjC,CAAC,CAAC,CAAC;cACH6M,KAAK,EAAE4E,EAAE,CAAC5E,KAAK;cACfiD,WAAW,EAAE2B,EAAE,CAAC3R,KAAK;cACrB+B,OAAO,EAAG,GAAE4P,EAAE,CAAC1B,OAAQ,IAAG0B,EAAE,CAAC7Q,KAAM;YACrC,CAAC;UACH,CAAC,CAAC;UACFL,IAAI,CAAC0P,IAAI,CAAC,GAAGuB,WAAW,CAAC;QAC3B;QACA,MAAM5I,KAAK,GAAGrJ,KAAK,CAACqS,MAAM,GAAGrS,KAAK,CAACqS,MAAM,GAAGrS,KAAK,CAACqJ,KAAK;QACvD,MAAM7G,KAAK,GAAGxC,KAAK,CAACsS,MAAM,GAAGtS,KAAK,CAACsS,MAAM,GAAGtS,KAAK,CAACwC,KAAK;QACvD,MAAM+P,UAAU,GAAGlJ,KAAK,CAACP,KAAK,CAAC,CAAC,CAACuI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAMmB,gBAAgB,GAAGhQ,KAAK,CAACsG,KAAK,CAAC,CAAC,CAACuI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEjD,IAAIzO,cAAc,EAAE;UAClB;UACAiE,sBAAsB;UACnBC,MAAM;YACL,CAAArG,CAAC;YACCA,CAAC,CAACqP,cAAc,KAAKnS,gBAAgB,CAAC8U,KAAK;YAC3C7P,cAAc;YACdA,cAAc,CAACnC,CAAC,CAAC0P,IAAI;UACzB,CAAC;UACA3G,OAAO,CAAC,CAACkJ,MAAM,EAAEC,KAAK,KAAK;YAC1B,MAAMC,CAAC,GAAGhV,kBAAkB,CAAC8U,MAAM,CAAC;YACpC;YACA,MAAMG,WAAW,GAAG9V,EAAE;YACnB6K,MAAM,CAAC/B,OAAO,CAAC;YACf+B,MAAM,CAAC,UAAU,CAAC;YAClB1G,MAAM,CAAC,GAAG,CAAC;YACXC,IAAI,CAAC,OAAO,EAAG,6BAA4BwR,KAAM,EAAC,CAAC;YACtD,MAAMG,MAAM;YACVF,CAAC,CAACtF,KAAK,IAAIhM,QAAQ,CAACxD,eAAe,CAAC8U,CAAC,CAACzC,IAAI,CAAC,EAAEpN,WAAW,CAAC;;YAE3D,MAAMgQ,GAAG,GAAGnU,UAAU,CAAC;cACrB,GAAGgU,CAAC;cACJI,kBAAkB,EAAG,wCAAuCN,MAAM,CAACO,UAAW;YAChF,CAAC,CAAC;YACF,MAAMC,OAAO,GAAG,CAACtQ,cAAc,CAACgQ,CAAC,CAACzC,IAAI,CAAC,CAAC+C,OAAO,IAAI,EAAE;YAClD9C,GAAG,CAAC,CAAAhD,CAAC,KAAI;cACR,MAAM+F,SAAS,GAAG,IAAIC,IAAI,CAACpW,MAAM,CAAC+L,GAAG,CAACqE,CAAC,CAACwF,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;;cAEvD,OAAO;gBACL,GAAGjG,CAAC;gBACJ,CAACwF,CAAC,CAACS,UAAU,GAAGF;cAClB,CAAC;YACH,CAAC,CAAC;YACDrM,MAAM;cACL,CAAAwM,MAAM;cACJ,CAAC9E,MAAM,CAACC,KAAK,CAAC6E,MAAM,CAACV,CAAC,CAACS,UAAU,CAAC,CAACE,eAAe,CAAC,CAAC;YACxD,CAAC;;YAEH,IAAIL,OAAO,CAACtG,MAAM,GAAG,CAAC,EAAE;cACtBiG,WAAW;cACRhS,SAAS,CAAC,MAAM,CAAC;cACjBG,IAAI,CAACkS,OAAO,CAAC;cACbjS,KAAK,CAAC,CAAC;cACPC,MAAM,CAAC,MAAM,CAAC;cACdC,IAAI,CAAC;gBACJqS,EAAE,EAAEA,CAAApS,CAAC,KAAIwH,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;gBAC1CI,EAAE,EAAE,CAAC;gBACLC,EAAE,EAAEA,CAAAtS,CAAC,KAAIwH,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;gBAC1CM,EAAE,EAAEnB;cACN,CAAC,CAAC;cACDrR,IAAI,CAAC,OAAO,EAAG,GAAEyR,CAAC,CAACpC,OAAQ,IAAGoC,CAAC,CAACvR,KAAM,EAAC,CAAC;cACxCA,KAAK,CAAC,QAAQ,EAAEyR,MAAM,CAAC;cACvBzR,KAAK,CAAC,cAAc,EAAEuR,CAAC,CAACrS,KAAK,CAAC;cAC9BuL,EAAE,CAAC,WAAW,EAAEiH,GAAG,CAAC/L,IAAI,CAAC;cACzB8E,EAAE,CAAC,UAAU,EAAEiH,GAAG,CAACa,IAAI,CAAC;cACxB9F,IAAI,CAACiF,GAAG,CAAC;YACd;;YAEA;YACA,IAAI/S,KAAK,CAACyI,KAAK,EAAE;cACfzI,KAAK,CAACyI,KAAK,CAACoD,QAAQ,CAACC,EAAE,CAAC,0BAA0B,EAAE,MAAM;gBACxD+G,WAAW;gBACRhS,SAAS,CAAC,MAAM,CAAC;gBACjBG,IAAI,CAACkS,OAAO,CAAC;gBACb/R,IAAI,CAAC;kBACJqS,EAAE,EAAEA,CAAApS,CAAC,KAAIwH,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;kBAC1CI,EAAE,EAAE,CAAC;kBACLC,EAAE,EAAEA,CAAAtS,CAAC,KAAIwH,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;kBAC1CM,EAAE,EAAEnB,gBAAgB;kBACpBhC,OAAO,EAAEA,CAAApP,CAAC,KAAI;oBACZ,MAAMX,CAAC,GAAGmI,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;;oBAE3C,OAAO5S,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG8R,UAAU,GAAG,CAAC,GAAG,CAAC;kBACxC;gBACF,CAAC,CAAC;cACN,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;;UAEJ;UACA1L,sBAAsB;UACnBC,MAAM;YACL,CAAArG,CAAC;YACCA,CAAC,CAACqP,cAAc,KAAKnS,gBAAgB,CAACkW,QAAQ;YAC9CjR,cAAc;YACdA,cAAc,CAACnC,CAAC,CAAC0P,IAAI;UACzB,CAAC;UACA3G,OAAO,CAAC,CAACkJ,MAAM,EAAEC,KAAK,KAAK;YAC1B,MAAMC,CAAC,GAAGhV,kBAAkB,CAAC8U,MAAM,CAAC;YACpC;YACA,MAAMG,WAAW,GAAG9V,EAAE;YACnB6K,MAAM,CAAC/B,OAAO,CAAC;YACf+B,MAAM,CAAC,UAAU,CAAC;YAClB1G,MAAM,CAAC,GAAG,CAAC;YACXC,IAAI,CAAC,OAAO,EAAG,gCAA+BwR,KAAM,EAAC,CAAC;;YAEzD,MAAMG,MAAM;YACVF,CAAC,CAACtF,KAAK,IAAIhM,QAAQ,CAACxD,eAAe,CAAC8U,CAAC,CAACzC,IAAI,CAAC,EAAEpN,WAAW,CAAC;YAC3D,MAAMgQ,GAAG,GAAGnU,UAAU,CAACgU,CAAC,CAAC;;YAEzB,MAAMM,OAAO,GAAG,CAACtQ,cAAc,CAACgQ,CAAC,CAACzC,IAAI,CAAC,CAAC+C,OAAO,IAAI,EAAE;YAClD9C,GAAG,CAAC,CAAAhD,CAAC,KAAI;cACR,MAAM+F,SAAS,GAAG,IAAIC,IAAI,CAACpW,MAAM,CAAC+L,GAAG,CAACqE,CAAC,CAACwF,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;cACvD,MAAMS,gBAAgB,GAAG,IAAIV,IAAI;gBAC/BpW,MAAM,CAAC+L,GAAG,CAACqE,CAAC,CAACwF,CAAC,CAACmB,iBAAiB,CAAC;cACnC,CAAC;;cAED,OAAO;gBACL,GAAG3G,CAAC;gBACJ,CAACwF,CAAC,CAACS,UAAU,GAAGF,SAAS;gBACzB,CAACP,CAAC,CAACmB,iBAAiB,GAAGD;cACzB,CAAC;YACH,CAAC,CAAC;YACDhN,MAAM;cACL,CAAAwM,MAAM;cACJ,CAAC9E,MAAM,CAACC,KAAK,CAAC6E,MAAM,CAACV,CAAC,CAACS,UAAU,CAAC,CAACE,eAAe,CAAC,CAAC,CAAC;cACrD,CAAC/E,MAAM,CAACC,KAAK;gBACX6E,MAAM,CAACV,CAAC,CAACmB,iBAAiB,CAAC,CAACR,eAAe,CAAC;cAC9C;YACJ,CAAC;;YAEH,IAAIL,OAAO,CAACtG,MAAM,GAAG,CAAC,EAAE;cACtBiG,WAAW;cACRhS,SAAS,CAAC,MAAM,CAAC;cACjBG,IAAI,CAACkS,OAAO,CAAC;cACbjS,KAAK,CAAC,CAAC;cACPC,MAAM,CAAC,MAAM,CAAC;cACdC,IAAI,CAAC;gBACJV,CAAC,EAAEA,CAAAW,CAAC;gBACF4G,IAAI,CAACC,GAAG;kBACNW,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;kBACjCzK,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACmB,iBAAiB,CAAC,CAAC;gBACzC,CAAC;gBACHpT,CAAC,EAAE,CAAC;gBACJJ,KAAK,EAAEA,CAAAa,CAAC;gBACN4G,IAAI,CAACqD,GAAG;kBACNrD,IAAI,CAACgM,GAAG;oBACNpL,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACmB,iBAAiB,CAAC,CAAC,CAAC;oBACtCnL,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC;kBACpC,CAAC;kBACD;gBACF,CAAC;gBACHhT,MAAM,EAAEmS;cACV,CAAC,CAAC;cACDrR,IAAI,CAAC,OAAO,EAAG,GAAEyR,CAAC,CAACpC,OAAQ,IAAGoC,CAAC,CAACvR,KAAM,EAAC,CAAC;cACxCA,KAAK,CAAC,cAAc,EAAEuR,CAAC,CAACrS,KAAK,CAAC;cAC9Bc,KAAK,CAAC,QAAQ,EAAEyR,MAAM,CAAC;cACvBzR,KAAK,CAAC,MAAM,EAAEyR,MAAM,CAAC;cACrBzR,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC;cAC1ByK,EAAE,CAAC,WAAW,EAAEiH,GAAG,CAAC/L,IAAI,CAAC;cACzB8E,EAAE,CAAC,UAAU,EAAEiH,GAAG,CAACa,IAAI,CAAC;cACxB9F,IAAI,CAACiF,GAAG,CAAC;YACd;;YAEA;YACA,IAAI/S,KAAK,CAACyI,KAAK,EAAE;cACfzI,KAAK,CAACyI,KAAK,CAACoD,QAAQ,CAACC,EAAE,CAAC,6BAA6B,EAAE,MAAM;gBAC3D+G,WAAW;gBACRhS,SAAS,CAAC,MAAM,CAAC;gBACjBG,IAAI,CAACkS,OAAO,CAAC;gBACb/R,IAAI,CAAC;kBACJV,CAAC,EAAEA,CAAAW,CAAC,KAAIwH,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;kBACzC9S,KAAK,EAAEA,CAAAa,CAAC,KAAI;oBACV,MAAMoS,EAAE,GAAG5K,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACS,UAAU,CAAC,CAAC,CAAC;oBAC5C,MAAMK,EAAE,GAAG9K,MAAM,CAAC,IAAIwK,IAAI,CAAChS,CAAC,CAACwR,CAAC,CAACmB,iBAAiB,CAAC,CAAC,CAAC;;oBAEnD,OAAOL,EAAE,GAAGF,EAAE;kBAChB;gBACF,CAAC,CAAC;cACN,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;QACN;;QAEA;QACA1L,GAAG,CAAC6F,KAAK,CAAC3M,IAAI,CAAC,CAACG,IAAI,CAAC,QAAQ,EAAEd,MAAM,CAAC,CAACc,IAAI,CAAC,OAAO,EAAEZ,KAAK,CAAC,CAACuN,IAAI,CAAC9N,KAAK,CAAC;;QAEvE;QACAA,KAAK,CAAC6L,QAAQ,CAACC,EAAE,CAAC,iCAAiC,EAAE,MAAM;UACzD/O,EAAE,CAAC8D,SAAS;YACV;UACF,CAAC;UACEQ,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;UAC1BA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;UAC3BtE,EAAE,CAAC8D,SAAS;YACV;UACF,CAAC,CAACQ,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ;IACF;;IAEApC,WAAW,CAACe,KAAK,CAAC;;IAElB,OAAOA,KAAK;EACd,CAAC;;EAED;EACA;EACA;EAAArD,aAAA,CA92BM+K,SAAS,qFA+2Bf,IAAIR,OAAO,EAAE;IACXpI,aAAa,CAACoI,OAAO,CAAC;EACxB,CAAC,MAAM;IACLvI,YAAY,CAAC,IAAI,CAAC;EACpB;;EAEA1B,EAAE,CAACgX,QAAQ,CAACvM,SAAS,CAAC;AACxB;;AAEA9B,OAAO,CAACsO,WAAW,GAAG,MAAM;AAC5BtO,OAAO,CAAC7D,SAAS,GAAGA,SAAS,CAAC,MAAAoS,QAAA;AACfvO,OAAO,CAAtB,eAAAuO,QAAA,CAAuB,mBAAAC,cAAA,UAAA5X,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAA2X,cAAA,WAAAA,cAAA,CAAAC,QAAA,CA5nCjB3U,mBAAmB,mIAAA0U,cAAA,CAAAC,QAAA,CAuCjB/S,QAAQ,wHAAA8S,cAAA,CAAAC,QAAA,CAAE9S,QAAQ,wHAAA6S,cAAA,CAAAC,QAAA,CAGpB7S,cAAc,8HAAA4S,cAAA,CAAAC,QAAA,CACd5S,oBAAoB,oIAAA2S,cAAA,CAAAC,QAAA,CACpB3S,0BAA0B,0IAAA0S,cAAA,CAAAC,QAAA,CAE1B1S,WAAW,2HAAAyS,cAAA,CAAAC,QAAA,CAIXxS,oBAAoB,oIAAAuS,cAAA,CAAAC,QAAA,CAEpBvS,eAAe,+HAAAsS,cAAA,CAAAC,QAAA,CAEftS,SAAS,yHAAAqS,cAAA,CAAAC,QAAA,CAoHT3O,IAAI,oHAAA0O,cAAA,CAAAC,QAAA,CACJ1O,SAAS,yHAAAyO,cAAA,CAAAC,QAAA,CAENzO,OAAO,uHAAAwO,cAAA,CAAAC,QAAA,CAAAF,QAAA,+IAAAG,WAAA,UAAA9X,oBAAA,mBAAAA,oBAAA,CAAA8X,WAAA,GAAA7X,SAAA,CAAA6X,WAAA,IAAAA,WAAA,CAAA5X,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}