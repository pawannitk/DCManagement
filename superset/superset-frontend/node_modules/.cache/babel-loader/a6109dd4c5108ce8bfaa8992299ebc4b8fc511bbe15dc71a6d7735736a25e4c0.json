{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { MinusSquareOutlined, PlusSquareOutlined } from '@ant-design/icons';\nimport { CurrencyFormatter, FeatureFlag, getColumnLabel, getNumberFormatter, getSelectedText, isAdhocColumn, isFeatureEnabled, isPhysicalColumn, styled, t, useTheme } from '@superset-ui/core';\nimport { aggregatorTemplates, PivotTable, sortAs } from './react-pivottable';\nimport { MetricsLayoutEnum } from './types';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Styles = styled.div`\n  ${({ height, width, margin }) => `\n      margin: ${margin}px;\n      height: ${height - margin * 2}px;\n      width: ${typeof width === 'string' ? parseInt(width, 10) : width - margin * 2}px;\n `}\n`;\nconst PivotTableWrapper = styled.div`\n  height: 100%;\n  max-width: inherit;\n  overflow: auto;\n`;\nconst METRIC_KEY = t('Metric');\nconst vals = ['value'];\nconst StyledPlusSquareOutlined = styled(PlusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\nconst StyledMinusSquareOutlined = styled(MinusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\nconst aggregatorsFactory = (formatter) => ({\n  Count: aggregatorTemplates.count(formatter),\n  'Count Unique Values': aggregatorTemplates.countUnique(formatter),\n  'List Unique Values': aggregatorTemplates.listUnique(', ', formatter),\n  Sum: aggregatorTemplates.sum(formatter),\n  Average: aggregatorTemplates.average(formatter),\n  Median: aggregatorTemplates.median(formatter),\n  'Sample Variance': aggregatorTemplates.var(1, formatter),\n  'Sample Standard Deviation': aggregatorTemplates.stdev(1, formatter),\n  Minimum: aggregatorTemplates.min(formatter),\n  Maximum: aggregatorTemplates.max(formatter),\n  First: aggregatorTemplates.first(formatter),\n  Last: aggregatorTemplates.last(formatter),\n  'Sum as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'total', formatter),\n  'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'row', formatter),\n  'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.sum(), 'col', formatter),\n  'Count as Fraction of Total': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'total', formatter),\n  'Count as Fraction of Rows': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'row', formatter),\n  'Count as Fraction of Columns': aggregatorTemplates.fractionOf(aggregatorTemplates.count(), 'col', formatter)\n});\n/* If you change this logic, please update the corresponding Python\n * function (https://github.com/apache/superset/blob/master/superset/charts/post_processing.py),\n * or reach out to @betodealmeida.\n */\nexport default function PivotTableChart(props) {\n  const { data, height, width, groupbyRows: groupbyRowsRaw, groupbyColumns: groupbyColumnsRaw, metrics, colOrder, rowOrder, aggregateFunction, transposePivot, combineMetric, rowSubtotalPosition, colSubtotalPosition, colTotals, colSubTotals, rowTotals, rowSubTotals, valueFormat, currencyFormat, emitCrossFilters, setDataMask, selectedFilters, verboseMap, columnFormats, currencyFormats, metricsLayout, metricColorFormatters, dateFormatters, onContextMenu, timeGrainSqla } = props;\n  const theme = useTheme();\n  const defaultFormatter = useMemo(() => currencyFormat != null && currencyFormat.symbol ?\n  new CurrencyFormatter({\n    currency: currencyFormat,\n    d3Format: valueFormat\n  }) :\n  getNumberFormatter(valueFormat), [valueFormat, currencyFormat]);\n  const customFormatsArray = useMemo(() => Array.from(new Set([\n  ...Object.keys(columnFormats || {}),\n  ...Object.keys(currencyFormats || {})]\n  )).map((metricName) => [\n  metricName,\n  columnFormats[metricName] || valueFormat,\n  currencyFormats[metricName] || currencyFormat]\n  ), [columnFormats, currencyFormat, currencyFormats, valueFormat]);\n  const hasCustomMetricFormatters = customFormatsArray.length > 0;\n  const metricFormatters = useMemo(() => hasCustomMetricFormatters ?\n  {\n    [METRIC_KEY]: Object.fromEntries(customFormatsArray.map(([metric, d3Format, currency]) => [\n    metric,\n    currency ?\n    new CurrencyFormatter({\n      currency,\n      d3Format\n    }) :\n    getNumberFormatter(d3Format)]\n    ))\n  } :\n  undefined, [customFormatsArray, hasCustomMetricFormatters]);\n  const metricNames = useMemo(() => metrics.map((metric) => typeof metric === 'string' ? metric : metric.label), [metrics]);\n  const unpivotedData = useMemo(() => data.reduce((acc, record) => [\n  ...acc,\n  ...metricNames.\n  map((name) => ({\n    ...record,\n    [METRIC_KEY]: name,\n    value: record[name]\n  })).\n  filter((record) => record.value !== null)],\n  []), [data, metricNames]);\n  const groupbyRows = useMemo(() => groupbyRowsRaw.map(getColumnLabel), [groupbyRowsRaw]);\n  const groupbyColumns = useMemo(() => groupbyColumnsRaw.map(getColumnLabel), [groupbyColumnsRaw]);\n  const sorters = useMemo(() => ({\n    [METRIC_KEY]: sortAs(metricNames)\n  }), [metricNames]);\n  const [rows, cols] = useMemo(() => {\n    let [rows_, cols_] = transposePivot ?\n    [groupbyColumns, groupbyRows] :\n    [groupbyRows, groupbyColumns];\n    if (metricsLayout === MetricsLayoutEnum.ROWS) {\n      rows_ = combineMetric ? [...rows_, METRIC_KEY] : [METRIC_KEY, ...rows_];\n    } else\n    {\n      cols_ = combineMetric ? [...cols_, METRIC_KEY] : [METRIC_KEY, ...cols_];\n    }\n    return [rows_, cols_];\n  }, [\n  combineMetric,\n  groupbyColumns,\n  groupbyRows,\n  metricsLayout,\n  transposePivot]\n  );\n  const handleChange = useCallback((filters) => {\n    const filterKeys = Object.keys(filters);\n    const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n    setDataMask({\n      extraFormData: {\n        filters: filterKeys.length === 0 ?\n        undefined :\n        filterKeys.map((key) => {var _groupby$find;\n          const val = filters == null ? void 0 : filters[key];\n          const col = (_groupby$find = groupby.find((item) => {\n            if (isPhysicalColumn(item)) {\n              return item === key;\n            }\n            if (isAdhocColumn(item)) {\n              return item.label === key;\n            }\n            return false;\n          })) != null ? _groupby$find : '';\n          if (val === null || val === undefined)\n          return {\n            col,\n            op: 'IS NULL'\n          };\n          return {\n            col,\n            op: 'IN',\n            val: val\n          };\n        })\n      },\n      filterState: {\n        value: filters && Object.keys(filters).length ?\n        Object.values(filters) :\n        null,\n        selectedFilters: filters && Object.keys(filters).length ? filters : null\n      }\n    });\n  }, [groupbyColumnsRaw, groupbyRowsRaw, setDataMask]);\n  const getCrossFilterDataMask = useCallback((value) => {\n    const isActiveFilterValue = (key, val) => {var _selectedFilters$key;return !!selectedFilters && ((_selectedFilters$key = selectedFilters[key]) == null ? void 0 : _selectedFilters$key.includes(val));};\n    if (!value) {\n      return undefined;\n    }\n    const [key, val] = Object.entries(value)[0];\n    let values = { ...selectedFilters };\n    if (isActiveFilterValue(key, val)) {\n      values = {};\n    } else\n    {\n      values = { [key]: [val] };\n    }\n    const filterKeys = Object.keys(values);\n    const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: filterKeys.length === 0 ?\n          undefined :\n          filterKeys.map((key) => {var _values, _groupby$find2;\n            const val = (_values = values) == null ? void 0 : _values[key];\n            const col = (_groupby$find2 = groupby.find((item) => {\n              if (isPhysicalColumn(item)) {\n                return item === key;\n              }\n              if (isAdhocColumn(item)) {\n                return item.label === key;\n              }\n              return false;\n            })) != null ? _groupby$find2 : '';\n            if (val === null || val === undefined)\n            return {\n              col,\n              op: 'IS NULL'\n            };\n            return {\n              col,\n              op: 'IN',\n              val: val\n            };\n          })\n        },\n        filterState: {\n          value: values && Object.keys(values).length ?\n          Object.values(values) :\n          null,\n          selectedFilters: values && Object.keys(values).length ? values : null\n        }\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, val)\n    };\n  }, [groupbyColumnsRaw, groupbyRowsRaw, selectedFilters]);\n  const toggleFilter = useCallback((e, value, filters, pivotData, isSubtotal, isGrandTotal) => {\n    if (isSubtotal || isGrandTotal || !emitCrossFilters) {\n      return;\n    }\n    // allow selecting text in a cell\n    if (getSelectedText()) {\n      return;\n    }\n    const isActiveFilterValue = (key, val) => {var _selectedFilters$key2;return !!selectedFilters && ((_selectedFilters$key2 = selectedFilters[key]) == null ? void 0 : _selectedFilters$key2.includes(val));};\n    const filtersCopy = { ...filters };\n    delete filtersCopy[METRIC_KEY];\n    const filtersEntries = Object.entries(filtersCopy);\n    if (filtersEntries.length === 0) {\n      return;\n    }\n    const [key, val] = filtersEntries[filtersEntries.length - 1];\n    let updatedFilters = { ...(selectedFilters || {}) };\n    // multi select\n    // if (selectedFilters && isActiveFilterValue(key, val)) {\n    //   updatedFilters[key] = selectedFilters[key].filter((x: DataRecordValue) => x !== val);\n    // } else {\n    //   updatedFilters[key] = [...(selectedFilters?.[key] || []), val];\n    // }\n    // single select\n    if (selectedFilters && isActiveFilterValue(key, val)) {\n      updatedFilters = {};\n    } else\n    {\n      updatedFilters = {\n        [key]: [val]\n      };\n    }\n    if (Array.isArray(updatedFilters[key]) &&\n    updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n    handleChange(updatedFilters);\n  }, [emitCrossFilters, selectedFilters, handleChange]);\n  const tableOptions = useMemo(() => ({\n    clickRowHeaderCallback: toggleFilter,\n    clickColumnHeaderCallback: toggleFilter,\n    colTotals,\n    colSubTotals,\n    rowTotals,\n    rowSubTotals,\n    highlightHeaderCellsOnHover: emitCrossFilters ||\n    isFeatureEnabled(FeatureFlag.DrillBy) ||\n    isFeatureEnabled(FeatureFlag.DrillToDetail),\n    highlightedHeaderCells: selectedFilters,\n    omittedHighlightHeaderGroups: [METRIC_KEY],\n    cellColorFormatters: { [METRIC_KEY]: metricColorFormatters },\n    dateFormatters\n  }), [\n  colTotals,\n  colSubTotals,\n  dateFormatters,\n  emitCrossFilters,\n  metricColorFormatters,\n  rowTotals,\n  rowSubTotals,\n  selectedFilters,\n  toggleFilter]\n  );\n  const subtotalOptions = useMemo(() => ({\n    colSubtotalDisplay: { displayOnTop: colSubtotalPosition },\n    rowSubtotalDisplay: { displayOnTop: rowSubtotalPosition },\n    arrowCollapsed: ___EmotionJSX(StyledPlusSquareOutlined, null),\n    arrowExpanded: ___EmotionJSX(StyledMinusSquareOutlined, null)\n  }), [colSubtotalPosition, rowSubtotalPosition]);\n  const handleContextMenu = useCallback((e, colKey, rowKey, dataPoint) => {\n    if (onContextMenu) {\n      e.preventDefault();\n      e.stopPropagation();\n      const drillToDetailFilters = [];\n      if (colKey && colKey.length > 1) {\n        colKey.forEach((val, i) => {\n          const col = cols[i];\n          const formatter = dateFormatters[col];\n          const formattedVal = (formatter == null ? void 0 : formatter(val)) || String(val);\n          if (i > 0) {\n            drillToDetailFilters.push({\n              col,\n              op: '==',\n              val,\n              formattedVal,\n              grain: formatter ? timeGrainSqla : undefined\n            });\n          }\n        });\n      }\n      if (rowKey) {\n        rowKey.forEach((val, i) => {\n          const col = rows[i];\n          const formatter = dateFormatters[col];\n          const formattedVal = (formatter == null ? void 0 : formatter(val)) || String(val);\n          drillToDetailFilters.push({\n            col,\n            op: '==',\n            val,\n            formattedVal,\n            grain: formatter ? timeGrainSqla : undefined\n          });\n        });\n      }\n      onContextMenu(e.clientX, e.clientY, {\n        drillToDetail: drillToDetailFilters,\n        crossFilter: getCrossFilterDataMask(dataPoint),\n        drillBy: dataPoint && {\n          filters: [\n          {\n            col: Object.keys(dataPoint)[0],\n            op: '==',\n            val: Object.values(dataPoint)[0]\n          }],\n\n          groupbyFieldName: rowKey ? 'groupbyRows' : 'groupbyColumns'\n        }\n      });\n    }\n  }, [\n  cols,\n  dateFormatters,\n  getCrossFilterDataMask,\n  onContextMenu,\n  rows,\n  timeGrainSqla]\n  );\n  return ___EmotionJSX(Styles, { height: height, width: width, margin: theme.gridUnit * 4 },\n  ___EmotionJSX(PivotTableWrapper, null,\n  ___EmotionJSX(PivotTable, { data: unpivotedData, rows: rows, cols: cols, aggregatorsFactory: aggregatorsFactory, defaultFormatter: defaultFormatter, customFormatters: metricFormatters, aggregatorName: aggregateFunction, vals: vals, colOrder: colOrder, rowOrder: rowOrder, sorters: sorters, tableOptions: tableOptions, subtotalOptions: subtotalOptions, namesMapping: verboseMap, onContextMenu: handleContextMenu })\n  )\n  );\n}__signature__(PivotTableChart, \"useTheme{theme}\\nuseMemo{defaultFormatter}\\nuseMemo{customFormatsArray}\\nuseMemo{metricFormatters}\\nuseMemo{metricNames}\\nuseMemo{unpivotedData}\\nuseMemo{groupbyRows}\\nuseMemo{groupbyColumns}\\nuseMemo{sorters}\\nuseMemo{[rows, cols]}\\nuseCallback{handleChange}\\nuseCallback{getCrossFilterDataMask}\\nuseCallback{toggleFilter}\\nuseMemo{tableOptions}\\nuseMemo{subtotalOptions}\\nuseCallback{handleContextMenu}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(PivotTableWrapper, \"PivotTableWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(METRIC_KEY, \"METRIC_KEY\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(vals, \"vals\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(StyledPlusSquareOutlined, \"StyledPlusSquareOutlined\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(StyledMinusSquareOutlined, \"StyledMinusSquareOutlined\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(aggregatorsFactory, \"aggregatorsFactory\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(PivotTableChart, \"PivotTableChart\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useMemo","MinusSquareOutlined","PlusSquareOutlined","CurrencyFormatter","FeatureFlag","getColumnLabel","getNumberFormatter","getSelectedText","isAdhocColumn","isFeatureEnabled","isPhysicalColumn","styled","t","useTheme","aggregatorTemplates","PivotTable","sortAs","MetricsLayoutEnum","jsx","___EmotionJSX","Styles","div","height","width","margin","parseInt","PivotTableWrapper","METRIC_KEY","vals","StyledPlusSquareOutlined","theme","colors","grayscale","light2","StyledMinusSquareOutlined","aggregatorsFactory","formatter","Count","count","countUnique","listUnique","Sum","sum","Average","average","Median","median","var","stdev","Minimum","min","Maximum","max","First","first","Last","last","fractionOf","PivotTableChart","props","data","groupbyRows","groupbyRowsRaw","groupbyColumns","groupbyColumnsRaw","metrics","colOrder","rowOrder","aggregateFunction","transposePivot","combineMetric","rowSubtotalPosition","colSubtotalPosition","colTotals","colSubTotals","rowTotals","rowSubTotals","valueFormat","currencyFormat","emitCrossFilters","setDataMask","selectedFilters","verboseMap","columnFormats","currencyFormats","metricsLayout","metricColorFormatters","dateFormatters","onContextMenu","timeGrainSqla","defaultFormatter","symbol","currency","d3Format","customFormatsArray","Array","from","Set","Object","keys","map","metricName","hasCustomMetricFormatters","length","metricFormatters","fromEntries","metric","undefined","metricNames","label","unpivotedData","reduce","acc","record","name","value","filter","sorters","rows","cols","rows_","cols_","ROWS","handleChange","filters","filterKeys","groupby","extraFormData","key","_groupby$find","val","col","find","item","op","filterState","values","getCrossFilterDataMask","isActiveFilterValue","_selectedFilters$key","includes","entries","dataMask","_values","_groupby$find2","isCurrentValueSelected","toggleFilter","e","pivotData","isSubtotal","isGrandTotal","_selectedFilters$key2","filtersCopy","filtersEntries","updatedFilters","isArray","tableOptions","clickRowHeaderCallback","clickColumnHeaderCallback","highlightHeaderCellsOnHover","DrillBy","DrillToDetail","highlightedHeaderCells","omittedHighlightHeaderGroups","cellColorFormatters","subtotalOptions","colSubtotalDisplay","displayOnTop","rowSubtotalDisplay","arrowCollapsed","arrowExpanded","handleContextMenu","colKey","rowKey","dataPoint","preventDefault","stopPropagation","drillToDetailFilters","forEach","i","formattedVal","String","push","grain","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName","gridUnit","customFormatters","aggregatorName","namesMapping","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { MinusSquareOutlined, PlusSquareOutlined } from '@ant-design/icons';\nimport {\n  AdhocMetric,\n  BinaryQueryObjectFilterClause,\n  CurrencyFormatter,\n  DataRecordValue,\n  FeatureFlag,\n  getColumnLabel,\n  getNumberFormatter,\n  getSelectedText,\n  isAdhocColumn,\n  isFeatureEnabled,\n  isPhysicalColumn,\n  NumberFormatter,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { aggregatorTemplates, PivotTable, sortAs } from './react-pivottable';\nimport {\n  FilterType,\n  MetricsLayoutEnum,\n  PivotTableProps,\n  PivotTableStylesProps,\n  SelectedFiltersType,\n} from './types';\n\nconst Styles = styled.div<PivotTableStylesProps>`\n  ${({ height, width, margin }) => `\n      margin: ${margin}px;\n      height: ${height - margin * 2}px;\n      width: ${\n        typeof width === 'string' ? parseInt(width, 10) : width - margin * 2\n      }px;\n `}\n`;\n\nconst PivotTableWrapper = styled.div`\n  height: 100%;\n  max-width: inherit;\n  overflow: auto;\n`;\n\nconst METRIC_KEY = t('Metric');\nconst vals = ['value'];\n\nconst StyledPlusSquareOutlined = styled(PlusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\n\nconst StyledMinusSquareOutlined = styled(MinusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\n\nconst aggregatorsFactory = (formatter: NumberFormatter) => ({\n  Count: aggregatorTemplates.count(formatter),\n  'Count Unique Values': aggregatorTemplates.countUnique(formatter),\n  'List Unique Values': aggregatorTemplates.listUnique(', ', formatter),\n  Sum: aggregatorTemplates.sum(formatter),\n  Average: aggregatorTemplates.average(formatter),\n  Median: aggregatorTemplates.median(formatter),\n  'Sample Variance': aggregatorTemplates.var(1, formatter),\n  'Sample Standard Deviation': aggregatorTemplates.stdev(1, formatter),\n  Minimum: aggregatorTemplates.min(formatter),\n  Maximum: aggregatorTemplates.max(formatter),\n  First: aggregatorTemplates.first(formatter),\n  Last: aggregatorTemplates.last(formatter),\n  'Sum as Fraction of Total': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'total',\n    formatter,\n  ),\n  'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'row',\n    formatter,\n  ),\n  'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'col',\n    formatter,\n  ),\n  'Count as Fraction of Total': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'total',\n    formatter,\n  ),\n  'Count as Fraction of Rows': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'row',\n    formatter,\n  ),\n  'Count as Fraction of Columns': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'col',\n    formatter,\n  ),\n});\n\n/* If you change this logic, please update the corresponding Python\n * function (https://github.com/apache/superset/blob/master/superset/charts/post_processing.py),\n * or reach out to @betodealmeida.\n */\nexport default function PivotTableChart(props: PivotTableProps) {\n  const {\n    data,\n    height,\n    width,\n    groupbyRows: groupbyRowsRaw,\n    groupbyColumns: groupbyColumnsRaw,\n    metrics,\n    colOrder,\n    rowOrder,\n    aggregateFunction,\n    transposePivot,\n    combineMetric,\n    rowSubtotalPosition,\n    colSubtotalPosition,\n    colTotals,\n    colSubTotals,\n    rowTotals,\n    rowSubTotals,\n    valueFormat,\n    currencyFormat,\n    emitCrossFilters,\n    setDataMask,\n    selectedFilters,\n    verboseMap,\n    columnFormats,\n    currencyFormats,\n    metricsLayout,\n    metricColorFormatters,\n    dateFormatters,\n    onContextMenu,\n    timeGrainSqla,\n  } = props;\n\n  const theme = useTheme();\n  const defaultFormatter = useMemo(\n    () =>\n      currencyFormat?.symbol\n        ? new CurrencyFormatter({\n            currency: currencyFormat,\n            d3Format: valueFormat,\n          })\n        : getNumberFormatter(valueFormat),\n    [valueFormat, currencyFormat],\n  );\n  const customFormatsArray = useMemo(\n    () =>\n      Array.from(\n        new Set([\n          ...Object.keys(columnFormats || {}),\n          ...Object.keys(currencyFormats || {}),\n        ]),\n      ).map(metricName => [\n        metricName,\n        columnFormats[metricName] || valueFormat,\n        currencyFormats[metricName] || currencyFormat,\n      ]),\n    [columnFormats, currencyFormat, currencyFormats, valueFormat],\n  );\n  const hasCustomMetricFormatters = customFormatsArray.length > 0;\n  const metricFormatters = useMemo(\n    () =>\n      hasCustomMetricFormatters\n        ? {\n            [METRIC_KEY]: Object.fromEntries(\n              customFormatsArray.map(([metric, d3Format, currency]) => [\n                metric,\n                currency\n                  ? new CurrencyFormatter({\n                      currency,\n                      d3Format,\n                    })\n                  : getNumberFormatter(d3Format),\n              ]),\n            ),\n          }\n        : undefined,\n    [customFormatsArray, hasCustomMetricFormatters],\n  );\n\n  const metricNames = useMemo(\n    () =>\n      metrics.map((metric: string | AdhocMetric) =>\n        typeof metric === 'string' ? metric : (metric.label as string),\n      ),\n    [metrics],\n  );\n\n  const unpivotedData = useMemo(\n    () =>\n      data.reduce(\n        (acc: Record<string, any>[], record: Record<string, any>) => [\n          ...acc,\n          ...metricNames\n            .map((name: string) => ({\n              ...record,\n              [METRIC_KEY]: name,\n              value: record[name],\n            }))\n            .filter(record => record.value !== null),\n        ],\n        [],\n      ),\n    [data, metricNames],\n  );\n  const groupbyRows = useMemo(\n    () => groupbyRowsRaw.map(getColumnLabel),\n    [groupbyRowsRaw],\n  );\n  const groupbyColumns = useMemo(\n    () => groupbyColumnsRaw.map(getColumnLabel),\n    [groupbyColumnsRaw],\n  );\n\n  const sorters = useMemo(\n    () => ({\n      [METRIC_KEY]: sortAs(metricNames),\n    }),\n    [metricNames],\n  );\n\n  const [rows, cols] = useMemo(() => {\n    let [rows_, cols_] = transposePivot\n      ? [groupbyColumns, groupbyRows]\n      : [groupbyRows, groupbyColumns];\n\n    if (metricsLayout === MetricsLayoutEnum.ROWS) {\n      rows_ = combineMetric ? [...rows_, METRIC_KEY] : [METRIC_KEY, ...rows_];\n    } else {\n      cols_ = combineMetric ? [...cols_, METRIC_KEY] : [METRIC_KEY, ...cols_];\n    }\n    return [rows_, cols_];\n  }, [\n    combineMetric,\n    groupbyColumns,\n    groupbyRows,\n    metricsLayout,\n    transposePivot,\n  ]);\n\n  const handleChange = useCallback(\n    (filters: SelectedFiltersType) => {\n      const filterKeys = Object.keys(filters);\n      const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n      setDataMask({\n        extraFormData: {\n          filters:\n            filterKeys.length === 0\n              ? undefined\n              : filterKeys.map(key => {\n                  const val = filters?.[key];\n                  const col =\n                    groupby.find(item => {\n                      if (isPhysicalColumn(item)) {\n                        return item === key;\n                      }\n                      if (isAdhocColumn(item)) {\n                        return item.label === key;\n                      }\n                      return false;\n                    }) ?? '';\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL',\n                    };\n                  return {\n                    col,\n                    op: 'IN',\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value:\n            filters && Object.keys(filters).length\n              ? Object.values(filters)\n              : null,\n          selectedFilters:\n            filters && Object.keys(filters).length ? filters : null,\n        },\n      });\n    },\n    [groupbyColumnsRaw, groupbyRowsRaw, setDataMask],\n  );\n\n  const getCrossFilterDataMask = useCallback(\n    (value: { [key: string]: string }) => {\n      const isActiveFilterValue = (key: string, val: DataRecordValue) =>\n        !!selectedFilters && selectedFilters[key]?.includes(val);\n\n      if (!value) {\n        return undefined;\n      }\n\n      const [key, val] = Object.entries(value)[0];\n      let values = { ...selectedFilters };\n      if (isActiveFilterValue(key, val)) {\n        values = {};\n      } else {\n        values = { [key]: [val] };\n      }\n\n      const filterKeys = Object.keys(values);\n      const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              filterKeys.length === 0\n                ? undefined\n                : filterKeys.map(key => {\n                    const val = values?.[key];\n                    const col =\n                      groupby.find(item => {\n                        if (isPhysicalColumn(item)) {\n                          return item === key;\n                        }\n                        if (isAdhocColumn(item)) {\n                          return item.label === key;\n                        }\n                        return false;\n                      }) ?? '';\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            value:\n              values && Object.keys(values).length\n                ? Object.values(values)\n                : null,\n            selectedFilters:\n              values && Object.keys(values).length ? values : null,\n          },\n        },\n        isCurrentValueSelected: isActiveFilterValue(key, val),\n      };\n    },\n    [groupbyColumnsRaw, groupbyRowsRaw, selectedFilters],\n  );\n\n  const toggleFilter = useCallback(\n    (\n      e: MouseEvent,\n      value: string,\n      filters: FilterType,\n      pivotData: Record<string, any>,\n      isSubtotal: boolean,\n      isGrandTotal: boolean,\n    ) => {\n      if (isSubtotal || isGrandTotal || !emitCrossFilters) {\n        return;\n      }\n\n      // allow selecting text in a cell\n      if (getSelectedText()) {\n        return;\n      }\n\n      const isActiveFilterValue = (key: string, val: DataRecordValue) =>\n        !!selectedFilters && selectedFilters[key]?.includes(val);\n\n      const filtersCopy = { ...filters };\n      delete filtersCopy[METRIC_KEY];\n\n      const filtersEntries = Object.entries(filtersCopy);\n      if (filtersEntries.length === 0) {\n        return;\n      }\n\n      const [key, val] = filtersEntries[filtersEntries.length - 1];\n\n      let updatedFilters = { ...(selectedFilters || {}) };\n      // multi select\n      // if (selectedFilters && isActiveFilterValue(key, val)) {\n      //   updatedFilters[key] = selectedFilters[key].filter((x: DataRecordValue) => x !== val);\n      // } else {\n      //   updatedFilters[key] = [...(selectedFilters?.[key] || []), val];\n      // }\n      // single select\n      if (selectedFilters && isActiveFilterValue(key, val)) {\n        updatedFilters = {};\n      } else {\n        updatedFilters = {\n          [key]: [val],\n        };\n      }\n      if (\n        Array.isArray(updatedFilters[key]) &&\n        updatedFilters[key].length === 0\n      ) {\n        delete updatedFilters[key];\n      }\n      handleChange(updatedFilters);\n    },\n    [emitCrossFilters, selectedFilters, handleChange],\n  );\n\n  const tableOptions = useMemo(\n    () => ({\n      clickRowHeaderCallback: toggleFilter,\n      clickColumnHeaderCallback: toggleFilter,\n      colTotals,\n      colSubTotals,\n      rowTotals,\n      rowSubTotals,\n      highlightHeaderCellsOnHover:\n        emitCrossFilters ||\n        isFeatureEnabled(FeatureFlag.DrillBy) ||\n        isFeatureEnabled(FeatureFlag.DrillToDetail),\n      highlightedHeaderCells: selectedFilters,\n      omittedHighlightHeaderGroups: [METRIC_KEY],\n      cellColorFormatters: { [METRIC_KEY]: metricColorFormatters },\n      dateFormatters,\n    }),\n    [\n      colTotals,\n      colSubTotals,\n      dateFormatters,\n      emitCrossFilters,\n      metricColorFormatters,\n      rowTotals,\n      rowSubTotals,\n      selectedFilters,\n      toggleFilter,\n    ],\n  );\n\n  const subtotalOptions = useMemo(\n    () => ({\n      colSubtotalDisplay: { displayOnTop: colSubtotalPosition },\n      rowSubtotalDisplay: { displayOnTop: rowSubtotalPosition },\n      arrowCollapsed: <StyledPlusSquareOutlined />,\n      arrowExpanded: <StyledMinusSquareOutlined />,\n    }),\n    [colSubtotalPosition, rowSubtotalPosition],\n  );\n\n  const handleContextMenu = useCallback(\n    (\n      e: MouseEvent,\n      colKey: (string | number | boolean)[] | undefined,\n      rowKey: (string | number | boolean)[] | undefined,\n      dataPoint: { [key: string]: string },\n    ) => {\n      if (onContextMenu) {\n        e.preventDefault();\n        e.stopPropagation();\n        const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n        if (colKey && colKey.length > 1) {\n          colKey.forEach((val, i) => {\n            const col = cols[i];\n            const formatter = dateFormatters[col];\n            const formattedVal = formatter?.(val as number) || String(val);\n            if (i > 0) {\n              drillToDetailFilters.push({\n                col,\n                op: '==',\n                val,\n                formattedVal,\n                grain: formatter ? timeGrainSqla : undefined,\n              });\n            }\n          });\n        }\n        if (rowKey) {\n          rowKey.forEach((val, i) => {\n            const col = rows[i];\n            const formatter = dateFormatters[col];\n            const formattedVal = formatter?.(val as number) || String(val);\n            drillToDetailFilters.push({\n              col,\n              op: '==',\n              val,\n              formattedVal,\n              grain: formatter ? timeGrainSqla : undefined,\n            });\n          });\n        }\n        onContextMenu(e.clientX, e.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: getCrossFilterDataMask(dataPoint),\n          drillBy: dataPoint && {\n            filters: [\n              {\n                col: Object.keys(dataPoint)[0],\n                op: '==',\n                val: Object.values(dataPoint)[0],\n              },\n            ],\n            groupbyFieldName: rowKey ? 'groupbyRows' : 'groupbyColumns',\n          },\n        });\n      }\n    },\n    [\n      cols,\n      dateFormatters,\n      getCrossFilterDataMask,\n      onContextMenu,\n      rows,\n      timeGrainSqla,\n    ],\n  );\n\n  return (\n    <Styles height={height} width={width} margin={theme.gridUnit * 4}>\n      <PivotTableWrapper>\n        <PivotTable\n          data={unpivotedData}\n          rows={rows}\n          cols={cols}\n          aggregatorsFactory={aggregatorsFactory}\n          defaultFormatter={defaultFormatter}\n          customFormatters={metricFormatters}\n          aggregatorName={aggregateFunction}\n          vals={vals}\n          colOrder={colOrder}\n          rowOrder={rowOrder}\n          sorters={sorters}\n          tableOptions={tableOptions}\n          subtotalOptions={subtotalOptions}\n          namesMapping={verboseMap}\n          onContextMenu={handleContextMenu}\n        />\n      </PivotTableWrapper>\n    </Styles>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}