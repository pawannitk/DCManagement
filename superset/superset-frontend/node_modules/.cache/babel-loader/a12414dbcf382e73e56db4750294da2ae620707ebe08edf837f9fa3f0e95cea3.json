{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getMetricLabel, ComparisonType, getXAxisLabel } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nexport const renameOperator = (formData, queryObject) => {\n  const metrics = ensureIsArray(queryObject.metrics);\n  const columns = ensureIsArray(queryObject.series_columns || queryObject.columns);\n  const { truncate_metric } = formData;\n  const xAxisLabel = getXAxisLabel(formData);\n  // remove or rename top level of column name(metric name) in the MultiIndex when\n  // 1) only 1 metric\n  // 2) dimension exist\n  // 3) xAxis exist\n  // 4) time comparison exist, and comparison type is \"actual values\"\n  // 5) truncate_metric in form_data and truncate_metric is true\n  if (metrics.length === 1 &&\n  columns.length > 0 &&\n  xAxisLabel &&\n  !(\n  // todo: we should provide an approach to handle derived metrics\n  isTimeComparison(formData, queryObject) &&\n  [\n  ComparisonType.Difference,\n  ComparisonType.Ratio,\n  ComparisonType.Percentage].\n  includes(formData.comparison_type)) &&\n  truncate_metric !== undefined &&\n  !!truncate_metric) {\n    const renamePairs = [];\n    if (\n    // \"actual values\" will add derived metric.\n    // we will rename the \"metric\" from the metricWithOffset label\n    // for example: \"count__1 year ago\" =>\t\"1 year ago\"\n    isTimeComparison(formData, queryObject) &&\n    formData.comparison_type === ComparisonType.Values) {\n      const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n      const timeOffsets = ensureIsArray(formData.time_compare);\n      [...metricOffsetMap.keys()].forEach((metricWithOffset) => {\n        const offsetLabel = timeOffsets.find((offset) => metricWithOffset.includes(offset));\n        renamePairs.push([metricWithOffset, offsetLabel]);\n      });\n    }\n    renamePairs.push([getMetricLabel(metrics[0]), null]);\n    return {\n      operation: 'rename',\n      options: {\n        columns: Object.fromEntries(renamePairs),\n        level: 0,\n        inplace: true\n      }\n    };\n  }\n  return undefined;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(renameOperator, \"renameOperator\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/renameOperator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","getMetricLabel","ComparisonType","getXAxisLabel","getMetricOffsetsMap","isTimeComparison","renameOperator","formData","queryObject","metrics","columns","series_columns","truncate_metric","xAxisLabel","length","Difference","Ratio","Percentage","includes","comparison_type","undefined","renamePairs","Values","metricOffsetMap","timeOffsets","time_compare","keys","forEach","metricWithOffset","offsetLabel","find","offset","push","operation","options","Object","fromEntries","level","inplace","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/operators/renameOperator.ts"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  PostProcessingRename,\n  ensureIsArray,\n  getMetricLabel,\n  ComparisonType,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\n\nexport const renameOperator: PostProcessingFactory<PostProcessingRename> = (\n  formData,\n  queryObject,\n) => {\n  const metrics = ensureIsArray(queryObject.metrics);\n  const columns = ensureIsArray(\n    queryObject.series_columns || queryObject.columns,\n  );\n  const { truncate_metric } = formData;\n  const xAxisLabel = getXAxisLabel(formData);\n  // remove or rename top level of column name(metric name) in the MultiIndex when\n  // 1) only 1 metric\n  // 2) dimension exist\n  // 3) xAxis exist\n  // 4) time comparison exist, and comparison type is \"actual values\"\n  // 5) truncate_metric in form_data and truncate_metric is true\n  if (\n    metrics.length === 1 &&\n    columns.length > 0 &&\n    xAxisLabel &&\n    !(\n      // todo: we should provide an approach to handle derived metrics\n      (\n        isTimeComparison(formData, queryObject) &&\n        [\n          ComparisonType.Difference,\n          ComparisonType.Ratio,\n          ComparisonType.Percentage,\n        ].includes(formData.comparison_type)\n      )\n    ) &&\n    truncate_metric !== undefined &&\n    !!truncate_metric\n  ) {\n    const renamePairs: [string, string | null][] = [];\n\n    if (\n      // \"actual values\" will add derived metric.\n      // we will rename the \"metric\" from the metricWithOffset label\n      // for example: \"count__1 year ago\" =>\t\"1 year ago\"\n      isTimeComparison(formData, queryObject) &&\n      formData.comparison_type === ComparisonType.Values\n    ) {\n      const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n      const timeOffsets = ensureIsArray(formData.time_compare);\n      [...metricOffsetMap.keys()].forEach(metricWithOffset => {\n        const offsetLabel = timeOffsets.find(offset =>\n          metricWithOffset.includes(offset),\n        );\n        renamePairs.push([metricWithOffset, offsetLabel]);\n      });\n    }\n\n    renamePairs.push([getMetricLabel(metrics[0]), null]);\n\n    return {\n      operation: 'rename',\n      options: {\n        columns: Object.fromEntries(renamePairs),\n        level: 0,\n        inplace: true,\n      },\n    };\n  }\n\n  return undefined;\n};\n"],"mappings":"wSAAA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,aAAa,QACR,mBAAmB;AAE1B,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,SAAS;AAE/D,OAAO,MAAMC,cAAc,GAAgDA,CACzEC,QAAQ,EACRC,WAAW,KACT;EACF,MAAMC,OAAO,GAAGT,aAAa,CAACQ,WAAW,CAACC,OAAO,CAAC;EAClD,MAAMC,OAAO,GAAGV,aAAa,CAC3BQ,WAAW,CAACG,cAAc,IAAIH,WAAW,CAACE,OAAO,CAClD;EACD,MAAM,EAAEE,eAAe,EAAE,GAAGL,QAAQ;EACpC,MAAMM,UAAU,GAAGV,aAAa,CAACI,QAAQ,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA,IACEE,OAAO,CAACK,MAAM,KAAK,CAAC;EACpBJ,OAAO,CAACI,MAAM,GAAG,CAAC;EAClBD,UAAU;EACV;EACE;EAEER,gBAAgB,CAACE,QAAQ,EAAEC,WAAW,CAAC;EACvC;EACEN,cAAc,CAACa,UAAU;EACzBb,cAAc,CAACc,KAAK;EACpBd,cAAc,CAACe,UAAU,CAC1B;EAACC,QAAQ,CAACX,QAAQ,CAACY,eAAe,CAAC,CAEvC;EACDP,eAAe,KAAKQ,SAAS;EAC7B,CAAC,CAACR,eAAe,EACjB;IACA,MAAMS,WAAW,GAA8B,EAAE;IAEjD;IACE;IACA;IACA;IACAhB,gBAAgB,CAACE,QAAQ,EAAEC,WAAW,CAAC;IACvCD,QAAQ,CAACY,eAAe,KAAKjB,cAAc,CAACoB,MAAM,EAClD;MACA,MAAMC,eAAe,GAAGnB,mBAAmB,CAACG,QAAQ,EAAEC,WAAW,CAAC;MAClE,MAAMgB,WAAW,GAAGxB,aAAa,CAACO,QAAQ,CAACkB,YAAY,CAAC;MACxD,CAAC,GAAGF,eAAe,CAACG,IAAI,EAAE,CAAC,CAACC,OAAO,CAAC,CAAAC,gBAAgB,KAAG;QACrD,MAAMC,WAAW,GAAGL,WAAW,CAACM,IAAI,CAAC,CAAAC,MAAM,KACzCH,gBAAgB,CAACV,QAAQ,CAACa,MAAM,CAAC,CAClC;QACDV,WAAW,CAACW,IAAI,CAAC,CAACJ,gBAAgB,EAAEC,WAAW,CAAC,CAAC;MACnD,CAAC,CAAC;;IAGJR,WAAW,CAACW,IAAI,CAAC,CAAC/B,cAAc,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAEpD,OAAO;MACLwB,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE;QACPxB,OAAO,EAAEyB,MAAM,CAACC,WAAW,CAACf,WAAW,CAAC;QACxCgB,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE;;KAEZ;;EAGH,OAAOlB,SAAS;AAClB,CAAC,CAAC,mBAAAmB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAArB,SAAA,MAAAmB,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAlEWpC,cAAc,0KAAAqC,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAvB,SAAA,CAAAuB,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}