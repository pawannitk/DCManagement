{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray, isPhysicalColumn } from '@superset-ui/core';\nimport { boxplotOperator } from '@superset-ui/chart-controls';\nexport default function buildQuery(formData) {\n  return buildQueryContext(formData, (baseQueryObject) => [\n  {\n    ...baseQueryObject,\n    columns: [\n    ...(ensureIsArray(formData.columns).length === 0 &&\n    formData.granularity_sqla ?\n    [formData.granularity_sqla] // for backwards compatible: if columns control is empty and granularity_sqla was set, the time columns is default distributed column.\n    : ensureIsArray(formData.columns)).map((col) => {var _formData$temporal_co;\n      if (isPhysicalColumn(col) &&\n      formData.time_grain_sqla &&\n      formData != null && (_formData$temporal_co = formData.temporal_columns_lookup) != null && _formData$temporal_co[col]) {\n        return {\n          timeGrain: formData.time_grain_sqla,\n          columnType: 'BASE_AXIS',\n          sqlExpression: col,\n          label: col,\n          expressionType: 'SQL'\n        };\n      }\n      return col;\n    }),\n    ...ensureIsArray(formData.groupby)],\n\n    series_columns: formData.groupby,\n    post_processing: [boxplotOperator(formData, baseQueryObject)]\n  }]\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildQuery, \"buildQuery\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BoxPlot/buildQuery.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["buildQueryContext","ensureIsArray","isPhysicalColumn","boxplotOperator","buildQuery","formData","baseQueryObject","columns","length","granularity_sqla","map","col","_formData$temporal_co","time_grain_sqla","temporal_columns_lookup","timeGrain","columnType","sqlExpression","label","expressionType","groupby","series_columns","post_processing","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/BoxPlot/buildQuery.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocColumn,\n  buildQueryContext,\n  ensureIsArray,\n  isPhysicalColumn,\n} from '@superset-ui/core';\nimport { boxplotOperator } from '@superset-ui/chart-controls';\nimport { BoxPlotQueryFormData } from './types';\n\nexport default function buildQuery(formData: BoxPlotQueryFormData) {\n  return buildQueryContext(formData, baseQueryObject => [\n    {\n      ...baseQueryObject,\n      columns: [\n        ...(ensureIsArray(formData.columns).length === 0 &&\n        formData.granularity_sqla\n          ? [formData.granularity_sqla] // for backwards compatible: if columns control is empty and granularity_sqla was set, the time columns is default distributed column.\n          : ensureIsArray(formData.columns)\n        ).map(col => {\n          if (\n            isPhysicalColumn(col) &&\n            formData.time_grain_sqla &&\n            formData?.temporal_columns_lookup?.[col]\n          ) {\n            return {\n              timeGrain: formData.time_grain_sqla,\n              columnType: 'BASE_AXIS',\n              sqlExpression: col,\n              label: col,\n              expressionType: 'SQL',\n            } as AdhocColumn;\n          }\n          return col;\n        }),\n        ...ensureIsArray(formData.groupby),\n      ],\n      series_columns: formData.groupby,\n      post_processing: [boxplotOperator(formData, baseQueryObject)],\n    },\n  ]);\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,iBAAiB,EACjBC,aAAa,EACbC,gBAAgB,QACX,mBAAmB;AAC1B,SAASC,eAAe,QAAQ,6BAA6B;AAG7D,eAAc,SAAUC,UAAUA,CAACC,QAA8B;EAC/D,OAAOL,iBAAiB,CAACK,QAAQ,EAAE,CAAAC,eAAe,KAAI;EACpD;IACE,GAAGA,eAAe;IAClBC,OAAO,EAAE;IACP,GAAG,CAACN,aAAa,CAACI,QAAQ,CAACE,OAAO,CAAC,CAACC,MAAM,KAAK,CAAC;IAChDH,QAAQ,CAACI,gBAAgB;IACrB,CAACJ,QAAQ,CAACI,gBAAgB,CAAC,CAAC;IAAA,EAC5BR,aAAa,CAACI,QAAQ,CAACE,OAAO,CAAC,EACjCG,GAAG,CAAC,CAAAC,GAAG,KAAG,KAAAC,qBAAA;MACV,IACEV,gBAAgB,CAACS,GAAG,CAAC;MACrBN,QAAQ,CAACQ,eAAe;MACxBR,QAAQ,aAAAO,qBAAA,GAARP,QAAQ,CAAES,uBAAuB,aAAjCF,qBAAA,CAAoCD,GAAG,CAAC,EACxC;QACA,OAAO;UACLI,SAAS,EAAEV,QAAQ,CAACQ,eAAe;UACnCG,UAAU,EAAE,WAAW;UACvBC,aAAa,EAAEN,GAAG;UAClBO,KAAK,EAAEP,GAAG;UACVQ,cAAc,EAAE;SACF;;MAElB,OAAOR,GAAG;IACZ,CAAC,CAAC;IACF,GAAGV,aAAa,CAACI,QAAQ,CAACe,OAAO,CAAC,CACnC;;IACDC,cAAc,EAAEhB,QAAQ,CAACe,OAAO;IAChCE,eAAe,EAAE,CAACnB,eAAe,CAACE,QAAQ,EAAEC,eAAe,CAAC;GAC7D;EACF,CAAC;AACJ,CAAC,mBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA/BuBvB,UAAU,yJAAAwB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}