{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable consistent-return */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * A Stringify function that will not crash when it runs into circular JSON references,\n * unlike JSON.stringify. Any circular references are simply omitted, as if there had\n * been no data present\n * @param object any JSON object to be stringified\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function safeStringify(object) {\n  const cache = new Set();\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // We've seen this object before\n        try {\n          // Quick deep copy to duplicate if this is a repeat rather than a circle.\n          return JSON.parse(JSON.stringify(value));\n        }\n        catch (error) {\n          // Discard key if value cannot be duplicated.\n          return;\n        }\n      }\n      // Store the value in our cache.\n      cache.add(value);\n    }\n    return value;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(safeStringify, \"safeStringify\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/safeStringify.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["safeStringify","object","cache","Set","JSON","stringify","key","value","has","parse","error","add","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/safeStringify.ts"],"sourcesContent":["/* eslint-disable consistent-return */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { JsonObject } from '@superset-ui/core';\n\n/**\n * A Stringify function that will not crash when it runs into circular JSON references,\n * unlike JSON.stringify. Any circular references are simply omitted, as if there had\n * been no data present\n * @param object any JSON object to be stringified\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport function safeStringify(object: JsonObject) {\n  const cache = new Set();\n\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // We've seen this object before\n        try {\n          // Quick deep copy to duplicate if this is a repeat rather than a circle.\n          return JSON.parse(JSON.stringify(value));\n        } catch (error) {\n          // Discard key if value cannot be duplicated.\n          return;\n        }\n      }\n      // Store the value in our cache.\n      cache.add(value);\n    }\n\n    return value;\n  });\n}\n"],"mappings":"wSAAA;AACA;;;;;;;;;;;;;;;;;;AAqBA;;;;;;AAOA;AACA,OAAM,SAAUA,aAAaA,CAACC,MAAkB;EAC9C,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAE;EAEvB,OAAOC,IAAI,CAACC,SAAS,CAACJ,MAAM,EAAE,CAACK,GAAG,EAAEC,KAAK,KAAI;IAC3C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;MAC/C,IAAIL,KAAK,CAACM,GAAG,CAACD,KAAK,CAAC,EAAE;QACpB;QACA,IAAI;UACF;UACA,OAAOH,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,SAAS,CAACE,KAAK,CAAC,CAAC;;QACxC,OAAOG,KAAK,EAAE;UACd;UACA;;;MAGJ;MACAR,KAAK,CAACS,GAAG,CAACJ,KAAK,CAAC;;IAGlB,OAAOA,KAAK;EACd,CAAC,CAAC;AACJ,CAAC,mBAAAK,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArBehB,aAAa,mKAAAiB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}