{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CurrencyFormatter, ensureIsArray, getNumberFormatter, isSavedMetric } from '@superset-ui/core';\nexport const buildCustomFormatters = (metrics, savedCurrencyFormats, savedColumnFormats, d3Format, currencyFormat) => {\n  const metricsArray = ensureIsArray(metrics);\n  return metricsArray.reduce((acc, metric) => {\n    if (isSavedMetric(metric)) {\n      const actualD3Format = d3Format != null ? d3Format : savedColumnFormats[metric];\n      const actualCurrencyFormat = currencyFormat != null && currencyFormat.symbol ?\n      currencyFormat :\n      savedCurrencyFormats[metric];\n      return actualCurrencyFormat ?\n      {\n        ...acc,\n        [metric]: new CurrencyFormatter({\n          d3Format: actualD3Format,\n          currency: actualCurrencyFormat\n        })\n      } :\n      {\n        ...acc,\n        [metric]: getNumberFormatter(actualD3Format)\n      };\n    }\n    return acc;\n  }, {});\n};\nexport const getCustomFormatter = (customFormatters, metrics, key) => {\n  const metricsArray = ensureIsArray(metrics);\n  if (metricsArray.length === 1 && isSavedMetric(metricsArray[0])) {\n    return customFormatters[metricsArray[0]];\n  }\n  return key ? customFormatters[key] : undefined;\n};\nexport const getValueFormatter = (metrics, savedCurrencyFormats, savedColumnFormats, d3Format, currencyFormat, key) => {\n  const customFormatter = getCustomFormatter(buildCustomFormatters(metrics, savedCurrencyFormats, savedColumnFormats, d3Format, currencyFormat), metrics, key);\n  if (customFormatter) {\n    return customFormatter;\n  }\n  if (currencyFormat != null && currencyFormat.symbol) {\n    return new CurrencyFormatter({ currency: currencyFormat, d3Format });\n  }\n  return getNumberFormatter(d3Format);\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildCustomFormatters, \"buildCustomFormatters\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/currency-format/utils.ts\");reactHotLoader.register(getCustomFormatter, \"getCustomFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/currency-format/utils.ts\");reactHotLoader.register(getValueFormatter, \"getValueFormatter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/currency-format/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["CurrencyFormatter","ensureIsArray","getNumberFormatter","isSavedMetric","buildCustomFormatters","metrics","savedCurrencyFormats","savedColumnFormats","d3Format","currencyFormat","metricsArray","reduce","acc","metric","actualD3Format","actualCurrencyFormat","symbol","currency","getCustomFormatter","customFormatters","key","length","undefined","getValueFormatter","customFormatter","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/currency-format/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Currency,\n  CurrencyFormatter,\n  ensureIsArray,\n  getNumberFormatter,\n  isSavedMetric,\n  QueryFormMetric,\n  ValueFormatter,\n} from '@superset-ui/core';\n\nexport const buildCustomFormatters = (\n  metrics: QueryFormMetric | QueryFormMetric[] | undefined,\n  savedCurrencyFormats: Record<string, Currency>,\n  savedColumnFormats: Record<string, string>,\n  d3Format: string | undefined,\n  currencyFormat: Currency | undefined,\n) => {\n  const metricsArray = ensureIsArray(metrics);\n  return metricsArray.reduce((acc, metric) => {\n    if (isSavedMetric(metric)) {\n      const actualD3Format = d3Format ?? savedColumnFormats[metric];\n      const actualCurrencyFormat = currencyFormat?.symbol\n        ? currencyFormat\n        : savedCurrencyFormats[metric];\n      return actualCurrencyFormat\n        ? {\n            ...acc,\n            [metric]: new CurrencyFormatter({\n              d3Format: actualD3Format,\n              currency: actualCurrencyFormat,\n            }),\n          }\n        : {\n            ...acc,\n            [metric]: getNumberFormatter(actualD3Format),\n          };\n    }\n    return acc;\n  }, {});\n};\n\nexport const getCustomFormatter = (\n  customFormatters: Record<string, ValueFormatter>,\n  metrics: QueryFormMetric | QueryFormMetric[] | undefined,\n  key?: string,\n) => {\n  const metricsArray = ensureIsArray(metrics);\n  if (metricsArray.length === 1 && isSavedMetric(metricsArray[0])) {\n    return customFormatters[metricsArray[0]];\n  }\n  return key ? customFormatters[key] : undefined;\n};\n\nexport const getValueFormatter = (\n  metrics: QueryFormMetric | QueryFormMetric[] | undefined,\n  savedCurrencyFormats: Record<string, Currency>,\n  savedColumnFormats: Record<string, string>,\n  d3Format: string | undefined,\n  currencyFormat: Currency | undefined,\n  key?: string,\n) => {\n  const customFormatter = getCustomFormatter(\n    buildCustomFormatters(\n      metrics,\n      savedCurrencyFormats,\n      savedColumnFormats,\n      d3Format,\n      currencyFormat,\n    ),\n    metrics,\n    key,\n  );\n\n  if (customFormatter) {\n    return customFormatter;\n  }\n  if (currencyFormat?.symbol) {\n    return new CurrencyFormatter({ currency: currencyFormat, d3Format });\n  }\n  return getNumberFormatter(d3Format);\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,iBAAiB,EACjBC,aAAa,EACbC,kBAAkB,EAClBC,aAAa,QAGR,mBAAmB;AAE1B,OAAO,MAAMC,qBAAqB,GAAGA,CACnCC,OAAwD,EACxDC,oBAA8C,EAC9CC,kBAA0C,EAC1CC,QAA4B,EAC5BC,cAAoC,KAClC;EACF,MAAMC,YAAY,GAAGT,aAAa,CAACI,OAAO,CAAC;EAC3C,OAAOK,YAAY,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAI;IACzC,IAAIV,aAAa,CAACU,MAAM,CAAC,EAAE;MACzB,MAAMC,cAAc,GAAGN,QAAQ,WAARA,QAAQ,GAAID,kBAAkB,CAACM,MAAM,CAAC;MAC7D,MAAME,oBAAoB,GAAGN,cAAc,YAAdA,cAAc,CAAEO,MAAM;MAC/CP,cAAc;MACdH,oBAAoB,CAACO,MAAM,CAAC;MAChC,OAAOE,oBAAoB;MACvB;QACE,GAAGH,GAAG;QACN,CAACC,MAAM,GAAG,IAAIb,iBAAiB,CAAC;UAC9BQ,QAAQ,EAAEM,cAAc;UACxBG,QAAQ,EAAEF;SACX;OACF;MACD;QACE,GAAGH,GAAG;QACN,CAACC,MAAM,GAAGX,kBAAkB,CAACY,cAAc;OAC5C;;IAEP,OAAOF,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAGA,CAChCC,gBAAgD,EAChDd,OAAwD,EACxDe,GAAY,KACV;EACF,MAAMV,YAAY,GAAGT,aAAa,CAACI,OAAO,CAAC;EAC3C,IAAIK,YAAY,CAACW,MAAM,KAAK,CAAC,IAAIlB,aAAa,CAACO,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/D,OAAOS,gBAAgB,CAACT,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE1C,OAAOU,GAAG,GAAGD,gBAAgB,CAACC,GAAG,CAAC,GAAGE,SAAS;AAChD,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAC/BlB,OAAwD,EACxDC,oBAA8C,EAC9CC,kBAA0C,EAC1CC,QAA4B,EAC5BC,cAAoC,EACpCW,GAAY,KACV;EACF,MAAMI,eAAe,GAAGN,kBAAkB,CACxCd,qBAAqB,CACnBC,OAAO,EACPC,oBAAoB,EACpBC,kBAAkB,EAClBC,QAAQ,EACRC,cAAc,CACf,EACDJ,OAAO,EACPe,GAAG,CACJ;EAED,IAAII,eAAe,EAAE;IACnB,OAAOA,eAAe;;EAExB,IAAIf,cAAc,YAAdA,cAAc,CAAEO,MAAM,EAAE;IAC1B,OAAO,IAAIhB,iBAAiB,CAAC,EAAEiB,QAAQ,EAAER,cAAc,EAAED,QAAQ,EAAE,CAAC;;EAEtE,OAAON,kBAAkB,CAACM,QAAQ,CAAC;AACrC,CAAC,CAAC,mBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAL,SAAA,MAAAG,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAtEWxB,qBAAqB,4IAAAqB,cAAA,CAAAG,QAAA,CA+BrBV,kBAAkB,yIAAAO,cAAA,CAAAG,QAAA,CAYlBL,iBAAiB,gKAAAM,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAP,SAAA,CAAAO,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}