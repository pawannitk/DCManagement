{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { SupersetClient } from '@superset-ui/core';\n// update datasources index for Dashboard\nexport var DatasourcesAction;\n(function (DatasourcesAction) {\n  DatasourcesAction[\"SetDatasources\"] = \"SET_DATASOURCES\";\n  DatasourcesAction[\"SetDatasource\"] = \"SET_DATASOURCE\";\n})(DatasourcesAction || (DatasourcesAction = {}));\nexport function setDatasources(datasources) {\n  return {\n    type: DatasourcesAction.SetDatasources,\n    datasources\n  };\n}\nexport function setDatasource(datasource, key) {\n  return {\n    type: DatasourcesAction.SetDatasource,\n    key,\n    datasource\n  };\n}\nexport function fetchDatasourceMetadata(key) {\n  return (dispatch, getState) => {\n    const { datasources } = getState();\n    const datasource = datasources[key];\n    if (datasource) {\n      return dispatch(setDatasource(datasource, key));\n    }\n    return SupersetClient.get({\n      endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${key}`\n    }).then(({ json }) => dispatch(setDatasource(json, key)));\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourcesAction, \"DatasourcesAction\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/datasources.ts\");reactHotLoader.register(setDatasources, \"setDatasources\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/datasources.ts\");reactHotLoader.register(setDatasource, \"setDatasource\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/datasources.ts\");reactHotLoader.register(fetchDatasourceMetadata, \"fetchDatasourceMetadata\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/datasources.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["SupersetClient","DatasourcesAction","setDatasources","datasources","type","SetDatasources","setDatasource","datasource","key","SetDatasource","fetchDatasourceMetadata","dispatch","getState","get","endpoint","then","json","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/actions/datasources.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Dispatch } from 'redux';\nimport { SupersetClient } from '@superset-ui/core';\nimport { Datasource, RootState } from 'src/dashboard/types';\n\n// update datasources index for Dashboard\nexport enum DatasourcesAction {\n  SetDatasources = 'SET_DATASOURCES',\n  SetDatasource = 'SET_DATASOURCE',\n}\n\nexport type DatasourcesActionPayload =\n  | {\n      type: DatasourcesAction.SetDatasources;\n      datasources: Datasource[] | null;\n    }\n  | {\n      type: DatasourcesAction.SetDatasource;\n      key: Datasource['uid'];\n      datasource: Datasource;\n    };\n\nexport function setDatasources(datasources: Datasource[] | null) {\n  return {\n    type: DatasourcesAction.SetDatasources,\n    datasources,\n  };\n}\n\nexport function setDatasource(datasource: Datasource, key: string) {\n  return {\n    type: DatasourcesAction.SetDatasource,\n    key,\n    datasource,\n  };\n}\n\nexport function fetchDatasourceMetadata(key: string) {\n  return (dispatch: Dispatch, getState: () => RootState) => {\n    const { datasources } = getState();\n    const datasource = datasources[key];\n\n    if (datasource) {\n      return dispatch(setDatasource(datasource, key));\n    }\n\n    return SupersetClient.get({\n      endpoint: `/superset/fetch_datasource_metadata?datasourceKey=${key}`,\n    }).then(({ json }) => dispatch(setDatasource(json as Datasource, key)));\n  };\n}\n"],"mappings":"uSAmBA,SAASA,cAAc,QAAQ,mBAAmB;AAGlD;AACA,WAAYC,iBAGX;AAHD,WAAYA,iBAAiB;EAC3BA,iBAAA,sCAAkC;EAClCA,iBAAA,oCAAgC;AAClC,CAAC,EAHWA,iBAAiB,KAAjBA,iBAAiB;AAgB7B,OAAM,SAAUC,cAAcA,CAACC,WAAgC;EAC7D,OAAO;IACLC,IAAI,EAAEH,iBAAiB,CAACI,cAAc;IACtCF;GACD;AACH;AAEA,OAAM,SAAUG,aAAaA,CAACC,UAAsB,EAAEC,GAAW;EAC/D,OAAO;IACLJ,IAAI,EAAEH,iBAAiB,CAACQ,aAAa;IACrCD,GAAG;IACHD;GACD;AACH;AAEA,OAAM,SAAUG,uBAAuBA,CAACF,GAAW;EACjD,OAAO,CAACG,QAAkB,EAAEC,QAAyB,KAAI;IACvD,MAAM,EAAET,WAAW,EAAE,GAAGS,QAAQ,EAAE;IAClC,MAAML,UAAU,GAAGJ,WAAW,CAACK,GAAG,CAAC;IAEnC,IAAID,UAAU,EAAE;MACd,OAAOI,QAAQ,CAACL,aAAa,CAACC,UAAU,EAAEC,GAAG,CAAC,CAAC;;IAGjD,OAAOR,cAAc,CAACa,GAAG,CAAC;MACxBC,QAAQ,EAAE,qDAAqDN,GAAG;KACnE,CAAC,CAACO,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAE,KAAKL,QAAQ,CAACL,aAAa,CAACU,IAAkB,EAAER,GAAG,CAAC,CAAC,CAAC;EACzE,CAAC;AACH,CAAC,mBAAAS,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA5CWpB,iBAGX,sHAAAgB,cAAA,CAAAI,QAAA,CAaenB,cAAc,mHAAAe,cAAA,CAAAI,QAAA,CAOdf,aAAa,kHAAAW,cAAA,CAAAI,QAAA,CAQbX,uBAAuB,oJAAAY,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}