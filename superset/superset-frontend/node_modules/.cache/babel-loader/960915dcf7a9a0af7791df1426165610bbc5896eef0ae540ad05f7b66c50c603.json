{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_GRID_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID } from\n'../util/constants';\nimport componentIsResizable from '../util/componentIsResizable';\nimport findParentId from '../util/findParentId';\nimport getComponentWidthFromDrop from '../util/getComponentWidthFromDrop';\nimport updateComponentParentsList from '../util/updateComponentParentsList';\nimport newComponentFactory from '../util/newComponentFactory';\nimport newEntitiesFromDrop from '../util/newEntitiesFromDrop';\nimport reorderItem from '../util/dnd-reorder';\nimport shouldWrapChildInRow from '../util/shouldWrapChildInRow';\nimport { ROW_TYPE, TAB_TYPE, TABS_TYPE } from '../util/componentTypes';\n\nimport {\n  UPDATE_COMPONENTS,\n  UPDATE_COMPONENTS_PARENTS_LIST,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  MOVE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  DASHBOARD_TITLE_CHANGED } from\n'../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport function recursivelyDeleteChildren(\ncomponentId,\ncomponentParentId,\nnextComponents)\n{\n  // delete child and it's children\n  const component = nextComponents == null ? void 0 : nextComponents[componentId];\n  if (component) {\n    // eslint-disable-next-line no-param-reassign\n    delete nextComponents[componentId];\n\n    const { children = [] } = component;\n    children == null ? void 0 : children.forEach == null ? void 0 : children.forEach((childId) => {\n      recursivelyDeleteChildren(childId, componentId, nextComponents);\n    });\n\n    const parent = nextComponents == null ? void 0 : nextComponents[componentParentId];\n    if (Array.isArray(parent == null ? void 0 : parent.children)) {\n      // may have been deleted in another recursion\n      const componentIndex = parent.children.indexOf(componentId);\n      if (componentIndex > -1) {\n        const nextChildren = [...parent.children];\n        nextChildren.splice(componentIndex, 1);\n        // eslint-disable-next-line no-param-reassign\n        nextComponents[componentParentId] = {\n          ...parent,\n          children: nextChildren\n        };\n      }\n    }\n  }\n}\n\nconst actionHandlers = {\n  [HYDRATE_DASHBOARD](state, action) {\n    return {\n      ...action.data.dashboardLayout.present\n    };\n  },\n\n  [UPDATE_COMPONENTS](state, action) {\n    const {\n      payload: { nextComponents }\n    } = action;\n    return {\n      ...state,\n      ...nextComponents\n    };\n  },\n\n  [DELETE_COMPONENT](state, action) {var _nextParent$children;\n    const {\n      payload: { id, parentId }\n    } = action;\n\n    if (!parentId || !id || !state[id] || !state[parentId]) return state;\n\n    const nextComponents = { ...state };\n\n    recursivelyDeleteChildren(id, parentId, nextComponents);\n    const nextParent = nextComponents[parentId];\n    if ((nextParent == null ? void 0 : nextParent.type) === ROW_TYPE && (nextParent == null ? void 0 : (_nextParent$children = nextParent.children) == null ? void 0 : _nextParent$children.length) === 0) {\n      const grandparentId = findParentId({\n        childId: parentId,\n        layout: nextComponents\n      });\n      recursivelyDeleteChildren(parentId, grandparentId, nextComponents);\n    }\n\n    return nextComponents;\n  },\n\n  [CREATE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult }\n    } = action;\n\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n\n    return {\n      ...state,\n      ...newEntities\n    };\n  },\n\n  [MOVE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult }\n    } = action;\n    const { source, destination, dragging } = dropResult;\n\n    if (!source || !destination || !dragging) return state;\n\n    const nextEntities = reorderItem({\n      entitiesMap: state,\n      source,\n      destination\n    });\n\n    if (componentIsResizable(nextEntities[dragging.id])) {\n      // update component width if it changed\n      const nextWidth =\n      getComponentWidthFromDrop({\n        dropResult,\n        layout: state\n      }) || undefined; // don't set a 0 width\n      if ((nextEntities[dragging.id].meta || {}).width !== nextWidth) {\n        nextEntities[dragging.id] = {\n          ...nextEntities[dragging.id],\n          meta: {\n            ...nextEntities[dragging.id].meta,\n            width: nextWidth\n          }\n        };\n      }\n    }\n\n    // wrap the dragged component in a row depending on destination type\n    const wrapInRow = shouldWrapChildInRow({\n      parentType: destination.type,\n      childType: dragging.type\n    });\n\n    if (wrapInRow) {\n      const destinationEntity = nextEntities[destination.id];\n      const destinationChildren = destinationEntity.children;\n      const newRow = newComponentFactory(ROW_TYPE);\n      newRow.children = [destinationChildren[destination.index]];\n      newRow.parents = (destinationEntity.parents || []).concat(destination.id);\n      destinationChildren[destination.index] = newRow.id;\n      nextEntities[newRow.id] = newRow;\n    }\n\n    return {\n      ...state,\n      ...nextEntities\n    };\n  },\n\n  [CREATE_TOP_LEVEL_TABS](state, action) {\n    const {\n      payload: { dropResult }\n    } = action;\n    const { source, dragging } = dropResult;\n\n    // move children of current root to be children of the dragging tab\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelComponent = state[topLevelId];\n\n    if (source.id !== NEW_COMPONENTS_SOURCE_ID) {\n      // component already exists\n      const draggingTabs = state[dragging.id];\n      const draggingTabId = draggingTabs.children[0];\n      const draggingTab = state[draggingTabId];\n\n      // move all children except the one that is dragging\n      const childrenToMove = [...topLevelComponent.children].filter(\n        (id) => id !== dragging.id\n      );\n\n      return {\n        ...state,\n        [DASHBOARD_ROOT_ID]: {\n          ...rootComponent,\n          children: [dragging.id]\n        },\n        [topLevelId]: {\n          ...topLevelComponent,\n          children: []\n        },\n        [draggingTabId]: {\n          ...draggingTab,\n          children: [...draggingTab.children, ...childrenToMove]\n        }\n      };\n    }\n\n    // create new component\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n    const newEntitiesArray = Object.values(newEntities);\n    const tabComponent = newEntitiesArray.find(\n      (component) => component.type === TAB_TYPE\n    );\n    const tabsComponent = newEntitiesArray.find(\n      (component) => component.type === TABS_TYPE\n    );\n\n    tabComponent.children = [...topLevelComponent.children];\n    newEntities[topLevelId] = { ...topLevelComponent, children: [] };\n    newEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [tabsComponent.id]\n    };\n\n    return {\n      ...state,\n      ...newEntities\n    };\n  },\n\n  [DELETE_TOP_LEVEL_TABS](state) {\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelTabs = state[topLevelId];\n\n    if (topLevelTabs.type !== TABS_TYPE) return state;\n\n    let childrenToMove = [];\n    const nextEntities = { ...state };\n\n    topLevelTabs.children.forEach((tabId) => {\n      const tabComponent = state[tabId];\n      childrenToMove = [...childrenToMove, ...tabComponent.children];\n      delete nextEntities[tabId];\n    });\n\n    delete nextEntities[topLevelId];\n\n    nextEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [DASHBOARD_GRID_ID]\n    };\n\n    nextEntities[DASHBOARD_GRID_ID] = {\n      ...state[DASHBOARD_GRID_ID],\n      children: childrenToMove\n    };\n\n    return nextEntities;\n  },\n\n  [UPDATE_COMPONENTS_PARENTS_LIST](state) {\n    const nextState = {\n      ...state\n    };\n\n    updateComponentParentsList({\n      currentComponent: nextState[DASHBOARD_ROOT_ID],\n      layout: nextState\n    });\n\n    return {\n      ...nextState\n    };\n  },\n\n  [DASHBOARD_TITLE_CHANGED](state, action) {\n    return {\n      ...state,\n      [DASHBOARD_HEADER_ID]: {\n        ...state[DASHBOARD_HEADER_ID],\n        meta: {\n          ...state[DASHBOARD_HEADER_ID].meta,\n          text: action.text\n        }\n      }\n    };\n  }\n};\n\nexport default function layoutReducer(state = {}, action) {\n  if (action.type in actionHandlers) {\n    const handler = actionHandlers[action.type];\n    return handler(state, action);\n  }\n\n  return state;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recursivelyDeleteChildren, \"recursivelyDeleteChildren\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/reducers/dashboardLayout.js\");reactHotLoader.register(actionHandlers, \"actionHandlers\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/reducers/dashboardLayout.js\");reactHotLoader.register(layoutReducer, \"layoutReducer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/reducers/dashboardLayout.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["DASHBOARD_ROOT_ID","DASHBOARD_GRID_ID","NEW_COMPONENTS_SOURCE_ID","DASHBOARD_HEADER_ID","componentIsResizable","findParentId","getComponentWidthFromDrop","updateComponentParentsList","newComponentFactory","newEntitiesFromDrop","reorderItem","shouldWrapChildInRow","ROW_TYPE","TAB_TYPE","TABS_TYPE","UPDATE_COMPONENTS","UPDATE_COMPONENTS_PARENTS_LIST","DELETE_COMPONENT","CREATE_COMPONENT","MOVE_COMPONENT","CREATE_TOP_LEVEL_TABS","DELETE_TOP_LEVEL_TABS","DASHBOARD_TITLE_CHANGED","HYDRATE_DASHBOARD","recursivelyDeleteChildren","componentId","componentParentId","nextComponents","component","children","forEach","childId","parent","Array","isArray","componentIndex","indexOf","nextChildren","splice","actionHandlers","state","action","data","dashboardLayout","present","payload","_nextParent$children","id","parentId","nextParent","type","length","grandparentId","layout","dropResult","newEntities","source","destination","dragging","nextEntities","entitiesMap","nextWidth","undefined","meta","width","wrapInRow","parentType","childType","destinationEntity","destinationChildren","newRow","index","parents","concat","rootComponent","topLevelId","topLevelComponent","draggingTabs","draggingTabId","draggingTab","childrenToMove","filter","newEntitiesArray","Object","values","tabComponent","find","tabsComponent","topLevelTabs","tabId","nextState","currentComponent","text","layoutReducer","handler","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/dashboard/reducers/dashboardLayout.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_GRID_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n  DASHBOARD_HEADER_ID,\n} from '../util/constants';\nimport componentIsResizable from '../util/componentIsResizable';\nimport findParentId from '../util/findParentId';\nimport getComponentWidthFromDrop from '../util/getComponentWidthFromDrop';\nimport updateComponentParentsList from '../util/updateComponentParentsList';\nimport newComponentFactory from '../util/newComponentFactory';\nimport newEntitiesFromDrop from '../util/newEntitiesFromDrop';\nimport reorderItem from '../util/dnd-reorder';\nimport shouldWrapChildInRow from '../util/shouldWrapChildInRow';\nimport { ROW_TYPE, TAB_TYPE, TABS_TYPE } from '../util/componentTypes';\n\nimport {\n  UPDATE_COMPONENTS,\n  UPDATE_COMPONENTS_PARENTS_LIST,\n  DELETE_COMPONENT,\n  CREATE_COMPONENT,\n  MOVE_COMPONENT,\n  CREATE_TOP_LEVEL_TABS,\n  DELETE_TOP_LEVEL_TABS,\n  DASHBOARD_TITLE_CHANGED,\n} from '../actions/dashboardLayout';\n\nimport { HYDRATE_DASHBOARD } from '../actions/hydrate';\n\nexport function recursivelyDeleteChildren(\n  componentId,\n  componentParentId,\n  nextComponents,\n) {\n  // delete child and it's children\n  const component = nextComponents?.[componentId];\n  if (component) {\n    // eslint-disable-next-line no-param-reassign\n    delete nextComponents[componentId];\n\n    const { children = [] } = component;\n    children?.forEach?.(childId => {\n      recursivelyDeleteChildren(childId, componentId, nextComponents);\n    });\n\n    const parent = nextComponents?.[componentParentId];\n    if (Array.isArray(parent?.children)) {\n      // may have been deleted in another recursion\n      const componentIndex = parent.children.indexOf(componentId);\n      if (componentIndex > -1) {\n        const nextChildren = [...parent.children];\n        nextChildren.splice(componentIndex, 1);\n        // eslint-disable-next-line no-param-reassign\n        nextComponents[componentParentId] = {\n          ...parent,\n          children: nextChildren,\n        };\n      }\n    }\n  }\n}\n\nconst actionHandlers = {\n  [HYDRATE_DASHBOARD](state, action) {\n    return {\n      ...action.data.dashboardLayout.present,\n    };\n  },\n\n  [UPDATE_COMPONENTS](state, action) {\n    const {\n      payload: { nextComponents },\n    } = action;\n    return {\n      ...state,\n      ...nextComponents,\n    };\n  },\n\n  [DELETE_COMPONENT](state, action) {\n    const {\n      payload: { id, parentId },\n    } = action;\n\n    if (!parentId || !id || !state[id] || !state[parentId]) return state;\n\n    const nextComponents = { ...state };\n\n    recursivelyDeleteChildren(id, parentId, nextComponents);\n    const nextParent = nextComponents[parentId];\n    if (nextParent?.type === ROW_TYPE && nextParent?.children?.length === 0) {\n      const grandparentId = findParentId({\n        childId: parentId,\n        layout: nextComponents,\n      });\n      recursivelyDeleteChildren(parentId, grandparentId, nextComponents);\n    }\n\n    return nextComponents;\n  },\n\n  [CREATE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [MOVE_COMPONENT](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, destination, dragging } = dropResult;\n\n    if (!source || !destination || !dragging) return state;\n\n    const nextEntities = reorderItem({\n      entitiesMap: state,\n      source,\n      destination,\n    });\n\n    if (componentIsResizable(nextEntities[dragging.id])) {\n      // update component width if it changed\n      const nextWidth =\n        getComponentWidthFromDrop({\n          dropResult,\n          layout: state,\n        }) || undefined; // don't set a 0 width\n      if ((nextEntities[dragging.id].meta || {}).width !== nextWidth) {\n        nextEntities[dragging.id] = {\n          ...nextEntities[dragging.id],\n          meta: {\n            ...nextEntities[dragging.id].meta,\n            width: nextWidth,\n          },\n        };\n      }\n    }\n\n    // wrap the dragged component in a row depending on destination type\n    const wrapInRow = shouldWrapChildInRow({\n      parentType: destination.type,\n      childType: dragging.type,\n    });\n\n    if (wrapInRow) {\n      const destinationEntity = nextEntities[destination.id];\n      const destinationChildren = destinationEntity.children;\n      const newRow = newComponentFactory(ROW_TYPE);\n      newRow.children = [destinationChildren[destination.index]];\n      newRow.parents = (destinationEntity.parents || []).concat(destination.id);\n      destinationChildren[destination.index] = newRow.id;\n      nextEntities[newRow.id] = newRow;\n    }\n\n    return {\n      ...state,\n      ...nextEntities,\n    };\n  },\n\n  [CREATE_TOP_LEVEL_TABS](state, action) {\n    const {\n      payload: { dropResult },\n    } = action;\n    const { source, dragging } = dropResult;\n\n    // move children of current root to be children of the dragging tab\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelComponent = state[topLevelId];\n\n    if (source.id !== NEW_COMPONENTS_SOURCE_ID) {\n      // component already exists\n      const draggingTabs = state[dragging.id];\n      const draggingTabId = draggingTabs.children[0];\n      const draggingTab = state[draggingTabId];\n\n      // move all children except the one that is dragging\n      const childrenToMove = [...topLevelComponent.children].filter(\n        id => id !== dragging.id,\n      );\n\n      return {\n        ...state,\n        [DASHBOARD_ROOT_ID]: {\n          ...rootComponent,\n          children: [dragging.id],\n        },\n        [topLevelId]: {\n          ...topLevelComponent,\n          children: [],\n        },\n        [draggingTabId]: {\n          ...draggingTab,\n          children: [...draggingTab.children, ...childrenToMove],\n        },\n      };\n    }\n\n    // create new component\n    const newEntities = newEntitiesFromDrop({ dropResult, layout: state });\n    const newEntitiesArray = Object.values(newEntities);\n    const tabComponent = newEntitiesArray.find(\n      component => component.type === TAB_TYPE,\n    );\n    const tabsComponent = newEntitiesArray.find(\n      component => component.type === TABS_TYPE,\n    );\n\n    tabComponent.children = [...topLevelComponent.children];\n    newEntities[topLevelId] = { ...topLevelComponent, children: [] };\n    newEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [tabsComponent.id],\n    };\n\n    return {\n      ...state,\n      ...newEntities,\n    };\n  },\n\n  [DELETE_TOP_LEVEL_TABS](state) {\n    const rootComponent = state[DASHBOARD_ROOT_ID];\n    const topLevelId = rootComponent.children[0];\n    const topLevelTabs = state[topLevelId];\n\n    if (topLevelTabs.type !== TABS_TYPE) return state;\n\n    let childrenToMove = [];\n    const nextEntities = { ...state };\n\n    topLevelTabs.children.forEach(tabId => {\n      const tabComponent = state[tabId];\n      childrenToMove = [...childrenToMove, ...tabComponent.children];\n      delete nextEntities[tabId];\n    });\n\n    delete nextEntities[topLevelId];\n\n    nextEntities[DASHBOARD_ROOT_ID] = {\n      ...rootComponent,\n      children: [DASHBOARD_GRID_ID],\n    };\n\n    nextEntities[DASHBOARD_GRID_ID] = {\n      ...state[DASHBOARD_GRID_ID],\n      children: childrenToMove,\n    };\n\n    return nextEntities;\n  },\n\n  [UPDATE_COMPONENTS_PARENTS_LIST](state) {\n    const nextState = {\n      ...state,\n    };\n\n    updateComponentParentsList({\n      currentComponent: nextState[DASHBOARD_ROOT_ID],\n      layout: nextState,\n    });\n\n    return {\n      ...nextState,\n    };\n  },\n\n  [DASHBOARD_TITLE_CHANGED](state, action) {\n    return {\n      ...state,\n      [DASHBOARD_HEADER_ID]: {\n        ...state[DASHBOARD_HEADER_ID],\n        meta: {\n          ...state[DASHBOARD_HEADER_ID].meta,\n          text: action.text,\n        },\n      },\n    };\n  },\n};\n\nexport default function layoutReducer(state = {}, action) {\n  if (action.type in actionHandlers) {\n    const handler = actionHandlers[action.type];\n    return handler(state, action);\n  }\n\n  return state;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}