{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport { LocalStorageKeys, setItem, getItem } from 'src/utils/localStorageHelpers';\nexport default function useStoredSidebarWidth(id, initialWidth) {\n  const widthsMapRef = useRef();\n  const [sidebarWidth, setSidebarWidth] = useState(initialWidth);\n  useEffect(() => {var _widthsMapRef$current;\n    widthsMapRef.current = (_widthsMapRef$current =\n    widthsMapRef.current) != null ? _widthsMapRef$current :\n    getItem(LocalStorageKeys.CommonResizableSidebarWidths, {});\n    if (widthsMapRef.current[id]) {\n      setSidebarWidth(widthsMapRef.current[id]);\n    }\n  }, [id]);\n  function setStoredSidebarWidth(updatedWidth) {\n    setSidebarWidth(updatedWidth);\n    setItem(LocalStorageKeys.CommonResizableSidebarWidths, {\n      ...widthsMapRef.current,\n      [id]: updatedWidth\n    });\n  }\n  return [sidebarWidth, setStoredSidebarWidth];\n}__signature__(useStoredSidebarWidth, \"useRef{widthsMapRef}\\nuseState{[sidebarWidth, setSidebarWidth](initialWidth)}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useStoredSidebarWidth, \"useStoredSidebarWidth\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ResizableSidebar/useStoredSidebarWidth.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useRef","useState","LocalStorageKeys","setItem","getItem","useStoredSidebarWidth","id","initialWidth","widthsMapRef","sidebarWidth","setSidebarWidth","_widthsMapRef$current","current","CommonResizableSidebarWidths","setStoredSidebarWidth","updatedWidth","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ResizableSidebar/useStoredSidebarWidth.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  LocalStorageKeys,\n  setItem,\n  getItem,\n} from 'src/utils/localStorageHelpers';\n\nexport default function useStoredSidebarWidth(\n  id: string,\n  initialWidth: number,\n) {\n  const widthsMapRef = useRef<Record<string, number>>();\n  const [sidebarWidth, setSidebarWidth] = useState<number>(initialWidth);\n\n  useEffect(() => {\n    widthsMapRef.current =\n      widthsMapRef.current ??\n      getItem(LocalStorageKeys.CommonResizableSidebarWidths, {});\n    if (widthsMapRef.current[id]) {\n      setSidebarWidth(widthsMapRef.current[id]);\n    }\n  }, [id]);\n\n  function setStoredSidebarWidth(updatedWidth: number) {\n    setSidebarWidth(updatedWidth);\n    setItem(LocalStorageKeys.CommonResizableSidebarWidths, {\n      ...widthsMapRef.current,\n      [id]: updatedWidth,\n    });\n  }\n\n  return [sidebarWidth, setStoredSidebarWidth] as const;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SACEC,gBAAgB,EAChBC,OAAO,EACPC,OAAO,QACF,+BAA+B;AAEtC,eAAc,SAAUC,qBAAqBA,CAC3CC,EAAU,EACVC,YAAoB;EAEpB,MAAMC,YAAY,GAAGR,MAAM,EAA0B;EACrD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAASM,YAAY,CAAC;EAEtER,SAAS,CAAC,MAAK,KAAAY,qBAAA;IACbH,YAAY,CAACI,OAAO,IAAAD,qBAAA;IAClBH,YAAY,CAACI,OAAO,YAAAD,qBAAA;IACpBP,OAAO,CAACF,gBAAgB,CAACW,4BAA4B,EAAE,EAAE,CAAC;IAC5D,IAAIL,YAAY,CAACI,OAAO,CAACN,EAAE,CAAC,EAAE;MAC5BI,eAAe,CAACF,YAAY,CAACI,OAAO,CAACN,EAAE,CAAC,CAAC;;EAE7C,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EAER,SAASQ,qBAAqBA,CAACC,YAAoB;IACjDL,eAAe,CAACK,YAAY,CAAC;IAC7BZ,OAAO,CAACD,gBAAgB,CAACW,4BAA4B,EAAE;MACrD,GAAGL,YAAY,CAACI,OAAO;MACvB,CAACN,EAAE,GAAGS;KACP,CAAC;EACJ;EAEA,OAAO,CAACN,YAAY,EAAEK,qBAAqB,CAAU;AACvD,CAACE,aAAA,CAzBuBX,qBAAqB,mHAAAY,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAArBhB,qBAAqB,sKAAAiB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}