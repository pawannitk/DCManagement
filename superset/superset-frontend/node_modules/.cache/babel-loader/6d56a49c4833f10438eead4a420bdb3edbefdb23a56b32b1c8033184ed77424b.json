{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\"; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * This file exports all controls available for use in chart plugins internal to Superset.\n * It is not recommended to use the controls here for any third-party plugins.\n *\n * While the React components located in `controls/components` represent different\n * types of controls (CheckboxControl, SelectControl, TextControl, ...), the controls here\n * represent instances of control types, that can be reused across visualization types.\n *\n * When controls are reused across viz types, their values are carried over as a user\n * changes the chart types.\n *\n * While the keys defined in the control itself get passed to the controlType as props,\n * here's a list of the keys that are common to all controls, and as a result define the\n * control interface.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport { t, getCategoricalSchemeRegistry, getSequentialSchemeRegistry, legacyValidateInteger, ComparisonType, ensureIsArray, isDefined, NO_TIME_RANGE, validateMaxValue } from '@superset-ui/core';\nimport { formatSelectOptions, displayTimeRelatedControls, D3_FORMAT_OPTIONS, D3_FORMAT_DOCS, D3_TIME_FORMAT_OPTIONS, D3_TIME_FORMAT_DOCS, DEFAULT_TIME_FORMAT, DEFAULT_NUMBER_FORMAT } from '../utils';\nimport { DEFAULT_MAX_ROW, TIME_FILTER_LABELS } from '../constants';\nimport { dndAdhocFilterControl, dndAdhocMetricControl, dndAdhocMetricsControl, dndGranularitySqlaControl, dndSortByControl, dndSecondaryMetricControl, dndSizeControl, dndXControl, dndYControl, dndColumnsControl, dndEntityControl, dndGroupByControl, dndSeriesControl, dndAdhocMetricControl2, dndXAxisControl } from './dndControls';\nconst categoricalSchemeRegistry = getCategoricalSchemeRegistry();\nconst sequentialSchemeRegistry = getSequentialSchemeRegistry();\nexport const PRIMARY_COLOR = { r: 0, g: 122, b: 135, a: 1 };\nconst ROW_LIMIT_OPTIONS = [10, 50, 100, 250, 500, 1000, 5000, 10000, 50000];\nconst SERIES_LIMITS = [5, 10, 25, 50, 100, 500];\nconst appContainer = document.getElementById('app');\nconst { user } = JSON.parse((appContainer == null ? void 0 : appContainer.getAttribute('data-bootstrap')) || '{}');\nconst datasourceControl = {\n  type: 'DatasourceControl',\n  label: t('Datasource'),\n  default: null,\n  description: null,\n  mapStateToProps: ({ datasource, form_data }) => ({\n    datasource,\n    form_data,\n    user\n  })\n};\nconst viz_type = {\n  type: 'VizTypeControl',\n  label: t('Visualization Type'),\n  default: 'table',\n  description: t('The type of visualization to display')\n};\nconst color_picker = {\n  type: 'ColorPickerControl',\n  label: t('Fixed Color'),\n  description: t('Use this to define a static color for all circles'),\n  default: PRIMARY_COLOR,\n  renderTrigger: true\n};\nconst linear_color_scheme = {\n  type: 'ColorSchemeControl',\n  label: t('Linear Color Scheme'),\n  choices: () => sequentialSchemeRegistry.values().map((value) => [\n  value.id,\n  value.label]\n  ),\n  default: sequentialSchemeRegistry.getDefaultKey(),\n  clearable: false,\n  description: '',\n  renderTrigger: true,\n  schemes: () => sequentialSchemeRegistry.getMap(),\n  isLinear: true,\n  mapStateToProps: (state) => {var _state$form_data;return {\n      dashboardId: state == null ? void 0 : (_state$form_data = state.form_data) == null ? void 0 : _state$form_data.dashboardId\n    };}\n};\nconst granularity = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: TIME_FILTER_LABELS.granularity,\n  default: 'one day',\n  choices: [\n  [null, t('all')],\n  ['PT5S', t('5 seconds')],\n  ['PT30S', t('30 seconds')],\n  ['PT1M', t('1 minute')],\n  ['PT5M', t('5 minutes')],\n  ['PT30M', t('30 minutes')],\n  ['PT1H', t('1 hour')],\n  ['PT6H', t('6 hour')],\n  ['P1D', t('1 day')],\n  ['P7D', t('7 days')],\n  ['P1W', t('week')],\n  ['week_starting_sunday', t('week starting Sunday')],\n  ['week_ending_saturday', t('week ending Saturday')],\n  ['P1M', t('month')],\n  ['P3M', t('quarter')],\n  ['P1Y', t('year')]],\n\n  description: t('The time granularity for the visualization. Note that you ' +\n  'can type and use simple natural language as in `10 seconds`, ' +\n  '`1 day` or `56 weeks`')\n};\nconst time_grain_sqla = {\n  type: 'SelectControl',\n  label: TIME_FILTER_LABELS.time_grain_sqla,\n  placeholder: t('None'),\n  initialValue: (control, state) => {var _state$form_data2, _state$form_data3;\n    if (!isDefined(state)) {\n      // If a chart is in a Dashboard, the ControlPanelState is empty.\n      return control.value;\n    }\n    // If a chart is a new one that isn't saved, metadata is null. In this\n    // case we want to default P1D. If the chart has been saved, we want\n    // to use whichever value was chosen, either nothing or valid a time grain.\n    return state != null && state.metadata || 'time_grain_sqla' in ((_state$form_data2 = state == null ? void 0 : state.form_data) != null ? _state$form_data2 : {}) ?\n    state == null ? void 0 : (_state$form_data3 = state.form_data) == null ? void 0 : _state$form_data3.time_grain_sqla :\n    'P1D';\n  },\n  description: t('Select a time grain for the visualization. The ' +\n  'grain is the time interval represented by a ' +\n  'single point on the chart.'),\n  mapStateToProps: ({ datasource }) => ({\n    choices: (datasource == null ? void 0 : datasource.time_grain_sqla) || []\n  }),\n  visibility: displayTimeRelatedControls\n};\nconst time_range = {\n  type: 'DateFilterControl',\n  freeForm: true,\n  label: TIME_FILTER_LABELS.time_range,\n  default: NO_TIME_RANGE,\n  description: t('This control filters the whole chart based on the selected time range. All relative times, e.g. \"Last month\", ' +\n  '\"Last 7 days\", \"now\", etc. are evaluated on the server using the server\\'s ' +\n  'local time (sans timezone). All tooltips and placeholder times are expressed ' +\n  'in UTC (sans timezone). The timestamps are then evaluated by the database ' +\n  \"using the engine's local timezone. Note one can explicitly set the timezone \" +\n  'per the ISO 8601 format if specifying either the start and/or end time.')\n};\nconst row_limit = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Row limit'),\n  clearable: false,\n  mapStateToProps: (state) => {var _state$common, _state$common$conf;return { maxValue: state == null ? void 0 : (_state$common = state.common) == null ? void 0 : (_state$common$conf = _state$common.conf) == null ? void 0 : _state$common$conf.SQL_MAX_ROW };},\n  validators: [\n  legacyValidateInteger,\n  (v, state) => validateMaxValue(v, (state == null ? void 0 : state.maxValue) || DEFAULT_MAX_ROW)],\n\n  default: 10000,\n  choices: formatSelectOptions(ROW_LIMIT_OPTIONS),\n  description: t('Limits the number of the rows that are computed in the query that is the source of the data used for this chart.')\n};\nconst order_desc = {\n  type: 'CheckboxControl',\n  label: t('Sort Descending'),\n  default: true,\n  description: t('If enabled, this control sorts the results/values descending, otherwise it sorts the results ascending.'),\n  visibility: ({ controls }) => Boolean((controls == null ? void 0 : controls.timeseries_limit_metric.value) &&\n  !_isEmpty(controls == null ? void 0 : controls.timeseries_limit_metric.value))\n};\nconst limit = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Series limit'),\n  placeholder: t('None'),\n  validators: [legacyValidateInteger],\n  choices: formatSelectOptions(SERIES_LIMITS),\n  clearable: true,\n  description: t('Limits the number of series that get displayed. A joined subquery (or an extra phase ' +\n  'where subqueries are not supported) is applied to limit the number of series that get ' +\n  'fetched and rendered. This feature is useful when grouping by high cardinality ' +\n  'column(s) though does increase the query complexity and cost.')\n};\nconst series_limit = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Series limit'),\n  placeholder: t('None'),\n  validators: [legacyValidateInteger],\n  choices: formatSelectOptions(SERIES_LIMITS),\n  description: t('Limits the number of series that get displayed. A joined subquery (or an extra phase ' +\n  'where subqueries are not supported) is applied to limit the number of series that get ' +\n  'fetched and rendered. This feature is useful when grouping by high cardinality ' +\n  'column(s) though does increase the query complexity and cost.')\n};\nconst y_axis_format = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Y Axis Format'),\n  renderTrigger: true,\n  default: DEFAULT_NUMBER_FORMAT,\n  choices: D3_FORMAT_OPTIONS,\n  description: D3_FORMAT_DOCS,\n  tokenSeparators: ['\\n', '\\t', ';'],\n  filterOption: ({ data: option }, search) => option.label.includes(search) || option.value.includes(search),\n  mapStateToProps: (state) => {var _state$controls, _state$controls$compa;\n    const isPercentage = ((_state$controls = state.controls) == null ? void 0 : (_state$controls$compa = _state$controls.comparison_type) == null ? void 0 : _state$controls$compa.value) === ComparisonType.Percentage;\n    return {\n      choices: isPercentage ?\n      D3_FORMAT_OPTIONS.filter((option) => option[0].includes('%')) :\n      D3_FORMAT_OPTIONS\n    };\n  }\n};\nconst currency_format = {\n  type: 'CurrencyControl',\n  label: t('Currency format'),\n  renderTrigger: true\n};\nconst x_axis_time_format = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Time format'),\n  renderTrigger: true,\n  default: DEFAULT_TIME_FORMAT,\n  choices: D3_TIME_FORMAT_OPTIONS,\n  description: D3_TIME_FORMAT_DOCS,\n  filterOption: ({ data: option }, search) => option.label.includes(search) || option.value.includes(search)\n};\nconst color_scheme = {\n  type: 'ColorSchemeControl',\n  label: t('Color Scheme'),\n  default: categoricalSchemeRegistry.getDefaultKey(),\n  renderTrigger: true,\n  choices: () => categoricalSchemeRegistry.keys().map((s) => [s, s]),\n  description: t('The color scheme for rendering chart'),\n  schemes: () => categoricalSchemeRegistry.getMap(),\n  mapStateToProps: (state) => {var _state$form_data4;return {\n      dashboardId: state == null ? void 0 : (_state$form_data4 = state.form_data) == null ? void 0 : _state$form_data4.dashboardId\n    };}\n};\nconst truncate_metric = {\n  type: 'CheckboxControl',\n  label: t('Truncate Metric'),\n  default: true,\n  description: t('Whether to truncate metrics')\n};\nconst show_empty_columns = {\n  type: 'CheckboxControl',\n  label: t('Show empty columns'),\n  default: true,\n  description: t('Show empty columns')\n};\nconst temporal_columns_lookup = {\n  type: 'HiddenControl',\n  initialValue: (control, state) => {var _state$datasource;return Object.fromEntries(ensureIsArray(state == null ? void 0 : (_state$datasource = state.datasource) == null ? void 0 : _state$datasource.columns).\n    filter((option) => option.is_dttm).\n    map((option) => {var _option$column_name;return [(_option$column_name = option.column_name) != null ? _option$column_name : option.name, option.is_dttm];}));}\n};const _default =\n{\n  metrics: dndAdhocMetricsControl,\n  metric: dndAdhocMetricControl,\n  datasource: datasourceControl,\n  viz_type,\n  color_picker,\n  metric_2: dndAdhocMetricControl2,\n  linear_color_scheme,\n  secondary_metric: dndSecondaryMetricControl,\n  groupby: dndGroupByControl,\n  columns: dndColumnsControl,\n  granularity,\n  granularity_sqla: dndGranularitySqlaControl,\n  time_grain_sqla,\n  time_range,\n  row_limit,\n  limit,\n  timeseries_limit_metric: dndSortByControl,\n  orderby: dndSortByControl,\n  order_desc,\n  series: dndSeriesControl,\n  entity: dndEntityControl,\n  x: dndXControl,\n  y: dndYControl,\n  size: dndSizeControl,\n  y_axis_format,\n  x_axis_time_format,\n  adhoc_filters: dndAdhocFilterControl,\n  color_scheme,\n  series_columns: dndColumnsControl,\n  series_limit,\n  series_limit_metric: dndSortByControl,\n  legacy_order_by: dndSortByControl,\n  truncate_metric,\n  x_axis: dndXAxisControl,\n  show_empty_columns,\n  temporal_columns_lookup,\n  currency_format\n};export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(categoricalSchemeRegistry, \"categoricalSchemeRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(sequentialSchemeRegistry, \"sequentialSchemeRegistry\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(PRIMARY_COLOR, \"PRIMARY_COLOR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(ROW_LIMIT_OPTIONS, \"ROW_LIMIT_OPTIONS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(SERIES_LIMITS, \"SERIES_LIMITS\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(appContainer, \"appContainer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(user, \"user\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(datasourceControl, \"datasourceControl\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(viz_type, \"viz_type\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(color_picker, \"color_picker\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(linear_color_scheme, \"linear_color_scheme\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(granularity, \"granularity\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(time_grain_sqla, \"time_grain_sqla\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(time_range, \"time_range\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(row_limit, \"row_limit\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(order_desc, \"order_desc\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(limit, \"limit\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(series_limit, \"series_limit\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(y_axis_format, \"y_axis_format\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(currency_format, \"currency_format\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(x_axis_time_format, \"x_axis_time_format\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(color_scheme, \"color_scheme\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(truncate_metric, \"truncate_metric\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(show_empty_columns, \"show_empty_columns\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(temporal_columns_lookup, \"temporal_columns_lookup\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","t","getCategoricalSchemeRegistry","getSequentialSchemeRegistry","legacyValidateInteger","ComparisonType","ensureIsArray","isDefined","NO_TIME_RANGE","validateMaxValue","formatSelectOptions","displayTimeRelatedControls","D3_FORMAT_OPTIONS","D3_FORMAT_DOCS","D3_TIME_FORMAT_OPTIONS","D3_TIME_FORMAT_DOCS","DEFAULT_TIME_FORMAT","DEFAULT_NUMBER_FORMAT","DEFAULT_MAX_ROW","TIME_FILTER_LABELS","dndAdhocFilterControl","dndAdhocMetricControl","dndAdhocMetricsControl","dndGranularitySqlaControl","dndSortByControl","dndSecondaryMetricControl","dndSizeControl","dndXControl","dndYControl","dndColumnsControl","dndEntityControl","dndGroupByControl","dndSeriesControl","dndAdhocMetricControl2","dndXAxisControl","categoricalSchemeRegistry","sequentialSchemeRegistry","PRIMARY_COLOR","r","g","b","ROW_LIMIT_OPTIONS","SERIES_LIMITS","appContainer","document","getElementById","user","JSON","parse","getAttribute","datasourceControl","type","label","description","mapStateToProps","datasource","form_data","viz_type","color_picker","renderTrigger","linear_color_scheme","choices","values","map","value","id","getDefaultKey","clearable","schemes","getMap","isLinear","state","_state$form_data","dashboardId","granularity","freeForm","time_grain_sqla","placeholder","initialValue","control","_state$form_data2","_state$form_data3","metadata","visibility","time_range","row_limit","_state$common","_state$common$conf","maxValue","common","conf","SQL_MAX_ROW","validators","v","order_desc","controls","Boolean","timeseries_limit_metric","_isEmpty","limit","series_limit","y_axis_format","tokenSeparators","filterOption","data","option","search","includes","_state$controls","_state$controls$compa","isPercentage","comparison_type","Percentage","filter","currency_format","x_axis_time_format","color_scheme","keys","s","_state$form_data4","truncate_metric","show_empty_columns","temporal_columns_lookup","_state$datasource","Object","fromEntries","columns","is_dttm","_option$column_name","column_name","name","_default","metrics","metric","metric_2","secondary_metric","groupby","granularity_sqla","orderby","series","entity","x","y","size","adhoc_filters","series_columns","series_limit_metric","legacy_order_by","x_axis","reactHotLoader","register","leaveModule"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-chart-controls/src/shared-controls/sharedControls.tsx"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * This file exports all controls available for use in chart plugins internal to Superset.\n * It is not recommended to use the controls here for any third-party plugins.\n *\n * While the React components located in `controls/components` represent different\n * types of controls (CheckboxControl, SelectControl, TextControl, ...), the controls here\n * represent instances of control types, that can be reused across visualization types.\n *\n * When controls are reused across viz types, their values are carried over as a user\n * changes the chart types.\n *\n * While the keys defined in the control itself get passed to the controlType as props,\n * here's a list of the keys that are common to all controls, and as a result define the\n * control interface.\n */\nimport { isEmpty } from 'lodash';\nimport {\n  t,\n  getCategoricalSchemeRegistry,\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n  legacyValidateInteger,\n  ComparisonType,\n  ensureIsArray,\n  isDefined,\n  NO_TIME_RANGE,\n  validateMaxValue,\n} from '@superset-ui/core';\n\nimport {\n  formatSelectOptions,\n  displayTimeRelatedControls,\n  D3_FORMAT_OPTIONS,\n  D3_FORMAT_DOCS,\n  D3_TIME_FORMAT_OPTIONS,\n  D3_TIME_FORMAT_DOCS,\n  DEFAULT_TIME_FORMAT,\n  DEFAULT_NUMBER_FORMAT,\n} from '../utils';\nimport { DEFAULT_MAX_ROW, TIME_FILTER_LABELS } from '../constants';\nimport {\n  SharedControlConfig,\n  Dataset,\n  ControlState,\n  ControlPanelState,\n} from '../types';\n\nimport {\n  dndAdhocFilterControl,\n  dndAdhocMetricControl,\n  dndAdhocMetricsControl,\n  dndGranularitySqlaControl,\n  dndSortByControl,\n  dndSecondaryMetricControl,\n  dndSizeControl,\n  dndXControl,\n  dndYControl,\n  dndColumnsControl,\n  dndEntityControl,\n  dndGroupByControl,\n  dndSeriesControl,\n  dndAdhocMetricControl2,\n  dndXAxisControl,\n} from './dndControls';\n\nconst categoricalSchemeRegistry = getCategoricalSchemeRegistry();\nconst sequentialSchemeRegistry = getSequentialSchemeRegistry();\n\nexport const PRIMARY_COLOR = { r: 0, g: 122, b: 135, a: 1 };\n\nconst ROW_LIMIT_OPTIONS = [10, 50, 100, 250, 500, 1000, 5000, 10000, 50000];\nconst SERIES_LIMITS = [5, 10, 25, 50, 100, 500];\n\nconst appContainer = document.getElementById('app');\nconst { user } = JSON.parse(\n  appContainer?.getAttribute('data-bootstrap') || '{}',\n);\n\ntype SelectDefaultOption = {\n  label: string;\n  value: string;\n};\n\nconst datasourceControl: SharedControlConfig<'DatasourceControl'> = {\n  type: 'DatasourceControl',\n  label: t('Datasource'),\n  default: null,\n  description: null,\n  mapStateToProps: ({ datasource, form_data }) => ({\n    datasource,\n    form_data,\n    user,\n  }),\n};\n\nconst viz_type: SharedControlConfig<'VizTypeControl'> = {\n  type: 'VizTypeControl',\n  label: t('Visualization Type'),\n  default: 'table',\n  description: t('The type of visualization to display'),\n};\n\nconst color_picker: SharedControlConfig<'ColorPickerControl'> = {\n  type: 'ColorPickerControl',\n  label: t('Fixed Color'),\n  description: t('Use this to define a static color for all circles'),\n  default: PRIMARY_COLOR,\n  renderTrigger: true,\n};\n\nconst linear_color_scheme: SharedControlConfig<'ColorSchemeControl'> = {\n  type: 'ColorSchemeControl',\n  label: t('Linear Color Scheme'),\n  choices: () =>\n    (sequentialSchemeRegistry.values() as SequentialScheme[]).map(value => [\n      value.id,\n      value.label,\n    ]),\n  default: sequentialSchemeRegistry.getDefaultKey(),\n  clearable: false,\n  description: '',\n  renderTrigger: true,\n  schemes: () => sequentialSchemeRegistry.getMap(),\n  isLinear: true,\n  mapStateToProps: state => ({\n    dashboardId: state?.form_data?.dashboardId,\n  }),\n};\n\nconst granularity: SharedControlConfig<'SelectControl'> = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: TIME_FILTER_LABELS.granularity,\n  default: 'one day',\n  choices: [\n    [null, t('all')],\n    ['PT5S', t('5 seconds')],\n    ['PT30S', t('30 seconds')],\n    ['PT1M', t('1 minute')],\n    ['PT5M', t('5 minutes')],\n    ['PT30M', t('30 minutes')],\n    ['PT1H', t('1 hour')],\n    ['PT6H', t('6 hour')],\n    ['P1D', t('1 day')],\n    ['P7D', t('7 days')],\n    ['P1W', t('week')],\n    ['week_starting_sunday', t('week starting Sunday')],\n    ['week_ending_saturday', t('week ending Saturday')],\n    ['P1M', t('month')],\n    ['P3M', t('quarter')],\n    ['P1Y', t('year')],\n  ],\n  description: t(\n    'The time granularity for the visualization. Note that you ' +\n      'can type and use simple natural language as in `10 seconds`, ' +\n      '`1 day` or `56 weeks`',\n  ),\n};\n\nconst time_grain_sqla: SharedControlConfig<'SelectControl'> = {\n  type: 'SelectControl',\n  label: TIME_FILTER_LABELS.time_grain_sqla,\n  placeholder: t('None'),\n  initialValue: (control: ControlState, state: ControlPanelState) => {\n    if (!isDefined(state)) {\n      // If a chart is in a Dashboard, the ControlPanelState is empty.\n      return control.value;\n    }\n    // If a chart is a new one that isn't saved, metadata is null. In this\n    // case we want to default P1D. If the chart has been saved, we want\n    // to use whichever value was chosen, either nothing or valid a time grain.\n    return state?.metadata || 'time_grain_sqla' in (state?.form_data ?? {})\n      ? state?.form_data?.time_grain_sqla\n      : 'P1D';\n  },\n  description: t(\n    'Select a time grain for the visualization. The ' +\n      'grain is the time interval represented by a ' +\n      'single point on the chart.',\n  ),\n  mapStateToProps: ({ datasource }) => ({\n    choices: (datasource as Dataset)?.time_grain_sqla || [],\n  }),\n  visibility: displayTimeRelatedControls,\n};\n\nconst time_range: SharedControlConfig<'DateFilterControl'> = {\n  type: 'DateFilterControl',\n  freeForm: true,\n  label: TIME_FILTER_LABELS.time_range,\n  default: NO_TIME_RANGE, // this value is an empty filter constant so shouldn't translate it.\n  description: t(\n    'This control filters the whole chart based on the selected time range. All relative times, e.g. \"Last month\", ' +\n      '\"Last 7 days\", \"now\", etc. are evaluated on the server using the server\\'s ' +\n      'local time (sans timezone). All tooltips and placeholder times are expressed ' +\n      'in UTC (sans timezone). The timestamps are then evaluated by the database ' +\n      \"using the engine's local timezone. Note one can explicitly set the timezone \" +\n      'per the ISO 8601 format if specifying either the start and/or end time.',\n  ),\n};\n\nconst row_limit: SharedControlConfig<'SelectControl'> = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Row limit'),\n  clearable: false,\n  mapStateToProps: state => ({ maxValue: state?.common?.conf?.SQL_MAX_ROW }),\n  validators: [\n    legacyValidateInteger,\n    (v, state) => validateMaxValue(v, state?.maxValue || DEFAULT_MAX_ROW),\n  ],\n  default: 10000,\n  choices: formatSelectOptions(ROW_LIMIT_OPTIONS),\n  description: t(\n    'Limits the number of the rows that are computed in the query that is the source of the data used for this chart.',\n  ),\n};\n\nconst order_desc: SharedControlConfig<'CheckboxControl'> = {\n  type: 'CheckboxControl',\n  label: t('Sort Descending'),\n  default: true,\n  description: t(\n    'If enabled, this control sorts the results/values descending, otherwise it sorts the results ascending.',\n  ),\n  visibility: ({ controls }) =>\n    Boolean(\n      controls?.timeseries_limit_metric.value &&\n        !isEmpty(controls?.timeseries_limit_metric.value),\n    ),\n};\n\nconst limit: SharedControlConfig<'SelectControl'> = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Series limit'),\n  placeholder: t('None'),\n  validators: [legacyValidateInteger],\n  choices: formatSelectOptions(SERIES_LIMITS),\n  clearable: true,\n  description: t(\n    'Limits the number of series that get displayed. A joined subquery (or an extra phase ' +\n      'where subqueries are not supported) is applied to limit the number of series that get ' +\n      'fetched and rendered. This feature is useful when grouping by high cardinality ' +\n      'column(s) though does increase the query complexity and cost.',\n  ),\n};\n\nconst series_limit: SharedControlConfig<'SelectControl'> = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Series limit'),\n  placeholder: t('None'),\n  validators: [legacyValidateInteger],\n  choices: formatSelectOptions(SERIES_LIMITS),\n  description: t(\n    'Limits the number of series that get displayed. A joined subquery (or an extra phase ' +\n      'where subqueries are not supported) is applied to limit the number of series that get ' +\n      'fetched and rendered. This feature is useful when grouping by high cardinality ' +\n      'column(s) though does increase the query complexity and cost.',\n  ),\n};\n\nconst y_axis_format: SharedControlConfig<'SelectControl', SelectDefaultOption> =\n  {\n    type: 'SelectControl',\n    freeForm: true,\n    label: t('Y Axis Format'),\n    renderTrigger: true,\n    default: DEFAULT_NUMBER_FORMAT,\n    choices: D3_FORMAT_OPTIONS,\n    description: D3_FORMAT_DOCS,\n    tokenSeparators: ['\\n', '\\t', ';'],\n    filterOption: ({ data: option }, search) =>\n      option.label.includes(search) || option.value.includes(search),\n    mapStateToProps: state => {\n      const isPercentage =\n        state.controls?.comparison_type?.value === ComparisonType.Percentage;\n      return {\n        choices: isPercentage\n          ? D3_FORMAT_OPTIONS.filter(option => option[0].includes('%'))\n          : D3_FORMAT_OPTIONS,\n      };\n    },\n  };\n\nconst currency_format: SharedControlConfig<'CurrencyControl'> = {\n  type: 'CurrencyControl',\n  label: t('Currency format'),\n  renderTrigger: true,\n};\n\nconst x_axis_time_format: SharedControlConfig<\n  'SelectControl',\n  SelectDefaultOption\n> = {\n  type: 'SelectControl',\n  freeForm: true,\n  label: t('Time format'),\n  renderTrigger: true,\n  default: DEFAULT_TIME_FORMAT,\n  choices: D3_TIME_FORMAT_OPTIONS,\n  description: D3_TIME_FORMAT_DOCS,\n  filterOption: ({ data: option }, search) =>\n    option.label.includes(search) || option.value.includes(search),\n};\n\nconst color_scheme: SharedControlConfig<'ColorSchemeControl'> = {\n  type: 'ColorSchemeControl',\n  label: t('Color Scheme'),\n  default: categoricalSchemeRegistry.getDefaultKey(),\n  renderTrigger: true,\n  choices: () => categoricalSchemeRegistry.keys().map(s => [s, s]),\n  description: t('The color scheme for rendering chart'),\n  schemes: () => categoricalSchemeRegistry.getMap(),\n  mapStateToProps: state => ({\n    dashboardId: state?.form_data?.dashboardId,\n  }),\n};\n\nconst truncate_metric: SharedControlConfig<'CheckboxControl'> = {\n  type: 'CheckboxControl',\n  label: t('Truncate Metric'),\n  default: true,\n  description: t('Whether to truncate metrics'),\n};\n\nconst show_empty_columns: SharedControlConfig<'CheckboxControl'> = {\n  type: 'CheckboxControl',\n  label: t('Show empty columns'),\n  default: true,\n  description: t('Show empty columns'),\n};\n\nconst temporal_columns_lookup: SharedControlConfig<'HiddenControl'> = {\n  type: 'HiddenControl',\n  initialValue: (control: ControlState, state: ControlPanelState | null) =>\n    Object.fromEntries(\n      ensureIsArray<Record<string, any>>(state?.datasource?.columns)\n        .filter(option => option.is_dttm)\n        .map(option => [option.column_name ?? option.name, option.is_dttm]),\n    ),\n};\n\nexport default {\n  metrics: dndAdhocMetricsControl,\n  metric: dndAdhocMetricControl,\n  datasource: datasourceControl,\n  viz_type,\n  color_picker,\n  metric_2: dndAdhocMetricControl2,\n  linear_color_scheme,\n  secondary_metric: dndSecondaryMetricControl,\n  groupby: dndGroupByControl,\n  columns: dndColumnsControl,\n  granularity,\n  granularity_sqla: dndGranularitySqlaControl,\n  time_grain_sqla,\n  time_range,\n  row_limit,\n  limit,\n  timeseries_limit_metric: dndSortByControl,\n  orderby: dndSortByControl,\n  order_desc,\n  series: dndSeriesControl,\n  entity: dndEntityControl,\n  x: dndXControl,\n  y: dndYControl,\n  size: dndSizeControl,\n  y_axis_format,\n  x_axis_time_format,\n  adhoc_filters: dndAdhocFilterControl,\n  color_scheme,\n  series_columns: dndColumnsControl,\n  series_limit,\n  series_limit_metric: dndSortByControl,\n  legacy_order_by: dndSortByControl,\n  truncate_metric,\n  x_axis: dndXAxisControl,\n  show_empty_columns,\n  temporal_columns_lookup,\n  currency_format,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}