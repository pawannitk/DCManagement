{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { GenericDataType } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { SHARED_COLUMN_CONFIG_PROPS } from './constants';\nimport { isTabLayoutItem } from './types';\nimport ControlForm, { ControlFormItem, ControlFormRow } from './ControlForm';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ColumnConfigPopover({ column, configFormLayout, onChange }) {\n  const renderRow = (row, i) => ___EmotionJSX(ControlFormRow, { key: i },\n  row.map((meta) => {\n    const key = typeof meta === 'string' ? meta : meta.name;\n    const override = typeof meta === 'string' ?\n    {} :\n    'override' in meta ?\n    meta.override :\n    meta.config;\n    const props = {\n      ...(key in SHARED_COLUMN_CONFIG_PROPS ?\n      SHARED_COLUMN_CONFIG_PROPS[key] :\n      undefined),\n      ...override\n    };\n    return ___EmotionJSX(ControlFormItem, _extends({ key: key, name: key }, props));\n  })\n  );\n  const layout = configFormLayout[column.type === undefined ? GenericDataType.String : column.type];\n  if (isTabLayoutItem(layout[0])) {\n    return ___EmotionJSX(Tabs, { centered: true },\n    layout.map((item, i) => isTabLayoutItem(item) ? ___EmotionJSX(Tabs.TabPane, { tab: item.tab, key: i },\n    ___EmotionJSX(ControlForm, { onChange: onChange, value: column.config },\n    item.children.map((row, i) => renderRow(row, i))\n    )\n    ) : null)\n    );\n  }\n  return ___EmotionJSX(ControlForm, { onChange: onChange, value: column.config },\n  layout.map((row, i) => renderRow(row, i))\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ColumnConfigPopover, \"ColumnConfigPopover\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigPopover.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","GenericDataType","Tabs","SHARED_COLUMN_CONFIG_PROPS","isTabLayoutItem","ControlForm","ControlFormItem","ControlFormRow","jsx","___EmotionJSX","ColumnConfigPopover","column","configFormLayout","onChange","renderRow","row","i","key","map","meta","name","override","config","props","undefined","_extends","layout","type","String","centered","item","TabPane","tab","value","children","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigPopover.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { GenericDataType } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport {\n  SHARED_COLUMN_CONFIG_PROPS,\n  SharedColumnConfigProp,\n} from './constants';\nimport {\n  ColumnConfig,\n  ColumnConfigFormItem,\n  ColumnConfigFormLayout,\n  ColumnConfigInfo,\n  ControlFormItemDefaultSpec,\n  isTabLayoutItem,\n} from './types';\nimport ControlForm, { ControlFormItem, ControlFormRow } from './ControlForm';\n\nexport type ColumnConfigPopoverProps = {\n  column: ColumnConfigInfo;\n  configFormLayout: ColumnConfigFormLayout;\n  onChange: (value: ColumnConfig) => void;\n  width?: number | string;\n  height?: number | string;\n};\n\nexport default function ColumnConfigPopover({\n  column,\n  configFormLayout,\n  onChange,\n}: ColumnConfigPopoverProps) {\n  const renderRow = (row: ColumnConfigFormItem[], i: number) => (\n    <ControlFormRow key={i}>\n      {row.map(meta => {\n        const key = typeof meta === 'string' ? meta : meta.name;\n        const override =\n          typeof meta === 'string'\n            ? {}\n            : 'override' in meta\n              ? meta.override\n              : meta.config;\n        const props = {\n          ...(key in SHARED_COLUMN_CONFIG_PROPS\n            ? SHARED_COLUMN_CONFIG_PROPS[key as SharedColumnConfigProp]\n            : undefined),\n          ...override,\n        } as ControlFormItemDefaultSpec;\n        return <ControlFormItem key={key} name={key} {...props} />;\n      })}\n    </ControlFormRow>\n  );\n\n  const layout =\n    configFormLayout[\n      column.type === undefined ? GenericDataType.String : column.type\n    ];\n\n  if (isTabLayoutItem(layout[0])) {\n    return (\n      <Tabs centered>\n        {layout.map((item, i) =>\n          isTabLayoutItem(item) ? (\n            <Tabs.TabPane tab={item.tab} key={i}>\n              <ControlForm onChange={onChange} value={column.config}>\n                {item.children.map((row, i) => renderRow(row, i))}\n              </ControlForm>\n            </Tabs.TabPane>\n          ) : null,\n        )}\n      </Tabs>\n    );\n  }\n  return (\n    <ControlForm onChange={onChange} value={column.config}>\n      {layout.map((row, i) => renderRow(row as ColumnConfigFormItem[], i))}\n    </ControlForm>\n  );\n}\n"],"mappings":"sWAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,IAAI,MAAM,qBAAqB;AACtC,SACEC,0BAA0B,QAErB,aAAa;AACpB,SAMEC,eAAe,QACV,SAAS;AAChB,OAAOC,WAAW,IAAIC,eAAe,EAAEC,cAAc,QAAQ,eAAe,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAU7E,eAAc,SAAUC,mBAAmBA,CAAC,EAC1CC,MAAM,EACNC,gBAAgB,EAChBC,QAAQ,EACiB;EACzB,MAAMC,SAAS,GAAGA,CAACC,GAA2B,EAAEC,CAAS,KACvDP,aAAA,CAACF,cAAc,IAACU,GAAG,EAAED,CAAE;EACpBD,GAAG,CAACG,GAAG,CAAC,CAAAC,IAAI,KAAG;IACd,MAAMF,GAAG,GAAG,OAAOE,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAACC,IAAI;IACvD,MAAMC,QAAQ,GACZ,OAAOF,IAAI,KAAK,QAAQ;IACpB,EAAE;IACF,UAAU,IAAIA,IAAI;IAChBA,IAAI,CAACE,QAAQ;IACbF,IAAI,CAACG,MAAM;IACnB,MAAMC,KAAK,GAAG;MACZ,IAAIN,GAAG,IAAId,0BAA0B;MACjCA,0BAA0B,CAACc,GAA6B,CAAC;MACzDO,SAAS,CAAC;MACd,GAAGH;KAC0B;IAC/B,OAAOZ,aAAA,CAACH,eAAe,EAAAmB,QAAA,GAACR,GAAG,EAAEA,GAAI,EAACG,IAAI,EAAEH,GAAI,IAAKM,KAAK,CAAC,CAAG;EAC5D,CAAC;EACa,CACjB;EAED,MAAMG,MAAM,GACVd,gBAAgB,CACdD,MAAM,CAACgB,IAAI,KAAKH,SAAS,GAAGvB,eAAe,CAAC2B,MAAM,GAAGjB,MAAM,CAACgB,IAAI,CACjE;EAEH,IAAIvB,eAAe,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9B,OACEjB,aAAA,CAACP,IAAI,IAAC2B,QAAQ;IACXH,MAAM,CAACR,GAAG,CAAC,CAACY,IAAI,EAAEd,CAAC,KAClBZ,eAAe,CAAC0B,IAAI,CAAC,GACnBrB,aAAA,CAACP,IAAI,CAAC6B,OAAO,IAACC,GAAG,EAAEF,IAAI,CAACE,GAAI,EAACf,GAAG,EAAED,CAAE;IAClCP,aAAA,CAACJ,WAAW,IAACQ,QAAQ,EAAEA,QAAS,EAACoB,KAAK,EAAEtB,MAAM,CAACW,MAAO;IACnDQ,IAAI,CAACI,QAAQ,CAAChB,GAAG,CAAC,CAACH,GAAG,EAAEC,CAAC,KAAKF,SAAS,CAACC,GAAG,EAAEC,CAAC,CAAC;IACrC;IACD,CAAC,GACb,IAAI;IAEN,CAAC;;EAGX,OACEP,aAAA,CAACJ,WAAW,IAACQ,QAAQ,EAAEA,QAAS,EAACoB,KAAK,EAAEtB,MAAM,CAACW,MAAO;EACnDI,MAAM,CAACR,GAAG,CAAC,CAACH,GAAG,EAAEC,CAAC,KAAKF,SAAS,CAACC,GAA6B,EAAEC,CAAC,CAAC;EACxD,CAAC;AAElB,CAAC,mBAAAmB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAb,SAAA,MAAAW,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAnDuB5B,mBAAmB,uLAAA6B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAf,SAAA,CAAAe,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}