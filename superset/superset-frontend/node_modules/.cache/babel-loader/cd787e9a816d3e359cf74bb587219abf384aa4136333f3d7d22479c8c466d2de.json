{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, GenericDataType, t, tn } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function PluginFilterTimeColumn(props) {\n  const { data, formData, height, width, setDataMask, setHoveredFilter, unsetHoveredFilter, setFocusedFilter, unsetFocusedFilter, setFilterActive, filterState, inputRef } = props;\n  const { defaultValue } = formData;\n  const [value, setValue] = useState(defaultValue != null ? defaultValue : []);\n  const handleChange = (value) => {\n    const resultValue = ensureIsArray(value);\n    setValue(resultValue);\n    const extraFormData = {};\n    if (resultValue.length) {\n      extraFormData.granularity_sqla = resultValue[0];\n    }\n    setDataMask({\n      extraFormData,\n      filterState: {\n        value: resultValue.length ? resultValue : null\n      }\n    });\n  };\n  useEffect(() => {\n    handleChange(defaultValue != null ? defaultValue : null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n  useEffect(() => {var _filterState$value;\n    handleChange((_filterState$value = filterState.value) != null ? _filterState$value : null);\n  }, [JSON.stringify(filterState.value)]);\n  const timeColumns = (data || []).filter((row) => row.dtype === GenericDataType.Temporal);\n  const placeholderText = timeColumns.length === 0 ?\n  t('No time columns') :\n  tn('%s option', '%s options', timeColumns.length, timeColumns.length);\n  const formItemData = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = ___EmotionJSX(StatusMessage, { status: filterState.validateStatus },\n    filterState.validateMessage\n    );\n  }\n  const options = timeColumns.map((row) => {\n    const { column_name: columnName, verbose_name: verboseName } = row;\n    return {\n      label: verboseName != null ? verboseName : columnName,\n      value: columnName\n    };\n  });\n  return ___EmotionJSX(FilterPluginStyle, { height: height, width: width },\n  ___EmotionJSX(StyledFormItem, _extends({ validateStatus: filterState.validateStatus }, formItemData),\n  ___EmotionJSX(Select, { allowClear: true, value: value, placeholder: placeholderText\n    // @ts-ignore\n    , onChange: handleChange, onBlur: unsetFocusedFilter, onFocus: setFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter, ref: inputRef, options: options, onDropdownVisibleChange: setFilterActive })\n  )\n  );\n}__signature__(PluginFilterTimeColumn, \"useState{[value, setValue](defaultValue ?? [])}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PluginFilterTimeColumn, \"PluginFilterTimeColumn\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/TimeColumn/TimeColumnFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","GenericDataType","t","tn","React","useEffect","useState","Select","FilterPluginStyle","StyledFormItem","StatusMessage","jsx","___EmotionJSX","PluginFilterTimeColumn","props","data","formData","height","width","setDataMask","setHoveredFilter","unsetHoveredFilter","setFocusedFilter","unsetFocusedFilter","setFilterActive","filterState","inputRef","defaultValue","value","setValue","handleChange","resultValue","extraFormData","length","granularity_sqla","JSON","stringify","_filterState$value","timeColumns","filter","row","dtype","Temporal","placeholderText","formItemData","validateMessage","extra","status","validateStatus","options","map","column_name","columnName","verbose_name","verboseName","label","_extends","allowClear","placeholder","onChange","onBlur","onFocus","onMouseEnter","onMouseLeave","ref","onDropdownVisibleChange","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/TimeColumn/TimeColumnFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ExtraFormData,\n  GenericDataType,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/components';\nimport { FormItemProps } from 'antd/lib/form';\nimport { FilterPluginStyle, StyledFormItem, StatusMessage } from '../common';\nimport { PluginFilterTimeColumnProps } from './types';\n\nexport default function PluginFilterTimeColumn(\n  props: PluginFilterTimeColumnProps,\n) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n  } = props;\n  const { defaultValue } = formData;\n\n  const [value, setValue] = useState<string[]>(defaultValue ?? []);\n\n  const handleChange = (value?: string[] | string | null) => {\n    const resultValue: string[] = ensureIsArray<string>(value);\n    setValue(resultValue);\n    const extraFormData: ExtraFormData = {};\n    if (resultValue.length) {\n      extraFormData.granularity_sqla = resultValue[0];\n    }\n\n    setDataMask({\n      extraFormData,\n      filterState: {\n        value: resultValue.length ? resultValue : null,\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleChange(defaultValue ?? null);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  useEffect(() => {\n    handleChange(filterState.value ?? null);\n  }, [JSON.stringify(filterState.value)]);\n\n  const timeColumns = (data || []).filter(\n    row => row.dtype === GenericDataType.Temporal,\n  );\n\n  const placeholderText =\n    timeColumns.length === 0\n      ? t('No time columns')\n      : tn('%s option', '%s options', timeColumns.length, timeColumns.length);\n\n  const formItemData: FormItemProps = {};\n  if (filterState.validateMessage) {\n    formItemData.extra = (\n      <StatusMessage status={filterState.validateStatus}>\n        {filterState.validateMessage}\n      </StatusMessage>\n    );\n  }\n\n  const options = timeColumns.map(\n    (row: { column_name: string; verbose_name: string | null }) => {\n      const { column_name: columnName, verbose_name: verboseName } = row;\n      return {\n        label: verboseName ?? columnName,\n        value: columnName,\n      };\n    },\n  );\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      <StyledFormItem\n        validateStatus={filterState.validateStatus}\n        {...formItemData}\n      >\n        <Select\n          allowClear\n          value={value}\n          placeholder={placeholderText}\n          // @ts-ignore\n          onChange={handleChange}\n          onBlur={unsetFocusedFilter}\n          onFocus={setFocusedFilter}\n          onMouseEnter={setHoveredFilter}\n          onMouseLeave={unsetHoveredFilter}\n          ref={inputRef}\n          options={options}\n          onDropdownVisibleChange={setFilterActive}\n        />\n      </StyledFormItem>\n    </FilterPluginStyle>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}