{"ast":null,"code":"import _zip from \"lodash/zip\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\n\nimport { css, GenericDataType, styled } from '@superset-ui/core';\nimport { CopyToClipboardButton, FilterInput } from 'src/explore/components/DataTableControl';\nimport { applyFormattingToTabularData } from 'src/utils/common';\nimport { getTimeColumns } from 'src/explore/components/DataTableControl/utils';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const TableControlsWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: ${theme.gridUnit * 2}px;\n\n    span {\n      flex-shrink: 0;\n    }\n  `}\n`;\nexport const TableControls = ({ data, datasourceId, onInputChange, columnNames, columnTypes, rowcount, isLoading }) => {\n  const originalTimeColumns = getTimeColumns(datasourceId);\n  const formattedTimeColumns = _zip(columnNames, columnTypes).\n  filter(([name, type]) => type === GenericDataType.Temporal &&\n  name &&\n  !originalTimeColumns.includes(name)).\n  map(([colname]) => colname);\n  const formattedData = useMemo(() => applyFormattingToTabularData(data, formattedTimeColumns), [data, formattedTimeColumns]);\n  return ___EmotionJSX(TableControlsWrapper, null,\n  ___EmotionJSX(FilterInput, { onChangeHandler: onInputChange, shouldFocus: true }),\n  ___EmotionJSX(\"div\", { css: css`\n          display: flex;\n          align-items: center;\n        ` },\n  ___EmotionJSX(RowCountLabel, { rowcount: rowcount, loading: isLoading }),\n  ___EmotionJSX(CopyToClipboardButton, { data: formattedData, columns: columnNames })\n  )\n  );\n};__signature__(TableControls, \"useMemo{formattedData}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableControlsWrapper, \"TableControlsWrapper\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTablesPane/components/DataTableControls.tsx\");reactHotLoader.register(TableControls, \"TableControls\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTablesPane/components/DataTableControls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useMemo","css","GenericDataType","styled","CopyToClipboardButton","FilterInput","applyFormattingToTabularData","getTimeColumns","RowCountLabel","jsx","___EmotionJSX","TableControlsWrapper","div","theme","gridUnit","TableControls","data","datasourceId","onInputChange","columnNames","columnTypes","rowcount","isLoading","originalTimeColumns","formattedTimeColumns","_zip","filter","name","type","Temporal","includes","map","colname","formattedData","onChangeHandler","shouldFocus","loading","columns","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/explore/components/DataTablesPane/components/DataTableControls.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { zip } from 'lodash';\nimport { css, GenericDataType, styled } from '@superset-ui/core';\nimport {\n  CopyToClipboardButton,\n  FilterInput,\n} from 'src/explore/components/DataTableControl';\nimport { applyFormattingToTabularData } from 'src/utils/common';\nimport { getTimeColumns } from 'src/explore/components/DataTableControl/utils';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport { TableControlsProps } from '../types';\n\nexport const TableControlsWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: ${theme.gridUnit * 2}px;\n\n    span {\n      flex-shrink: 0;\n    }\n  `}\n`;\n\nexport const TableControls = ({\n  data,\n  datasourceId,\n  onInputChange,\n  columnNames,\n  columnTypes,\n  rowcount,\n  isLoading,\n}: TableControlsProps) => {\n  const originalTimeColumns = getTimeColumns(datasourceId);\n  const formattedTimeColumns = zip<string, GenericDataType>(\n    columnNames,\n    columnTypes,\n  )\n    .filter(\n      ([name, type]) =>\n        type === GenericDataType.Temporal &&\n        name &&\n        !originalTimeColumns.includes(name),\n    )\n    .map(([colname]) => colname);\n  const formattedData = useMemo(\n    () => applyFormattingToTabularData(data, formattedTimeColumns),\n    [data, formattedTimeColumns],\n  );\n  return (\n    <TableControlsWrapper>\n      <FilterInput onChangeHandler={onInputChange} shouldFocus />\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <RowCountLabel rowcount={rowcount} loading={isLoading} />\n        <CopyToClipboardButton data={formattedData} columns={columnNames} />\n      </div>\n    </TableControlsWrapper>\n  );\n};\n"],"mappings":"sUAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;;AAEtC,SAASC,GAAG,EAAEC,eAAe,EAAEC,MAAM,QAAQ,mBAAmB;AAChE,SACEC,qBAAqB,EACrBC,WAAW,QACN,yCAAyC;AAChD,SAASC,4BAA4B,QAAQ,kBAAkB;AAC/D,SAASC,cAAc,QAAQ,+CAA+C;AAC9E,OAAOC,aAAa,MAAM,sCAAsC,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAGjE,OAAO,MAAMC,oBAAoB,GAAGR,MAAM,CAACS,GAAG;IAC1C,CAAC,EAAEC,KAAK,EAAE,KAAK;;;;qBAIEA,KAAK,CAACC,QAAQ,GAAG,CAAC;;;;;GAKpC;CACF;AAED,OAAO,MAAMC,aAAa,GAAGA,CAAC,EAC5BC,IAAI,EACJC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,SAAS,EACU,KAAI;EACvB,MAAMC,mBAAmB,GAAGhB,cAAc,CAACU,YAAY,CAAC;EACxD,MAAMO,oBAAoB,GAAGC,IAAA,CAC3BN,WAAW,EACXC,WAAW,CACZ;EACEM,MAAM,CACL,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,KACXA,IAAI,KAAK1B,eAAe,CAAC2B,QAAQ;EACjCF,IAAI;EACJ,CAACJ,mBAAmB,CAACO,QAAQ,CAACH,IAAI,CAAC,CACtC;EACAI,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,KAAKA,OAAO,CAAC;EAC9B,MAAMC,aAAa,GAAGjC,OAAO,CAC3B,MAAMM,4BAA4B,CAACU,IAAI,EAAEQ,oBAAoB,CAAC,EAC9D,CAACR,IAAI,EAAEQ,oBAAoB,CAAC,CAC7B;EACD,OACEd,aAAA,CAACC,oBAAoB;EACnBD,aAAA,CAACL,WAAW,IAAC6B,eAAe,EAAEhB,aAAc,EAACiB,WAAW,SACxD;EAAAzB,aAAA,UACET,GAAG,EAAEA,GAAG;;;SAGN;EAEFS,aAAA,CAACF,aAAa,IAACa,QAAQ,EAAEA,QAAS,EAACe,OAAO,EAAEd,SAAU,GACtD;EAAAZ,aAAA,CAACN,qBAAqB,IAACY,IAAI,EAAEiB,aAAc,EAACI,OAAO,EAAElB,WAAY;EAC9D;EACe,CAAC;AAE3B,CAAC,CAACmB,aAAA,CAvCWvB,aAAa,+CAAAwB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAbbhC,oBAAoB,2JAAA4B,cAAA,CAAAI,QAAA,CAapB5B,aAAa,4KAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}