{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\nimport { COMMON_ERR_MESSAGES, t } from '@superset-ui/core';\nimport { VALIDATION_DEBOUNCE_MS } from 'src/SqlLab/constants';\nimport { useQueryValidationsQuery } from 'src/hooks/apiResources';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nexport function useAnnotations(params) {\n  const { sql, dbId, schema, templateParams } = params;\n  const debouncedSql = useDebounceValue(sql, VALIDATION_DEBOUNCE_MS);\n  const hasValidator = useSelector(({ sqlLab, common }) => {var _common$conf, _common$conf$SQL_VALI, _sqlLab$databases, _sqlLab$databases2;return (\n      // Check whether or not we can validate the current query based on whether\n      // or not the backend has a validator configured for it.\n      Boolean(common == null ? void 0 : (_common$conf = common.conf) == null ? void 0 : (_common$conf$SQL_VALI = _common$conf.SQL_VALIDATORS_BY_ENGINE) == null ? void 0 : _common$conf$SQL_VALI[sqlLab == null ? void 0 : (_sqlLab$databases = sqlLab.databases) == null ? void 0 : (_sqlLab$databases2 = _sqlLab$databases[dbId || '']) == null ? void 0 : _sqlLab$databases2.backend]));});\n  return useQueryValidationsQuery({\n    dbId,\n    schema,\n    sql: debouncedSql,\n    templateParams\n  }, {\n    skip: !(hasValidator && dbId && sql),\n    selectFromResult: ({ isLoading, isError, error, data }) => {\n      const errorObj = error != null ? error : {};\n      let message = (errorObj == null ? void 0 : errorObj.error) || (errorObj == null ? void 0 : errorObj.statusText) || t('Unknown error');\n      if (message.includes('CSRF token')) {\n        message = t(COMMON_ERR_MESSAGES.SESSION_TIMED_OUT);\n      }\n      return {\n        data: !isLoading && data != null && data.length ?\n        data.map((err) => ({\n          type: 'error',\n          row: (err.line_number || 0) - 1,\n          column: (err.start_column || 0) - 1,\n          text: err.message\n        })) :\n        isError ?\n        [\n        {\n          type: 'error',\n          row: 0,\n          column: 0,\n          text: `The server failed to validate your query.\\n${message}`\n        }] :\n\n        []\n      };\n    }\n  });\n}__signature__(useAnnotations, \"useDebounceValue{debouncedSql}\\nuseSelector{hasValidator}\\nuseQueryValidationsQuery{}\", () => [useDebounceValue, useSelector, useQueryValidationsQuery]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useAnnotations, \"useAnnotations\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/AceEditorWrapper/useAnnotations.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useSelector","COMMON_ERR_MESSAGES","t","VALIDATION_DEBOUNCE_MS","useQueryValidationsQuery","useDebounceValue","useAnnotations","params","sql","dbId","schema","templateParams","debouncedSql","hasValidator","sqlLab","common","_common$conf","_common$conf$SQL_VALI","_sqlLab$databases","_sqlLab$databases2","Boolean","conf","SQL_VALIDATORS_BY_ENGINE","databases","backend","skip","selectFromResult","isLoading","isError","error","data","errorObj","message","statusText","includes","SESSION_TIMED_OUT","length","map","err","type","row","line_number","column","start_column","text","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/SqlLab/components/AceEditorWrapper/useAnnotations.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector } from 'react-redux';\n\nimport { COMMON_ERR_MESSAGES, ClientErrorObject, t } from '@superset-ui/core';\nimport { SqlLabRootState } from 'src/SqlLab/types';\nimport { VALIDATION_DEBOUNCE_MS } from 'src/SqlLab/constants';\nimport {\n  FetchValidationQueryParams,\n  useQueryValidationsQuery,\n} from 'src/hooks/apiResources';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\n\nexport function useAnnotations(params: FetchValidationQueryParams) {\n  const { sql, dbId, schema, templateParams } = params;\n  const debouncedSql = useDebounceValue(sql, VALIDATION_DEBOUNCE_MS);\n  const hasValidator = useSelector<SqlLabRootState>(({ sqlLab, common }) =>\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    Boolean(\n      common?.conf?.SQL_VALIDATORS_BY_ENGINE?.[\n        sqlLab?.databases?.[dbId || '']?.backend\n      ],\n    ),\n  );\n  return useQueryValidationsQuery(\n    {\n      dbId,\n      schema,\n      sql: debouncedSql,\n      templateParams,\n    },\n    {\n      skip: !(hasValidator && dbId && sql),\n      selectFromResult: ({ isLoading, isError, error, data }) => {\n        const errorObj = (error ?? {}) as ClientErrorObject;\n        let message =\n          errorObj?.error || errorObj?.statusText || t('Unknown error');\n        if (message.includes('CSRF token')) {\n          message = t(COMMON_ERR_MESSAGES.SESSION_TIMED_OUT);\n        }\n        return {\n          data:\n            !isLoading && data?.length\n              ? data.map(err => ({\n                  type: 'error',\n                  row: (err.line_number || 0) - 1,\n                  column: (err.start_column || 0) - 1,\n                  text: err.message,\n                }))\n              : isError\n                ? [\n                    {\n                      type: 'error',\n                      row: 0,\n                      column: 0,\n                      text: `The server failed to validate your query.\\n${message}`,\n                    },\n                  ]\n                : [],\n        };\n      },\n    },\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,mBAAmB,EAAqBC,CAAC,QAAQ,mBAAmB;AAE7E,SAASC,sBAAsB,QAAQ,sBAAsB;AAC7D,SAEEC,wBAAwB,QACnB,wBAAwB;AAC/B,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,OAAM,SAAUC,cAAcA,CAACC,MAAkC;EAC/D,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,cAAc,EAAE,GAAGJ,MAAM;EACpD,MAAMK,YAAY,GAAGP,gBAAgB,CAACG,GAAG,EAAEL,sBAAsB,CAAC;EAClE,MAAMU,YAAY,GAAGb,WAAW,CAAkB,CAAC,EAAEc,MAAM,EAAEC,MAAM,EAAE,UAAAC,YAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,kBAAA;MACnE;MACA;MACAC,OAAO,CACLL,MAAM,qBAAAC,YAAA,GAAND,MAAM,CAAEM,IAAI,sBAAAJ,qBAAA,GAAZD,YAAA,CAAcM,wBAAwB,qBAAtCL,qBAAA,CACEH,MAAM,qBAAAI,iBAAA,GAANJ,MAAM,CAAES,SAAS,sBAAAJ,kBAAA,GAAjBD,iBAAA,CAAoBT,IAAI,IAAI,EAAE,CAAC,qBAA/BU,kBAAA,CAAiCK,OAAO,CACzC,CACF,IACF;EACD,OAAOpB,wBAAwB,CAC7B;IACEK,IAAI;IACJC,MAAM;IACNF,GAAG,EAAEI,YAAY;IACjBD;GACD,EACD;IACEc,IAAI,EAAE,EAAEZ,YAAY,IAAIJ,IAAI,IAAID,GAAG,CAAC;IACpCkB,gBAAgB,EAAEA,CAAC,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAE,KAAI;MACxD,MAAMC,QAAQ,GAAIF,KAAK,WAALA,KAAK,GAAI,EAAwB;MACnD,IAAIG,OAAO,GACT,CAAAD,QAAQ,oBAARA,QAAQ,CAAEF,KAAK,MAAIE,QAAQ,oBAARA,QAAQ,CAAEE,UAAU,KAAI/B,CAAC,CAAC,eAAe,CAAC;MAC/D,IAAI8B,OAAO,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;QAClCF,OAAO,GAAG9B,CAAC,CAACD,mBAAmB,CAACkC,iBAAiB,CAAC;;MAEpD,OAAO;QACLL,IAAI,EACF,CAACH,SAAS,IAAIG,IAAI,YAAJA,IAAI,CAAEM,MAAM;QACtBN,IAAI,CAACO,GAAG,CAAC,CAAAC,GAAG,MAAK;UACfC,IAAI,EAAE,OAAO;UACbC,GAAG,EAAE,CAACF,GAAG,CAACG,WAAW,IAAI,CAAC,IAAI,CAAC;UAC/BC,MAAM,EAAE,CAACJ,GAAG,CAACK,YAAY,IAAI,CAAC,IAAI,CAAC;UACnCC,IAAI,EAAEN,GAAG,CAACN;SACX,CAAC,CAAC;QACHJ,OAAO;QACL;QACE;UACEW,IAAI,EAAE,OAAO;UACbC,GAAG,EAAE,CAAC;UACNE,MAAM,EAAE,CAAC;UACTE,IAAI,EAAE,8CAA8CZ,OAAO;SAC5D,CACF;;QACD;OACT;IACH;GACD,CACF;AACH,CAACa,aAAA,CAnDevC,cAAc,kGAEPD,gBAAgB,EAChBL,WAAW,EASzBI,wBAAwB,sBAAA0C,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAZjB5C,cAAc,+JAAA6C,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}