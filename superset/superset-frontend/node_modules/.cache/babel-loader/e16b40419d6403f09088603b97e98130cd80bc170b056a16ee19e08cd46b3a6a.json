{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Echart from '../components/Echart';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function EchartsWaterfall(props) {\n  const { height, width, echartOptions, refs, onLegendStateChanged } = props;\n  const eventHandlers = {\n    legendselectchanged: (payload) => {\n      onLegendStateChanged == null ? void 0 : onLegendStateChanged(payload.selected);\n    },\n    legendselectall: (payload) => {\n      onLegendStateChanged == null ? void 0 : onLegendStateChanged(payload.selected);\n    },\n    legendinverseselect: (payload) => {\n      onLegendStateChanged == null ? void 0 : onLegendStateChanged(payload.selected);\n    }\n  };\n  return ___EmotionJSX(Echart, { refs: refs, height: height, width: width, echartOptions: echartOptions, eventHandlers: eventHandlers });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EchartsWaterfall, \"EchartsWaterfall\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Waterfall/EchartsWaterfall.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","Echart","jsx","___EmotionJSX","EchartsWaterfall","props","height","width","echartOptions","refs","onLegendStateChanged","eventHandlers","legendselectchanged","payload","selected","legendselectall","legendinverseselect","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/plugins/plugin-chart-echarts/src/Waterfall/EchartsWaterfall.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Echart from '../components/Echart';\nimport { WaterfallChartTransformedProps } from './types';\nimport { EventHandlers } from '../types';\n\nexport default function EchartsWaterfall(\n  props: WaterfallChartTransformedProps,\n) {\n  const { height, width, echartOptions, refs, onLegendStateChanged } = props;\n\n  const eventHandlers: EventHandlers = {\n    legendselectchanged: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n    legendselectall: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n    legendinverseselect: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n    />\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAI1C,eAAc,SAAUC,gBAAgBA,CACtCC,KAAqC;EAErC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,aAAa,EAAEC,IAAI,EAAEC,oBAAoB,EAAE,GAAGL,KAAK;EAE1E,MAAMM,aAAa,GAAkB;IACnCC,mBAAmB,EAAEA,CAAAC,OAAO,KAAG;MAC7BH,oBAAoB,oBAApBA,oBAAoB,CAAGG,OAAO,CAACC,QAAQ,CAAC;IAC1C,CAAC;IACDC,eAAe,EAAEA,CAAAF,OAAO,KAAG;MACzBH,oBAAoB,oBAApBA,oBAAoB,CAAGG,OAAO,CAACC,QAAQ,CAAC;IAC1C,CAAC;IACDE,mBAAmB,EAAEA,CAAAH,OAAO,KAAG;MAC7BH,oBAAoB,oBAApBA,oBAAoB,CAAGG,OAAO,CAACC,QAAQ,CAAC;IAC1C;GACD;EAED,OACEX,aAAA,CAACF,MAAM,IACLQ,IAAI,EAAEA,IAAK,EACXH,MAAM,EAAEA,MAAO,EACfC,KAAK,EAAEA,KAAM,EACbC,aAAa,EAAEA,aAAc,EAC7BG,aAAa,EAAEA,aAAc,GAC7B;AAEN,CAAC,mBAAAM,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1BuBjB,gBAAgB,wKAAAkB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}