{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, picking, log } from '@deck.gl/core';\nimport { isWebGL2 } from '@luma.gl/core';\nimport { pbr } from '@luma.gl/shadertools';\nimport { ScenegraphNode, createGLTFObjects } from '@luma.gl/experimental';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { waitForGLTFAssets } from './gltf-utils';\nimport { MATRIX_ATTRIBUTES, shouldComposeModelMatrix } from '../utils/matrix';\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\nconst DEFAULT_COLOR = [255, 255, 255, 255];\nconst defaultProps = {\n  scenegraph: {\n    type: 'object',\n    value: null,\n    async: true\n  },\n  getScene: (gltf) => {\n    if (gltf && gltf.scenes) {\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n\n    return gltf;\n  },\n  getAnimator: (scenegraph) => scenegraph && scenegraph.animator,\n  _animations: null,\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  getPosition: {\n    type: 'accessor',\n    value: (x) => x.position\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  _lighting: 'flat',\n  _imageBasedLightingEnvironment: null,\n  getOrientation: {\n    type: 'accessor',\n    value: [0, 0, 0]\n  },\n  getScale: {\n    type: 'accessor',\n    value: [1, 1, 1]\n  },\n  getTranslation: {\n    type: 'accessor',\n    value: [0, 0, 0]\n  },\n  getTransformMatrix: {\n    type: 'accessor',\n    value: []\n  },\n  loaders: [GLTFLoader]\n};\nexport default class ScenegraphLayer extends Layer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return super.getShaders({\n      vs,\n      fs,\n      modules\n    });\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: 5121,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps\n    } = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context) {\n    super.finalizeState(context);\n\n    this._deleteScenegraph();\n  }\n\n  _updateScenegraph() {\n    const props = this.props;\n    const {\n      gl\n    } = this.context;\n    let scenegraphData = null;\n\n    if (props.scenegraph instanceof ScenegraphNode) {\n      scenegraphData = {\n        scenes: [props.scenegraph]\n      };\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {\n        gltf,\n        ...gltfObjects\n      };\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw());\n    } else if (props.scenegraph) {\n      log.deprecated('ScenegraphLayer.props.scenegraph', 'Use GLTFLoader instead of GLTFScenegraphLoader')();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {\n      layer: this,\n      gl\n    };\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n\n      this._applyAllAttributes(scenegraph);\n\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n\n      this.setState({\n        scenegraph,\n        animator\n      });\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  _applyAllAttributes(scenegraph) {\n    if (this.state.attributesAvailable) {\n      const allAttributes = this.getAttributeManager().getAttributes();\n      scenegraph.traverse((model) => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  _applyAnimationsProp(scenegraph, animator, animationsProp) {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n    Object.keys(animationsProp).sort().forEach((key) => {\n      const value = animationsProp[key];\n\n      if (key === '*') {\n        animations.forEach((animation) => {\n          Object.assign(animation, value);\n        });\n      } else if (Number.isFinite(Number(key))) {\n        const number = Number(key);\n\n        if (number >= 0 && number < animations.length) {\n          Object.assign(animations[number], value);\n        } else {\n          log.warn(\"animation \".concat(key, \" not found\"))();\n        }\n      } else {\n        const findResult = animations.find(({\n          name\n        }) => name === key);\n\n        if (findResult) {\n          Object.assign(findResult, value);\n        } else {\n          log.warn(\"animation \".concat(key, \" not found\"))();\n        }\n      }\n    });\n  }\n\n  _deleteScenegraph() {\n    const {\n      scenegraph\n    } = this.state;\n\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  _getModelOptions() {\n    const {\n      _imageBasedLightingEnvironment\n    } = this.props;\n    let env = null;\n\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({\n          gl: this.context.gl,\n          layer: this\n        });\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({\n      attributesAvailable: true\n    });\n    if (!this.state.scenegraph) return;\n    this.state.scenegraph.traverse((model) => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({\n    moduleParameters = null,\n    parameters = {},\n    context\n  }) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {\n      viewport\n    } = this.context;\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      opacity,\n      coordinateSystem\n    } = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {\n      worldMatrix\n    }) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n\n_defineProperty(ScenegraphLayer, \"defaultProps\", defaultProps);\n\n_defineProperty(ScenegraphLayer, \"layerName\", 'ScenegraphLayer');;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_COLOR, \"DEFAULT_COLOR\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/mesh-layers/dist/esm/scenegraph-layer/scenegraph-layer.js\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/mesh-layers/dist/esm/scenegraph-layer/scenegraph-layer.js\");reactHotLoader.register(ScenegraphLayer, \"ScenegraphLayer\", \"/home/pawank/Documents/dcim/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/node_modules/@deck.gl/mesh-layers/dist/esm/scenegraph-layer/scenegraph-layer.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Layer","project32","picking","log","isWebGL2","pbr","ScenegraphNode","createGLTFObjects","GLTFLoader","waitForGLTFAssets","MATRIX_ATTRIBUTES","shouldComposeModelMatrix","vs","fs","DEFAULT_COLOR","defaultProps","scenegraph","type","value","async","getScene","gltf","scenes","scene","getAnimator","animator","_animations","sizeScale","min","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","getPosition","x","position","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","loaders","ScenegraphLayer","constructor","args","_defineProperty","getShaders","modules","props","push","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","fp64","use64bitPositions","accessor","transition","instanceColors","colorFormat","length","normalized","defaultValue","instanceModelMatrix","updateState","params","oldProps","_updateScenegraph","_applyAnimationsProp","state","finalizeState","context","_deleteScenegraph","gl","scenegraphData","gltfObjects","_getModelOptions","then","setNeedsRedraw","deprecated","options","layer","_applyAllAttributes","setState","warn","attributesAvailable","allAttributes","getAttributes","traverse","model","_setModelAttributes","animationsProp","animations","getAnimations","Object","keys","sort","forEach","key","animation","assign","isFinite","number","concat","findResult","find","name","delete","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","isInstanced","transpileToGLSL100","useTangents","updateAttributes","changedAttributes","draw","moduleParameters","parameters","animate","timeline","getTime","viewport","opacity","coordinateSystem","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","uniforms","composeModelMatrix","sceneModelMatrix","u_Camera","getUniforms","project_uCameraPosition","__reactstandin__regenerateByEval","code","eval","reactHotLoader","register","leaveModule","reactHotLoaderGlobal","undefined","module"],"sources":["../../../src/scenegraph-layer/scenegraph-layer.ts"],"sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport {isWebGL2} from '@luma.gl/core';\nimport {pbr} from '@luma.gl/shadertools';\nimport {\n  ScenegraphNode,\n  GroupNode,\n  GLTFAnimator,\n  GLTFEnvironment,\n  createGLTFObjects\n} from '@luma.gl/experimental';\nimport GL from '@luma.gl/constants';\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nimport type {\n  UpdateParameters,\n  LayerContext,\n  LayerProps,\n  LayerDataSource,\n  Position,\n  Color,\n  Accessor,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [255, 255, 255, 255];\n\nexport type ScenegraphLayerProps<DataT = any> = _ScenegraphLayerProps<DataT> & LayerProps;\n\ntype _ScenegraphLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  // TODO - define in luma.gl\n  /**\n   * A url for a glTF model or scenegraph loaded via a [scenegraph loader](https://loaders.gl/docs/specifications/category-scenegraph)\n   */\n  scenegraph: any;\n  /**\n   * Create a luma.gl GroupNode from the resolved scenegraph prop\n   */\n  getScene?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GroupNode;\n  /**\n   * Create a luma.gl GLTFAnimator from the resolved scenegraph prop\n   */\n  getAnimator?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GLTFAnimator;\n  /**\n   * (Experimental) animation configurations. Requires `_animate` on deck object.\n   */\n  _animations?: {\n    [name: number | string | '*']: {\n      /** If the animation is playing */\n      playing?: boolean;\n      /** Start time of the animation, default `0` */\n      startTime?: number;\n      /** Speed multiplier of the animation, default `1` */\n      speed?: number;\n    };\n  } | null;\n  /**\n   * (Experimental) lighting mode\n   * @default 'flat'\n   */\n  _lighting?: 'flat' | 'pbr';\n  /**\n   * (Experimental) lighting environment. Requires `_lighting` to be `'pbr'`.\n   */\n  _imageBasedLightingEnvironment?:\n    | null\n    | GLTFEnvironment\n    | ((context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}) => GLTFEnvironment);\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The minimum size in pixels for one unit of the scene.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels for one unit of the scene.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n};\n\nconst defaultProps: DefaultProps<ScenegraphLayerProps> = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  sizeMinPixels: {type: 'number', min: 0, value: 0},\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  loaders: [GLTFLoader]\n};\n\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ScenegraphLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'ScenegraphLayer';\n\n  state!: {\n    scenegraph: GroupNode;\n    animator: GLTFAnimator;\n    attributesAvailable?: boolean;\n  };\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return super.getShaders({vs, fs, modules});\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined for primitive layers\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this._deleteScenegraph();\n  }\n\n  private _updateScenegraph(): void {\n    const props = this.props;\n    const {gl} = this.context;\n    let scenegraphData: any = null;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {gltf, ...gltfObjects};\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw()); // eslint-disable-line @typescript-eslint/no-floating-promises\n    } else if (props.scenegraph) {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      )();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  private _applyAllAttributes(scenegraph: GroupNode): void {\n    if (this.state.attributesAvailable) {\n      // attributeManager is always defined for primitive layers\n      const allAttributes = this.getAttributeManager()!.getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  private _applyAnimationsProp(\n    scenegraph: GroupNode,\n    animator: GLTFAnimator,\n    animationsProp: any\n  ): void {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  private _deleteScenegraph(): void {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  private _getModelOptions(): any {\n    const {_imageBasedLightingEnvironment} = this.props;\n\n    let env: GLTFEnvironment | null = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          // eslint-disable-next-line camelcase\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n"],"mappings":";AAoBA,SAAQA,KAAR,EAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,GAAnC,QAA6C,eAA7C;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAAQC,GAAR,QAAkB,sBAAlB;AACA,SACEC,cADF,EAKEC,iBALF,QAMO,uBANP;AAQA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,iBAAR,QAAgC,cAAhC;AAEA,SAAQC,iBAAR,EAA2BC,wBAA3B,QAA0D,iBAA1D;AAEA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,EAAP,MAAe,kCAAf;AAaA,MAAMC,aAA+C,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAxD;AA8FA,MAAMC,YAAgD,GAAG;EACvDC,UAAU,EAAE;IAACC,IAAI,EAAE,QAAP;IAAiBC,KAAK,EAAE,IAAxB;IAA8BC,KAAK,EAAE;EAArC,CAD2C;EAEvDC,QAAQ,EAAEA,CAAAC,IAAI,KAAI;IAChB,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAjB,EAAyB;MAEvB,OAAO,OAAOD,IAAI,CAACE,KAAZ,KAAsB,QAAtB,GAAiCF,IAAI,CAACE,KAAtC,GAA8CF,IAAI,CAACC,MAAL,CAAYD,IAAI,CAACE,KAAL,IAAc,CAA1B,CAArD;IACD;;IACD,OAAOF,IAAP;EACD,CARsD;EASvDG,WAAW,EAAEA,CAAAR,UAAU,KAAIA,UAAU,IAAIA,UAAU,CAACS,QATG;EAUvDC,WAAW,EAAE,IAV0C;EAYvDC,SAAS,EAAE;IAACV,IAAI,EAAE,QAAP;IAAiBC,KAAK,EAAE,CAAxB;IAA2BU,GAAG,EAAE;EAAhC,CAZ4C;EAavDC,aAAa,EAAE;IAACZ,IAAI,EAAE,QAAP;IAAiBW,GAAG,EAAE,CAAtB;IAAyBV,KAAK,EAAE;EAAhC,CAbwC;EAcvDY,aAAa,EAAE;IAACb,IAAI,EAAE,QAAP;IAAiBW,GAAG,EAAE,CAAtB;IAAyBV,KAAK,EAAEa,MAAM,CAACC;EAAvC,CAdwC;EAgBvDC,WAAW,EAAE;IAAChB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAEA,CAAAgB,CAAC,KAAIA,CAAC,CAACC;EAAjC,CAhB0C;EAiBvDC,QAAQ,EAAE;IAACnB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAEJ;EAA1B,CAjB6C;EAoBvDuB,SAAS,EAAE,MApB4C;EAsBvDC,8BAA8B,EAAE,IAtBuB;EA2BvDC,cAAc,EAAE;IAACtB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;EAA1B,CA3BuC;EA4BvDsB,QAAQ,EAAE;IAACvB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;EAA1B,CA5B6C;EA6BvDuB,cAAc,EAAE;IAACxB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;EAA1B,CA7BuC;EA+BvDwB,kBAAkB,EAAE;IAACzB,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAE;EAA1B,CA/BmC;EAiCvDyB,OAAO,EAAE,CAACnC,UAAD;AAjC8C,CAAzD;AAqCA,eAAe,MAAMoC,eAAN,SAAwE5C,KAAxE,CAEb;EAAA6C,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;;IAAAC,eAAA;EAAA;;EAUAC,UAAUA,CAAA,EAAG;IACX,MAAMC,OAAO,GAAG,CAAChD,SAAD,EAAYC,OAAZ,CAAhB;;IAEA,IAAI,KAAKgD,KAAL,CAAWb,SAAX,KAAyB,KAA7B,EAAoC;MAClCY,OAAO,CAACE,IAAR,CAAa9C,GAAb;IACD;;IAED,OAAO,MAAM2C,UAAN,CAAiB;MAACpC,EAAD;MAAKC,EAAL;MAASoC;IAAT,CAAjB,CAAP;EACD;;EAEDG,eAAeA,CAAA,EAAG;IAChB,MAAMC,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;IAEAD,gBAAgB,CAAEE,YAAlB,CAA+B;MAC7BC,iBAAiB,EAAE;QACjBC,IAAI,EAAE,CADW;QAEjBxC,IAAI,MAFa;QAGjByC,IAAI,EAAE,KAAKC,iBAAL,EAHW;QAIjBC,QAAQ,EAAE,aAJO;QAKjBC,UAAU,EAAE;MALK,CADU;MAQ7BC,cAAc,EAAE;QACd7C,IAAI,MADU;QAEdwC,IAAI,EAAE,KAAKP,KAAL,CAAWa,WAAX,CAAuBC,MAFf;QAGdJ,QAAQ,EAAE,UAHI;QAIdK,UAAU,EAAE,IAJE;QAKdC,YAAY,EAAEpD,aALA;QAMd+C,UAAU,EAAE;MANE,CARa;MAgB7BM,mBAAmB,EAAEzD;IAhBQ,CAA/B;EAkBD;;EAED0D,WAAWA,CAACC,MAAD,EAAiC;IAC1C,MAAMD,WAAN,CAAkBC,MAAlB;IACA,MAAM;MAACnB,KAAD;MAAQoB;IAAR,IAAoBD,MAA1B;;IAEA,IAAInB,KAAK,CAAClC,UAAN,KAAqBsD,QAAQ,CAACtD,UAAlC,EAA8C;MAC5C,KAAKuD,iBAAL;IACD,CAFD,MAEO,IAAIrB,KAAK,CAACxB,WAAN,KAAsB4C,QAAQ,CAAC5C,WAAnC,EAAgD;MACrD,KAAK8C,oBAAL,CAA0B,KAAKC,KAAL,CAAWzD,UAArC,EAAiD,KAAKyD,KAAL,CAAWhD,QAA5D,EAAsEyB,KAAK,CAACxB,WAA5E;IACD;EACF;;EAEDgD,aAAaA,CAACC,OAAD,EAAwB;IACnC,MAAMD,aAAN,CAAoBC,OAApB;;IACA,KAAKC,iBAAL;EACD;;EAEOL,iBAAiBA,CAAA,EAAS;IAChC,MAAMrB,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAM;MAAC2B;IAAD,IAAO,KAAKF,OAAlB;IACA,IAAIG,cAAmB,GAAG,IAA1B;;IACA,IAAI5B,KAAK,CAAClC,UAAN,YAA4BV,cAAhC,EAAgD;MAE9CwE,cAAc,GAAG;QAACxD,MAAM,EAAE,CAAC4B,KAAK,CAAClC,UAAP;MAAT,CAAjB;IACD,CAHD,MAGO,IAAIkC,KAAK,CAAClC,UAAN,IAAoB,CAACkC,KAAK,CAAClC,UAAN,CAAiBK,IAA1C,EAAgD;MAErD,MAAMA,IAAI,GAAG6B,KAAK,CAAClC,UAAnB;MACA,MAAM+D,WAAW,GAAGxE,iBAAiB,CAACsE,EAAD,EAAKxD,IAAL,EAAW,KAAK2D,gBAAL,EAAX,CAArC;MACAF,cAAc,GAAG;QAACzD,IAAD;QAAO,GAAG0D;MAAV,CAAjB;MAEAtE,iBAAiB,CAACsE,WAAD,CAAjB,CAA+BE,IAA/B,CAAoC,MAAM,KAAKC,cAAL,EAA1C;IACD,CAPM,MAOA,IAAIhC,KAAK,CAAClC,UAAV,EAAsB;MAE3Bb,GAAG,CAACgF,UAAJ,CACE,kCADF,EAEE,gDAFF;MAIAL,cAAc,GAAG5B,KAAK,CAAClC,UAAvB;IACD;;IAED,MAAMoE,OAAO,GAAG;MAACC,KAAK,EAAE,IAAR;MAAcR;IAAd,CAAhB;IACA,MAAM7D,UAAU,GAAGkC,KAAK,CAAC9B,QAAN,CAAe0D,cAAf,EAA+BM,OAA/B,CAAnB;IACA,MAAM3D,QAAQ,GAAGyB,KAAK,CAAC1B,WAAN,CAAkBsD,cAAlB,EAAkCM,OAAlC,CAAjB;;IAEA,IAAIpE,UAAU,YAAYV,cAA1B,EAA0C;MACxC,KAAKsE,iBAAL;;MACA,KAAKU,mBAAL,CAAyBtE,UAAzB;;MACA,KAAKwD,oBAAL,CAA0BxD,UAA1B,EAAsCS,QAAtC,EAAgDyB,KAAK,CAACxB,WAAtD;;MACA,KAAK6D,QAAL,CAAc;QAACvE,UAAD;QAAaS;MAAb,CAAd;IACD,CALD,MAKO,IAAIT,UAAU,KAAK,IAAnB,EAAyB;MAC9Bb,GAAG,CAACqF,IAAJ,CAAS,qBAAT,EAAgCxE,UAAhC;IACD;EACF;;EAEOsE,mBAAmBA,CAACtE,UAAD,EAA8B;IACvD,IAAI,KAAKyD,KAAL,CAAWgB,mBAAf,EAAoC;MAElC,MAAMC,aAAa,GAAG,KAAKpC,mBAAL,GAA4BqC,aAA5B,EAAtB;MACA3E,UAAU,CAAC4E,QAAX,CAAoB,CAAAC,KAAK,KAAI;QAC3B,KAAKC,mBAAL,CAAyBD,KAAK,CAACA,KAA/B,EAAsCH,aAAtC;MACD,CAFD;IAGD;EACF;;EAEOlB,oBAAoBA,CAC1BxD,UAD0B,EAE1BS,QAF0B,EAG1BsE,cAH0B,EAIpB;IACN,IAAI,CAAC/E,UAAD,IAAe,CAACS,QAAhB,IAA4B,CAACsE,cAAjC,EAAiD;MAC/C;IACD;;IAED,MAAMC,UAAU,GAAGvE,QAAQ,CAACwE,aAAT,EAAnB;IAGAC,MAAM,CAACC,IAAP,CAAYJ,cAAZ,EACGK,IADH,GAEGC,OAFH,CAEW,CAAAC,GAAG,KAAI;MAKd,MAAMpF,KAAK,GAAG6E,cAAc,CAACO,GAAD,CAA5B;;MAEA,IAAIA,GAAG,KAAK,GAAZ,EAAiB;QACfN,UAAU,CAACK,OAAX,CAAmB,CAAAE,SAAS,KAAI;UAC9BL,MAAM,CAACM,MAAP,CAAcD,SAAd,EAAyBrF,KAAzB;QACD,CAFD;MAGD,CAJD,MAIO,IAAIa,MAAM,CAAC0E,QAAP,CAAgB1E,MAAM,CAACuE,GAAD,CAAtB,CAAJ,EAAkC;QACvC,MAAMI,MAAM,GAAG3E,MAAM,CAACuE,GAAD,CAArB;;QACA,IAAII,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAGV,UAAU,CAAChC,MAAvC,EAA+C;UAC7CkC,MAAM,CAACM,MAAP,CAAcR,UAAU,CAACU,MAAD,CAAxB,EAAkCxF,KAAlC;QACD,CAFD,MAEO;UACLf,GAAG,CAACqF,IAAJ,cAAAmB,MAAA,CAAsBL,GAAtB;QACD;MACF,CAPM,MAOA;QACL,MAAMM,UAAU,GAAGZ,UAAU,CAACa,IAAX,CAAgB,CAAC;UAACC;QAAD,CAAD,KAAYA,IAAI,KAAKR,GAArC,CAAnB;;QACA,IAAIM,UAAJ,EAAgB;UACdV,MAAM,CAACM,MAAP,CAAcI,UAAd,EAA0B1F,KAA1B;QACD,CAFD,MAEO;UACLf,GAAG,CAACqF,IAAJ,cAAAmB,MAAA,CAAsBL,GAAtB;QACD;MACF;IACF,CA5BH;EA6BD;;EAEO1B,iBAAiBA,CAAA,EAAS;IAChC,MAAM;MAAC5D;IAAD,IAAe,KAAKyD,KAA1B;;IACA,IAAIzD,UAAU,YAAYV,cAA1B,EAA0C;MACxCU,UAAU,CAAC+F,MAAX;IACD;EACF;;EAEO/B,gBAAgBA,CAAA,EAAQ;IAC9B,MAAM;MAAC1C;IAAD,IAAmC,KAAKY,KAA9C;IAEA,IAAI8D,GAA2B,GAAG,IAAlC;;IACA,IAAI1E,8BAAJ,EAAoC;MAClC,IAAI,OAAOA,8BAAP,KAA0C,UAA9C,EAA0D;QACxD0E,GAAG,GAAG1E,8BAA8B,CAAC;UAACuC,EAAE,EAAE,KAAKF,OAAL,CAAaE,EAAlB;UAAsBQ,KAAK,EAAE;QAA7B,CAAD,CAApC;MACD,CAFD,MAEO;QACL2B,GAAG,GAAG1E,8BAAN;MACD;IACF;;IAED,OAAO;MACLuC,EAAE,EAAE,KAAKF,OAAL,CAAaE,EADZ;MAELoC,eAAe,EAAE,IAFZ;MAGLC,6BAA6B,EAAEF,GAH1B;MAILG,YAAY,EAAE;QACZC,WAAW,EAAE,IADD;QAEZC,kBAAkB,EAAE,CAACjH,QAAQ,CAAC,KAAKuE,OAAL,CAAaE,EAAd,CAFjB;QAGZ,GAAG,KAAK7B,UAAL;MAHS,CAJT;MAULsE,WAAW,EAAE;IAVR,CAAP;EAYD;;EAEDC,gBAAgBA,CAACC,iBAAD,EAAoB;IAClC,KAAKjC,QAAL,CAAc;MAACE,mBAAmB,EAAE;IAAtB,CAAd;IACA,IAAI,CAAC,KAAKhB,KAAL,CAAWzD,UAAhB,EAA4B;IAE5B,KAAKyD,KAAL,CAAWzD,UAAX,CAAsB4E,QAAtB,CAA+B,CAAAC,KAAK,KAAI;MACtC,KAAKC,mBAAL,CAAyBD,KAAK,CAACA,KAA/B,EAAsC2B,iBAAtC;IACD,CAFD;EAGD;;EAEDC,IAAIA,CAAC;IAACC,gBAAgB,GAAG,IAApB;IAA0BC,UAAU,GAAG,EAAvC;IAA2ChD;EAA3C,CAAD,EAAsD;IACxD,IAAI,CAAC,KAAKF,KAAL,CAAWzD,UAAhB,EAA4B;;IAE5B,IAAI,KAAKkC,KAAL,CAAWxB,WAAX,IAA0B,KAAK+C,KAAL,CAAWhD,QAAzC,EAAmD;MACjD,KAAKgD,KAAL,CAAWhD,QAAX,CAAoBmG,OAApB,CAA4BjD,OAAO,CAACkD,QAAR,CAAiBC,OAAjB,EAA5B;MACA,KAAK5C,cAAL;IACD;;IAED,MAAM;MAAC6C;IAAD,IAAa,KAAKpD,OAAxB;IACA,MAAM;MAAChD,SAAD;MAAYE,aAAZ;MAA2BC,aAA3B;MAA0CkG,OAA1C;MAAmDC;IAAnD,IAAuE,KAAK/E,KAAlF;IACA,MAAMgF,YAAY,GAAG,KAAKC,eAAL,EAArB;IACA,KAAK1D,KAAL,CAAWzD,UAAX,CAAsB4E,QAAtB,CAA+B,CAACC,KAAD,EAAQ;MAACuC;IAAD,CAAR,KAA0B;MACvDvC,KAAK,CAACA,KAAN,CAAYwC,gBAAZ,CAA6BH,YAA7B;MACArC,KAAK,CAACyC,oBAAN,CAA2BZ,gBAA3B;MACA7B,KAAK,CAAC4B,IAAN,CAAW;QACTE,UADS;QAETY,QAAQ,EAAE;UACR5G,SADQ;UAERqG,OAFQ;UAGRnG,aAHQ;UAIRC,aAJQ;UAKR0G,kBAAkB,EAAE7H,wBAAwB,CAACoH,QAAD,EAAWE,gBAAX,CALpC;UAMRQ,gBAAgB,EAAEL,WANV;UASRM,QAAQ,EAAE7C,KAAK,CAACA,KAAN,CAAY8C,WAAZ,GAA0BC;QAT5B;MAFD,CAAX;IAcD,CAjBD;EAkBD;EAAAC,iCAAAvC,GAAA,EAAAwC,IAAA;IAAA,KAAAxC,GAAA,IAAAyC,IAAA,CAAAD,IAAA,GA5ND;;gBAFmBlG,e,kBAGG7B,Y;;gBAHH6B,e,eAIA,iB,mLAvIf9B,aAA+C,gMAAAkI,cAAA,CAAAC,QAAA,CA8F/ClI,YAAgD,+LAAAiI,cAAA,CAAAC,QAAA,CAqCjCrG,eAAN,0NAAAsG,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}