{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport CategoricalColorScale from './CategoricalColorScale';\nimport getCategoricalSchemeRegistry from './CategoricalSchemeRegistrySingleton';\nimport stringifyAndTrim from './stringifyAndTrim';\nexport default class CategoricalColorNamespace {\n\n\n\n  constructor(name) {this.name = void 0;this.forcedItems = void 0;this.scales = void 0;\n    this.name = name;\n    this.scales = {};\n    this.forcedItems = {};\n  }\n  getScale(schemeId) {var _ref, _scheme$colors;\n    const id = (_ref = schemeId != null ? schemeId : getCategoricalSchemeRegistry().getDefaultKey()) != null ? _ref : '';\n    const scheme = getCategoricalSchemeRegistry().get(id);\n    return new CategoricalColorScale((_scheme$colors = scheme == null ? void 0 : scheme.colors) != null ? _scheme$colors : [], this.forcedItems);\n  }\n  /**\n   * Enforce specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} forcedColor color\n   */\n  setColor(value, forcedColor) {\n    this.forcedItems[stringifyAndTrim(value)] = forcedColor;\n    return this;\n  }\n  resetColors() {\n    this.forcedItems = {};\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const namespaces = {};\nexport const DEFAULT_NAMESPACE = 'GLOBAL';\nexport function getNamespace(name = DEFAULT_NAMESPACE) {\n  const instance = namespaces[name];\n  if (instance) {\n    return instance;\n  }\n  const newInstance = new CategoricalColorNamespace(name);\n  namespaces[name] = newInstance;\n  return newInstance;\n}\nexport function getColor(value, schemeId, namespace) {\n  return getNamespace(namespace).getScale(schemeId).getColor(value);\n}\n/*\n  Returns a new scale instance within the same namespace.\n  Especially useful when a chart is booting for the first time\n*/\nexport function getScale(scheme, namespace) {\n  return getNamespace(namespace).getScale(scheme);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CategoricalColorNamespace, \"CategoricalColorNamespace\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");reactHotLoader.register(namespaces, \"namespaces\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");reactHotLoader.register(DEFAULT_NAMESPACE, \"DEFAULT_NAMESPACE\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");reactHotLoader.register(getNamespace, \"getNamespace\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");reactHotLoader.register(getColor, \"getColor\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");reactHotLoader.register(getScale, \"getScale\", \"/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["CategoricalColorScale","getCategoricalSchemeRegistry","stringifyAndTrim","CategoricalColorNamespace","constructor","name","forcedItems","scales","getScale","schemeId","_ref","_scheme$colors","id","getDefaultKey","scheme","get","colors","setColor","value","forcedColor","resetColors","__reactstandin__regenerateByEval","key","code","eval","namespaces","DEFAULT_NAMESPACE","getNamespace","instance","newInstance","getColor","namespace","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/packages/superset-ui-core/src/color/CategoricalColorNamespace.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport CategoricalColorScale from './CategoricalColorScale';\nimport { ColorsLookup } from './types';\nimport getCategoricalSchemeRegistry from './CategoricalSchemeRegistrySingleton';\nimport stringifyAndTrim from './stringifyAndTrim';\n\nexport default class CategoricalColorNamespace {\n  name: string;\n\n  forcedItems: ColorsLookup;\n\n  scales: {\n    [key: string]: CategoricalColorScale;\n  };\n\n  constructor(name: string) {\n    this.name = name;\n    this.scales = {};\n    this.forcedItems = {};\n  }\n\n  getScale(schemeId?: string) {\n    const id = schemeId ?? getCategoricalSchemeRegistry().getDefaultKey() ?? '';\n    const scheme = getCategoricalSchemeRegistry().get(id);\n    return new CategoricalColorScale(scheme?.colors ?? [], this.forcedItems);\n  }\n\n  /**\n   * Enforce specific color for given value\n   * This will apply across all color scales\n   * in this namespace.\n   * @param {*} value value\n   * @param {*} forcedColor color\n   */\n  setColor(value: string, forcedColor: string) {\n    this.forcedItems[stringifyAndTrim(value)] = forcedColor;\n\n    return this;\n  }\n\n  resetColors() {\n    this.forcedItems = {};\n  }\n}\n\nconst namespaces: {\n  [key: string]: CategoricalColorNamespace;\n} = {};\n\nexport const DEFAULT_NAMESPACE = 'GLOBAL';\n\nexport function getNamespace(name: string = DEFAULT_NAMESPACE) {\n  const instance = namespaces[name];\n  if (instance) {\n    return instance;\n  }\n  const newInstance = new CategoricalColorNamespace(name);\n  namespaces[name] = newInstance;\n\n  return newInstance;\n}\n\nexport function getColor(\n  value?: string,\n  schemeId?: string,\n  namespace?: string,\n) {\n  return getNamespace(namespace).getScale(schemeId).getColor(value);\n}\n\n/*\n  Returns a new scale instance within the same namespace.\n  Especially useful when a chart is booting for the first time\n*/\nexport function getScale(scheme?: string, namespace?: string) {\n  return getNamespace(namespace).getScale(scheme);\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,OAAOA,qBAAqB,MAAM,yBAAyB;AAE3D,OAAOC,4BAA4B,MAAM,sCAAsC;AAC/E,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,eAAc,MAAOC,yBAAyB;;;;EAS5CC,YAAYC,IAAY,QARxBA,IAAI,eAEJC,WAAW,eAEXC,MAAM;IAKJ,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,MAAM,GAAG,EAAE;IAChB,IAAI,CAACD,WAAW,GAAG,EAAE;EACvB;EAEAE,QAAQA,CAACC,QAAiB,OAAAC,IAAA,EAAAC,cAAA;IACxB,MAAMC,EAAE,IAAAF,IAAA,GAAGD,QAAQ,WAARA,QAAQ,GAAIR,4BAA4B,EAAE,CAACY,aAAa,EAAE,YAAAH,IAAA,GAAI,EAAE;IAC3E,MAAMI,MAAM,GAAGb,4BAA4B,EAAE,CAACc,GAAG,CAACH,EAAE,CAAC;IACrD,OAAO,IAAIZ,qBAAqB,EAAAW,cAAA,GAACG,MAAM,oBAANA,MAAM,CAAEE,MAAM,YAAAL,cAAA,GAAI,EAAE,EAAE,IAAI,CAACL,WAAW,CAAC;EAC1E;EAEA;;;;;;;EAOAW,QAAQA,CAACC,KAAa,EAAEC,WAAmB;IACzC,IAAI,CAACb,WAAW,CAACJ,gBAAgB,CAACgB,KAAK,CAAC,CAAC,GAAGC,WAAW;IAEvD,OAAO,IAAI;EACb;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACd,WAAW,GAAG,EAAE;EACvB,CAAC;EAAAe,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CAGH,MAAME,UAAU,GAEZ,EAAE;AAEN,OAAO,MAAMC,iBAAiB,GAAG,QAAQ;AAEzC,OAAM,SAAUC,YAAYA,CAACtB,IAAA,GAAeqB,iBAAiB;EAC3D,MAAME,QAAQ,GAAGH,UAAU,CAACpB,IAAI,CAAC;EACjC,IAAIuB,QAAQ,EAAE;IACZ,OAAOA,QAAQ;;EAEjB,MAAMC,WAAW,GAAG,IAAI1B,yBAAyB,CAACE,IAAI,CAAC;EACvDoB,UAAU,CAACpB,IAAI,CAAC,GAAGwB,WAAW;EAE9B,OAAOA,WAAW;AACpB;AAEA,OAAM,SAAUC,QAAQA,CACtBZ,KAAc,EACdT,QAAiB,EACjBsB,SAAkB;EAElB,OAAOJ,YAAY,CAACI,SAAS,CAAC,CAACvB,QAAQ,CAACC,QAAQ,CAAC,CAACqB,QAAQ,CAACZ,KAAK,CAAC;AACnE;AAEA;;;;AAIA,OAAM,SAAUV,QAAQA,CAACM,MAAe,EAAEiB,SAAkB;EAC1D,OAAOJ,YAAY,CAACI,SAAS,CAAC,CAACvB,QAAQ,CAACM,MAAM,CAAC;AACjD,CAAC,mBAAAkB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAtEoBjC,yBAAyB,0JAAA6B,cAAA,CAAAI,QAAA,CAuCxCX,UAAU,2IAAAO,cAAA,CAAAI,QAAA,CAIHV,iBAAiB,kJAAAM,cAAA,CAAAI,QAAA,CAEdT,YAAY,6IAAAK,cAAA,CAAAI,QAAA,CAWZN,QAAQ,yIAAAE,cAAA,CAAAI,QAAA,CAYR5B,QAAQ,iKAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}