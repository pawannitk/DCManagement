{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport default function ConfirmStatusChange({ title, description, onConfirm, children }) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState([]);\n  const showConfirm = (...callbackArgs) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach((arg) => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n  return ___EmotionJSX(React.Fragment, null,\n  children == null ? void 0 : children(showConfirm),\n  ___EmotionJSX(DeleteModal, { description: description, onConfirm: confirm, onHide: hide, open: open, title: title })\n  );\n}__signature__(ConfirmStatusChange, \"useState{[open, setOpen](false)}\\nuseState{[currentCallbackArgs, setCurrentCallbackArgs]([])}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ConfirmStatusChange, \"ConfirmStatusChange\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ConfirmStatusChange/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useState","DeleteModal","jsx","___EmotionJSX","ConfirmStatusChange","title","description","onConfirm","children","open","setOpen","currentCallbackArgs","setCurrentCallbackArgs","showConfirm","callbackArgs","forEach","arg","persist","preventDefault","stopPropagation","hide","confirm","Fragment","onHide","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/ConfirmStatusChange/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport DeleteModal from 'src/components/DeleteModal';\n\nexport type Callback = (...args: any[]) => void;\n\nexport interface ConfirmStatusChangeProps {\n  title: React.ReactNode;\n  description: React.ReactNode;\n  onConfirm: Callback;\n  children: (showConfirm: Callback) => React.ReactNode;\n}\n\nexport default function ConfirmStatusChange({\n  title,\n  description,\n  onConfirm,\n  children,\n}: ConfirmStatusChangeProps) {\n  const [open, setOpen] = useState(false);\n  const [currentCallbackArgs, setCurrentCallbackArgs] = useState<any[]>([]);\n\n  const showConfirm = (...callbackArgs: any[]) => {\n    // check if any args are DOM events, if so, call persist\n    callbackArgs.forEach(arg => {\n      if (!arg) {\n        return;\n      }\n      if (typeof arg.persist === 'function') {\n        arg.persist();\n      }\n      if (typeof arg.preventDefault === 'function') {\n        arg.preventDefault();\n      }\n      if (typeof arg.stopPropagation === 'function') {\n        arg.stopPropagation();\n      }\n    });\n    setOpen(true);\n    setCurrentCallbackArgs(callbackArgs);\n  };\n\n  const hide = () => {\n    setOpen(false);\n    setCurrentCallbackArgs([]);\n  };\n\n  const confirm = () => {\n    onConfirm(...currentCallbackArgs);\n    hide();\n  };\n\n  return (\n    <>\n      {children?.(showConfirm)}\n      <DeleteModal\n        description={description}\n        onConfirm={confirm}\n        onHide={hide}\n        open={open}\n        title={title}\n      />\n    </>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,4BAA4B,CAAC,SAAAC,GAAA,IAAAC,aAAA;AAWrD,eAAc,SAAUC,mBAAmBA,CAAC,EAC1CC,KAAK,EACLC,WAAW,EACXC,SAAS,EACTC,QAAQ,EACiB;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAQ,EAAE,CAAC;EAEzE,MAAMa,WAAW,GAAGA,CAAC,GAAGC,YAAmB,KAAI;IAC7C;IACAA,YAAY,CAACC,OAAO,CAAC,CAAAC,GAAG,KAAG;MACzB,IAAI,CAACA,GAAG,EAAE;QACR;;MAEF,IAAI,OAAOA,GAAG,CAACC,OAAO,KAAK,UAAU,EAAE;QACrCD,GAAG,CAACC,OAAO,EAAE;;MAEf,IAAI,OAAOD,GAAG,CAACE,cAAc,KAAK,UAAU,EAAE;QAC5CF,GAAG,CAACE,cAAc,EAAE;;MAEtB,IAAI,OAAOF,GAAG,CAACG,eAAe,KAAK,UAAU,EAAE;QAC7CH,GAAG,CAACG,eAAe,EAAE;;IAEzB,CAAC,CAAC;IACFT,OAAO,CAAC,IAAI,CAAC;IACbE,sBAAsB,CAACE,YAAY,CAAC;EACtC,CAAC;EAED,MAAMM,IAAI,GAAGA,CAAA,KAAK;IAChBV,OAAO,CAAC,KAAK,CAAC;IACdE,sBAAsB,CAAC,EAAE,CAAC;EAC5B,CAAC;EAED,MAAMS,OAAO,GAAGA,CAAA,KAAK;IACnBd,SAAS,CAAC,GAAGI,mBAAmB,CAAC;IACjCS,IAAI,EAAE;EACR,CAAC;EAED,OACEjB,aAAA,CAAAJ,KAAA,CAAAuB,QAAA;EACGd,QAAQ,oBAARA,QAAQ,CAAGK,WAAW,CAAC;EACxBV,aAAA,CAACF,WAAW,IACVK,WAAW,EAAEA,WAAY,EACzBC,SAAS,EAAEc,OAAQ,EACnBE,MAAM,EAAEH,IAAK,EACbX,IAAI,EAAEA,IAAK,EACXJ,KAAK,EAAEA,KAAM;EAEjB,CAAG;AAEP,CAACmB,aAAA,CAnDuBpB,mBAAmB,sHAAAqB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAAnBzB,mBAAmB,wJAAA0B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}