{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { MetadataType } from '.';import { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst Header = styled.div`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\nconst Info = ({ text, header }) => {\n  const values = ensureIsArray(text);\n  return ___EmotionJSX(React.Fragment, null,\n  header && ___EmotionJSX(Header, null, header),\n  values.map((value) => ___EmotionJSX(\"div\", { key: value }, value))\n  );\n};\nconst config = (contentType) => {\n  const { type } = contentType;\n  /**\n   * Tooltips are very similar. It's pretty much blocks\n   * of header/text pairs. That's why they are implemented here.\n   * If more complex tooltips emerge, then we should extract the different\n   * types of tooltips to their own components and reference them here.\n   */\n  switch (type) {\n    case MetadataType.Dashboards:\n      return {\n        icon: Icons.FundProjectionScreenOutlined,\n        title: contentType.title,\n        tooltip: contentType.description ? ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Info, { header: contentType.title, text: contentType.description })\n        ) : undefined\n      };\n    case MetadataType.Description:\n      return {\n        icon: Icons.BookOutlined,\n        title: contentType.value\n      };\n    case MetadataType.LastModified:\n      return {\n        icon: Icons.EditOutlined,\n        title: contentType.value,\n        tooltip: ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Info, { header: t('Last modified'), text: contentType.value }),\n        ___EmotionJSX(Info, { header: t('Modified by'), text: contentType.modifiedBy })\n        )\n      };\n    case MetadataType.Owner:\n      return {\n        icon: Icons.UserOutlined,\n        title: contentType.createdBy,\n        tooltip: ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Info, { header: t('Created by'), text: contentType.createdBy }),\n        !!contentType.owners && ___EmotionJSX(Info, { header: t('Owners'), text: contentType.owners }),\n        ___EmotionJSX(Info, { header: t('Created on'), text: contentType.createdOn })\n        )\n      };\n    case MetadataType.Rows:\n      return {\n        icon: Icons.InsertRowBelowOutlined,\n        title: contentType.title,\n        tooltip: contentType.title\n      };\n    case MetadataType.Sql:\n      return {\n        icon: Icons.ConsoleSqlOutlined,\n        title: contentType.title,\n        tooltip: contentType.title\n      };\n    case MetadataType.Table:\n      return {\n        icon: Icons.Table,\n        title: contentType.title,\n        tooltip: contentType.title\n      };\n    case MetadataType.Tags:\n      return {\n        icon: Icons.TagsOutlined,\n        title: contentType.values.join(', '),\n        tooltip: ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Info, { header: t('Tags'), text: contentType.values })\n        )\n      };\n    default:\n      throw Error(`Invalid type provided: ${type}`);\n  }\n};\nexport { config };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Header, \"Header\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/MetadataBar/ContentConfig.tsx\");reactHotLoader.register(Info, \"Info\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/MetadataBar/ContentConfig.tsx\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/components/MetadataBar/ContentConfig.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","ensureIsArray","styled","t","Icons","MetadataType","jsx","___EmotionJSX","Header","div","theme","typography","weights","bold","Info","text","header","values","Fragment","map","value","key","config","contentType","type","Dashboards","icon","FundProjectionScreenOutlined","title","tooltip","description","undefined","Description","BookOutlined","LastModified","EditOutlined","modifiedBy","Owner","UserOutlined","createdBy","owners","createdOn","Rows","InsertRowBelowOutlined","Sql","ConsoleSqlOutlined","Table","Tags","TagsOutlined","join","Error","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/components/MetadataBar/ContentConfig.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { ContentType, MetadataType } from '.';\n\nconst Header = styled.div`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst Info = ({\n  text,\n  header,\n}: {\n  text?: string | string[];\n  header?: string;\n}) => {\n  const values = ensureIsArray(text);\n  return (\n    <>\n      {header && <Header>{header}</Header>}\n      {values.map(value => (\n        <div key={value}>{value}</div>\n      ))}\n    </>\n  );\n};\n\nconst config = (contentType: ContentType) => {\n  const { type } = contentType;\n\n  /**\n   * Tooltips are very similar. It's pretty much blocks\n   * of header/text pairs. That's why they are implemented here.\n   * If more complex tooltips emerge, then we should extract the different\n   * types of tooltips to their own components and reference them here.\n   */\n\n  switch (type) {\n    case MetadataType.Dashboards:\n      return {\n        icon: Icons.FundProjectionScreenOutlined,\n        title: contentType.title,\n        tooltip: contentType.description ? (\n          <div>\n            <Info header={contentType.title} text={contentType.description} />\n          </div>\n        ) : undefined,\n      };\n\n    case MetadataType.Description:\n      return {\n        icon: Icons.BookOutlined,\n        title: contentType.value,\n      };\n\n    case MetadataType.LastModified:\n      return {\n        icon: Icons.EditOutlined,\n        title: contentType.value,\n        tooltip: (\n          <div>\n            <Info header={t('Last modified')} text={contentType.value} />\n            <Info header={t('Modified by')} text={contentType.modifiedBy} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Owner:\n      return {\n        icon: Icons.UserOutlined,\n        title: contentType.createdBy,\n        tooltip: (\n          <div>\n            <Info header={t('Created by')} text={contentType.createdBy} />\n            {!!contentType.owners && (\n              <Info header={t('Owners')} text={contentType.owners} />\n            )}\n            <Info header={t('Created on')} text={contentType.createdOn} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Rows:\n      return {\n        icon: Icons.InsertRowBelowOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Sql:\n      return {\n        icon: Icons.ConsoleSqlOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Table:\n      return {\n        icon: Icons.Table,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Tags:\n      return {\n        icon: Icons.TagsOutlined,\n        title: contentType.values.join(', '),\n        tooltip: (\n          <div>\n            <Info header={t('Tags')} text={contentType.values} />\n          </div>\n        ),\n      };\n\n    default:\n      throw Error(`Invalid type provided: ${type}`);\n  }\n};\n\nexport { config };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}