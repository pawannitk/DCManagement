{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\nconst { enableEmptyFilter, inverseSelection, multiSelect, defaultToFirstItem, searchAllOptions, sortAscending } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'groupby',\n      config: {\n        ...sharedControls.groupby,\n        label: t('Column'),\n        required: true\n      }\n    }]]\n\n\n  },\n  {\n    label: t('UI Configuration'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'sortAscending',\n      config: {\n        type: 'CheckboxControl',\n        renderTrigger: true,\n        label: t('Sort ascending'),\n        default: sortAscending,\n        description: t('Check for sorting ascending')\n      }\n    }],\n\n    [\n    {\n      name: 'multiSelect',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Can select multiple values'),\n        default: multiSelect,\n        resetConfig: true,\n        affectsDataMask: true,\n        renderTrigger: true\n      }\n    }],\n\n    [\n    {\n      name: 'enableEmptyFilter',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Filter value is required'),\n        default: enableEmptyFilter,\n        renderTrigger: true,\n        description: t('User must select a value before applying the filter')\n      }\n    }],\n\n    [\n    {\n      name: 'defaultToFirstItem',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Select first filter value by default'),\n        default: defaultToFirstItem,\n        resetConfig: true,\n        affectsDataMask: true,\n        renderTrigger: true,\n        requiredFirst: true,\n        description: t('When using this option, default value can’t be set')\n      }\n    }],\n\n    [\n    {\n      name: 'inverseSelection',\n      config: {\n        type: 'CheckboxControl',\n        renderTrigger: true,\n        affectsDataMask: true,\n        label: t('Inverse selection'),\n        default: inverseSelection,\n        description: t('Exclude selected values')\n      }\n    }],\n\n    [\n    {\n      name: 'searchAllOptions',\n      config: {\n        type: 'CheckboxControl',\n        renderTrigger: true,\n        affectsDataMask: true,\n        label: t('Dynamically search all filter values'),\n        default: searchAllOptions,\n        description: t('By default, each filter loads at most 1000 choices at the initial page load. ' +\n        'Check this box if you have more than 1000 filter values and want to enable dynamically ' +\n        'searching that loads filter values as users type (may add stress to your database).')\n      }\n    }]]\n\n\n  }],\n\n  controlOverrides: {\n    groupby: {\n      multi: false,\n      validators: [validateNonEmpty]\n    }\n  }\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(enableEmptyFilter, \"enableEmptyFilter\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(inverseSelection, \"inverseSelection\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(multiSelect, \"multiSelect\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(defaultToFirstItem, \"defaultToFirstItem\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(searchAllOptions, \"searchAllOptions\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(sortAscending, \"sortAscending\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(config, \"config\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","validateNonEmpty","sharedControls","DEFAULT_FORM_DATA","enableEmptyFilter","inverseSelection","multiSelect","defaultToFirstItem","searchAllOptions","sortAscending","config","controlPanelSections","label","expanded","controlSetRows","name","groupby","required","type","renderTrigger","default","description","resetConfig","affectsDataMask","requiredFirst","controlOverrides","multi","validators","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/home/pawank/Documents/dcim/superset/superset-frontend/src/filters/components/Select/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './types';\n\nconst {\n  enableEmptyFilter,\n  inverseSelection,\n  multiSelect,\n  defaultToFirstItem,\n  searchAllOptions,\n  sortAscending,\n} = DEFAULT_FORM_DATA;\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'groupby',\n            config: {\n              ...sharedControls.groupby,\n              label: t('Column'),\n              required: true,\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('UI Configuration'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'sortAscending',\n            config: {\n              type: 'CheckboxControl',\n              renderTrigger: true,\n              label: t('Sort ascending'),\n              default: sortAscending,\n              description: t('Check for sorting ascending'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'multiSelect',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Can select multiple values'),\n              default: multiSelect,\n              resetConfig: true,\n              affectsDataMask: true,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'enableEmptyFilter',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Filter value is required'),\n              default: enableEmptyFilter,\n              renderTrigger: true,\n              description: t(\n                'User must select a value before applying the filter',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'defaultToFirstItem',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Select first filter value by default'),\n              default: defaultToFirstItem,\n              resetConfig: true,\n              affectsDataMask: true,\n              renderTrigger: true,\n              requiredFirst: true,\n              description: t(\n                'When using this option, default value can’t be set',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'inverseSelection',\n            config: {\n              type: 'CheckboxControl',\n              renderTrigger: true,\n              affectsDataMask: true,\n              label: t('Inverse selection'),\n              default: inverseSelection,\n              description: t('Exclude selected values'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'searchAllOptions',\n            config: {\n              type: 'CheckboxControl',\n              renderTrigger: true,\n              affectsDataMask: true,\n              label: t('Dynamically search all filter values'),\n              default: searchAllOptions,\n              description: t(\n                'By default, each filter loads at most 1000 choices at the initial page load. ' +\n                  'Check this box if you have more than 1000 filter values and want to enable dynamically ' +\n                  'searching that loads filter values as users type (may add stress to your database).',\n              ),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  controlOverrides: {\n    groupby: {\n      multi: false,\n      validators: [validateNonEmpty],\n    },\n  },\n};\n\nexport default config;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}